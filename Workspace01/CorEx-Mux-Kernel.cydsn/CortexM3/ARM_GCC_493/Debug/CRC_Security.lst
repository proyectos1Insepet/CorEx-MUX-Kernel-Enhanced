ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CRC_Security.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	CRC_Security_initVar
  19              		.bss
  20              		.type	CRC_Security_initVar, %object
  21              		.size	CRC_Security_initVar, 1
  22              	CRC_Security_initVar:
  23 0000 00       		.space	1
  24              		.global	CRC_Security_backup
  25 0001 000000   		.align	2
  26              		.type	CRC_Security_backup, %object
  27              		.size	CRC_Security_backup, 1
  28              	CRC_Security_backup:
  29 0004 00       		.space	1
  30 0005 000000   		.section	.text.CRC_Security_Init,"ax",%progbits
  31              		.align	2
  32              		.global	CRC_Security_Init
  33              		.thumb
  34              		.thumb_func
  35              		.type	CRC_Security_Init, %function
  36              	CRC_Security_Init:
  37              	.LFB0:
  38              		.file 1 ".\\Generated_Source\\PSoC5\\CRC_Security.c"
   1:.\Generated_Source\PSoC5/CRC_Security.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CRC_Security.c **** * File Name: CRC_Security.c
   3:.\Generated_Source\PSoC5/CRC_Security.c **** * Version 2.40
   4:.\Generated_Source\PSoC5/CRC_Security.c **** *
   5:.\Generated_Source\PSoC5/CRC_Security.c **** * Description:
   6:.\Generated_Source\PSoC5/CRC_Security.c **** *  This file provides the source code to the API for the CRC component
   7:.\Generated_Source\PSoC5/CRC_Security.c **** *
   8:.\Generated_Source\PSoC5/CRC_Security.c **** * Note:
   9:.\Generated_Source\PSoC5/CRC_Security.c **** *  None
  10:.\Generated_Source\PSoC5/CRC_Security.c **** *
  11:.\Generated_Source\PSoC5/CRC_Security.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/CRC_Security.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/CRC_Security.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/CRC_Security.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/CRC_Security.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/CRC_Security.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/CRC_Security.c **** 
  18:.\Generated_Source\PSoC5/CRC_Security.c **** #include "CRC_Security.h"
  19:.\Generated_Source\PSoC5/CRC_Security.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 2


  20:.\Generated_Source\PSoC5/CRC_Security.c **** uint8 CRC_Security_initVar = 0u;
  21:.\Generated_Source\PSoC5/CRC_Security.c **** 
  22:.\Generated_Source\PSoC5/CRC_Security.c **** CRC_Security_BACKUP_STRUCT CRC_Security_backup =
  23:.\Generated_Source\PSoC5/CRC_Security.c **** {
  24:.\Generated_Source\PSoC5/CRC_Security.c ****     0x00u, /* enableState; */
  25:.\Generated_Source\PSoC5/CRC_Security.c **** 
  26:.\Generated_Source\PSoC5/CRC_Security.c ****     /* Save D0 and D1 registers are none-retention for Panther ES1 */
  27:.\Generated_Source\PSoC5/CRC_Security.c ****     #if (CY_UDB_V0)
  28:.\Generated_Source\PSoC5/CRC_Security.c **** 
  29:.\Generated_Source\PSoC5/CRC_Security.c ****         #if(CRC_Security_CRC_SIZE <= 32u)
  30:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_DEFAULT_POLYNOM, /* polynomial; */
  31:.\Generated_Source\PSoC5/CRC_Security.c **** 
  32:.\Generated_Source\PSoC5/CRC_Security.c ****         #else
  33:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_DEFAULT_POLYNOM_UPPER, /* polynomialUpper; */
  34:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_DEFAULT_POLYNOM_LOWER,  /* polynomialLower; */
  35:.\Generated_Source\PSoC5/CRC_Security.c **** 
  36:.\Generated_Source\PSoC5/CRC_Security.c ****         #endif  /* End (CRC_Security_CRC_SIZE <= 32u) */
  37:.\Generated_Source\PSoC5/CRC_Security.c **** 
  38:.\Generated_Source\PSoC5/CRC_Security.c ****     #endif  /* End (CY_UDB_V0) */
  39:.\Generated_Source\PSoC5/CRC_Security.c **** };
  40:.\Generated_Source\PSoC5/CRC_Security.c **** 
  41:.\Generated_Source\PSoC5/CRC_Security.c **** 
  42:.\Generated_Source\PSoC5/CRC_Security.c **** /*******************************************************************************
  43:.\Generated_Source\PSoC5/CRC_Security.c **** * Function Name: CRC_Security_Init
  44:.\Generated_Source\PSoC5/CRC_Security.c **** ********************************************************************************
  45:.\Generated_Source\PSoC5/CRC_Security.c **** *
  46:.\Generated_Source\PSoC5/CRC_Security.c **** * Summary:
  47:.\Generated_Source\PSoC5/CRC_Security.c **** *  Initializes seed and polynomial registers with initial values.
  48:.\Generated_Source\PSoC5/CRC_Security.c **** *
  49:.\Generated_Source\PSoC5/CRC_Security.c **** * Parameters:
  50:.\Generated_Source\PSoC5/CRC_Security.c **** *  void
  51:.\Generated_Source\PSoC5/CRC_Security.c **** *
  52:.\Generated_Source\PSoC5/CRC_Security.c **** * Return:
  53:.\Generated_Source\PSoC5/CRC_Security.c **** *  void
  54:.\Generated_Source\PSoC5/CRC_Security.c **** *
  55:.\Generated_Source\PSoC5/CRC_Security.c **** *******************************************************************************/
  56:.\Generated_Source\PSoC5/CRC_Security.c **** void CRC_Security_Init(void) 
  57:.\Generated_Source\PSoC5/CRC_Security.c **** {
  39              		.loc 1 57 0
  40              		.cfi_startproc
  41              		@ args = 0, pretend = 0, frame = 0
  42              		@ frame_needed = 1, uses_anonymous_args = 0
  43 0000 80B5     		push	{r7, lr}
  44              		.cfi_def_cfa_offset 8
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 14, -4
  47 0002 00AF     		add	r7, sp, #0
  48              		.cfi_def_cfa_register 7
  58:.\Generated_Source\PSoC5/CRC_Security.c ****     /* Writes seed value and ponynom value provided for customizer */
  59:.\Generated_Source\PSoC5/CRC_Security.c ****     #if (CRC_Security_CRC_SIZE <= 32u)
  60:.\Generated_Source\PSoC5/CRC_Security.c ****         CRC_Security_WritePolynomial(CRC_Security_DEFAULT_POLYNOM);
  49              		.loc 1 60 0
  50 0004 C620     		movs	r0, #198
  51 0006 FFF7FEFF 		bl	CRC_Security_WritePolynomial
  61:.\Generated_Source\PSoC5/CRC_Security.c ****         CRC_Security_WriteSeed(CRC_Security_DEFAULT_SEED);
  52              		.loc 1 61 0
  53 000a AB20     		movs	r0, #171
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 3


  54 000c FFF7FEFF 		bl	CRC_Security_WriteSeed
  62:.\Generated_Source\PSoC5/CRC_Security.c ****         CRC_Security_ResetSeedInit(CRC_Security_DEFAULT_SEED);
  55              		.loc 1 62 0
  56 0010 AB20     		movs	r0, #171
  57 0012 FFF7FEFF 		bl	CRC_Security_ResetSeedInit
  63:.\Generated_Source\PSoC5/CRC_Security.c **** 
  64:.\Generated_Source\PSoC5/CRC_Security.c ****     #else
  65:.\Generated_Source\PSoC5/CRC_Security.c ****         CRC_Security_WritePolynomialUpper(CRC_Security_DEFAULT_POLYNOM_UPPER);
  66:.\Generated_Source\PSoC5/CRC_Security.c ****         CRC_Security_WritePolynomialLower(CRC_Security_DEFAULT_POLYNOM_LOWER);
  67:.\Generated_Source\PSoC5/CRC_Security.c ****         CRC_Security_WriteSeedUpper(CRC_Security_DEFAULT_SEED_UPPER);
  68:.\Generated_Source\PSoC5/CRC_Security.c ****         CRC_Security_WriteSeedLower(CRC_Security_DEFAULT_SEED_LOWER);
  69:.\Generated_Source\PSoC5/CRC_Security.c ****         CRC_Security_ResetSeedInitUpper(CRC_Security_DEFAULT_SEED_UPPER);
  70:.\Generated_Source\PSoC5/CRC_Security.c ****         CRC_Security_ResetSeedInitLower(CRC_Security_DEFAULT_SEED_LOWER);
  71:.\Generated_Source\PSoC5/CRC_Security.c **** 
  72:.\Generated_Source\PSoC5/CRC_Security.c ****     #endif  /* End (CRC_Security_CRC_SIZE <= 32u) */
  73:.\Generated_Source\PSoC5/CRC_Security.c **** }
  58              		.loc 1 73 0
  59 0016 80BD     		pop	{r7, pc}
  60              		.cfi_endproc
  61              	.LFE0:
  62              		.size	CRC_Security_Init, .-CRC_Security_Init
  63              		.section	.text.CRC_Security_Enable,"ax",%progbits
  64              		.align	2
  65              		.global	CRC_Security_Enable
  66              		.thumb
  67              		.thumb_func
  68              		.type	CRC_Security_Enable, %function
  69              	CRC_Security_Enable:
  70              	.LFB1:
  74:.\Generated_Source\PSoC5/CRC_Security.c **** 
  75:.\Generated_Source\PSoC5/CRC_Security.c **** 
  76:.\Generated_Source\PSoC5/CRC_Security.c **** /*******************************************************************************
  77:.\Generated_Source\PSoC5/CRC_Security.c **** * Function Name: CRC_Security_Enable
  78:.\Generated_Source\PSoC5/CRC_Security.c **** ********************************************************************************
  79:.\Generated_Source\PSoC5/CRC_Security.c **** *
  80:.\Generated_Source\PSoC5/CRC_Security.c **** * Summary:
  81:.\Generated_Source\PSoC5/CRC_Security.c **** *  Starts CRC computation on rising edge of input clock.
  82:.\Generated_Source\PSoC5/CRC_Security.c **** *
  83:.\Generated_Source\PSoC5/CRC_Security.c **** * Parameters:
  84:.\Generated_Source\PSoC5/CRC_Security.c **** *  void
  85:.\Generated_Source\PSoC5/CRC_Security.c **** *
  86:.\Generated_Source\PSoC5/CRC_Security.c **** * Return:
  87:.\Generated_Source\PSoC5/CRC_Security.c **** *  void
  88:.\Generated_Source\PSoC5/CRC_Security.c **** *
  89:.\Generated_Source\PSoC5/CRC_Security.c **** *******************************************************************************/
  90:.\Generated_Source\PSoC5/CRC_Security.c **** void CRC_Security_Enable(void) 
  91:.\Generated_Source\PSoC5/CRC_Security.c **** {
  71              		.loc 1 91 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 1, uses_anonymous_args = 0
  75              		@ link register save eliminated.
  76 0000 80B4     		push	{r7}
  77              		.cfi_def_cfa_offset 4
  78              		.cfi_offset 7, -4
  79 0002 00AF     		add	r7, sp, #0
  80              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 4


  92:.\Generated_Source\PSoC5/CRC_Security.c ****     CRC_Security_CONTROL_REG |= CRC_Security_CTRL_ENABLE;
  81              		.loc 1 92 0
  82 0004 054A     		ldr	r2, .L3
  83 0006 054B     		ldr	r3, .L3
  84 0008 1B78     		ldrb	r3, [r3]
  85 000a DBB2     		uxtb	r3, r3
  86 000c 43F00103 		orr	r3, r3, #1
  87 0010 DBB2     		uxtb	r3, r3
  88 0012 1370     		strb	r3, [r2]
  93:.\Generated_Source\PSoC5/CRC_Security.c **** }
  89              		.loc 1 93 0
  90 0014 BD46     		mov	sp, r7
  91              		.cfi_def_cfa_register 13
  92              		@ sp needed
  93 0016 5DF8047B 		ldr	r7, [sp], #4
  94              		.cfi_restore 7
  95              		.cfi_def_cfa_offset 0
  96 001a 7047     		bx	lr
  97              	.L4:
  98              		.align	2
  99              	.L3:
 100 001c 76640040 		.word	1073767542
 101              		.cfi_endproc
 102              	.LFE1:
 103              		.size	CRC_Security_Enable, .-CRC_Security_Enable
 104              		.section	.text.CRC_Security_Start,"ax",%progbits
 105              		.align	2
 106              		.global	CRC_Security_Start
 107              		.thumb
 108              		.thumb_func
 109              		.type	CRC_Security_Start, %function
 110              	CRC_Security_Start:
 111              	.LFB2:
  94:.\Generated_Source\PSoC5/CRC_Security.c **** 
  95:.\Generated_Source\PSoC5/CRC_Security.c **** 
  96:.\Generated_Source\PSoC5/CRC_Security.c **** /*******************************************************************************
  97:.\Generated_Source\PSoC5/CRC_Security.c **** * Function Name: CRC_Security_Start
  98:.\Generated_Source\PSoC5/CRC_Security.c **** ********************************************************************************
  99:.\Generated_Source\PSoC5/CRC_Security.c **** *
 100:.\Generated_Source\PSoC5/CRC_Security.c **** * Summary:
 101:.\Generated_Source\PSoC5/CRC_Security.c **** *  Initializes seed and polynomial registers with initial values. Computation
 102:.\Generated_Source\PSoC5/CRC_Security.c **** *  of CRC starts on rising edge of input clock.
 103:.\Generated_Source\PSoC5/CRC_Security.c **** *
 104:.\Generated_Source\PSoC5/CRC_Security.c **** * Parameters:
 105:.\Generated_Source\PSoC5/CRC_Security.c **** *  void
 106:.\Generated_Source\PSoC5/CRC_Security.c **** *
 107:.\Generated_Source\PSoC5/CRC_Security.c **** * Return:
 108:.\Generated_Source\PSoC5/CRC_Security.c **** *  void
 109:.\Generated_Source\PSoC5/CRC_Security.c **** *
 110:.\Generated_Source\PSoC5/CRC_Security.c **** * Global variables:
 111:.\Generated_Source\PSoC5/CRC_Security.c **** *  CRC_Security_initVar: global variable is used to indicate initial
 112:.\Generated_Source\PSoC5/CRC_Security.c **** *  configuration of this component.  The variable is initialized to zero and set
 113:.\Generated_Source\PSoC5/CRC_Security.c **** *  to 1 the first time CRC_Security_Start() is called. This allows
 114:.\Generated_Source\PSoC5/CRC_Security.c **** *  enable/disable component without re-initialization in all subsequent calls
 115:.\Generated_Source\PSoC5/CRC_Security.c **** *  to the CRC_Security_Start() routine.
 116:.\Generated_Source\PSoC5/CRC_Security.c **** *
 117:.\Generated_Source\PSoC5/CRC_Security.c **** *******************************************************************************/
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 5


 118:.\Generated_Source\PSoC5/CRC_Security.c **** void CRC_Security_Start(void) 
 119:.\Generated_Source\PSoC5/CRC_Security.c **** {
 112              		.loc 1 119 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 1, uses_anonymous_args = 0
 116 0000 80B5     		push	{r7, lr}
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 7, -8
 119              		.cfi_offset 14, -4
 120 0002 00AF     		add	r7, sp, #0
 121              		.cfi_def_cfa_register 7
 120:.\Generated_Source\PSoC5/CRC_Security.c ****     /* Writes seed value and ponynom value provided from customizer */
 121:.\Generated_Source\PSoC5/CRC_Security.c ****     if (CRC_Security_initVar == 0u)
 122              		.loc 1 121 0
 123 0004 054B     		ldr	r3, .L7
 124 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 125 0008 002B     		cmp	r3, #0
 126 000a 04D1     		bne	.L6
 122:.\Generated_Source\PSoC5/CRC_Security.c ****     {
 123:.\Generated_Source\PSoC5/CRC_Security.c ****         CRC_Security_Init();
 127              		.loc 1 123 0
 128 000c FFF7FEFF 		bl	CRC_Security_Init
 124:.\Generated_Source\PSoC5/CRC_Security.c ****         CRC_Security_initVar = 1u;
 129              		.loc 1 124 0
 130 0010 024B     		ldr	r3, .L7
 131 0012 0122     		movs	r2, #1
 132 0014 1A70     		strb	r2, [r3]
 133              	.L6:
 125:.\Generated_Source\PSoC5/CRC_Security.c ****     }
 126:.\Generated_Source\PSoC5/CRC_Security.c **** 
 127:.\Generated_Source\PSoC5/CRC_Security.c ****     CRC_Security_Enable();
 134              		.loc 1 127 0
 135 0016 FFF7FEFF 		bl	CRC_Security_Enable
 128:.\Generated_Source\PSoC5/CRC_Security.c **** }
 136              		.loc 1 128 0
 137 001a 80BD     		pop	{r7, pc}
 138              	.L8:
 139              		.align	2
 140              	.L7:
 141 001c 00000000 		.word	CRC_Security_initVar
 142              		.cfi_endproc
 143              	.LFE2:
 144              		.size	CRC_Security_Start, .-CRC_Security_Start
 145              		.section	.text.CRC_Security_Stop,"ax",%progbits
 146              		.align	2
 147              		.global	CRC_Security_Stop
 148              		.thumb
 149              		.thumb_func
 150              		.type	CRC_Security_Stop, %function
 151              	CRC_Security_Stop:
 152              	.LFB3:
 129:.\Generated_Source\PSoC5/CRC_Security.c **** 
 130:.\Generated_Source\PSoC5/CRC_Security.c **** 
 131:.\Generated_Source\PSoC5/CRC_Security.c **** /*******************************************************************************
 132:.\Generated_Source\PSoC5/CRC_Security.c **** * Function Name: CRC_Security_Stop
 133:.\Generated_Source\PSoC5/CRC_Security.c **** ********************************************************************************
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 6


 134:.\Generated_Source\PSoC5/CRC_Security.c **** *
 135:.\Generated_Source\PSoC5/CRC_Security.c **** * Summary:
 136:.\Generated_Source\PSoC5/CRC_Security.c **** *  Stops CRC computation.
 137:.\Generated_Source\PSoC5/CRC_Security.c **** *
 138:.\Generated_Source\PSoC5/CRC_Security.c **** * Parameters:
 139:.\Generated_Source\PSoC5/CRC_Security.c **** *  void
 140:.\Generated_Source\PSoC5/CRC_Security.c **** *
 141:.\Generated_Source\PSoC5/CRC_Security.c **** * Return:
 142:.\Generated_Source\PSoC5/CRC_Security.c **** *  void
 143:.\Generated_Source\PSoC5/CRC_Security.c **** *
 144:.\Generated_Source\PSoC5/CRC_Security.c **** * Reentrant:
 145:.\Generated_Source\PSoC5/CRC_Security.c **** *  No
 146:.\Generated_Source\PSoC5/CRC_Security.c **** *
 147:.\Generated_Source\PSoC5/CRC_Security.c **** *******************************************************************************/
 148:.\Generated_Source\PSoC5/CRC_Security.c **** void CRC_Security_Stop(void) 
 149:.\Generated_Source\PSoC5/CRC_Security.c **** {
 153              		.loc 1 149 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 1, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158 0000 80B4     		push	{r7}
 159              		.cfi_def_cfa_offset 4
 160              		.cfi_offset 7, -4
 161 0002 00AF     		add	r7, sp, #0
 162              		.cfi_def_cfa_register 7
 150:.\Generated_Source\PSoC5/CRC_Security.c ****     CRC_Security_CONTROL_REG &= ((uint8)~CRC_Security_CTRL_ENABLE);
 163              		.loc 1 150 0
 164 0004 054A     		ldr	r2, .L10
 165 0006 054B     		ldr	r3, .L10
 166 0008 1B78     		ldrb	r3, [r3]
 167 000a DBB2     		uxtb	r3, r3
 168 000c 23F00103 		bic	r3, r3, #1
 169 0010 DBB2     		uxtb	r3, r3
 170 0012 1370     		strb	r3, [r2]
 151:.\Generated_Source\PSoC5/CRC_Security.c **** }
 171              		.loc 1 151 0
 172 0014 BD46     		mov	sp, r7
 173              		.cfi_def_cfa_register 13
 174              		@ sp needed
 175 0016 5DF8047B 		ldr	r7, [sp], #4
 176              		.cfi_restore 7
 177              		.cfi_def_cfa_offset 0
 178 001a 7047     		bx	lr
 179              	.L11:
 180              		.align	2
 181              	.L10:
 182 001c 76640040 		.word	1073767542
 183              		.cfi_endproc
 184              	.LFE3:
 185              		.size	CRC_Security_Stop, .-CRC_Security_Stop
 186              		.section	.text.CRC_Security_ResetSeedInit,"ax",%progbits
 187              		.align	2
 188              		.global	CRC_Security_ResetSeedInit
 189              		.thumb
 190              		.thumb_func
 191              		.type	CRC_Security_ResetSeedInit, %function
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 7


 192              	CRC_Security_ResetSeedInit:
 193              	.LFB4:
 152:.\Generated_Source\PSoC5/CRC_Security.c **** 
 153:.\Generated_Source\PSoC5/CRC_Security.c **** 
 154:.\Generated_Source\PSoC5/CRC_Security.c **** #if (CRC_Security_CRC_SIZE <= 32u) /* 8-32 bits CRC */
 155:.\Generated_Source\PSoC5/CRC_Security.c ****     /*******************************************************************************
 156:.\Generated_Source\PSoC5/CRC_Security.c ****     * FUNCTION NAME: CRC_Security_ResetSeedInit
 157:.\Generated_Source\PSoC5/CRC_Security.c ****     ********************************************************************************
 158:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 159:.\Generated_Source\PSoC5/CRC_Security.c ****     * Summary:
 160:.\Generated_Source\PSoC5/CRC_Security.c ****     *  Increments the CRC by one when API single step mode is used.
 161:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 162:.\Generated_Source\PSoC5/CRC_Security.c ****     * Parameters:
 163:.\Generated_Source\PSoC5/CRC_Security.c ****     *  void
 164:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 165:.\Generated_Source\PSoC5/CRC_Security.c ****     * Return:
 166:.\Generated_Source\PSoC5/CRC_Security.c ****     *  void
 167:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 168:.\Generated_Source\PSoC5/CRC_Security.c ****     *******************************************************************************/
 169:.\Generated_Source\PSoC5/CRC_Security.c ****     void CRC_Security_ResetSeedInit(uint8 seed)
 170:.\Generated_Source\PSoC5/CRC_Security.c ****                                         
 171:.\Generated_Source\PSoC5/CRC_Security.c ****     {
 194              		.loc 1 171 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 16
 197              		@ frame_needed = 1, uses_anonymous_args = 0
 198 0000 80B5     		push	{r7, lr}
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 7, -8
 201              		.cfi_offset 14, -4
 202 0002 84B0     		sub	sp, sp, #16
 203              		.cfi_def_cfa_offset 24
 204 0004 00AF     		add	r7, sp, #0
 205              		.cfi_def_cfa_register 7
 206 0006 0346     		mov	r3, r0
 207 0008 FB71     		strb	r3, [r7, #7]
 172:.\Generated_Source\PSoC5/CRC_Security.c ****          uint8 enableInterrupts;
 173:.\Generated_Source\PSoC5/CRC_Security.c **** 
 174:.\Generated_Source\PSoC5/CRC_Security.c ****         /* Mask the Seed to cut unused bits */
 175:.\Generated_Source\PSoC5/CRC_Security.c ****         #if((0u != (CRC_Security_CRC_SIZE % 8u)) || (CRC_Security_CRC_SIZE == 24u))
 176:.\Generated_Source\PSoC5/CRC_Security.c ****             seed &= CRC_Security_MASK;
 177:.\Generated_Source\PSoC5/CRC_Security.c ****         #endif /* ((0u != (CRC_Security_CRC_SIZE % 8u)) || (CRC_Security_CRC_SIZE == 24u)) */
 178:.\Generated_Source\PSoC5/CRC_Security.c **** 
 179:.\Generated_Source\PSoC5/CRC_Security.c ****         /* Change AuxControl reg, need to be safety */
 180:.\Generated_Source\PSoC5/CRC_Security.c ****         enableInterrupts = CyEnterCriticalSection();
 208              		.loc 1 180 0
 209 000a FFF7FEFF 		bl	CyEnterCriticalSection
 210 000e 0346     		mov	r3, r0
 211 0010 FB73     		strb	r3, [r7, #15]
 181:.\Generated_Source\PSoC5/CRC_Security.c **** 
 182:.\Generated_Source\PSoC5/CRC_Security.c ****         #if (CRC_Security_TIME_MULTIPLEXING_ENABLE)
 183:.\Generated_Source\PSoC5/CRC_Security.c ****             /* Set FIFOs to single register */
 184:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_AUX_CONTROL_A_REG |= CRC_Security_AUXCTRL_FIFO_SINGLE_REG;
 185:.\Generated_Source\PSoC5/CRC_Security.c **** 
 186:.\Generated_Source\PSoC5/CRC_Security.c ****             #if(CRC_Security_CRC_SIZE > 16u)       /* 17-32 bits CRC */
 187:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_AUX_CONTROL_B_REG |= CRC_Security_AUXCTRL_FIFO_SINGLE_REG;
 188:.\Generated_Source\PSoC5/CRC_Security.c ****             #endif  /* End (CRC_Security_CRC_SIZE <= 8u) */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 8


 189:.\Generated_Source\PSoC5/CRC_Security.c **** 
 190:.\Generated_Source\PSoC5/CRC_Security.c ****             /* AuxControl reg settings are done */
 191:.\Generated_Source\PSoC5/CRC_Security.c ****             CyExitCriticalSection(enableInterrupts);
 192:.\Generated_Source\PSoC5/CRC_Security.c **** 
 193:.\Generated_Source\PSoC5/CRC_Security.c ****             /* Write Seed COPY */
 194:.\Generated_Source\PSoC5/CRC_Security.c ****             #if (CRC_Security_CRC_SIZE <= 16u)          /* 16 bits CRC */
 195:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_SEED_COPY_A__A1_REG = HI8(seed);
 196:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_SEED_COPY_A__A0_REG = LO8(seed);
 197:.\Generated_Source\PSoC5/CRC_Security.c **** 
 198:.\Generated_Source\PSoC5/CRC_Security.c ****             #elif (CRC_Security_CRC_SIZE <= 24u)        /* 24 bits CRC */
 199:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_SEED_COPY_B__A1_REG = LO8(HI16(seed));
 200:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_SEED_COPY_B__A0_REG = HI8(seed);
 201:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_SEED_COPY_A__A0_REG = LO8(seed);
 202:.\Generated_Source\PSoC5/CRC_Security.c **** 
 203:.\Generated_Source\PSoC5/CRC_Security.c ****             #else                                           /* 32 bits CRC */
 204:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_SEED_COPY_B__A1_REG = HI8(HI16(seed));
 205:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_SEED_COPY_A__A1_REG = LO8(HI16(seed));
 206:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_SEED_COPY_B__A0_REG = HI8(seed);
 207:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_SEED_COPY_A__A0_REG = LO8(seed);
 208:.\Generated_Source\PSoC5/CRC_Security.c ****             #endif  /* End (CRC_Security_CRC_SIZE <= 32u) */
 209:.\Generated_Source\PSoC5/CRC_Security.c **** 
 210:.\Generated_Source\PSoC5/CRC_Security.c ****         #else
 211:.\Generated_Source\PSoC5/CRC_Security.c ****             /* Set FIFOs to single register */
 212:.\Generated_Source\PSoC5/CRC_Security.c ****             #if (CRC_Security_CRC_SIZE <= 8u)         /* 8 bits CRC */
 213:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_AUX_CONTROL_A_REG |= CRC_Security_AUXCTRL_FIFO_SINGLE_REG;
 212              		.loc 1 213 0
 213 0012 094A     		ldr	r2, .L13
 214 0014 084B     		ldr	r3, .L13
 215 0016 1B78     		ldrb	r3, [r3]
 216 0018 DBB2     		uxtb	r3, r3
 217 001a 43F00303 		orr	r3, r3, #3
 218 001e DBB2     		uxtb	r3, r3
 219 0020 1370     		strb	r3, [r2]
 214:.\Generated_Source\PSoC5/CRC_Security.c **** 
 215:.\Generated_Source\PSoC5/CRC_Security.c ****             #elif (CRC_Security_CRC_SIZE <= 16u)      /* 16 bits CRC */
 216:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_AUX_CONTROL_A_REG  |= CRC_Security_AUXCTRL_FIFO_SINGLE_REG;
 217:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_AUX_CONTROL_B_REG  |= CRC_Security_AUXCTRL_FIFO_SINGLE_REG;
 218:.\Generated_Source\PSoC5/CRC_Security.c **** 
 219:.\Generated_Source\PSoC5/CRC_Security.c ****             #elif (CRC_Security_CRC_SIZE <= 24u)      /* 24 bits CRC */
 220:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_AUX_CONTROL_A_REG  |= CRC_Security_AUXCTRL_FIFO_SINGLE_REG;
 221:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_AUX_CONTROL_B_REG  |= CRC_Security_AUXCTRL_FIFO_SINGLE_REG;
 222:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_AUX_CONTROL_C_REG  |= CRC_Security_AUXCTRL_FIFO_SINGLE_REG;
 223:.\Generated_Source\PSoC5/CRC_Security.c **** 
 224:.\Generated_Source\PSoC5/CRC_Security.c ****             #elif (CRC_Security_CRC_SIZE <= 32u)      /* 32 bits CRC */
 225:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_AUX_CONTROL_A_REG  |= CRC_Security_AUXCTRL_FIFO_SINGLE_REG;
 226:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_AUX_CONTROL_B_REG  |= CRC_Security_AUXCTRL_FIFO_SINGLE_REG;
 227:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_AUX_CONTROL_C_REG  |= CRC_Security_AUXCTRL_FIFO_SINGLE_REG;
 228:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_AUX_CONTROL_D_REG  |= CRC_Security_AUXCTRL_FIFO_SINGLE_REG;
 229:.\Generated_Source\PSoC5/CRC_Security.c **** 
 230:.\Generated_Source\PSoC5/CRC_Security.c ****             #endif  /* End (CRC_Security_CRC_SIZE <= 8u) */
 231:.\Generated_Source\PSoC5/CRC_Security.c **** 
 232:.\Generated_Source\PSoC5/CRC_Security.c ****             /* AuxControl reg setting are done */
 233:.\Generated_Source\PSoC5/CRC_Security.c ****             CyExitCriticalSection(enableInterrupts);
 220              		.loc 1 233 0
 221 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 222 0024 1846     		mov	r0, r3
 223 0026 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 9


 234:.\Generated_Source\PSoC5/CRC_Security.c **** 
 235:.\Generated_Source\PSoC5/CRC_Security.c ****             /* Write Seed COPY */
 236:.\Generated_Source\PSoC5/CRC_Security.c ****             CY_SET_REG8(CRC_Security_SEED_COPY_PTR, seed);
 224              		.loc 1 236 0
 225 002a 044A     		ldr	r2, .L13+4
 226 002c FB79     		ldrb	r3, [r7, #7]
 227 002e 1370     		strb	r3, [r2]
 237:.\Generated_Source\PSoC5/CRC_Security.c ****         #endif  /* End (CRC_Security_TIME_MULTIPLEXING_ENABLE) */
 238:.\Generated_Source\PSoC5/CRC_Security.c ****     }
 228              		.loc 1 238 0
 229 0030 1037     		adds	r7, r7, #16
 230              		.cfi_def_cfa_offset 8
 231 0032 BD46     		mov	sp, r7
 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
 234 0034 80BD     		pop	{r7, pc}
 235              	.L14:
 236 0036 00BF     		.align	2
 237              	.L13:
 238 0038 96640040 		.word	1073767574
 239 003c 46640040 		.word	1073767494
 240              		.cfi_endproc
 241              	.LFE4:
 242              		.size	CRC_Security_ResetSeedInit, .-CRC_Security_ResetSeedInit
 243              		.section	.text.CRC_Security_ReadCRC,"ax",%progbits
 244              		.align	2
 245              		.global	CRC_Security_ReadCRC
 246              		.thumb
 247              		.thumb_func
 248              		.type	CRC_Security_ReadCRC, %function
 249              	CRC_Security_ReadCRC:
 250              	.LFB5:
 239:.\Generated_Source\PSoC5/CRC_Security.c **** 
 240:.\Generated_Source\PSoC5/CRC_Security.c **** #else
 241:.\Generated_Source\PSoC5/CRC_Security.c **** 
 242:.\Generated_Source\PSoC5/CRC_Security.c ****     /*******************************************************************************
 243:.\Generated_Source\PSoC5/CRC_Security.c ****     * FUNCTION NAME: CRC_Security_ResetSeedInitUpper
 244:.\Generated_Source\PSoC5/CRC_Security.c ****     ********************************************************************************
 245:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 246:.\Generated_Source\PSoC5/CRC_Security.c ****     * Summary:
 247:.\Generated_Source\PSoC5/CRC_Security.c ****     *  Increments the CRC by one when API single step mode is used.
 248:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 249:.\Generated_Source\PSoC5/CRC_Security.c ****     * Parameters:
 250:.\Generated_Source\PSoC5/CRC_Security.c ****     *  void
 251:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 252:.\Generated_Source\PSoC5/CRC_Security.c ****     * Return:
 253:.\Generated_Source\PSoC5/CRC_Security.c ****     *  void
 254:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 255:.\Generated_Source\PSoC5/CRC_Security.c ****     *******************************************************************************/
 256:.\Generated_Source\PSoC5/CRC_Security.c ****     void CRC_Security_ResetSeedInitUpper(uint32 seed) 
 257:.\Generated_Source\PSoC5/CRC_Security.c ****     {
 258:.\Generated_Source\PSoC5/CRC_Security.c ****         uint8 enableInterrupts;
 259:.\Generated_Source\PSoC5/CRC_Security.c **** 
 260:.\Generated_Source\PSoC5/CRC_Security.c ****         /* Mask the Seed Upper half to cut unused bits in case, when CRC size is not byte-aligned o
 261:.\Generated_Source\PSoC5/CRC_Security.c ****         #if((0u != (CRC_Security_CRC_SIZE % 8u)) || (CRC_Security_CRC_SIZE == 24u))
 262:.\Generated_Source\PSoC5/CRC_Security.c ****             seed &= CRC_Security_MASK;
 263:.\Generated_Source\PSoC5/CRC_Security.c ****         #endif /* ((0u != (CRC_Security_CRC_SIZE % 8u)) || (CRC_Security_CRC_SIZE == 24u)) */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 10


 264:.\Generated_Source\PSoC5/CRC_Security.c **** 
 265:.\Generated_Source\PSoC5/CRC_Security.c ****         /* Change AuxControl reg, need to be safety */
 266:.\Generated_Source\PSoC5/CRC_Security.c ****         enableInterrupts = CyEnterCriticalSection();
 267:.\Generated_Source\PSoC5/CRC_Security.c **** 
 268:.\Generated_Source\PSoC5/CRC_Security.c ****         /* Set FIFOs to single register */
 269:.\Generated_Source\PSoC5/CRC_Security.c ****         CRC_Security_AUX_CONTROL_A_REG |= CRC_Security_AUXCTRL_FIFO_SINGLE_REG;
 270:.\Generated_Source\PSoC5/CRC_Security.c ****         CRC_Security_AUX_CONTROL_B_REG |= CRC_Security_AUXCTRL_FIFO_SINGLE_REG;
 271:.\Generated_Source\PSoC5/CRC_Security.c ****         CRC_Security_AUX_CONTROL_C_REG |= CRC_Security_AUXCTRL_FIFO_SINGLE_REG;
 272:.\Generated_Source\PSoC5/CRC_Security.c **** 
 273:.\Generated_Source\PSoC5/CRC_Security.c ****         #if (CRC_Security_CRC_SIZE > 48u)               /* 49-64 bits CRC */
 274:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_AUX_CONTROL_D_REG |= CRC_Security_AUXCTRL_FIFO_SINGLE_REG;
 275:.\Generated_Source\PSoC5/CRC_Security.c ****         #endif  /* End (CRC_Security_CRC_SIZE <= 8u) */
 276:.\Generated_Source\PSoC5/CRC_Security.c **** 
 277:.\Generated_Source\PSoC5/CRC_Security.c ****         /* AuxControl reg settings are done */
 278:.\Generated_Source\PSoC5/CRC_Security.c ****         CyExitCriticalSection(enableInterrupts);
 279:.\Generated_Source\PSoC5/CRC_Security.c **** 
 280:.\Generated_Source\PSoC5/CRC_Security.c ****         /* Write Seed Upper COPY */
 281:.\Generated_Source\PSoC5/CRC_Security.c ****         #if (CRC_Security_CRC_SIZE <= 40u)          /* 40 bits CRC */
 282:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_UPPER_COPY_C__A1_REG = LO8(seed);
 283:.\Generated_Source\PSoC5/CRC_Security.c **** 
 284:.\Generated_Source\PSoC5/CRC_Security.c ****         #elif (CRC_Security_CRC_SIZE <= 48u)        /* 48 bits CRC */
 285:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_UPPER_COPY_C__A1_REG = HI8(seed);
 286:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_UPPER_COPY_B__A1_REG = LO8(seed);
 287:.\Generated_Source\PSoC5/CRC_Security.c **** 
 288:.\Generated_Source\PSoC5/CRC_Security.c ****         #elif (CRC_Security_CRC_SIZE <= 56u)        /* 56 bits CRC */
 289:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_UPPER_COPY_D__A1_REG = LO8(HI16(seed));
 290:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_UPPER_COPY_C__A1_REG = HI8(seed);
 291:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_UPPER_COPY_B__A1_REG = HI8(seed);
 292:.\Generated_Source\PSoC5/CRC_Security.c **** 
 293:.\Generated_Source\PSoC5/CRC_Security.c ****         #else                                           /* 64 bits CRC */
 294:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_UPPER_COPY_D__A1_REG = HI8(HI16(seed));
 295:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_UPPER_COPY_C__A1_REG = LO8(HI16(seed));
 296:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_UPPER_COPY_B__A1_REG = HI8(seed);
 297:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_UPPER_COPY_A__A1_REG = LO8(seed);
 298:.\Generated_Source\PSoC5/CRC_Security.c **** 
 299:.\Generated_Source\PSoC5/CRC_Security.c ****         #endif  /* End (CRC_Security_CRC_SIZE <= 32u) */
 300:.\Generated_Source\PSoC5/CRC_Security.c ****     }
 301:.\Generated_Source\PSoC5/CRC_Security.c **** 
 302:.\Generated_Source\PSoC5/CRC_Security.c **** 
 303:.\Generated_Source\PSoC5/CRC_Security.c ****     /*******************************************************************************
 304:.\Generated_Source\PSoC5/CRC_Security.c ****     * FUNCTION NAME: CRC_Security_ResetSeedInitLower
 305:.\Generated_Source\PSoC5/CRC_Security.c ****     ********************************************************************************
 306:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 307:.\Generated_Source\PSoC5/CRC_Security.c ****     * Summary:
 308:.\Generated_Source\PSoC5/CRC_Security.c ****     *  Increments the CRC by one when API single step mode is used.
 309:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 310:.\Generated_Source\PSoC5/CRC_Security.c ****     * Parameters:
 311:.\Generated_Source\PSoC5/CRC_Security.c ****     *  void
 312:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 313:.\Generated_Source\PSoC5/CRC_Security.c ****     * Return:
 314:.\Generated_Source\PSoC5/CRC_Security.c ****     *  void
 315:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 316:.\Generated_Source\PSoC5/CRC_Security.c ****     *******************************************************************************/
 317:.\Generated_Source\PSoC5/CRC_Security.c ****     void CRC_Security_ResetSeedInitLower(uint32 seed) 
 318:.\Generated_Source\PSoC5/CRC_Security.c ****     {
 319:.\Generated_Source\PSoC5/CRC_Security.c ****         /* Write Seed Lower COPY */
 320:.\Generated_Source\PSoC5/CRC_Security.c ****         #if (CRC_Security_CRC_SIZE <= 40u)          /* 40 bits CRC */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 11


 321:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_LOWER_COPY_B__A1_REG = HI8(HI16(seed));
 322:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_LOWER_COPY_C__A0_REG = LO8(HI16(seed));
 323:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_LOWER_COPY_B__A0_REG = HI8(seed);
 324:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_LOWER_COPY_A__A0_REG = LO8(seed);
 325:.\Generated_Source\PSoC5/CRC_Security.c **** 
 326:.\Generated_Source\PSoC5/CRC_Security.c ****         #elif (CRC_Security_CRC_SIZE <= 48u)        /* 48 bits CRC */
 327:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_LOWER_COPY_A__A1_REG = HI8(HI16(seed));
 328:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_LOWER_COPY_C__A0_REG = LO8(HI16(seed));
 329:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_LOWER_COPY_B__A0_REG = HI8(seed);
 330:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_LOWER_COPY_A__A0_REG = LO8(seed);
 331:.\Generated_Source\PSoC5/CRC_Security.c **** 
 332:.\Generated_Source\PSoC5/CRC_Security.c ****         #else                                           /* 64 bits CRC */
 333:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_LOWER_COPY_D__A0_REG = HI8(HI16(seed));
 334:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_LOWER_COPY_C__A0_REG = LO8(HI16(seed));
 335:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_LOWER_COPY_B__A0_REG = HI8(seed);
 336:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_SEED_LOWER_COPY_A__A0_REG = LO8(seed);
 337:.\Generated_Source\PSoC5/CRC_Security.c **** 
 338:.\Generated_Source\PSoC5/CRC_Security.c ****         #endif  /* End (CRC_Security_CRC_SIZE <= 32u) */
 339:.\Generated_Source\PSoC5/CRC_Security.c ****     }
 340:.\Generated_Source\PSoC5/CRC_Security.c **** #endif  /* End (CRC_Security_CRC_SIZE <= 32u) */
 341:.\Generated_Source\PSoC5/CRC_Security.c **** 
 342:.\Generated_Source\PSoC5/CRC_Security.c **** 
 343:.\Generated_Source\PSoC5/CRC_Security.c **** #if(CRC_Security_CRC_SIZE <= 32u) /* 8-32 bits CRC */
 344:.\Generated_Source\PSoC5/CRC_Security.c ****     /*******************************************************************************
 345:.\Generated_Source\PSoC5/CRC_Security.c ****     * Function Name: CRC_Security_ReadCRC
 346:.\Generated_Source\PSoC5/CRC_Security.c ****     ********************************************************************************
 347:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 348:.\Generated_Source\PSoC5/CRC_Security.c ****     * Summary:
 349:.\Generated_Source\PSoC5/CRC_Security.c ****     *  Reads CRC value.
 350:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 351:.\Generated_Source\PSoC5/CRC_Security.c ****     * Parameters:
 352:.\Generated_Source\PSoC5/CRC_Security.c ****     *  void
 353:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 354:.\Generated_Source\PSoC5/CRC_Security.c ****     * Return:
 355:.\Generated_Source\PSoC5/CRC_Security.c ****     *  Returns CRC value.
 356:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 357:.\Generated_Source\PSoC5/CRC_Security.c ****     * Side Effects:
 358:.\Generated_Source\PSoC5/CRC_Security.c ****     *  The CRC value is cut according to mask = 2^(Resolution) - 1.
 359:.\Generated_Source\PSoC5/CRC_Security.c ****     *  For example if CRC Resolution is 14 bits the mask value is:
 360:.\Generated_Source\PSoC5/CRC_Security.c ****     *  mask = 2^(14) - 1 = 0x3FFFu.
 361:.\Generated_Source\PSoC5/CRC_Security.c ****     *  The seed value = 0xFFFFu is cut:
 362:.\Generated_Source\PSoC5/CRC_Security.c ****     *  seed & mask = 0xFFFFu & 0x3FFFu = 0x3FFFu.
 363:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 364:.\Generated_Source\PSoC5/CRC_Security.c ****     *******************************************************************************/
 365:.\Generated_Source\PSoC5/CRC_Security.c ****     uint8 CRC_Security_ReadCRC(void) 
 366:.\Generated_Source\PSoC5/CRC_Security.c ****     {
 251              		.loc 1 366 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 1, uses_anonymous_args = 0
 255              		@ link register save eliminated.
 256 0000 80B4     		push	{r7}
 257              		.cfi_def_cfa_offset 4
 258              		.cfi_offset 7, -4
 259 0002 00AF     		add	r7, sp, #0
 260              		.cfi_def_cfa_register 7
 367:.\Generated_Source\PSoC5/CRC_Security.c ****         /* Read CRC */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 12


 368:.\Generated_Source\PSoC5/CRC_Security.c ****         #if (CRC_Security_TIME_MULTIPLEXING_ENABLE)
 369:.\Generated_Source\PSoC5/CRC_Security.c **** 
 370:.\Generated_Source\PSoC5/CRC_Security.c ****             uint8 seed;
 371:.\Generated_Source\PSoC5/CRC_Security.c **** 
 372:.\Generated_Source\PSoC5/CRC_Security.c ****             #if (CRC_Security_CRC_SIZE <= 16u)          /* 16 bits CRC */
 373:.\Generated_Source\PSoC5/CRC_Security.c ****                 seed = ((uint16) CRC_Security_SEED_A__A1_REG) << 8u;
 374:.\Generated_Source\PSoC5/CRC_Security.c ****                 seed |= CRC_Security_SEED_A__A0_REG;
 375:.\Generated_Source\PSoC5/CRC_Security.c **** 
 376:.\Generated_Source\PSoC5/CRC_Security.c ****             #elif (CRC_Security_CRC_SIZE <= 24u)        /* 24 bits CRC */
 377:.\Generated_Source\PSoC5/CRC_Security.c ****                 seed = ((uint32) (CRC_Security_SEED_B__A1_REG)) << 16u;
 378:.\Generated_Source\PSoC5/CRC_Security.c ****                 seed |= ((uint32) (CRC_Security_SEED_B__A0_REG)) << 8u;
 379:.\Generated_Source\PSoC5/CRC_Security.c ****                 seed |= CRC_Security_SEED_A__A0_REG;
 380:.\Generated_Source\PSoC5/CRC_Security.c **** 
 381:.\Generated_Source\PSoC5/CRC_Security.c ****             #else                                           /* 32 bits CRC */
 382:.\Generated_Source\PSoC5/CRC_Security.c ****                 seed = ((uint32) CRC_Security_SEED_B__A1_REG) << 24u;
 383:.\Generated_Source\PSoC5/CRC_Security.c ****                 seed |= ((uint32) CRC_Security_SEED_A__A1_REG) << 16u;
 384:.\Generated_Source\PSoC5/CRC_Security.c ****                 seed |= ((uint32) CRC_Security_SEED_B__A0_REG) << 8u;
 385:.\Generated_Source\PSoC5/CRC_Security.c ****                 seed |= CRC_Security_SEED_A__A0_REG;
 386:.\Generated_Source\PSoC5/CRC_Security.c **** 
 387:.\Generated_Source\PSoC5/CRC_Security.c ****             #endif  /* End (CRC_Security_CRC_SIZE <= 8u) */
 388:.\Generated_Source\PSoC5/CRC_Security.c ****             
 389:.\Generated_Source\PSoC5/CRC_Security.c ****             #if((0u != (CRC_Security_CRC_SIZE % 8u)) || (CRC_Security_CRC_SIZE == 24u))
 390:.\Generated_Source\PSoC5/CRC_Security.c ****                 seed &= CRC_Security_MASK;
 391:.\Generated_Source\PSoC5/CRC_Security.c ****             #endif /* ((0u != (CRC_Security_CRC_SIZE % 8u)) || (CRC_Security_CRC_SIZE == 24u)) */
 392:.\Generated_Source\PSoC5/CRC_Security.c ****             
 393:.\Generated_Source\PSoC5/CRC_Security.c ****             return (seed);
 394:.\Generated_Source\PSoC5/CRC_Security.c **** 
 395:.\Generated_Source\PSoC5/CRC_Security.c ****         #else
 396:.\Generated_Source\PSoC5/CRC_Security.c ****             
 397:.\Generated_Source\PSoC5/CRC_Security.c ****             #if((0u != (CRC_Security_CRC_SIZE % 8u)) || (CRC_Security_CRC_SIZE == 24u))
 398:.\Generated_Source\PSoC5/CRC_Security.c ****                 return (CY_GET_REG8(CRC_Security_SEED_PTR)  & CRC_Security_MASK);
 399:.\Generated_Source\PSoC5/CRC_Security.c ****             #else
 400:.\Generated_Source\PSoC5/CRC_Security.c ****                 return (CY_GET_REG8(CRC_Security_SEED_PTR));
 261              		.loc 1 400 0
 262 0004 034B     		ldr	r3, .L17
 263 0006 1B78     		ldrb	r3, [r3]
 264 0008 DBB2     		uxtb	r3, r3
 401:.\Generated_Source\PSoC5/CRC_Security.c ****             #endif /* ((0u != (CRC_Security_CRC_SIZE % 8u)) || (CRC_Security_CRC_SIZE == 24u)) */
 402:.\Generated_Source\PSoC5/CRC_Security.c ****             
 403:.\Generated_Source\PSoC5/CRC_Security.c **** 
 404:.\Generated_Source\PSoC5/CRC_Security.c ****         #endif  /* End (CRC_Security_TIME_MULTIPLEXING_ENABLE) */
 405:.\Generated_Source\PSoC5/CRC_Security.c ****     }
 265              		.loc 1 405 0
 266 000a 1846     		mov	r0, r3
 267 000c BD46     		mov	sp, r7
 268              		.cfi_def_cfa_register 13
 269              		@ sp needed
 270 000e 5DF8047B 		ldr	r7, [sp], #4
 271              		.cfi_restore 7
 272              		.cfi_def_cfa_offset 0
 273 0012 7047     		bx	lr
 274              	.L18:
 275              		.align	2
 276              	.L17:
 277 0014 06640040 		.word	1073767430
 278              		.cfi_endproc
 279              	.LFE5:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 13


 280              		.size	CRC_Security_ReadCRC, .-CRC_Security_ReadCRC
 281              		.section	.text.CRC_Security_WriteSeed,"ax",%progbits
 282              		.align	2
 283              		.global	CRC_Security_WriteSeed
 284              		.thumb
 285              		.thumb_func
 286              		.type	CRC_Security_WriteSeed, %function
 287              	CRC_Security_WriteSeed:
 288              	.LFB6:
 406:.\Generated_Source\PSoC5/CRC_Security.c **** 
 407:.\Generated_Source\PSoC5/CRC_Security.c **** 
 408:.\Generated_Source\PSoC5/CRC_Security.c ****     /*******************************************************************************
 409:.\Generated_Source\PSoC5/CRC_Security.c ****     * Function Name: CRC_Security_WriteSeed
 410:.\Generated_Source\PSoC5/CRC_Security.c ****     ********************************************************************************
 411:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 412:.\Generated_Source\PSoC5/CRC_Security.c ****     * Summary:
 413:.\Generated_Source\PSoC5/CRC_Security.c ****     *  Writes seed value.
 414:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 415:.\Generated_Source\PSoC5/CRC_Security.c ****     * Parameters:
 416:.\Generated_Source\PSoC5/CRC_Security.c ****     *  seed:  Seed value.
 417:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 418:.\Generated_Source\PSoC5/CRC_Security.c ****     * Return:
 419:.\Generated_Source\PSoC5/CRC_Security.c ****     *  void
 420:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 421:.\Generated_Source\PSoC5/CRC_Security.c ****     * Side Effects:
 422:.\Generated_Source\PSoC5/CRC_Security.c ****     *  The seed value is cut according to mask = 2^(Resolution) - 1.
 423:.\Generated_Source\PSoC5/CRC_Security.c ****     *  For example if CRC Resolution is 14 bits the mask value is:
 424:.\Generated_Source\PSoC5/CRC_Security.c ****     *  mask = 2^(14) - 1 = 0x3FFFu.
 425:.\Generated_Source\PSoC5/CRC_Security.c ****     *  The seed value = 0xFFFFu is cut:
 426:.\Generated_Source\PSoC5/CRC_Security.c ****     *  seed & mask = 0xFFFFu & 0x3FFFu = 0x3FFFu.
 427:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 428:.\Generated_Source\PSoC5/CRC_Security.c ****     *******************************************************************************/
 429:.\Generated_Source\PSoC5/CRC_Security.c ****     void CRC_Security_WriteSeed(uint8 seed) 
 430:.\Generated_Source\PSoC5/CRC_Security.c ****     {
 289              		.loc 1 430 0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 8
 292              		@ frame_needed = 1, uses_anonymous_args = 0
 293              		@ link register save eliminated.
 294 0000 80B4     		push	{r7}
 295              		.cfi_def_cfa_offset 4
 296              		.cfi_offset 7, -4
 297 0002 83B0     		sub	sp, sp, #12
 298              		.cfi_def_cfa_offset 16
 299 0004 00AF     		add	r7, sp, #0
 300              		.cfi_def_cfa_register 7
 301 0006 0346     		mov	r3, r0
 302 0008 FB71     		strb	r3, [r7, #7]
 431:.\Generated_Source\PSoC5/CRC_Security.c ****         /* Mask the Seed Upper half to cut unused bits in case, when CRC size is not byte-aligned o
 432:.\Generated_Source\PSoC5/CRC_Security.c ****         #if((0u != (CRC_Security_CRC_SIZE % 8u)) || (CRC_Security_CRC_SIZE == 24u))
 433:.\Generated_Source\PSoC5/CRC_Security.c ****             seed &= CRC_Security_MASK;
 434:.\Generated_Source\PSoC5/CRC_Security.c ****         #endif /* ((0u != (CRC_Security_CRC_SIZE % 8u)) || (CRC_Security_CRC_SIZE == 24u)) */
 435:.\Generated_Source\PSoC5/CRC_Security.c **** 
 436:.\Generated_Source\PSoC5/CRC_Security.c ****         /* Writes Seed */
 437:.\Generated_Source\PSoC5/CRC_Security.c ****         #if (CRC_Security_TIME_MULTIPLEXING_ENABLE)
 438:.\Generated_Source\PSoC5/CRC_Security.c **** 
 439:.\Generated_Source\PSoC5/CRC_Security.c ****             #if (CRC_Security_CRC_SIZE <= 16u)          /* 16 bits CRC */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 14


 440:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_SEED_A__A1_REG = HI8(seed);
 441:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_SEED_A__A0_REG = LO8(seed);
 442:.\Generated_Source\PSoC5/CRC_Security.c **** 
 443:.\Generated_Source\PSoC5/CRC_Security.c ****             #elif (CRC_Security_CRC_SIZE <= 24u)        /* 24 bits CRC */
 444:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_SEED_B__A1_REG = LO8(HI16(seed));
 445:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_SEED_B__A0_REG = HI8(seed);
 446:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_SEED_A__A0_REG = LO8(seed);
 447:.\Generated_Source\PSoC5/CRC_Security.c **** 
 448:.\Generated_Source\PSoC5/CRC_Security.c ****             #else                                           /* 32 bits CRC */
 449:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_SEED_B__A1_REG = HI8(HI16(seed));
 450:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_SEED_A__A1_REG = LO8(HI16(seed));
 451:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_SEED_B__A0_REG = HI8(seed);
 452:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_SEED_A__A0_REG = LO8(seed);
 453:.\Generated_Source\PSoC5/CRC_Security.c ****             #endif  /* End (CRC_Security_CRC_SIZE <= 32u) */
 454:.\Generated_Source\PSoC5/CRC_Security.c **** 
 455:.\Generated_Source\PSoC5/CRC_Security.c ****             /* Resets triggers */
 456:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_EXECUTE_DFF_RESET;
 457:.\Generated_Source\PSoC5/CRC_Security.c **** 
 458:.\Generated_Source\PSoC5/CRC_Security.c ****         #else
 459:.\Generated_Source\PSoC5/CRC_Security.c **** 
 460:.\Generated_Source\PSoC5/CRC_Security.c ****             CY_SET_REG8(CRC_Security_SEED_PTR, seed);
 303              		.loc 1 460 0
 304 000a 044A     		ldr	r2, .L20
 305 000c FB79     		ldrb	r3, [r7, #7]
 306 000e 1370     		strb	r3, [r2]
 461:.\Generated_Source\PSoC5/CRC_Security.c **** 
 462:.\Generated_Source\PSoC5/CRC_Security.c ****         #endif  /* End (CRC_Security_TIME_MULTIPLEXING_ENABLE) */
 463:.\Generated_Source\PSoC5/CRC_Security.c ****     }
 307              		.loc 1 463 0
 308 0010 0C37     		adds	r7, r7, #12
 309              		.cfi_def_cfa_offset 4
 310 0012 BD46     		mov	sp, r7
 311              		.cfi_def_cfa_register 13
 312              		@ sp needed
 313 0014 5DF8047B 		ldr	r7, [sp], #4
 314              		.cfi_restore 7
 315              		.cfi_def_cfa_offset 0
 316 0018 7047     		bx	lr
 317              	.L21:
 318 001a 00BF     		.align	2
 319              	.L20:
 320 001c 06640040 		.word	1073767430
 321              		.cfi_endproc
 322              	.LFE6:
 323              		.size	CRC_Security_WriteSeed, .-CRC_Security_WriteSeed
 324              		.section	.text.CRC_Security_ReadPolynomial,"ax",%progbits
 325              		.align	2
 326              		.global	CRC_Security_ReadPolynomial
 327              		.thumb
 328              		.thumb_func
 329              		.type	CRC_Security_ReadPolynomial, %function
 330              	CRC_Security_ReadPolynomial:
 331              	.LFB7:
 464:.\Generated_Source\PSoC5/CRC_Security.c **** 
 465:.\Generated_Source\PSoC5/CRC_Security.c **** 
 466:.\Generated_Source\PSoC5/CRC_Security.c ****     /*******************************************************************************
 467:.\Generated_Source\PSoC5/CRC_Security.c ****     * Function Name: CRC_Security_ReadPolynomial
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 15


 468:.\Generated_Source\PSoC5/CRC_Security.c ****     ********************************************************************************
 469:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 470:.\Generated_Source\PSoC5/CRC_Security.c ****     * Summary:
 471:.\Generated_Source\PSoC5/CRC_Security.c ****     *  Reads CRC polynomial value.
 472:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 473:.\Generated_Source\PSoC5/CRC_Security.c ****     * Parameters:
 474:.\Generated_Source\PSoC5/CRC_Security.c ****     *  void
 475:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 476:.\Generated_Source\PSoC5/CRC_Security.c ****     * Return:
 477:.\Generated_Source\PSoC5/CRC_Security.c ****     *  Returns CRC polynomial value.
 478:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 479:.\Generated_Source\PSoC5/CRC_Security.c ****     *******************************************************************************/
 480:.\Generated_Source\PSoC5/CRC_Security.c ****     uint8 CRC_Security_ReadPolynomial(void)
 481:.\Generated_Source\PSoC5/CRC_Security.c ****                                                
 482:.\Generated_Source\PSoC5/CRC_Security.c ****     {
 332              		.loc 1 482 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 1, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 337 0000 80B4     		push	{r7}
 338              		.cfi_def_cfa_offset 4
 339              		.cfi_offset 7, -4
 340 0002 00AF     		add	r7, sp, #0
 341              		.cfi_def_cfa_register 7
 483:.\Generated_Source\PSoC5/CRC_Security.c ****         /* Reads polynomial */
 484:.\Generated_Source\PSoC5/CRC_Security.c ****         #if (CRC_Security_TIME_MULTIPLEXING_ENABLE)
 485:.\Generated_Source\PSoC5/CRC_Security.c **** 
 486:.\Generated_Source\PSoC5/CRC_Security.c ****             uint8 polynomial;
 487:.\Generated_Source\PSoC5/CRC_Security.c **** 
 488:.\Generated_Source\PSoC5/CRC_Security.c ****             #if (CRC_Security_CRC_SIZE <= 16u)          /* 16 bits CRC */
 489:.\Generated_Source\PSoC5/CRC_Security.c ****                 polynomial = ((uint16) CRC_Security_POLYNOM_A__D1_REG) << 8u;
 490:.\Generated_Source\PSoC5/CRC_Security.c ****                 polynomial |= (CRC_Security_POLYNOM_A__D0_REG);
 491:.\Generated_Source\PSoC5/CRC_Security.c **** 
 492:.\Generated_Source\PSoC5/CRC_Security.c ****             #elif (CRC_Security_CRC_SIZE <= 24u)        /* 24 bits CRC */
 493:.\Generated_Source\PSoC5/CRC_Security.c ****                 polynomial = ((uint32) CRC_Security_POLYNOM_B__D1_REG) << 16u;
 494:.\Generated_Source\PSoC5/CRC_Security.c ****                 polynomial |= ((uint32) CRC_Security_POLYNOM_B__D0_REG) << 8u;
 495:.\Generated_Source\PSoC5/CRC_Security.c ****                 polynomial |= CRC_Security_POLYNOM_A__D0_REG;
 496:.\Generated_Source\PSoC5/CRC_Security.c **** 
 497:.\Generated_Source\PSoC5/CRC_Security.c ****             #else                                           /* 32 bits CRC */
 498:.\Generated_Source\PSoC5/CRC_Security.c ****                 polynomial = ((uint32) CRC_Security_POLYNOM_B__D1_REG) << 24u;
 499:.\Generated_Source\PSoC5/CRC_Security.c ****                 polynomial |= ((uint32) CRC_Security_POLYNOM_A__D1_REG) << 16u;
 500:.\Generated_Source\PSoC5/CRC_Security.c ****                 polynomial |= ((uint32) CRC_Security_POLYNOM_B__D0_REG) << 8u;
 501:.\Generated_Source\PSoC5/CRC_Security.c ****                 polynomial |= CRC_Security_POLYNOM_A__D0_REG;
 502:.\Generated_Source\PSoC5/CRC_Security.c **** 
 503:.\Generated_Source\PSoC5/CRC_Security.c ****             #endif  /* End (CRC_Security_CRC_SIZE <= 32u) */
 504:.\Generated_Source\PSoC5/CRC_Security.c **** 
 505:.\Generated_Source\PSoC5/CRC_Security.c ****             return polynomial;
 506:.\Generated_Source\PSoC5/CRC_Security.c **** 
 507:.\Generated_Source\PSoC5/CRC_Security.c ****         #else
 508:.\Generated_Source\PSoC5/CRC_Security.c **** 
 509:.\Generated_Source\PSoC5/CRC_Security.c ****             return CY_GET_REG8(CRC_Security_POLYNOM_PTR);
 342              		.loc 1 509 0
 343 0004 034B     		ldr	r3, .L24
 344 0006 1B78     		ldrb	r3, [r3]
 345 0008 DBB2     		uxtb	r3, r3
 510:.\Generated_Source\PSoC5/CRC_Security.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 16


 511:.\Generated_Source\PSoC5/CRC_Security.c ****         #endif  /* End (CRC_Security_TIME_MULTIPLEXING_ENABLE) */
 512:.\Generated_Source\PSoC5/CRC_Security.c ****     }
 346              		.loc 1 512 0
 347 000a 1846     		mov	r0, r3
 348 000c BD46     		mov	sp, r7
 349              		.cfi_def_cfa_register 13
 350              		@ sp needed
 351 000e 5DF8047B 		ldr	r7, [sp], #4
 352              		.cfi_restore 7
 353              		.cfi_def_cfa_offset 0
 354 0012 7047     		bx	lr
 355              	.L25:
 356              		.align	2
 357              	.L24:
 358 0014 26640040 		.word	1073767462
 359              		.cfi_endproc
 360              	.LFE7:
 361              		.size	CRC_Security_ReadPolynomial, .-CRC_Security_ReadPolynomial
 362              		.section	.text.CRC_Security_WritePolynomial,"ax",%progbits
 363              		.align	2
 364              		.global	CRC_Security_WritePolynomial
 365              		.thumb
 366              		.thumb_func
 367              		.type	CRC_Security_WritePolynomial, %function
 368              	CRC_Security_WritePolynomial:
 369              	.LFB8:
 513:.\Generated_Source\PSoC5/CRC_Security.c **** 
 514:.\Generated_Source\PSoC5/CRC_Security.c **** 
 515:.\Generated_Source\PSoC5/CRC_Security.c ****     /*******************************************************************************
 516:.\Generated_Source\PSoC5/CRC_Security.c ****     * Function Name: CRC_Security_WritePolynomial
 517:.\Generated_Source\PSoC5/CRC_Security.c ****     ********************************************************************************
 518:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 519:.\Generated_Source\PSoC5/CRC_Security.c ****     * Summary:
 520:.\Generated_Source\PSoC5/CRC_Security.c ****     *  Writes CRC polynomial value.
 521:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 522:.\Generated_Source\PSoC5/CRC_Security.c ****     * Parameters:
 523:.\Generated_Source\PSoC5/CRC_Security.c ****     *  polynomial:  CRC polynomial.
 524:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 525:.\Generated_Source\PSoC5/CRC_Security.c ****     * Return:
 526:.\Generated_Source\PSoC5/CRC_Security.c ****     *  void
 527:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 528:.\Generated_Source\PSoC5/CRC_Security.c ****     * Side Effects:
 529:.\Generated_Source\PSoC5/CRC_Security.c ****     *  The polynomial value is cut according to mask = 2^(Resolution) - 1.
 530:.\Generated_Source\PSoC5/CRC_Security.c ****     *  For example if CRC Resolution is 14 bits the mask value is:
 531:.\Generated_Source\PSoC5/CRC_Security.c ****     *  mask = 2^(14) - 1 = 0x3FFFu.
 532:.\Generated_Source\PSoC5/CRC_Security.c ****     *  The polynomial value = 0xFFFFu is cut:
 533:.\Generated_Source\PSoC5/CRC_Security.c ****     *  polynomial & mask = 0xFFFFu & 0x3FFFu = 0x3FFFu.
 534:.\Generated_Source\PSoC5/CRC_Security.c ****     *
 535:.\Generated_Source\PSoC5/CRC_Security.c ****     *******************************************************************************/
 536:.\Generated_Source\PSoC5/CRC_Security.c ****     void CRC_Security_WritePolynomial(uint8 polynomial)
 537:.\Generated_Source\PSoC5/CRC_Security.c ****                                           
 538:.\Generated_Source\PSoC5/CRC_Security.c ****     {
 370              		.loc 1 538 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 8
 373              		@ frame_needed = 1, uses_anonymous_args = 0
 374              		@ link register save eliminated.
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 17


 375 0000 80B4     		push	{r7}
 376              		.cfi_def_cfa_offset 4
 377              		.cfi_offset 7, -4
 378 0002 83B0     		sub	sp, sp, #12
 379              		.cfi_def_cfa_offset 16
 380 0004 00AF     		add	r7, sp, #0
 381              		.cfi_def_cfa_register 7
 382 0006 0346     		mov	r3, r0
 383 0008 FB71     		strb	r3, [r7, #7]
 539:.\Generated_Source\PSoC5/CRC_Security.c ****         /* Mask polynomial to cut unused bits in case, when CRC size is not byte-aligned or equal 2
 540:.\Generated_Source\PSoC5/CRC_Security.c ****         #if((0u != (CRC_Security_CRC_SIZE % 8u)) || (CRC_Security_CRC_SIZE == 24u))
 541:.\Generated_Source\PSoC5/CRC_Security.c ****             polynomial &= CRC_Security_MASK;
 542:.\Generated_Source\PSoC5/CRC_Security.c ****         #endif /* ((0u != (CRC_Security_CRC_SIZE % 8u)) || (CRC_Security_CRC_SIZE == 24u)) */
 543:.\Generated_Source\PSoC5/CRC_Security.c **** 
 544:.\Generated_Source\PSoC5/CRC_Security.c ****         /* Write polynomial */
 545:.\Generated_Source\PSoC5/CRC_Security.c ****         #if (CRC_Security_TIME_MULTIPLEXING_ENABLE)
 546:.\Generated_Source\PSoC5/CRC_Security.c **** 
 547:.\Generated_Source\PSoC5/CRC_Security.c ****             #if (CRC_Security_CRC_SIZE <= 16u)          /* 16 bits CRC */
 548:.\Generated_Source\PSoC5/CRC_Security.c **** 
 549:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_POLYNOM_A__D1_REG = HI8(polynomial);
 550:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_POLYNOM_A__D0_REG = LO8(polynomial);
 551:.\Generated_Source\PSoC5/CRC_Security.c **** 
 552:.\Generated_Source\PSoC5/CRC_Security.c ****             #elif (CRC_Security_CRC_SIZE <= 24u)        /* 24 bits CRC */
 553:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_POLYNOM_B__D1_REG = LO8(HI16(polynomial));
 554:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_POLYNOM_B__D0_REG = HI8(polynomial);
 555:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_POLYNOM_A__D0_REG = LO8(polynomial);
 556:.\Generated_Source\PSoC5/CRC_Security.c **** 
 557:.\Generated_Source\PSoC5/CRC_Security.c ****             #else                                           /* 32 bits CRC */
 558:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_POLYNOM_B__D1_REG = HI8(HI16(polynomial));
 559:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_POLYNOM_A__D1_REG = LO8(HI16(polynomial));
 560:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_POLYNOM_B__D0_REG = HI8(polynomial);
 561:.\Generated_Source\PSoC5/CRC_Security.c ****                 CRC_Security_POLYNOM_A__D0_REG = LO8(polynomial);
 562:.\Generated_Source\PSoC5/CRC_Security.c **** 
 563:.\Generated_Source\PSoC5/CRC_Security.c ****             #endif  /* End (CRC_Security_CRC_SIZE <= 32u) */
 564:.\Generated_Source\PSoC5/CRC_Security.c **** 
 565:.\Generated_Source\PSoC5/CRC_Security.c ****             /* Resets triggers */
 566:.\Generated_Source\PSoC5/CRC_Security.c ****             CRC_Security_EXECUTE_DFF_RESET;
 567:.\Generated_Source\PSoC5/CRC_Security.c **** 
 568:.\Generated_Source\PSoC5/CRC_Security.c ****         #else
 569:.\Generated_Source\PSoC5/CRC_Security.c **** 
 570:.\Generated_Source\PSoC5/CRC_Security.c ****             CY_SET_REG8(CRC_Security_POLYNOM_PTR, polynomial);
 384              		.loc 1 570 0
 385 000a 044A     		ldr	r2, .L27
 386 000c FB79     		ldrb	r3, [r7, #7]
 387 000e 1370     		strb	r3, [r2]
 571:.\Generated_Source\PSoC5/CRC_Security.c **** 
 572:.\Generated_Source\PSoC5/CRC_Security.c ****         #endif  /* End (CRC_Security_TIME_MULTIPLEXING_ENABLE) */
 573:.\Generated_Source\PSoC5/CRC_Security.c ****     }
 388              		.loc 1 573 0
 389 0010 0C37     		adds	r7, r7, #12
 390              		.cfi_def_cfa_offset 4
 391 0012 BD46     		mov	sp, r7
 392              		.cfi_def_cfa_register 13
 393              		@ sp needed
 394 0014 5DF8047B 		ldr	r7, [sp], #4
 395              		.cfi_restore 7
 396              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 18


 397 0018 7047     		bx	lr
 398              	.L28:
 399 001a 00BF     		.align	2
 400              	.L27:
 401 001c 26640040 		.word	1073767462
 402              		.cfi_endproc
 403              	.LFE8:
 404              		.size	CRC_Security_WritePolynomial, .-CRC_Security_WritePolynomial
 405              		.text
 406              	.Letext0:
 407              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 408              		.file 3 ".\\Generated_Source\\PSoC5\\CRC_Security.h"
 409              		.section	.debug_info,"",%progbits
 410              	.Ldebug_info0:
 411 0000 D1010000 		.4byte	0x1d1
 412 0004 0400     		.2byte	0x4
 413 0006 00000000 		.4byte	.Ldebug_abbrev0
 414 000a 04       		.byte	0x4
 415 000b 01       		.uleb128 0x1
 416 000c 51010000 		.4byte	.LASF29
 417 0010 01       		.byte	0x1
 418 0011 D2020000 		.4byte	.LASF30
 419 0015 64000000 		.4byte	.LASF31
 420 0019 00000000 		.4byte	.Ldebug_ranges0+0
 421 001d 00000000 		.4byte	0
 422 0021 00000000 		.4byte	.Ldebug_line0
 423 0025 02       		.uleb128 0x2
 424 0026 01       		.byte	0x1
 425 0027 06       		.byte	0x6
 426 0028 B2020000 		.4byte	.LASF0
 427 002c 02       		.uleb128 0x2
 428 002d 01       		.byte	0x1
 429 002e 08       		.byte	0x8
 430 002f DC000000 		.4byte	.LASF1
 431 0033 02       		.uleb128 0x2
 432 0034 02       		.byte	0x2
 433 0035 05       		.byte	0x5
 434 0036 79020000 		.4byte	.LASF2
 435 003a 02       		.uleb128 0x2
 436 003b 02       		.byte	0x2
 437 003c 07       		.byte	0x7
 438 003d 28000000 		.4byte	.LASF3
 439 0041 02       		.uleb128 0x2
 440 0042 04       		.byte	0x4
 441 0043 05       		.byte	0x5
 442 0044 9D020000 		.4byte	.LASF4
 443 0048 02       		.uleb128 0x2
 444 0049 04       		.byte	0x4
 445 004a 07       		.byte	0x7
 446 004b 0C010000 		.4byte	.LASF5
 447 004f 02       		.uleb128 0x2
 448 0050 08       		.byte	0x8
 449 0051 05       		.byte	0x5
 450 0052 4B020000 		.4byte	.LASF6
 451 0056 02       		.uleb128 0x2
 452 0057 08       		.byte	0x8
 453 0058 07       		.byte	0x7
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 19


 454 0059 10020000 		.4byte	.LASF7
 455 005d 03       		.uleb128 0x3
 456 005e 04       		.byte	0x4
 457 005f 05       		.byte	0x5
 458 0060 696E7400 		.ascii	"int\000"
 459 0064 02       		.uleb128 0x2
 460 0065 04       		.byte	0x4
 461 0066 07       		.byte	0x7
 462 0067 03020000 		.4byte	.LASF8
 463 006b 04       		.uleb128 0x4
 464 006c 1E010000 		.4byte	.LASF12
 465 0070 02       		.byte	0x2
 466 0071 3801     		.2byte	0x138
 467 0073 2C000000 		.4byte	0x2c
 468 0077 02       		.uleb128 0x2
 469 0078 04       		.byte	0x4
 470 0079 04       		.byte	0x4
 471 007a C2000000 		.4byte	.LASF9
 472 007e 02       		.uleb128 0x2
 473 007f 08       		.byte	0x8
 474 0080 04       		.byte	0x4
 475 0081 DF010000 		.4byte	.LASF10
 476 0085 02       		.uleb128 0x2
 477 0086 01       		.byte	0x1
 478 0087 08       		.byte	0x8
 479 0088 74020000 		.4byte	.LASF11
 480 008c 04       		.uleb128 0x4
 481 008d 07010000 		.4byte	.LASF13
 482 0091 02       		.byte	0x2
 483 0092 E201     		.2byte	0x1e2
 484 0094 98000000 		.4byte	0x98
 485 0098 05       		.uleb128 0x5
 486 0099 6B000000 		.4byte	0x6b
 487 009d 02       		.uleb128 0x2
 488 009e 04       		.byte	0x4
 489 009f 07       		.byte	0x7
 490 00a0 42020000 		.4byte	.LASF14
 491 00a4 06       		.uleb128 0x6
 492 00a5 01       		.byte	0x1
 493 00a6 03       		.byte	0x3
 494 00a7 2E       		.byte	0x2e
 495 00a8 B9000000 		.4byte	0xb9
 496 00ac 07       		.uleb128 0x7
 497 00ad A6020000 		.4byte	.LASF32
 498 00b1 03       		.byte	0x3
 499 00b2 30       		.byte	0x30
 500 00b3 6B000000 		.4byte	0x6b
 501 00b7 00       		.byte	0
 502 00b8 00       		.byte	0
 503 00b9 08       		.uleb128 0x8
 504 00ba 27020000 		.4byte	.LASF15
 505 00be 03       		.byte	0x3
 506 00bf 40       		.byte	0x40
 507 00c0 A4000000 		.4byte	0xa4
 508 00c4 09       		.uleb128 0x9
 509 00c5 3B000000 		.4byte	.LASF16
 510 00c9 01       		.byte	0x1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 20


 511 00ca 38       		.byte	0x38
 512 00cb 00000000 		.4byte	.LFB0
 513 00cf 18000000 		.4byte	.LFE0-.LFB0
 514 00d3 01       		.uleb128 0x1
 515 00d4 9C       		.byte	0x9c
 516 00d5 0A       		.uleb128 0xa
 517 00d6 BE020000 		.4byte	.LASF17
 518 00da 01       		.byte	0x1
 519 00db 5A       		.byte	0x5a
 520 00dc 00000000 		.4byte	.LFB1
 521 00e0 20000000 		.4byte	.LFE1-.LFB1
 522 00e4 01       		.uleb128 0x1
 523 00e5 9C       		.byte	0x9c
 524 00e6 09       		.uleb128 0x9
 525 00e7 15000000 		.4byte	.LASF18
 526 00eb 01       		.byte	0x1
 527 00ec 76       		.byte	0x76
 528 00ed 00000000 		.4byte	.LFB2
 529 00f1 20000000 		.4byte	.LFE2-.LFB2
 530 00f5 01       		.uleb128 0x1
 531 00f6 9C       		.byte	0x9c
 532 00f7 0A       		.uleb128 0xa
 533 00f8 F1010000 		.4byte	.LASF19
 534 00fc 01       		.byte	0x1
 535 00fd 94       		.byte	0x94
 536 00fe 00000000 		.4byte	.LFB3
 537 0102 20000000 		.4byte	.LFE3-.LFB3
 538 0106 01       		.uleb128 0x1
 539 0107 9C       		.byte	0x9c
 540 0108 0B       		.uleb128 0xb
 541 0109 59020000 		.4byte	.LASF20
 542 010d 01       		.byte	0x1
 543 010e A9       		.byte	0xa9
 544 010f 00000000 		.4byte	.LFB4
 545 0113 40000000 		.4byte	.LFE4-.LFB4
 546 0117 01       		.uleb128 0x1
 547 0118 9C       		.byte	0x9c
 548 0119 3A010000 		.4byte	0x13a
 549 011d 0C       		.uleb128 0xc
 550 011e 83020000 		.4byte	.LASF22
 551 0122 01       		.byte	0x1
 552 0123 A9       		.byte	0xa9
 553 0124 6B000000 		.4byte	0x6b
 554 0128 02       		.uleb128 0x2
 555 0129 91       		.byte	0x91
 556 012a 6F       		.sleb128 -17
 557 012b 0D       		.uleb128 0xd
 558 012c 40010000 		.4byte	.LASF33
 559 0130 01       		.byte	0x1
 560 0131 AC       		.byte	0xac
 561 0132 6B000000 		.4byte	0x6b
 562 0136 02       		.uleb128 0x2
 563 0137 91       		.byte	0x91
 564 0138 77       		.sleb128 -9
 565 0139 00       		.byte	0
 566 013a 0E       		.uleb128 0xe
 567 013b 88020000 		.4byte	.LASF23
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 21


 568 013f 01       		.byte	0x1
 569 0140 6D01     		.2byte	0x16d
 570 0142 6B000000 		.4byte	0x6b
 571 0146 00000000 		.4byte	.LFB5
 572 014a 18000000 		.4byte	.LFE5-.LFB5
 573 014e 01       		.uleb128 0x1
 574 014f 9C       		.byte	0x9c
 575 0150 0F       		.uleb128 0xf
 576 0151 4D000000 		.4byte	.LASF21
 577 0155 01       		.byte	0x1
 578 0156 AD01     		.2byte	0x1ad
 579 0158 00000000 		.4byte	.LFB6
 580 015c 20000000 		.4byte	.LFE6-.LFB6
 581 0160 01       		.uleb128 0x1
 582 0161 9C       		.byte	0x9c
 583 0162 76010000 		.4byte	0x176
 584 0166 10       		.uleb128 0x10
 585 0167 83020000 		.4byte	.LASF22
 586 016b 01       		.byte	0x1
 587 016c AD01     		.2byte	0x1ad
 588 016e 6B000000 		.4byte	0x6b
 589 0172 02       		.uleb128 0x2
 590 0173 91       		.byte	0x91
 591 0174 77       		.sleb128 -9
 592 0175 00       		.byte	0
 593 0176 0E       		.uleb128 0xe
 594 0177 24010000 		.4byte	.LASF24
 595 017b 01       		.byte	0x1
 596 017c E001     		.2byte	0x1e0
 597 017e 6B000000 		.4byte	0x6b
 598 0182 00000000 		.4byte	.LFB7
 599 0186 18000000 		.4byte	.LFE7-.LFB7
 600 018a 01       		.uleb128 0x1
 601 018b 9C       		.byte	0x9c
 602 018c 0F       		.uleb128 0xf
 603 018d EA000000 		.4byte	.LASF25
 604 0191 01       		.byte	0x1
 605 0192 1802     		.2byte	0x218
 606 0194 00000000 		.4byte	.LFB8
 607 0198 20000000 		.4byte	.LFE8-.LFB8
 608 019c 01       		.uleb128 0x1
 609 019d 9C       		.byte	0x9c
 610 019e B2010000 		.4byte	0x1b2
 611 01a2 10       		.uleb128 0x10
 612 01a3 E6010000 		.4byte	.LASF26
 613 01a7 01       		.byte	0x1
 614 01a8 1802     		.2byte	0x218
 615 01aa 6B000000 		.4byte	0x6b
 616 01ae 02       		.uleb128 0x2
 617 01af 91       		.byte	0x91
 618 01b0 77       		.sleb128 -9
 619 01b1 00       		.byte	0
 620 01b2 11       		.uleb128 0x11
 621 01b3 00000000 		.4byte	.LASF27
 622 01b7 01       		.byte	0x1
 623 01b8 14       		.byte	0x14
 624 01b9 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 22


 625 01bd 05       		.uleb128 0x5
 626 01be 03       		.byte	0x3
 627 01bf 00000000 		.4byte	CRC_Security_initVar
 628 01c3 11       		.uleb128 0x11
 629 01c4 C8000000 		.4byte	.LASF28
 630 01c8 01       		.byte	0x1
 631 01c9 16       		.byte	0x16
 632 01ca B9000000 		.4byte	0xb9
 633 01ce 05       		.uleb128 0x5
 634 01cf 03       		.byte	0x3
 635 01d0 00000000 		.4byte	CRC_Security_backup
 636 01d4 00       		.byte	0
 637              		.section	.debug_abbrev,"",%progbits
 638              	.Ldebug_abbrev0:
 639 0000 01       		.uleb128 0x1
 640 0001 11       		.uleb128 0x11
 641 0002 01       		.byte	0x1
 642 0003 25       		.uleb128 0x25
 643 0004 0E       		.uleb128 0xe
 644 0005 13       		.uleb128 0x13
 645 0006 0B       		.uleb128 0xb
 646 0007 03       		.uleb128 0x3
 647 0008 0E       		.uleb128 0xe
 648 0009 1B       		.uleb128 0x1b
 649 000a 0E       		.uleb128 0xe
 650 000b 55       		.uleb128 0x55
 651 000c 17       		.uleb128 0x17
 652 000d 11       		.uleb128 0x11
 653 000e 01       		.uleb128 0x1
 654 000f 10       		.uleb128 0x10
 655 0010 17       		.uleb128 0x17
 656 0011 00       		.byte	0
 657 0012 00       		.byte	0
 658 0013 02       		.uleb128 0x2
 659 0014 24       		.uleb128 0x24
 660 0015 00       		.byte	0
 661 0016 0B       		.uleb128 0xb
 662 0017 0B       		.uleb128 0xb
 663 0018 3E       		.uleb128 0x3e
 664 0019 0B       		.uleb128 0xb
 665 001a 03       		.uleb128 0x3
 666 001b 0E       		.uleb128 0xe
 667 001c 00       		.byte	0
 668 001d 00       		.byte	0
 669 001e 03       		.uleb128 0x3
 670 001f 24       		.uleb128 0x24
 671 0020 00       		.byte	0
 672 0021 0B       		.uleb128 0xb
 673 0022 0B       		.uleb128 0xb
 674 0023 3E       		.uleb128 0x3e
 675 0024 0B       		.uleb128 0xb
 676 0025 03       		.uleb128 0x3
 677 0026 08       		.uleb128 0x8
 678 0027 00       		.byte	0
 679 0028 00       		.byte	0
 680 0029 04       		.uleb128 0x4
 681 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 23


 682 002b 00       		.byte	0
 683 002c 03       		.uleb128 0x3
 684 002d 0E       		.uleb128 0xe
 685 002e 3A       		.uleb128 0x3a
 686 002f 0B       		.uleb128 0xb
 687 0030 3B       		.uleb128 0x3b
 688 0031 05       		.uleb128 0x5
 689 0032 49       		.uleb128 0x49
 690 0033 13       		.uleb128 0x13
 691 0034 00       		.byte	0
 692 0035 00       		.byte	0
 693 0036 05       		.uleb128 0x5
 694 0037 35       		.uleb128 0x35
 695 0038 00       		.byte	0
 696 0039 49       		.uleb128 0x49
 697 003a 13       		.uleb128 0x13
 698 003b 00       		.byte	0
 699 003c 00       		.byte	0
 700 003d 06       		.uleb128 0x6
 701 003e 13       		.uleb128 0x13
 702 003f 01       		.byte	0x1
 703 0040 0B       		.uleb128 0xb
 704 0041 0B       		.uleb128 0xb
 705 0042 3A       		.uleb128 0x3a
 706 0043 0B       		.uleb128 0xb
 707 0044 3B       		.uleb128 0x3b
 708 0045 0B       		.uleb128 0xb
 709 0046 01       		.uleb128 0x1
 710 0047 13       		.uleb128 0x13
 711 0048 00       		.byte	0
 712 0049 00       		.byte	0
 713 004a 07       		.uleb128 0x7
 714 004b 0D       		.uleb128 0xd
 715 004c 00       		.byte	0
 716 004d 03       		.uleb128 0x3
 717 004e 0E       		.uleb128 0xe
 718 004f 3A       		.uleb128 0x3a
 719 0050 0B       		.uleb128 0xb
 720 0051 3B       		.uleb128 0x3b
 721 0052 0B       		.uleb128 0xb
 722 0053 49       		.uleb128 0x49
 723 0054 13       		.uleb128 0x13
 724 0055 38       		.uleb128 0x38
 725 0056 0B       		.uleb128 0xb
 726 0057 00       		.byte	0
 727 0058 00       		.byte	0
 728 0059 08       		.uleb128 0x8
 729 005a 16       		.uleb128 0x16
 730 005b 00       		.byte	0
 731 005c 03       		.uleb128 0x3
 732 005d 0E       		.uleb128 0xe
 733 005e 3A       		.uleb128 0x3a
 734 005f 0B       		.uleb128 0xb
 735 0060 3B       		.uleb128 0x3b
 736 0061 0B       		.uleb128 0xb
 737 0062 49       		.uleb128 0x49
 738 0063 13       		.uleb128 0x13
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 24


 739 0064 00       		.byte	0
 740 0065 00       		.byte	0
 741 0066 09       		.uleb128 0x9
 742 0067 2E       		.uleb128 0x2e
 743 0068 00       		.byte	0
 744 0069 3F       		.uleb128 0x3f
 745 006a 19       		.uleb128 0x19
 746 006b 03       		.uleb128 0x3
 747 006c 0E       		.uleb128 0xe
 748 006d 3A       		.uleb128 0x3a
 749 006e 0B       		.uleb128 0xb
 750 006f 3B       		.uleb128 0x3b
 751 0070 0B       		.uleb128 0xb
 752 0071 27       		.uleb128 0x27
 753 0072 19       		.uleb128 0x19
 754 0073 11       		.uleb128 0x11
 755 0074 01       		.uleb128 0x1
 756 0075 12       		.uleb128 0x12
 757 0076 06       		.uleb128 0x6
 758 0077 40       		.uleb128 0x40
 759 0078 18       		.uleb128 0x18
 760 0079 9642     		.uleb128 0x2116
 761 007b 19       		.uleb128 0x19
 762 007c 00       		.byte	0
 763 007d 00       		.byte	0
 764 007e 0A       		.uleb128 0xa
 765 007f 2E       		.uleb128 0x2e
 766 0080 00       		.byte	0
 767 0081 3F       		.uleb128 0x3f
 768 0082 19       		.uleb128 0x19
 769 0083 03       		.uleb128 0x3
 770 0084 0E       		.uleb128 0xe
 771 0085 3A       		.uleb128 0x3a
 772 0086 0B       		.uleb128 0xb
 773 0087 3B       		.uleb128 0x3b
 774 0088 0B       		.uleb128 0xb
 775 0089 27       		.uleb128 0x27
 776 008a 19       		.uleb128 0x19
 777 008b 11       		.uleb128 0x11
 778 008c 01       		.uleb128 0x1
 779 008d 12       		.uleb128 0x12
 780 008e 06       		.uleb128 0x6
 781 008f 40       		.uleb128 0x40
 782 0090 18       		.uleb128 0x18
 783 0091 9742     		.uleb128 0x2117
 784 0093 19       		.uleb128 0x19
 785 0094 00       		.byte	0
 786 0095 00       		.byte	0
 787 0096 0B       		.uleb128 0xb
 788 0097 2E       		.uleb128 0x2e
 789 0098 01       		.byte	0x1
 790 0099 3F       		.uleb128 0x3f
 791 009a 19       		.uleb128 0x19
 792 009b 03       		.uleb128 0x3
 793 009c 0E       		.uleb128 0xe
 794 009d 3A       		.uleb128 0x3a
 795 009e 0B       		.uleb128 0xb
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 25


 796 009f 3B       		.uleb128 0x3b
 797 00a0 0B       		.uleb128 0xb
 798 00a1 27       		.uleb128 0x27
 799 00a2 19       		.uleb128 0x19
 800 00a3 11       		.uleb128 0x11
 801 00a4 01       		.uleb128 0x1
 802 00a5 12       		.uleb128 0x12
 803 00a6 06       		.uleb128 0x6
 804 00a7 40       		.uleb128 0x40
 805 00a8 18       		.uleb128 0x18
 806 00a9 9642     		.uleb128 0x2116
 807 00ab 19       		.uleb128 0x19
 808 00ac 01       		.uleb128 0x1
 809 00ad 13       		.uleb128 0x13
 810 00ae 00       		.byte	0
 811 00af 00       		.byte	0
 812 00b0 0C       		.uleb128 0xc
 813 00b1 05       		.uleb128 0x5
 814 00b2 00       		.byte	0
 815 00b3 03       		.uleb128 0x3
 816 00b4 0E       		.uleb128 0xe
 817 00b5 3A       		.uleb128 0x3a
 818 00b6 0B       		.uleb128 0xb
 819 00b7 3B       		.uleb128 0x3b
 820 00b8 0B       		.uleb128 0xb
 821 00b9 49       		.uleb128 0x49
 822 00ba 13       		.uleb128 0x13
 823 00bb 02       		.uleb128 0x2
 824 00bc 18       		.uleb128 0x18
 825 00bd 00       		.byte	0
 826 00be 00       		.byte	0
 827 00bf 0D       		.uleb128 0xd
 828 00c0 34       		.uleb128 0x34
 829 00c1 00       		.byte	0
 830 00c2 03       		.uleb128 0x3
 831 00c3 0E       		.uleb128 0xe
 832 00c4 3A       		.uleb128 0x3a
 833 00c5 0B       		.uleb128 0xb
 834 00c6 3B       		.uleb128 0x3b
 835 00c7 0B       		.uleb128 0xb
 836 00c8 49       		.uleb128 0x49
 837 00c9 13       		.uleb128 0x13
 838 00ca 02       		.uleb128 0x2
 839 00cb 18       		.uleb128 0x18
 840 00cc 00       		.byte	0
 841 00cd 00       		.byte	0
 842 00ce 0E       		.uleb128 0xe
 843 00cf 2E       		.uleb128 0x2e
 844 00d0 00       		.byte	0
 845 00d1 3F       		.uleb128 0x3f
 846 00d2 19       		.uleb128 0x19
 847 00d3 03       		.uleb128 0x3
 848 00d4 0E       		.uleb128 0xe
 849 00d5 3A       		.uleb128 0x3a
 850 00d6 0B       		.uleb128 0xb
 851 00d7 3B       		.uleb128 0x3b
 852 00d8 05       		.uleb128 0x5
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 26


 853 00d9 27       		.uleb128 0x27
 854 00da 19       		.uleb128 0x19
 855 00db 49       		.uleb128 0x49
 856 00dc 13       		.uleb128 0x13
 857 00dd 11       		.uleb128 0x11
 858 00de 01       		.uleb128 0x1
 859 00df 12       		.uleb128 0x12
 860 00e0 06       		.uleb128 0x6
 861 00e1 40       		.uleb128 0x40
 862 00e2 18       		.uleb128 0x18
 863 00e3 9742     		.uleb128 0x2117
 864 00e5 19       		.uleb128 0x19
 865 00e6 00       		.byte	0
 866 00e7 00       		.byte	0
 867 00e8 0F       		.uleb128 0xf
 868 00e9 2E       		.uleb128 0x2e
 869 00ea 01       		.byte	0x1
 870 00eb 3F       		.uleb128 0x3f
 871 00ec 19       		.uleb128 0x19
 872 00ed 03       		.uleb128 0x3
 873 00ee 0E       		.uleb128 0xe
 874 00ef 3A       		.uleb128 0x3a
 875 00f0 0B       		.uleb128 0xb
 876 00f1 3B       		.uleb128 0x3b
 877 00f2 05       		.uleb128 0x5
 878 00f3 27       		.uleb128 0x27
 879 00f4 19       		.uleb128 0x19
 880 00f5 11       		.uleb128 0x11
 881 00f6 01       		.uleb128 0x1
 882 00f7 12       		.uleb128 0x12
 883 00f8 06       		.uleb128 0x6
 884 00f9 40       		.uleb128 0x40
 885 00fa 18       		.uleb128 0x18
 886 00fb 9742     		.uleb128 0x2117
 887 00fd 19       		.uleb128 0x19
 888 00fe 01       		.uleb128 0x1
 889 00ff 13       		.uleb128 0x13
 890 0100 00       		.byte	0
 891 0101 00       		.byte	0
 892 0102 10       		.uleb128 0x10
 893 0103 05       		.uleb128 0x5
 894 0104 00       		.byte	0
 895 0105 03       		.uleb128 0x3
 896 0106 0E       		.uleb128 0xe
 897 0107 3A       		.uleb128 0x3a
 898 0108 0B       		.uleb128 0xb
 899 0109 3B       		.uleb128 0x3b
 900 010a 05       		.uleb128 0x5
 901 010b 49       		.uleb128 0x49
 902 010c 13       		.uleb128 0x13
 903 010d 02       		.uleb128 0x2
 904 010e 18       		.uleb128 0x18
 905 010f 00       		.byte	0
 906 0110 00       		.byte	0
 907 0111 11       		.uleb128 0x11
 908 0112 34       		.uleb128 0x34
 909 0113 00       		.byte	0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 27


 910 0114 03       		.uleb128 0x3
 911 0115 0E       		.uleb128 0xe
 912 0116 3A       		.uleb128 0x3a
 913 0117 0B       		.uleb128 0xb
 914 0118 3B       		.uleb128 0x3b
 915 0119 0B       		.uleb128 0xb
 916 011a 49       		.uleb128 0x49
 917 011b 13       		.uleb128 0x13
 918 011c 3F       		.uleb128 0x3f
 919 011d 19       		.uleb128 0x19
 920 011e 02       		.uleb128 0x2
 921 011f 18       		.uleb128 0x18
 922 0120 00       		.byte	0
 923 0121 00       		.byte	0
 924 0122 00       		.byte	0
 925              		.section	.debug_aranges,"",%progbits
 926 0000 5C000000 		.4byte	0x5c
 927 0004 0200     		.2byte	0x2
 928 0006 00000000 		.4byte	.Ldebug_info0
 929 000a 04       		.byte	0x4
 930 000b 00       		.byte	0
 931 000c 0000     		.2byte	0
 932 000e 0000     		.2byte	0
 933 0010 00000000 		.4byte	.LFB0
 934 0014 18000000 		.4byte	.LFE0-.LFB0
 935 0018 00000000 		.4byte	.LFB1
 936 001c 20000000 		.4byte	.LFE1-.LFB1
 937 0020 00000000 		.4byte	.LFB2
 938 0024 20000000 		.4byte	.LFE2-.LFB2
 939 0028 00000000 		.4byte	.LFB3
 940 002c 20000000 		.4byte	.LFE3-.LFB3
 941 0030 00000000 		.4byte	.LFB4
 942 0034 40000000 		.4byte	.LFE4-.LFB4
 943 0038 00000000 		.4byte	.LFB5
 944 003c 18000000 		.4byte	.LFE5-.LFB5
 945 0040 00000000 		.4byte	.LFB6
 946 0044 20000000 		.4byte	.LFE6-.LFB6
 947 0048 00000000 		.4byte	.LFB7
 948 004c 18000000 		.4byte	.LFE7-.LFB7
 949 0050 00000000 		.4byte	.LFB8
 950 0054 20000000 		.4byte	.LFE8-.LFB8
 951 0058 00000000 		.4byte	0
 952 005c 00000000 		.4byte	0
 953              		.section	.debug_ranges,"",%progbits
 954              	.Ldebug_ranges0:
 955 0000 00000000 		.4byte	.LFB0
 956 0004 18000000 		.4byte	.LFE0
 957 0008 00000000 		.4byte	.LFB1
 958 000c 20000000 		.4byte	.LFE1
 959 0010 00000000 		.4byte	.LFB2
 960 0014 20000000 		.4byte	.LFE2
 961 0018 00000000 		.4byte	.LFB3
 962 001c 20000000 		.4byte	.LFE3
 963 0020 00000000 		.4byte	.LFB4
 964 0024 40000000 		.4byte	.LFE4
 965 0028 00000000 		.4byte	.LFB5
 966 002c 18000000 		.4byte	.LFE5
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 28


 967 0030 00000000 		.4byte	.LFB6
 968 0034 20000000 		.4byte	.LFE6
 969 0038 00000000 		.4byte	.LFB7
 970 003c 18000000 		.4byte	.LFE7
 971 0040 00000000 		.4byte	.LFB8
 972 0044 20000000 		.4byte	.LFE8
 973 0048 00000000 		.4byte	0
 974 004c 00000000 		.4byte	0
 975              		.section	.debug_line,"",%progbits
 976              	.Ldebug_line0:
 977 0000 1C010000 		.section	.debug_str,"MS",%progbits,1
 977      02005D00 
 977      00000201 
 977      FB0E0D00 
 977      01010101 
 978              	.LASF27:
 979 0000 4352435F 		.ascii	"CRC_Security_initVar\000"
 979      53656375 
 979      72697479 
 979      5F696E69 
 979      74566172 
 980              	.LASF18:
 981 0015 4352435F 		.ascii	"CRC_Security_Start\000"
 981      53656375 
 981      72697479 
 981      5F537461 
 981      727400
 982              	.LASF3:
 983 0028 73686F72 		.ascii	"short unsigned int\000"
 983      7420756E 
 983      7369676E 
 983      65642069 
 983      6E7400
 984              	.LASF16:
 985 003b 4352435F 		.ascii	"CRC_Security_Init\000"
 985      53656375 
 985      72697479 
 985      5F496E69 
 985      7400
 986              	.LASF21:
 987 004d 4352435F 		.ascii	"CRC_Security_WriteSeed\000"
 987      53656375 
 987      72697479 
 987      5F577269 
 987      74655365 
 988              	.LASF31:
 989 0064 433A5C55 		.ascii	"C:\\Users\\Lenovo\\Documents\\GitHub\\CorEx-MUX-Ker"
 989      73657273 
 989      5C4C656E 
 989      6F766F5C 
 989      446F6375 
 990 0092 6E656C2D 		.ascii	"nel-Enhanced\\Workspace01\\CorEx-Mux-Kernel.cydsn\000"
 990      456E6861 
 990      6E636564 
 990      5C576F72 
 990      6B737061 
 991              	.LASF9:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 29


 992 00c2 666C6F61 		.ascii	"float\000"
 992      7400
 993              	.LASF28:
 994 00c8 4352435F 		.ascii	"CRC_Security_backup\000"
 994      53656375 
 994      72697479 
 994      5F626163 
 994      6B757000 
 995              	.LASF1:
 996 00dc 756E7369 		.ascii	"unsigned char\000"
 996      676E6564 
 996      20636861 
 996      7200
 997              	.LASF25:
 998 00ea 4352435F 		.ascii	"CRC_Security_WritePolynomial\000"
 998      53656375 
 998      72697479 
 998      5F577269 
 998      7465506F 
 999              	.LASF13:
 1000 0107 72656738 		.ascii	"reg8\000"
 1000      00
 1001              	.LASF5:
 1002 010c 6C6F6E67 		.ascii	"long unsigned int\000"
 1002      20756E73 
 1002      69676E65 
 1002      6420696E 
 1002      7400
 1003              	.LASF12:
 1004 011e 75696E74 		.ascii	"uint8\000"
 1004      3800
 1005              	.LASF24:
 1006 0124 4352435F 		.ascii	"CRC_Security_ReadPolynomial\000"
 1006      53656375 
 1006      72697479 
 1006      5F526561 
 1006      64506F6C 
 1007              	.LASF33:
 1008 0140 656E6162 		.ascii	"enableInterrupts\000"
 1008      6C65496E 
 1008      74657272 
 1008      75707473 
 1008      00
 1009              	.LASF29:
 1010 0151 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1010      4320342E 
 1010      392E3320 
 1010      32303135 
 1010      30333033 
 1011 0184 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1011      20726576 
 1011      6973696F 
 1011      6E203232 
 1011      31323230 
 1012 01b7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1012      66756E63 
 1012      74696F6E 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 30


 1012      2D736563 
 1012      74696F6E 
 1013              	.LASF10:
 1014 01df 646F7562 		.ascii	"double\000"
 1014      6C6500
 1015              	.LASF26:
 1016 01e6 706F6C79 		.ascii	"polynomial\000"
 1016      6E6F6D69 
 1016      616C00
 1017              	.LASF19:
 1018 01f1 4352435F 		.ascii	"CRC_Security_Stop\000"
 1018      53656375 
 1018      72697479 
 1018      5F53746F 
 1018      7000
 1019              	.LASF8:
 1020 0203 756E7369 		.ascii	"unsigned int\000"
 1020      676E6564 
 1020      20696E74 
 1020      00
 1021              	.LASF7:
 1022 0210 6C6F6E67 		.ascii	"long long unsigned int\000"
 1022      206C6F6E 
 1022      6720756E 
 1022      7369676E 
 1022      65642069 
 1023              	.LASF15:
 1024 0227 4352435F 		.ascii	"CRC_Security_BACKUP_STRUCT\000"
 1024      53656375 
 1024      72697479 
 1024      5F424143 
 1024      4B55505F 
 1025              	.LASF14:
 1026 0242 73697A65 		.ascii	"sizetype\000"
 1026      74797065 
 1026      00
 1027              	.LASF6:
 1028 024b 6C6F6E67 		.ascii	"long long int\000"
 1028      206C6F6E 
 1028      6720696E 
 1028      7400
 1029              	.LASF20:
 1030 0259 4352435F 		.ascii	"CRC_Security_ResetSeedInit\000"
 1030      53656375 
 1030      72697479 
 1030      5F526573 
 1030      65745365 
 1031              	.LASF11:
 1032 0274 63686172 		.ascii	"char\000"
 1032      00
 1033              	.LASF2:
 1034 0279 73686F72 		.ascii	"short int\000"
 1034      7420696E 
 1034      7400
 1035              	.LASF22:
 1036 0283 73656564 		.ascii	"seed\000"
 1036      00
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\ccDJFnPZ.s 			page 31


 1037              	.LASF23:
 1038 0288 4352435F 		.ascii	"CRC_Security_ReadCRC\000"
 1038      53656375 
 1038      72697479 
 1038      5F526561 
 1038      64435243 
 1039              	.LASF4:
 1040 029d 6C6F6E67 		.ascii	"long int\000"
 1040      20696E74 
 1040      00
 1041              	.LASF32:
 1042 02a6 656E6162 		.ascii	"enableState\000"
 1042      6C655374 
 1042      61746500 
 1043              	.LASF0:
 1044 02b2 7369676E 		.ascii	"signed char\000"
 1044      65642063 
 1044      68617200 
 1045              	.LASF17:
 1046 02be 4352435F 		.ascii	"CRC_Security_Enable\000"
 1046      53656375 
 1046      72697479 
 1046      5F456E61 
 1046      626C6500 
 1047              	.LASF30:
 1048 02d2 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CRC_Security.c\000"
 1048      6E657261 
 1048      7465645F 
 1048      536F7572 
 1048      63655C50 
 1049              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
