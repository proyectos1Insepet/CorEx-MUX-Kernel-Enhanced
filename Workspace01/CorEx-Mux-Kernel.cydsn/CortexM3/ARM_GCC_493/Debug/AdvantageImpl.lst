ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"AdvantageImpl.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.AcquirePumpStateResponse,"ax",%progbits
  19              		.align	2
  20              		.global	AcquirePumpStateResponse
  21              		.thumb
  22              		.thumb_func
  23              		.type	AcquirePumpStateResponse, %function
  24              	AcquirePumpStateResponse:
  25              	.LFB63:
  26              		.file 1 ".\\AdvantageImpl.c"
   1:.\AdvantageImpl.c **** /* ========================================
   2:.\AdvantageImpl.c ****  *
   3:.\AdvantageImpl.c ****  * Copyright INSEPET SISTEMAS, 2016
   4:.\AdvantageImpl.c ****  * All Rights Reserved
   5:.\AdvantageImpl.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\AdvantageImpl.c ****  *
   7:.\AdvantageImpl.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\AdvantageImpl.c ****  * WHICH IS THE PROPERTY OF your company.
   9:.\AdvantageImpl.c ****  *
  10:.\AdvantageImpl.c ****  * ========================================
  11:.\AdvantageImpl.c **** @Created By: HIJH
  12:.\AdvantageImpl.c **** @Date: Novembre de 2016
  13:.\AdvantageImpl.c **** */
  14:.\AdvantageImpl.c **** 
  15:.\AdvantageImpl.c **** #include <project.h>
  16:.\AdvantageImpl.c **** #include "GlobalDefinitions.h"
  17:.\AdvantageImpl.c **** #include "SinkManager.h"
  18:.\AdvantageImpl.c **** #include "SinkObservables.h"
  19:.\AdvantageImpl.c **** #include "UARTManager.h"
  20:.\AdvantageImpl.c **** #include "Display.h"
  21:.\AdvantageImpl.c **** #include "Dispenser.h"
  22:.\AdvantageImpl.c **** #include "Eeprom.h"
  23:.\AdvantageImpl.c **** #include "RFLink.h"
  24:.\AdvantageImpl.c **** #include "Printer.h"
  25:.\AdvantageImpl.c **** #include "Rtc.h"
  26:.\AdvantageImpl.c **** 
  27:.\AdvantageImpl.c **** #ifdef ADVANTAGE_PROTOCOL
  28:.\AdvantageImpl.c **** 
  29:.\AdvantageImpl.c **** uint8_t FindLRC(char8 *_pbuffer);
  30:.\AdvantageImpl.c **** uint8_t GetLRC(char8 *_pbuffer);
  31:.\AdvantageImpl.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 2


  32:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  33:.\AdvantageImpl.c **** //////////////////////                 BLOCK OF AVAILABLE RESPONSE HANDLERS
  34:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  35:.\AdvantageImpl.c **** 
  36:.\AdvantageImpl.c **** void AdvantageActivateProgramming(LPVOID pparam);
  37:.\AdvantageImpl.c **** extern PNEARDISPENSERACTIVATEPROGRAMMING _g_ptractprogramming;
  38:.\AdvantageImpl.c **** 
  39:.\AdvantageImpl.c **** //@Created By: HIJH
  40:.\AdvantageImpl.c **** //@Date: Septembre de 2016
  41:.\AdvantageImpl.c **** //Updates the pump state into the pump structure
  42:.\AdvantageImpl.c **** void AcquirePumpStateResponse(void *pparam)
  43:.\AdvantageImpl.c **** {
  27              		.loc 1 43 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 84B0     		sub	sp, sp, #16
  36              		.cfi_def_cfa_offset 24
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
  44:.\AdvantageImpl.c ****     PPUMPTRANSACTIONJOBCONTEXTPTR pjob = (PPUMPTRANSACTIONJOBCONTEXTPTR)pparam;
  40              		.loc 1 44 0
  41 0008 7B68     		ldr	r3, [r7, #4]
  42 000a FB60     		str	r3, [r7, #12]
  45:.\AdvantageImpl.c ****     if(pjob)
  43              		.loc 1 45 0
  44 000c FB68     		ldr	r3, [r7, #12]
  45 000e 002B     		cmp	r3, #0
  46 0010 4ED0     		beq	.L1
  47              	.LBB2:
  46:.\AdvantageImpl.c ****     {
  47:.\AdvantageImpl.c ****         uint8 prevstate = pjob->_ppump->_pumpstate;
  48              		.loc 1 47 0
  49 0012 FB68     		ldr	r3, [r7, #12]
  50 0014 DB69     		ldr	r3, [r3, #28]
  51 0016 9B78     		ldrb	r3, [r3, #2]
  52 0018 FB72     		strb	r3, [r7, #11]
  48:.\AdvantageImpl.c ****         pjob->_ppump->_pumpstate = ((pjob->_ppump->_rxbuffer[0x00] & 0xF0) >> 4);
  53              		.loc 1 48 0
  54 001a FB68     		ldr	r3, [r7, #12]
  55 001c DB69     		ldr	r3, [r3, #28]
  56 001e FA68     		ldr	r2, [r7, #12]
  57 0020 D269     		ldr	r2, [r2, #28]
  58 0022 92F8A021 		ldrb	r2, [r2, #416]	@ zero_extendqisi2
  59 0026 1209     		lsrs	r2, r2, #4
  60 0028 D2B2     		uxtb	r2, r2
  61 002a 9A70     		strb	r2, [r3, #2]
  49:.\AdvantageImpl.c ****         if(pjob->_ppump->PumpValidState(pjob->_ppump))
  62              		.loc 1 49 0
  63 002c FB68     		ldr	r3, [r7, #12]
  64 002e DB69     		ldr	r3, [r3, #28]
  65 0030 D3F8603B 		ldr	r3, [r3, #2912]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 3


  66 0034 FA68     		ldr	r2, [r7, #12]
  67 0036 D269     		ldr	r2, [r2, #28]
  68 0038 1046     		mov	r0, r2
  69 003a 9847     		blx	r3
  70 003c 0346     		mov	r3, r0
  71 003e 002B     		cmp	r3, #0
  72 0040 04D0     		beq	.L3
  50:.\AdvantageImpl.c ****             pjob->_ppump->_transhealth = _PUMP_OK_;
  73              		.loc 1 50 0
  74 0042 FB68     		ldr	r3, [r7, #12]
  75 0044 DB69     		ldr	r3, [r3, #28]
  76 0046 0122     		movs	r2, #1
  77 0048 1A76     		strb	r2, [r3, #24]
  78 004a 07E0     		b	.L4
  79              	.L3:
  51:.\AdvantageImpl.c ****         else
  52:.\AdvantageImpl.c ****         {
  53:.\AdvantageImpl.c ****             pjob->_ppump->_transhealth = _PUMP_FAIL_;
  80              		.loc 1 53 0
  81 004c FB68     		ldr	r3, [r7, #12]
  82 004e DB69     		ldr	r3, [r3, #28]
  83 0050 0222     		movs	r2, #2
  84 0052 1A76     		strb	r2, [r3, #24]
  54:.\AdvantageImpl.c ****             pjob->_ppump->_pumpstate = prevstate;
  85              		.loc 1 54 0
  86 0054 FB68     		ldr	r3, [r7, #12]
  87 0056 DB69     		ldr	r3, [r3, #28]
  88 0058 FA7A     		ldrb	r2, [r7, #11]
  89 005a 9A70     		strb	r2, [r3, #2]
  90              	.L4:
  55:.\AdvantageImpl.c ****         }
  56:.\AdvantageImpl.c ****         
  57:.\AdvantageImpl.c ****         if(pjob->_ppump->_pumpstate == PUMP_CALLING)
  91              		.loc 1 57 0
  92 005c FB68     		ldr	r3, [r7, #12]
  93 005e DB69     		ldr	r3, [r3, #28]
  94 0060 9B78     		ldrb	r3, [r3, #2]
  95 0062 DBB2     		uxtb	r3, r3
  96 0064 072B     		cmp	r3, #7
  97 0066 03D1     		bne	.L5
  58:.\AdvantageImpl.c ****             pjob->_ppump->_pumplocked = false;
  98              		.loc 1 58 0
  99 0068 FB68     		ldr	r3, [r7, #12]
 100 006a DB69     		ldr	r3, [r3, #28]
 101 006c 0022     		movs	r2, #0
 102 006e 5A72     		strb	r2, [r3, #9]
 103              	.L5:
  59:.\AdvantageImpl.c ****         
  60:.\AdvantageImpl.c ****         if((pjob->_ppump->_pumpstate == PUMP_IDLE || pjob->_ppump->_pumpstate == PUMP_CALLING) && 
 104              		.loc 1 60 0
 105 0070 FB68     		ldr	r3, [r7, #12]
 106 0072 DB69     		ldr	r3, [r3, #28]
 107 0074 9B78     		ldrb	r3, [r3, #2]
 108 0076 DBB2     		uxtb	r3, r3
 109 0078 062B     		cmp	r3, #6
 110 007a 05D0     		beq	.L6
 111              		.loc 1 60 0 is_stmt 0 discriminator 2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 4


 112 007c FB68     		ldr	r3, [r7, #12]
 113 007e DB69     		ldr	r3, [r3, #28]
 114 0080 9B78     		ldrb	r3, [r3, #2]
 115 0082 DBB2     		uxtb	r3, r3
 116 0084 072B     		cmp	r3, #7
 117 0086 0FD1     		bne	.L7
 118              	.L6:
 119              		.loc 1 60 0 discriminator 3
 120 0088 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 121 008a 0B2B     		cmp	r3, #11
 122 008c 08D0     		beq	.L8
  61:.\AdvantageImpl.c ****             (prevstate == PUMP_FEOT || prevstate == PUMP_PEOT || prevstate == PUMP_BUSY || prevstat
 123              		.loc 1 61 0 is_stmt 1
 124 008e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 125 0090 0A2B     		cmp	r3, #10
 126 0092 05D0     		beq	.L8
 127              		.loc 1 61 0 is_stmt 0 discriminator 1
 128 0094 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 129 0096 092B     		cmp	r3, #9
 130 0098 02D0     		beq	.L8
 131              		.loc 1 61 0 discriminator 2
 132 009a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 133 009c 082B     		cmp	r3, #8
 134 009e 03D1     		bne	.L7
 135              	.L8:
  62:.\AdvantageImpl.c ****             pjob->_ppump->_pumprftransstate = RF_IDLE;
 136              		.loc 1 62 0 is_stmt 1
 137 00a0 FB68     		ldr	r3, [r7, #12]
 138 00a2 DB69     		ldr	r3, [r3, #28]
 139 00a4 0822     		movs	r2, #8
 140 00a6 1A73     		strb	r2, [r3, #12]
 141              	.L7:
  63:.\AdvantageImpl.c ****         
  64:.\AdvantageImpl.c ****         pjob->_ppump->_acquiringstate = false;
 142              		.loc 1 64 0
 143 00a8 FB68     		ldr	r3, [r7, #12]
 144 00aa DB69     		ldr	r3, [r3, #28]
 145 00ac 0022     		movs	r2, #0
 146 00ae 5A71     		strb	r2, [r3, #5]
 147              	.L1:
 148              	.LBE2:
  65:.\AdvantageImpl.c ****     }
  66:.\AdvantageImpl.c **** }
 149              		.loc 1 66 0
 150 00b0 1037     		adds	r7, r7, #16
 151              		.cfi_def_cfa_offset 8
 152 00b2 BD46     		mov	sp, r7
 153              		.cfi_def_cfa_register 13
 154              		@ sp needed
 155 00b4 80BD     		pop	{r7, pc}
 156              		.cfi_endproc
 157              	.LFE63:
 158              		.size	AcquirePumpStateResponse, .-AcquirePumpStateResponse
 159 00b6 00BF     		.section	.text.AcquireDatatoPumpResponse,"ax",%progbits
 160              		.align	2
 161              		.global	AcquireDatatoPumpResponse
 162              		.thumb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 5


 163              		.thumb_func
 164              		.type	AcquireDatatoPumpResponse, %function
 165              	AcquireDatatoPumpResponse:
 166              	.LFB64:
  67:.\AdvantageImpl.c **** 
  68:.\AdvantageImpl.c **** //@Created By: HIJH
  69:.\AdvantageImpl.c **** //@Date: Septembre de 2016
  70:.\AdvantageImpl.c **** //Validates the response from the pump previous batch transfer (0xDp)
  71:.\AdvantageImpl.c **** void AcquireDatatoPumpResponse(void *pparam)
  72:.\AdvantageImpl.c **** {
 167              		.loc 1 72 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 16
 170              		@ frame_needed = 1, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172 0000 80B4     		push	{r7}
 173              		.cfi_def_cfa_offset 4
 174              		.cfi_offset 7, -4
 175 0002 85B0     		sub	sp, sp, #20
 176              		.cfi_def_cfa_offset 24
 177 0004 00AF     		add	r7, sp, #0
 178              		.cfi_def_cfa_register 7
 179 0006 7860     		str	r0, [r7, #4]
  73:.\AdvantageImpl.c ****     PPUMPTRANSACTIONJOBCONTEXTPTR pjob = (PPUMPTRANSACTIONJOBCONTEXTPTR)pparam;
 180              		.loc 1 73 0
 181 0008 7B68     		ldr	r3, [r7, #4]
 182 000a FB60     		str	r3, [r7, #12]
  74:.\AdvantageImpl.c ****     if(pjob)
 183              		.loc 1 74 0
 184 000c FB68     		ldr	r3, [r7, #12]
 185 000e 002B     		cmp	r3, #0
 186 0010 15D0     		beq	.L9
  75:.\AdvantageImpl.c ****     {
  76:.\AdvantageImpl.c ****         if((0x0F & pjob->_ppump->_pumpid) == (pjob->_ppump->_rxbuffer[0x00] & 0x0F))
 187              		.loc 1 76 0
 188 0012 FB68     		ldr	r3, [r7, #12]
 189 0014 DB69     		ldr	r3, [r3, #28]
 190 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 191 0018 1A46     		mov	r2, r3
 192 001a FB68     		ldr	r3, [r7, #12]
 193 001c DB69     		ldr	r3, [r3, #28]
 194 001e 93F8A031 		ldrb	r3, [r3, #416]	@ zero_extendqisi2
 195 0022 5340     		eors	r3, r3, r2
 196 0024 03F00F03 		and	r3, r3, #15
 197 0028 002B     		cmp	r3, #0
 198 002a 08D1     		bne	.L9
  77:.\AdvantageImpl.c ****             pjob->_ppump->_pumpstate = ((pjob->_ppump->_rxbuffer[0x00] >> 4)& 0x0F);
 199              		.loc 1 77 0
 200 002c FB68     		ldr	r3, [r7, #12]
 201 002e DB69     		ldr	r3, [r3, #28]
 202 0030 FA68     		ldr	r2, [r7, #12]
 203 0032 D269     		ldr	r2, [r2, #28]
 204 0034 92F8A021 		ldrb	r2, [r2, #416]	@ zero_extendqisi2
 205 0038 1209     		lsrs	r2, r2, #4
 206 003a D2B2     		uxtb	r2, r2
 207 003c 9A70     		strb	r2, [r3, #2]
 208              	.L9:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 6


  78:.\AdvantageImpl.c ****     }
  79:.\AdvantageImpl.c **** }
 209              		.loc 1 79 0
 210 003e 1437     		adds	r7, r7, #20
 211              		.cfi_def_cfa_offset 4
 212 0040 BD46     		mov	sp, r7
 213              		.cfi_def_cfa_register 13
 214              		@ sp needed
 215 0042 5DF8047B 		ldr	r7, [sp], #4
 216              		.cfi_restore 7
 217              		.cfi_def_cfa_offset 0
 218 0046 7047     		bx	lr
 219              		.cfi_endproc
 220              	.LFE64:
 221              		.size	AcquireDatatoPumpResponse, .-AcquireDatatoPumpResponse
 222              		.section	.text.ProcessPumpRTMoneyRequest,"ax",%progbits
 223              		.align	2
 224              		.global	ProcessPumpRTMoneyRequest
 225              		.thumb
 226              		.thumb_func
 227              		.type	ProcessPumpRTMoneyRequest, %function
 228              	ProcessPumpRTMoneyRequest:
 229              	.LFB65:
  80:.\AdvantageImpl.c **** 
  81:.\AdvantageImpl.c **** void ProcessPumpRTMoneyRequest(void *pparam)
  82:.\AdvantageImpl.c **** {
 230              		.loc 1 82 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 16
 233              		@ frame_needed = 1, uses_anonymous_args = 0
 234 0000 90B5     		push	{r4, r7, lr}
 235              		.cfi_def_cfa_offset 12
 236              		.cfi_offset 4, -12
 237              		.cfi_offset 7, -8
 238              		.cfi_offset 14, -4
 239 0002 85B0     		sub	sp, sp, #20
 240              		.cfi_def_cfa_offset 32
 241 0004 00AF     		add	r7, sp, #0
 242              		.cfi_def_cfa_register 7
 243 0006 7860     		str	r0, [r7, #4]
  83:.\AdvantageImpl.c ****     PPUMPTRANSACTIONJOBCONTEXTPTR pjob = (PPUMPTRANSACTIONJOBCONTEXTPTR)pparam;
 244              		.loc 1 83 0
 245 0008 7B68     		ldr	r3, [r7, #4]
 246 000a FB60     		str	r3, [r7, #12]
  84:.\AdvantageImpl.c ****     if(pjob)
 247              		.loc 1 84 0
 248 000c FB68     		ldr	r3, [r7, #12]
 249 000e 002B     		cmp	r3, #0
 250 0010 63D0     		beq	.L11
  85:.\AdvantageImpl.c ****     {
  86:.\AdvantageImpl.c ****         //Bytes from index 0 to 7 are the digits for the Real Time Money Data in BCD format
  87:.\AdvantageImpl.c ****         pjob->_ppump->_rxbuffer[0x00] = (pjob->_ppump->_rxbuffer[0x00] & 0x0F);
 251              		.loc 1 87 0
 252 0012 FB68     		ldr	r3, [r7, #12]
 253 0014 DB69     		ldr	r3, [r3, #28]
 254 0016 FA68     		ldr	r2, [r7, #12]
 255 0018 D269     		ldr	r2, [r2, #28]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 7


 256 001a 92F8A021 		ldrb	r2, [r2, #416]	@ zero_extendqisi2
 257 001e 02F00F02 		and	r2, r2, #15
 258 0022 D2B2     		uxtb	r2, r2
 259 0024 83F8A021 		strb	r2, [r3, #416]
  88:.\AdvantageImpl.c ****         pjob->_ppump->_rxbuffer[0x01] = (pjob->_ppump->_rxbuffer[0x01] & 0x0F);
 260              		.loc 1 88 0
 261 0028 FB68     		ldr	r3, [r7, #12]
 262 002a DB69     		ldr	r3, [r3, #28]
 263 002c FA68     		ldr	r2, [r7, #12]
 264 002e D269     		ldr	r2, [r2, #28]
 265 0030 92F8A121 		ldrb	r2, [r2, #417]	@ zero_extendqisi2
 266 0034 02F00F02 		and	r2, r2, #15
 267 0038 D2B2     		uxtb	r2, r2
 268 003a 83F8A121 		strb	r2, [r3, #417]
  89:.\AdvantageImpl.c ****         pjob->_ppump->_rxbuffer[0x02] = (pjob->_ppump->_rxbuffer[0x02] & 0x0F);
 269              		.loc 1 89 0
 270 003e FB68     		ldr	r3, [r7, #12]
 271 0040 DB69     		ldr	r3, [r3, #28]
 272 0042 FA68     		ldr	r2, [r7, #12]
 273 0044 D269     		ldr	r2, [r2, #28]
 274 0046 92F8A221 		ldrb	r2, [r2, #418]	@ zero_extendqisi2
 275 004a 02F00F02 		and	r2, r2, #15
 276 004e D2B2     		uxtb	r2, r2
 277 0050 83F8A221 		strb	r2, [r3, #418]
  90:.\AdvantageImpl.c ****         pjob->_ppump->_rxbuffer[0x03] = (pjob->_ppump->_rxbuffer[0x03] & 0x0F);
 278              		.loc 1 90 0
 279 0054 FB68     		ldr	r3, [r7, #12]
 280 0056 DB69     		ldr	r3, [r3, #28]
 281 0058 FA68     		ldr	r2, [r7, #12]
 282 005a D269     		ldr	r2, [r2, #28]
 283 005c 92F8A321 		ldrb	r2, [r2, #419]	@ zero_extendqisi2
 284 0060 02F00F02 		and	r2, r2, #15
 285 0064 D2B2     		uxtb	r2, r2
 286 0066 83F8A321 		strb	r2, [r3, #419]
  91:.\AdvantageImpl.c ****         pjob->_ppump->_rxbuffer[0x04] = (pjob->_ppump->_rxbuffer[0x04] & 0x0F);
 287              		.loc 1 91 0
 288 006a FB68     		ldr	r3, [r7, #12]
 289 006c DB69     		ldr	r3, [r3, #28]
 290 006e FA68     		ldr	r2, [r7, #12]
 291 0070 D269     		ldr	r2, [r2, #28]
 292 0072 92F8A421 		ldrb	r2, [r2, #420]	@ zero_extendqisi2
 293 0076 02F00F02 		and	r2, r2, #15
 294 007a D2B2     		uxtb	r2, r2
 295 007c 83F8A421 		strb	r2, [r3, #420]
  92:.\AdvantageImpl.c ****         pjob->_ppump->_rxbuffer[0x05] = (pjob->_ppump->_rxbuffer[0x05] & 0x0F);
 296              		.loc 1 92 0
 297 0080 FB68     		ldr	r3, [r7, #12]
 298 0082 DB69     		ldr	r3, [r3, #28]
 299 0084 FA68     		ldr	r2, [r7, #12]
 300 0086 D269     		ldr	r2, [r2, #28]
 301 0088 92F8A521 		ldrb	r2, [r2, #421]	@ zero_extendqisi2
 302 008c 02F00F02 		and	r2, r2, #15
 303 0090 D2B2     		uxtb	r2, r2
 304 0092 83F8A521 		strb	r2, [r3, #421]
  93:.\AdvantageImpl.c ****         pjob->_ppump->_rxbuffer[0x06] = (pjob->_ppump->_rxbuffer[0x06] & 0x0F);
 305              		.loc 1 93 0
 306 0096 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 8


 307 0098 DB69     		ldr	r3, [r3, #28]
 308 009a FA68     		ldr	r2, [r7, #12]
 309 009c D269     		ldr	r2, [r2, #28]
 310 009e 92F8A621 		ldrb	r2, [r2, #422]	@ zero_extendqisi2
 311 00a2 02F00F02 		and	r2, r2, #15
 312 00a6 D2B2     		uxtb	r2, r2
 313 00a8 83F8A621 		strb	r2, [r3, #422]
  94:.\AdvantageImpl.c ****         pjob->_ppump->_rxbuffer[0x07] = (pjob->_ppump->_rxbuffer[0x07] & 0x0F);
 314              		.loc 1 94 0
 315 00ac FB68     		ldr	r3, [r7, #12]
 316 00ae DB69     		ldr	r3, [r3, #28]
 317 00b0 FA68     		ldr	r2, [r7, #12]
 318 00b2 D269     		ldr	r2, [r2, #28]
 319 00b4 92F8A721 		ldrb	r2, [r2, #423]	@ zero_extendqisi2
 320 00b8 02F00F02 		and	r2, r2, #15
 321 00bc D2B2     		uxtb	r2, r2
 322 00be 83F8A721 		strb	r2, [r3, #423]
  95:.\AdvantageImpl.c ****         pjob->_ppump->_rtmoneyamount = LSDBCDBUFF2HEX(PBYTECAST(&pjob->_ppump->_rxbuffer[0x00]), 0x
 323              		.loc 1 95 0
 324 00c2 FB68     		ldr	r3, [r7, #12]
 325 00c4 DC69     		ldr	r4, [r3, #28]
 326 00c6 FB68     		ldr	r3, [r7, #12]
 327 00c8 DB69     		ldr	r3, [r3, #28]
 328 00ca 03F5D073 		add	r3, r3, #416
 329 00ce 1846     		mov	r0, r3
 330 00d0 0821     		movs	r1, #8
 331 00d2 FFF7FEFF 		bl	LSDBCDBUFF2HEX
 332 00d6 0346     		mov	r3, r0
 333 00d8 2361     		str	r3, [r4, #16]
 334              	.L11:
  96:.\AdvantageImpl.c ****     }
  97:.\AdvantageImpl.c **** }
 335              		.loc 1 97 0
 336 00da 1437     		adds	r7, r7, #20
 337              		.cfi_def_cfa_offset 12
 338 00dc BD46     		mov	sp, r7
 339              		.cfi_def_cfa_register 13
 340              		@ sp needed
 341 00de 90BD     		pop	{r4, r7, pc}
 342              		.cfi_endproc
 343              	.LFE65:
 344              		.size	ProcessPumpRTMoneyRequest, .-ProcessPumpRTMoneyRequest
 345              		.section	.text.ProcessPumpTransactionData,"ax",%progbits
 346              		.align	2
 347              		.global	ProcessPumpTransactionData
 348              		.thumb
 349              		.thumb_func
 350              		.type	ProcessPumpTransactionData, %function
 351              	ProcessPumpTransactionData:
 352              	.LFB66:
  98:.\AdvantageImpl.c **** 
  99:.\AdvantageImpl.c **** void ProcessPumpTransactionData(void *pparam)
 100:.\AdvantageImpl.c **** {
 353              		.loc 1 100 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 24
 356              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 9


 357 0000 B0B5     		push	{r4, r5, r7, lr}
 358              		.cfi_def_cfa_offset 16
 359              		.cfi_offset 4, -16
 360              		.cfi_offset 5, -12
 361              		.cfi_offset 7, -8
 362              		.cfi_offset 14, -4
 363 0002 86B0     		sub	sp, sp, #24
 364              		.cfi_def_cfa_offset 40
 365 0004 00AF     		add	r7, sp, #0
 366              		.cfi_def_cfa_register 7
 367 0006 7860     		str	r0, [r7, #4]
 101:.\AdvantageImpl.c ****     PPUMPTRANSACTIONJOBCONTEXTPTR pjob = (PPUMPTRANSACTIONJOBCONTEXTPTR)pparam;
 368              		.loc 1 101 0
 369 0008 7B68     		ldr	r3, [r7, #4]
 370 000a 7B61     		str	r3, [r7, #20]
 102:.\AdvantageImpl.c ****     if(pjob)
 371              		.loc 1 102 0
 372 000c 7B69     		ldr	r3, [r7, #20]
 373 000e 002B     		cmp	r3, #0
 374 0010 00F0C087 		beq	.L13
 375              	.LBB3:
 103:.\AdvantageImpl.c ****     {
 104:.\AdvantageImpl.c ****         {
 105:.\AdvantageImpl.c ****             uint8 strmlrc = FindLRC(pjob->_ppump->_rxbuffer);
 376              		.loc 1 105 0
 377 0014 7B69     		ldr	r3, [r7, #20]
 378 0016 DB69     		ldr	r3, [r3, #28]
 379 0018 03F5D073 		add	r3, r3, #416
 380 001c 1846     		mov	r0, r3
 381 001e FFF7FEFF 		bl	FindLRC
 382 0022 0346     		mov	r3, r0
 383 0024 FB74     		strb	r3, [r7, #19]
 106:.\AdvantageImpl.c ****             uint8 locallrc = GetLRC(pjob->_ppump->_rxbuffer);
 384              		.loc 1 106 0
 385 0026 7B69     		ldr	r3, [r7, #20]
 386 0028 DB69     		ldr	r3, [r3, #28]
 387 002a 03F5D073 		add	r3, r3, #416
 388 002e 1846     		mov	r0, r3
 389 0030 FFF7FEFF 		bl	GetLRC
 390 0034 0346     		mov	r3, r0
 391 0036 BB74     		strb	r3, [r7, #18]
 107:.\AdvantageImpl.c ****             
 108:.\AdvantageImpl.c ****             if(strmlrc != locallrc && pjob->_reenqueuecounter < _MAX_RETRIES_)
 392              		.loc 1 108 0
 393 0038 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 394 003a BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 395 003c 9A42     		cmp	r2, r3
 396 003e 10D0     		beq	.L15
 397              		.loc 1 108 0 is_stmt 0 discriminator 1
 398 0040 7B69     		ldr	r3, [r7, #20]
 399 0042 5B78     		ldrb	r3, [r3, #1]
 400 0044 DBB2     		uxtb	r3, r3
 401 0046 132B     		cmp	r3, #19
 402 0048 0BD8     		bhi	.L15
 109:.\AdvantageImpl.c ****             {
 110:.\AdvantageImpl.c ****                 pjob->_reenqueuecounter++;
 403              		.loc 1 110 0 is_stmt 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 10


 404 004a 7B69     		ldr	r3, [r7, #20]
 405 004c 5B78     		ldrb	r3, [r3, #1]
 406 004e DBB2     		uxtb	r3, r3
 407 0050 0133     		adds	r3, r3, #1
 408 0052 DAB2     		uxtb	r2, r3
 409 0054 7B69     		ldr	r3, [r7, #20]
 410 0056 5A70     		strb	r2, [r3, #1]
 111:.\AdvantageImpl.c ****                 pjob->_reenqueue = true;
 411              		.loc 1 111 0
 412 0058 7B69     		ldr	r3, [r7, #20]
 413 005a 0122     		movs	r2, #1
 414 005c 1A70     		strb	r2, [r3]
 112:.\AdvantageImpl.c ****                 return;
 415              		.loc 1 112 0
 416 005e 00F099BF 		b	.L13
 417              	.L15:
 113:.\AdvantageImpl.c ****             }
 114:.\AdvantageImpl.c ****             pjob->_reenqueue = false;
 418              		.loc 1 114 0
 419 0062 7B69     		ldr	r3, [r7, #20]
 420 0064 0022     		movs	r2, #0
 421 0066 1A70     		strb	r2, [r3]
 115:.\AdvantageImpl.c **** 
 116:.\AdvantageImpl.c ****             if(_g_dispenserlayoutinfo._displaydigitsmode == 0x06)
 422              		.loc 1 116 0
 423 0068 744B     		ldr	r3, .L52
 424 006a 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 425 006c 062B     		cmp	r3, #6
 426 006e 40F07783 		bne	.L16
 117:.\AdvantageImpl.c ****             {            
 118:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x09] = (pjob->_ppump->_rxbuffer[0x09] & 0x0F);//Hose id
 427              		.loc 1 118 0
 428 0072 7B69     		ldr	r3, [r7, #20]
 429 0074 DB69     		ldr	r3, [r3, #28]
 430 0076 7A69     		ldr	r2, [r7, #20]
 431 0078 D269     		ldr	r2, [r2, #28]
 432 007a 92F8A921 		ldrb	r2, [r2, #425]	@ zero_extendqisi2
 433 007e 02F00F02 		and	r2, r2, #15
 434 0082 D2B2     		uxtb	r2, r2
 435 0084 83F8A921 		strb	r2, [r3, #425]
 119:.\AdvantageImpl.c ****                 pjob->_ppump->_authorizationinfo._hoseid = pjob->_ppump->_rxbuffer[0x09];//Hose id
 436              		.loc 1 119 0
 437 0088 7B69     		ldr	r3, [r7, #20]
 438 008a DB69     		ldr	r3, [r3, #28]
 439 008c 7A69     		ldr	r2, [r7, #20]
 440 008e D269     		ldr	r2, [r2, #28]
 441 0090 92F8A921 		ldrb	r2, [r2, #425]	@ zero_extendqisi2
 442 0094 83F8AA2B 		strb	r2, [r3, #2986]
 120:.\AdvantageImpl.c ****                 
 121:.\AdvantageImpl.c ****                 //In this position is located the payment type (CREDIT: 0x0E , CASH:0x0D)
 122:.\AdvantageImpl.c ****                 if(pjob->_ppump->_trasactionbuffer[0x00] == 0x0D)
 443              		.loc 1 122 0
 444 0098 7B69     		ldr	r3, [r7, #20]
 445 009a DB69     		ldr	r3, [r3, #28]
 446 009c 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 447 00a0 0D2B     		cmp	r3, #13
 448 00a2 40F0CD80 		bne	.L17
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 11


 449              	.LBB4:
 123:.\AdvantageImpl.c ****                 {
 124:.\AdvantageImpl.c ****                     I2CBusLock();
 450              		.loc 1 124 0
 451 00a6 FFF7FEFF 		bl	I2CBusLock
 125:.\AdvantageImpl.c ****                     ClearEepromBuffer();
 452              		.loc 1 125 0
 453 00aa FFF7FEFF 		bl	ClearEepromBuffer
 126:.\AdvantageImpl.c ****                     uint16 eeprompage = DispenserGetEepromPPUPageFromPumpID(pjob->_ppump->_pumpid);
 454              		.loc 1 126 0
 455 00ae 7B69     		ldr	r3, [r7, #20]
 456 00b0 DB69     		ldr	r3, [r3, #28]
 457 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 458 00b4 1846     		mov	r0, r3
 459 00b6 FFF7FEFF 		bl	DispenserGetEepromPPUPageFromPumpID
 460 00ba 0346     		mov	r3, r0
 461 00bc 3B82     		strh	r3, [r7, #16]	@ movhi
 127:.\AdvantageImpl.c ****                     LoadEepromPage(eeprompage);
 462              		.loc 1 127 0
 463 00be 3B8A     		ldrh	r3, [r7, #16]
 464 00c0 1846     		mov	r0, r3
 465 00c2 FFF7FEFF 		bl	LoadEepromPage
 128:.\AdvantageImpl.c ****                     switch(pjob->_ppump->_authorizationinfo._hoseid)
 466              		.loc 1 128 0
 467 00c6 7B69     		ldr	r3, [r7, #20]
 468 00c8 DB69     		ldr	r3, [r3, #28]
 469 00ca 93F8AA3B 		ldrb	r3, [r3, #2986]
 470 00ce DBB2     		uxtb	r3, r3
 471 00d0 032B     		cmp	r3, #3
 472 00d2 65D8     		bhi	.L18
 473 00d4 01A2     		adr	r2, .L20
 474 00d6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 475 00da 00BF     		.p2align 2
 476              	.L20:
 477 00dc ED000000 		.word	.L19+1
 478 00e0 17010000 		.word	.L21+1
 479 00e4 45010000 		.word	.L22+1
 480 00e8 73010000 		.word	.L23+1
 481              		.p2align 1
 482              	.L19:
 129:.\AdvantageImpl.c ****                     {
 130:.\AdvantageImpl.c ****                         case 0x00:
 131:.\AdvantageImpl.c ****                         //Six bytes only since the PPU is constrained to this length
 132:.\AdvantageImpl.c ****                         memcpy(PBYTECAST(&pjob->_ppump->_trasactionbuffer[GetBufferIndexFromDisplay
 483              		.loc 1 132 0
 484 00ec 7B69     		ldr	r3, [r7, #20]
 485 00ee DC69     		ldr	r4, [r3, #28]
 486 00f0 6520     		movs	r0, #101
 487 00f2 FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 488 00f6 0346     		mov	r3, r0
 489 00f8 2033     		adds	r3, r3, #32
 490 00fa 1C44     		add	r4, r4, r3
 491 00fc FFF7FEFF 		bl	GetEepromBuffer
 492 0100 0546     		mov	r5, r0
 493 0102 6520     		movs	r0, #101
 494 0104 FFF7FEFF 		bl	GetBufferLengthFromDisplayID
 495 0108 0346     		mov	r3, r0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 12


 496 010a 2046     		mov	r0, r4
 497 010c 2946     		mov	r1, r5
 498 010e 1A46     		mov	r2, r3
 499 0110 FFF7FEFF 		bl	memcpy
 133:.\AdvantageImpl.c ****                         break;
 500              		.loc 1 133 0
 501 0114 44E0     		b	.L18
 502              	.L21:
 134:.\AdvantageImpl.c ****                         case 0x01:
 135:.\AdvantageImpl.c ****                         //Six bytes only since the PPU is constrained to this length
 136:.\AdvantageImpl.c ****                         memcpy(PBYTECAST(&pjob->_ppump->_trasactionbuffer[GetBufferIndexFromDisplay
 503              		.loc 1 136 0
 504 0116 7B69     		ldr	r3, [r7, #20]
 505 0118 DC69     		ldr	r4, [r3, #28]
 506 011a 6520     		movs	r0, #101
 507 011c FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 508 0120 0346     		mov	r3, r0
 509 0122 2033     		adds	r3, r3, #32
 510 0124 E518     		adds	r5, r4, r3
 511 0126 FFF7FEFF 		bl	GetEepromBuffer
 512 012a 0346     		mov	r3, r0
 513 012c 03F11004 		add	r4, r3, #16
 514 0130 6520     		movs	r0, #101
 515 0132 FFF7FEFF 		bl	GetBufferLengthFromDisplayID
 516 0136 0346     		mov	r3, r0
 517 0138 2846     		mov	r0, r5
 518 013a 2146     		mov	r1, r4
 519 013c 1A46     		mov	r2, r3
 520 013e FFF7FEFF 		bl	memcpy
 137:.\AdvantageImpl.c ****                         break;
 521              		.loc 1 137 0
 522 0142 2DE0     		b	.L18
 523              	.L22:
 138:.\AdvantageImpl.c ****                         case 0x02:
 139:.\AdvantageImpl.c ****                         //Six bytes only since the PPU is constrained to this length
 140:.\AdvantageImpl.c ****                         memcpy(PBYTECAST(&pjob->_ppump->_trasactionbuffer[GetBufferIndexFromDisplay
 524              		.loc 1 140 0
 525 0144 7B69     		ldr	r3, [r7, #20]
 526 0146 DC69     		ldr	r4, [r3, #28]
 527 0148 6520     		movs	r0, #101
 528 014a FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 529 014e 0346     		mov	r3, r0
 530 0150 2033     		adds	r3, r3, #32
 531 0152 E518     		adds	r5, r4, r3
 532 0154 FFF7FEFF 		bl	GetEepromBuffer
 533 0158 0346     		mov	r3, r0
 534 015a 03F12004 		add	r4, r3, #32
 535 015e 6520     		movs	r0, #101
 536 0160 FFF7FEFF 		bl	GetBufferLengthFromDisplayID
 537 0164 0346     		mov	r3, r0
 538 0166 2846     		mov	r0, r5
 539 0168 2146     		mov	r1, r4
 540 016a 1A46     		mov	r2, r3
 541 016c FFF7FEFF 		bl	memcpy
 141:.\AdvantageImpl.c ****                         break;
 542              		.loc 1 141 0
 543 0170 16E0     		b	.L18
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 13


 544              	.L23:
 142:.\AdvantageImpl.c ****                         case 0x03:
 143:.\AdvantageImpl.c ****                         //Six bytes only since the PPU is constrained to this length
 144:.\AdvantageImpl.c ****                         memcpy(PBYTECAST(&pjob->_ppump->_trasactionbuffer[GetBufferIndexFromDisplay
 545              		.loc 1 144 0
 546 0172 7B69     		ldr	r3, [r7, #20]
 547 0174 DC69     		ldr	r4, [r3, #28]
 548 0176 6520     		movs	r0, #101
 549 0178 FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 550 017c 0346     		mov	r3, r0
 551 017e 2033     		adds	r3, r3, #32
 552 0180 E518     		adds	r5, r4, r3
 553 0182 FFF7FEFF 		bl	GetEepromBuffer
 554 0186 0346     		mov	r3, r0
 555 0188 03F13004 		add	r4, r3, #48
 556 018c 6520     		movs	r0, #101
 557 018e FFF7FEFF 		bl	GetBufferLengthFromDisplayID
 558 0192 0346     		mov	r3, r0
 559 0194 2846     		mov	r0, r5
 560 0196 2146     		mov	r1, r4
 561 0198 1A46     		mov	r2, r3
 562 019a FFF7FEFF 		bl	memcpy
 145:.\AdvantageImpl.c ****                         break;
 563              		.loc 1 145 0
 564 019e 00BF     		nop
 565              	.L18:
 146:.\AdvantageImpl.c ****                     }
 147:.\AdvantageImpl.c ****                     I2CBusUnlock();
 566              		.loc 1 147 0
 567 01a0 FFF7FEFF 		bl	I2CBusUnlock
 148:.\AdvantageImpl.c ****                     
 149:.\AdvantageImpl.c ****                     memcpy(PBYTECAST(&pjob->_ppump->_rxbuffer[0x0C]), PBYTECAST(&pjob->_ppump->_tra
 568              		.loc 1 149 0
 569 01a4 7B69     		ldr	r3, [r7, #20]
 570 01a6 DB69     		ldr	r3, [r3, #28]
 571 01a8 03F5D675 		add	r5, r3, #428
 572 01ac 7B69     		ldr	r3, [r7, #20]
 573 01ae DC69     		ldr	r4, [r3, #28]
 574 01b0 6520     		movs	r0, #101
 575 01b2 FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 576 01b6 0346     		mov	r3, r0
 577 01b8 2033     		adds	r3, r3, #32
 578 01ba 2344     		add	r3, r3, r4
 579 01bc 2846     		mov	r0, r5
 580 01be 1946     		mov	r1, r3
 581 01c0 0422     		movs	r2, #4
 582 01c2 FFF7FEFF 		bl	memcpy
 150:.\AdvantageImpl.c ****                     
 151:.\AdvantageImpl.c ****                     //Bytes from index 12 to 17 are the digits for the PPU used for the transaction
 152:.\AdvantageImpl.c ****                     //Digits are in BCD format
 153:.\AdvantageImpl.c ****                     pjob->_ppump->_rxbuffer[0x0C] = (pjob->_ppump->_rxbuffer[0x0C] & 0x0F);
 583              		.loc 1 153 0
 584 01c6 7B69     		ldr	r3, [r7, #20]
 585 01c8 DB69     		ldr	r3, [r3, #28]
 586 01ca 7A69     		ldr	r2, [r7, #20]
 587 01cc D269     		ldr	r2, [r2, #28]
 588 01ce 92F8AC21 		ldrb	r2, [r2, #428]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 14


 589 01d2 02F00F02 		and	r2, r2, #15
 590 01d6 D2B2     		uxtb	r2, r2
 591 01d8 83F8AC21 		strb	r2, [r3, #428]
 154:.\AdvantageImpl.c ****                     pjob->_ppump->_rxbuffer[0x0D] = (pjob->_ppump->_rxbuffer[0x0D] & 0x0F);
 592              		.loc 1 154 0
 593 01dc 7B69     		ldr	r3, [r7, #20]
 594 01de DB69     		ldr	r3, [r3, #28]
 595 01e0 7A69     		ldr	r2, [r7, #20]
 596 01e2 D269     		ldr	r2, [r2, #28]
 597 01e4 92F8AD21 		ldrb	r2, [r2, #429]	@ zero_extendqisi2
 598 01e8 02F00F02 		and	r2, r2, #15
 599 01ec D2B2     		uxtb	r2, r2
 600 01ee 83F8AD21 		strb	r2, [r3, #429]
 155:.\AdvantageImpl.c ****                     pjob->_ppump->_rxbuffer[0x0E] = (pjob->_ppump->_rxbuffer[0x0E] & 0x0F);
 601              		.loc 1 155 0
 602 01f2 7B69     		ldr	r3, [r7, #20]
 603 01f4 DB69     		ldr	r3, [r3, #28]
 604 01f6 7A69     		ldr	r2, [r7, #20]
 605 01f8 D269     		ldr	r2, [r2, #28]
 606 01fa 92F8AE21 		ldrb	r2, [r2, #430]	@ zero_extendqisi2
 607 01fe 02F00F02 		and	r2, r2, #15
 608 0202 D2B2     		uxtb	r2, r2
 609 0204 83F8AE21 		strb	r2, [r3, #430]
 156:.\AdvantageImpl.c ****                     pjob->_ppump->_rxbuffer[0x0F] = (pjob->_ppump->_rxbuffer[0x0F] & 0x0F);
 610              		.loc 1 156 0
 611 0208 7B69     		ldr	r3, [r7, #20]
 612 020a DB69     		ldr	r3, [r3, #28]
 613 020c 7A69     		ldr	r2, [r7, #20]
 614 020e D269     		ldr	r2, [r2, #28]
 615 0210 92F8AF21 		ldrb	r2, [r2, #431]	@ zero_extendqisi2
 616 0214 02F00F02 		and	r2, r2, #15
 617 0218 D2B2     		uxtb	r2, r2
 618 021a 83F8AF21 		strb	r2, [r3, #431]
 157:.\AdvantageImpl.c ****                     pjob->_ppump->_authorizationinfo._price = LSDBCDBUFF2HEX(PBYTECAST(&pjob->_ppum
 619              		.loc 1 157 0
 620 021e 7B69     		ldr	r3, [r7, #20]
 621 0220 DC69     		ldr	r4, [r3, #28]
 622 0222 7B69     		ldr	r3, [r7, #20]
 623 0224 DB69     		ldr	r3, [r3, #28]
 624 0226 03F5D673 		add	r3, r3, #428
 625 022a 1846     		mov	r0, r3
 626 022c 0421     		movs	r1, #4
 627 022e FFF7FEFF 		bl	LSDBCDBUFF2HEX
 628 0232 0346     		mov	r3, r0
 629 0234 9BB2     		uxth	r3, r3
 630 0236 A4F8AC3B 		strh	r3, [r4, #2988]	@ movhi
 631              	.LBE4:
 632 023a 2DE0     		b	.L24
 633              	.L53:
 634              		.align	2
 635              	.L52:
 636 023c 00000000 		.word	_g_dispenserlayoutinfo
 637              	.L17:
 158:.\AdvantageImpl.c ****                     
 159:.\AdvantageImpl.c ****                 }
 160:.\AdvantageImpl.c ****                 else
 161:.\AdvantageImpl.c ****                 {
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 15


 162:.\AdvantageImpl.c ****                     pjob->_ppump->_rxbuffer[0x0C] = (pjob->_ppump->_rxbuffer[0x0C] & 0x0F);
 638              		.loc 1 162 0
 639 0240 7B69     		ldr	r3, [r7, #20]
 640 0242 DB69     		ldr	r3, [r3, #28]
 641 0244 7A69     		ldr	r2, [r7, #20]
 642 0246 D269     		ldr	r2, [r2, #28]
 643 0248 92F8AC21 		ldrb	r2, [r2, #428]	@ zero_extendqisi2
 644 024c 02F00F02 		and	r2, r2, #15
 645 0250 D2B2     		uxtb	r2, r2
 646 0252 83F8AC21 		strb	r2, [r3, #428]
 163:.\AdvantageImpl.c ****                     pjob->_ppump->_rxbuffer[0x0D] = (pjob->_ppump->_rxbuffer[0x0D] & 0x0F);
 647              		.loc 1 163 0
 648 0256 7B69     		ldr	r3, [r7, #20]
 649 0258 DB69     		ldr	r3, [r3, #28]
 650 025a 7A69     		ldr	r2, [r7, #20]
 651 025c D269     		ldr	r2, [r2, #28]
 652 025e 92F8AD21 		ldrb	r2, [r2, #429]	@ zero_extendqisi2
 653 0262 02F00F02 		and	r2, r2, #15
 654 0266 D2B2     		uxtb	r2, r2
 655 0268 83F8AD21 		strb	r2, [r3, #429]
 164:.\AdvantageImpl.c ****                     pjob->_ppump->_rxbuffer[0x0E] = (pjob->_ppump->_rxbuffer[0x0E] & 0x0F);
 656              		.loc 1 164 0
 657 026c 7B69     		ldr	r3, [r7, #20]
 658 026e DB69     		ldr	r3, [r3, #28]
 659 0270 7A69     		ldr	r2, [r7, #20]
 660 0272 D269     		ldr	r2, [r2, #28]
 661 0274 92F8AE21 		ldrb	r2, [r2, #430]	@ zero_extendqisi2
 662 0278 02F00F02 		and	r2, r2, #15
 663 027c D2B2     		uxtb	r2, r2
 664 027e 83F8AE21 		strb	r2, [r3, #430]
 165:.\AdvantageImpl.c ****                     pjob->_ppump->_rxbuffer[0x0F] = (pjob->_ppump->_rxbuffer[0x0F] & 0x0F);
 665              		.loc 1 165 0
 666 0282 7B69     		ldr	r3, [r7, #20]
 667 0284 DB69     		ldr	r3, [r3, #28]
 668 0286 7A69     		ldr	r2, [r7, #20]
 669 0288 D269     		ldr	r2, [r2, #28]
 670 028a 92F8AF21 		ldrb	r2, [r2, #431]	@ zero_extendqisi2
 671 028e 02F00F02 		and	r2, r2, #15
 672 0292 D2B2     		uxtb	r2, r2
 673 0294 83F8AF21 		strb	r2, [r3, #431]
 674              	.L24:
 166:.\AdvantageImpl.c ****                 }
 167:.\AdvantageImpl.c ****                 
 168:.\AdvantageImpl.c ****                 //Bytes from index 19 to 26 are the digits for the fuel volume delivered in the tra
 169:.\AdvantageImpl.c ****                 //Digits are in BCD format
 170:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x11] = (pjob->_ppump->_rxbuffer[0x11] & 0x0F);
 675              		.loc 1 170 0
 676 0298 7B69     		ldr	r3, [r7, #20]
 677 029a DB69     		ldr	r3, [r3, #28]
 678 029c 7A69     		ldr	r2, [r7, #20]
 679 029e D269     		ldr	r2, [r2, #28]
 680 02a0 92F8B121 		ldrb	r2, [r2, #433]	@ zero_extendqisi2
 681 02a4 02F00F02 		and	r2, r2, #15
 682 02a8 D2B2     		uxtb	r2, r2
 683 02aa 83F8B121 		strb	r2, [r3, #433]
 171:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x12] = (pjob->_ppump->_rxbuffer[0x12] & 0x0F);
 684              		.loc 1 171 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 16


 685 02ae 7B69     		ldr	r3, [r7, #20]
 686 02b0 DB69     		ldr	r3, [r3, #28]
 687 02b2 7A69     		ldr	r2, [r7, #20]
 688 02b4 D269     		ldr	r2, [r2, #28]
 689 02b6 92F8B221 		ldrb	r2, [r2, #434]	@ zero_extendqisi2
 690 02ba 02F00F02 		and	r2, r2, #15
 691 02be D2B2     		uxtb	r2, r2
 692 02c0 83F8B221 		strb	r2, [r3, #434]
 172:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x13] = (pjob->_ppump->_rxbuffer[0x13] & 0x0F);
 693              		.loc 1 172 0
 694 02c4 7B69     		ldr	r3, [r7, #20]
 695 02c6 DB69     		ldr	r3, [r3, #28]
 696 02c8 7A69     		ldr	r2, [r7, #20]
 697 02ca D269     		ldr	r2, [r2, #28]
 698 02cc 92F8B321 		ldrb	r2, [r2, #435]	@ zero_extendqisi2
 699 02d0 02F00F02 		and	r2, r2, #15
 700 02d4 D2B2     		uxtb	r2, r2
 701 02d6 83F8B321 		strb	r2, [r3, #435]
 173:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x14] = (pjob->_ppump->_rxbuffer[0x14] & 0x0F);
 702              		.loc 1 173 0
 703 02da 7B69     		ldr	r3, [r7, #20]
 704 02dc DB69     		ldr	r3, [r3, #28]
 705 02de 7A69     		ldr	r2, [r7, #20]
 706 02e0 D269     		ldr	r2, [r2, #28]
 707 02e2 92F8B421 		ldrb	r2, [r2, #436]	@ zero_extendqisi2
 708 02e6 02F00F02 		and	r2, r2, #15
 709 02ea D2B2     		uxtb	r2, r2
 710 02ec 83F8B421 		strb	r2, [r3, #436]
 174:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x15] = (pjob->_ppump->_rxbuffer[0x15] & 0x0F);
 711              		.loc 1 174 0
 712 02f0 7B69     		ldr	r3, [r7, #20]
 713 02f2 DB69     		ldr	r3, [r3, #28]
 714 02f4 7A69     		ldr	r2, [r7, #20]
 715 02f6 D269     		ldr	r2, [r2, #28]
 716 02f8 92F8B521 		ldrb	r2, [r2, #437]	@ zero_extendqisi2
 717 02fc 02F00F02 		and	r2, r2, #15
 718 0300 D2B2     		uxtb	r2, r2
 719 0302 83F8B521 		strb	r2, [r3, #437]
 175:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x16] = (pjob->_ppump->_rxbuffer[0x16] & 0x0F);            
 720              		.loc 1 175 0
 721 0306 7B69     		ldr	r3, [r7, #20]
 722 0308 DB69     		ldr	r3, [r3, #28]
 723 030a 7A69     		ldr	r2, [r7, #20]
 724 030c D269     		ldr	r2, [r2, #28]
 725 030e 92F8B621 		ldrb	r2, [r2, #438]	@ zero_extendqisi2
 726 0312 02F00F02 		and	r2, r2, #15
 727 0316 D2B2     		uxtb	r2, r2
 728 0318 83F8B621 		strb	r2, [r3, #438]
 176:.\AdvantageImpl.c ****                 pjob->_ppump->_authorizationinfo._volumeamount = LSDBCDBUFF2HEX(PBYTECAST(&pjob->_p
 729              		.loc 1 176 0
 730 031c 7B69     		ldr	r3, [r7, #20]
 731 031e DC69     		ldr	r4, [r3, #28]
 732 0320 7B69     		ldr	r3, [r7, #20]
 733 0322 DB69     		ldr	r3, [r3, #28]
 734 0324 03F2B113 		addw	r3, r3, #433
 735 0328 1846     		mov	r0, r3
 736 032a 0621     		movs	r1, #6
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 17


 737 032c FFF7FEFF 		bl	LSDBCDBUFF2HEX
 738 0330 0346     		mov	r3, r0
 739 0332 C4F8B43B 		str	r3, [r4, #2996]
 177:.\AdvantageImpl.c ****                 
 178:.\AdvantageImpl.c ****                 ////////////////////////////////////////////////////////////////////////////////
 179:.\AdvantageImpl.c ****                 ////////////////////////////////////////////////////////////////////////////////
 180:.\AdvantageImpl.c ****                 
 181:.\AdvantageImpl.c ****                 //Bytes from index 28 to 35 are the digits for the money charged to the transaction
 182:.\AdvantageImpl.c ****                 //Digits are in BCD format
 183:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x18] = (pjob->_ppump->_rxbuffer[0x18] & 0x0F);
 740              		.loc 1 183 0
 741 0336 7B69     		ldr	r3, [r7, #20]
 742 0338 DB69     		ldr	r3, [r3, #28]
 743 033a 7A69     		ldr	r2, [r7, #20]
 744 033c D269     		ldr	r2, [r2, #28]
 745 033e 92F8B821 		ldrb	r2, [r2, #440]	@ zero_extendqisi2
 746 0342 02F00F02 		and	r2, r2, #15
 747 0346 D2B2     		uxtb	r2, r2
 748 0348 83F8B821 		strb	r2, [r3, #440]
 184:.\AdvantageImpl.c ****                 
 185:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x19] = (pjob->_ppump->_rxbuffer[0x19] & 0x0F);
 749              		.loc 1 185 0
 750 034c 7B69     		ldr	r3, [r7, #20]
 751 034e DB69     		ldr	r3, [r3, #28]
 752 0350 7A69     		ldr	r2, [r7, #20]
 753 0352 D269     		ldr	r2, [r2, #28]
 754 0354 92F8B921 		ldrb	r2, [r2, #441]	@ zero_extendqisi2
 755 0358 02F00F02 		and	r2, r2, #15
 756 035c D2B2     		uxtb	r2, r2
 757 035e 83F8B921 		strb	r2, [r3, #441]
 186:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x1A] = (pjob->_ppump->_rxbuffer[0x1A] & 0x0F);
 758              		.loc 1 186 0
 759 0362 7B69     		ldr	r3, [r7, #20]
 760 0364 DB69     		ldr	r3, [r3, #28]
 761 0366 7A69     		ldr	r2, [r7, #20]
 762 0368 D269     		ldr	r2, [r2, #28]
 763 036a 92F8BA21 		ldrb	r2, [r2, #442]	@ zero_extendqisi2
 764 036e 02F00F02 		and	r2, r2, #15
 765 0372 D2B2     		uxtb	r2, r2
 766 0374 83F8BA21 		strb	r2, [r3, #442]
 187:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x1B] = (pjob->_ppump->_rxbuffer[0x1B] & 0x0F);
 767              		.loc 1 187 0
 768 0378 7B69     		ldr	r3, [r7, #20]
 769 037a DB69     		ldr	r3, [r3, #28]
 770 037c 7A69     		ldr	r2, [r7, #20]
 771 037e D269     		ldr	r2, [r2, #28]
 772 0380 92F8BB21 		ldrb	r2, [r2, #443]	@ zero_extendqisi2
 773 0384 02F00F02 		and	r2, r2, #15
 774 0388 D2B2     		uxtb	r2, r2
 775 038a 83F8BB21 		strb	r2, [r3, #443]
 188:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x1C] = (pjob->_ppump->_rxbuffer[0x1C] & 0x0F);
 776              		.loc 1 188 0
 777 038e 7B69     		ldr	r3, [r7, #20]
 778 0390 DB69     		ldr	r3, [r3, #28]
 779 0392 7A69     		ldr	r2, [r7, #20]
 780 0394 D269     		ldr	r2, [r2, #28]
 781 0396 92F8BC21 		ldrb	r2, [r2, #444]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 18


 782 039a 02F00F02 		and	r2, r2, #15
 783 039e D2B2     		uxtb	r2, r2
 784 03a0 83F8BC21 		strb	r2, [r3, #444]
 189:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x1D] = (pjob->_ppump->_rxbuffer[0x1D] & 0x0F);
 785              		.loc 1 189 0
 786 03a4 7B69     		ldr	r3, [r7, #20]
 787 03a6 DB69     		ldr	r3, [r3, #28]
 788 03a8 7A69     		ldr	r2, [r7, #20]
 789 03aa D269     		ldr	r2, [r2, #28]
 790 03ac 92F8BD21 		ldrb	r2, [r2, #445]	@ zero_extendqisi2
 791 03b0 02F00F02 		and	r2, r2, #15
 792 03b4 D2B2     		uxtb	r2, r2
 793 03b6 83F8BD21 		strb	r2, [r3, #445]
 190:.\AdvantageImpl.c ****                 //INQUIRY ABOUT THE EXTRA x10 RESULT SINCE THERE IS AN EXTRA 0 IN THE RESPONSE FOR 
 191:.\AdvantageImpl.c ****                 //MEANWHILE DIVIDING BY 10 TO REMOVE THE ZERO.
 192:.\AdvantageImpl.c ****                 pjob->_ppump->_authorizationinfo._presetamount = LSDBCDBUFF2HEX(PBYTECAST(&pjob->_p
 794              		.loc 1 192 0
 795 03ba 7B69     		ldr	r3, [r7, #20]
 796 03bc DC69     		ldr	r4, [r3, #28]
 797 03be 7B69     		ldr	r3, [r7, #20]
 798 03c0 DB69     		ldr	r3, [r3, #28]
 799 03c2 03F5DC73 		add	r3, r3, #440
 800 03c6 1846     		mov	r0, r3
 801 03c8 0621     		movs	r1, #6
 802 03ca FFF7FEFF 		bl	LSDBCDBUFF2HEX
 803 03ce 0346     		mov	r3, r0
 804 03d0 C4F8B03B 		str	r3, [r4, #2992]
 193:.\AdvantageImpl.c ****                     
 194:.\AdvantageImpl.c ****                 ClearRtcBuffer();
 805              		.loc 1 194 0
 806 03d4 FFF7FEFF 		bl	ClearRtcBuffer
 195:.\AdvantageImpl.c ****                 ReadRTC();
 807              		.loc 1 195 0
 808 03d8 FFF7FEFF 		bl	ReadRTC
 196:.\AdvantageImpl.c ****                 //CAREFUL WITH RETURNS BETWEEN THE LOCK/UNLOCK CALLS
 197:.\AdvantageImpl.c ****                 //AND RECURSIVE CALLS THAT WOULD DEADLOCK!
 198:.\AdvantageImpl.c ****                 I2CBusLock();
 809              		.loc 1 198 0
 810 03dc FFF7FEFF 		bl	I2CBusLock
 199:.\AdvantageImpl.c ****             
 200:.\AdvantageImpl.c ****                 ClearEepromBuffer();
 811              		.loc 1 200 0
 812 03e0 FFF7FEFF 		bl	ClearEepromBuffer
 201:.\AdvantageImpl.c ****                 //In this position is located the payment type (CREDIT: 0x0E , CASH:0x0D)
 202:.\AdvantageImpl.c ****                 if(pjob->_ppump->_trasactionbuffer[0x00] == 0x0D)
 813              		.loc 1 202 0
 814 03e4 7B69     		ldr	r3, [r7, #20]
 815 03e6 DB69     		ldr	r3, [r3, #28]
 816 03e8 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 817 03ec 0D2B     		cmp	r3, #13
 818 03ee 40F0DB80 		bne	.L25
 203:.\AdvantageImpl.c ****                 {
 204:.\AdvantageImpl.c ****                     //HERE WE STORE THE LAST TRANSACTION IN EEPROM! ALWAYS THE PREVIOUS TRANSACTION
 205:.\AdvantageImpl.c ****                     //WILL BE OVERWRITTEN AND LOST.
 206:.\AdvantageImpl.c ****                     //IN CASE OF A "CREDIT SALE", THE WHOLE DATA WILL BE STORED IN A SEPARATE MEMOR
 207:.\AdvantageImpl.c ****                     //SINCE IN CASE OF A RF LINK DROP, THE STATE OF THE SALE COULD BE RECOVERED BY 
 208:.\AdvantageImpl.c ****                     LoadEepromPage(EEPROM_DISPENSER_PUMP1_LAYOUT_PAGE);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 19


 819              		.loc 1 208 0
 820 03f2 4FF40070 		mov	r0, #512
 821 03f6 FFF7FEFF 		bl	LoadEepromPage
 209:.\AdvantageImpl.c ****                     if(GetEepromBuffer()[0] == ((pjob->_ppump->_rxbuffer[0x04] & 0x0F) + 1))
 822              		.loc 1 209 0
 823 03fa FFF7FEFF 		bl	GetEepromBuffer
 824 03fe 0346     		mov	r3, r0
 825 0400 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 826 0402 1A46     		mov	r2, r3
 827 0404 7B69     		ldr	r3, [r7, #20]
 828 0406 DB69     		ldr	r3, [r3, #28]
 829 0408 93F8A431 		ldrb	r3, [r3, #420]	@ zero_extendqisi2
 830 040c 03F00F03 		and	r3, r3, #15
 831 0410 0133     		adds	r3, r3, #1
 832 0412 9A42     		cmp	r2, r3
 833 0414 22D1     		bne	.L26
 210:.\AdvantageImpl.c ****                     {
 211:.\AdvantageImpl.c ****                         ClearEepromBuffer();
 834              		.loc 1 211 0
 835 0416 FFF7FEFF 		bl	ClearEepromBuffer
 212:.\AdvantageImpl.c ****                         //Storing the current Date/Time for this transaction
 213:.\AdvantageImpl.c ****                         memcpy(GetEepromBuffer(), GetRtcBuffer(), 0x07);
 836              		.loc 1 213 0
 837 041a FFF7FEFF 		bl	GetEepromBuffer
 838 041e 0446     		mov	r4, r0
 839 0420 FFF7FEFF 		bl	GetRtcBuffer
 840 0424 0346     		mov	r3, r0
 841 0426 2046     		mov	r0, r4
 842 0428 1946     		mov	r1, r3
 843 042a 0722     		movs	r2, #7
 844 042c FFF7FEFF 		bl	memcpy
 214:.\AdvantageImpl.c ****                         memcpy(&GetEepromBuffer()[0x07], pjob->_ppump->_rxbuffer, pjob->_ppump->_rx
 845              		.loc 1 214 0
 846 0430 FFF7FEFF 		bl	GetEepromBuffer
 847 0434 0346     		mov	r3, r0
 848 0436 D91D     		adds	r1, r3, #7
 849 0438 7B69     		ldr	r3, [r7, #20]
 850 043a DB69     		ldr	r3, [r3, #28]
 851 043c 03F5D072 		add	r2, r3, #416
 852 0440 7B69     		ldr	r3, [r7, #20]
 853 0442 DB69     		ldr	r3, [r3, #28]
 854 0444 B3F82033 		ldrh	r3, [r3, #800]
 855 0448 0846     		mov	r0, r1
 856 044a 1146     		mov	r1, r2
 857 044c 1A46     		mov	r2, r3
 858 044e FFF7FEFF 		bl	memcpy
 215:.\AdvantageImpl.c ****                         StoreEepromPage(EEPROM_DISPENSER_PUMP12_TRANSACTION_PAGE);
 859              		.loc 1 215 0
 860 0452 4FF4C860 		mov	r0, #1600
 861 0456 FFF7FEFF 		bl	StoreEepromPage
 862 045a 7EE1     		b	.L30
 863              	.L26:
 216:.\AdvantageImpl.c ****                     }
 217:.\AdvantageImpl.c ****                     else
 218:.\AdvantageImpl.c ****                     {
 219:.\AdvantageImpl.c ****                         ClearEepromBuffer();
 864              		.loc 1 219 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 20


 865 045c FFF7FEFF 		bl	ClearEepromBuffer
 220:.\AdvantageImpl.c ****                         LoadEepromPage(EEPROM_DISPENSER_PUMP2_LAYOUT_PAGE);
 866              		.loc 1 220 0
 867 0460 4FF41070 		mov	r0, #576
 868 0464 FFF7FEFF 		bl	LoadEepromPage
 221:.\AdvantageImpl.c ****                         if(GetEepromBuffer()[0] == ((pjob->_ppump->_rxbuffer[0x04] & 0x0F) + 1))
 869              		.loc 1 221 0
 870 0468 FFF7FEFF 		bl	GetEepromBuffer
 871 046c 0346     		mov	r3, r0
 872 046e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 873 0470 1A46     		mov	r2, r3
 874 0472 7B69     		ldr	r3, [r7, #20]
 875 0474 DB69     		ldr	r3, [r3, #28]
 876 0476 93F8A431 		ldrb	r3, [r3, #420]	@ zero_extendqisi2
 877 047a 03F00F03 		and	r3, r3, #15
 878 047e 0133     		adds	r3, r3, #1
 879 0480 9A42     		cmp	r2, r3
 880 0482 22D1     		bne	.L28
 222:.\AdvantageImpl.c ****                         {
 223:.\AdvantageImpl.c ****                             ClearEepromBuffer();
 881              		.loc 1 223 0
 882 0484 FFF7FEFF 		bl	ClearEepromBuffer
 224:.\AdvantageImpl.c ****                             //Storing the current Date/Time for this transaction
 225:.\AdvantageImpl.c ****                             memcpy(GetEepromBuffer(), GetRtcBuffer(), 0x07);
 883              		.loc 1 225 0
 884 0488 FFF7FEFF 		bl	GetEepromBuffer
 885 048c 0446     		mov	r4, r0
 886 048e FFF7FEFF 		bl	GetRtcBuffer
 887 0492 0346     		mov	r3, r0
 888 0494 2046     		mov	r0, r4
 889 0496 1946     		mov	r1, r3
 890 0498 0722     		movs	r2, #7
 891 049a FFF7FEFF 		bl	memcpy
 226:.\AdvantageImpl.c ****                             memcpy(&GetEepromBuffer()[0x07], pjob->_ppump->_rxbuffer, pjob->_ppump-
 892              		.loc 1 226 0
 893 049e FFF7FEFF 		bl	GetEepromBuffer
 894 04a2 0346     		mov	r3, r0
 895 04a4 D91D     		adds	r1, r3, #7
 896 04a6 7B69     		ldr	r3, [r7, #20]
 897 04a8 DB69     		ldr	r3, [r3, #28]
 898 04aa 03F5D072 		add	r2, r3, #416
 899 04ae 7B69     		ldr	r3, [r7, #20]
 900 04b0 DB69     		ldr	r3, [r3, #28]
 901 04b2 B3F82033 		ldrh	r3, [r3, #800]
 902 04b6 0846     		mov	r0, r1
 903 04b8 1146     		mov	r1, r2
 904 04ba 1A46     		mov	r2, r3
 905 04bc FFF7FEFF 		bl	memcpy
 227:.\AdvantageImpl.c ****                             StoreEepromPage(EEPROM_DISPENSER_PUMP22_TRANSACTION_PAGE);
 906              		.loc 1 227 0
 907 04c0 4FF4E860 		mov	r0, #1856
 908 04c4 FFF7FEFF 		bl	StoreEepromPage
 909 04c8 47E1     		b	.L30
 910              	.L28:
 228:.\AdvantageImpl.c ****                         }
 229:.\AdvantageImpl.c ****                         else
 230:.\AdvantageImpl.c ****                         {
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 21


 231:.\AdvantageImpl.c ****                             ClearEepromBuffer();
 911              		.loc 1 231 0
 912 04ca FFF7FEFF 		bl	ClearEepromBuffer
 232:.\AdvantageImpl.c ****                             LoadEepromPage(EEPROM_DISPENSER_PUMP3_LAYOUT_PAGE);
 913              		.loc 1 232 0
 914 04ce 4FF42070 		mov	r0, #640
 915 04d2 FFF7FEFF 		bl	LoadEepromPage
 233:.\AdvantageImpl.c ****                             if(GetEepromBuffer()[0] == ((pjob->_ppump->_rxbuffer[0x04] & 0x0F) + 1)
 916              		.loc 1 233 0
 917 04d6 FFF7FEFF 		bl	GetEepromBuffer
 918 04da 0346     		mov	r3, r0
 919 04dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 920 04de 1A46     		mov	r2, r3
 921 04e0 7B69     		ldr	r3, [r7, #20]
 922 04e2 DB69     		ldr	r3, [r3, #28]
 923 04e4 93F8A431 		ldrb	r3, [r3, #420]	@ zero_extendqisi2
 924 04e8 03F00F03 		and	r3, r3, #15
 925 04ec 0133     		adds	r3, r3, #1
 926 04ee 9A42     		cmp	r2, r3
 927 04f0 22D1     		bne	.L29
 234:.\AdvantageImpl.c ****                             {
 235:.\AdvantageImpl.c ****                                 ClearEepromBuffer();
 928              		.loc 1 235 0
 929 04f2 FFF7FEFF 		bl	ClearEepromBuffer
 236:.\AdvantageImpl.c ****                                 //Storing the current Date/Time for this transaction
 237:.\AdvantageImpl.c ****                                 memcpy(GetEepromBuffer(), GetRtcBuffer(), 0x07);
 930              		.loc 1 237 0
 931 04f6 FFF7FEFF 		bl	GetEepromBuffer
 932 04fa 0446     		mov	r4, r0
 933 04fc FFF7FEFF 		bl	GetRtcBuffer
 934 0500 0346     		mov	r3, r0
 935 0502 2046     		mov	r0, r4
 936 0504 1946     		mov	r1, r3
 937 0506 0722     		movs	r2, #7
 938 0508 FFF7FEFF 		bl	memcpy
 238:.\AdvantageImpl.c ****                                 memcpy(&GetEepromBuffer()[0x07], pjob->_ppump->_rxbuffer, pjob->_pp
 939              		.loc 1 238 0
 940 050c FFF7FEFF 		bl	GetEepromBuffer
 941 0510 0346     		mov	r3, r0
 942 0512 D91D     		adds	r1, r3, #7
 943 0514 7B69     		ldr	r3, [r7, #20]
 944 0516 DB69     		ldr	r3, [r3, #28]
 945 0518 03F5D072 		add	r2, r3, #416
 946 051c 7B69     		ldr	r3, [r7, #20]
 947 051e DB69     		ldr	r3, [r3, #28]
 948 0520 B3F82033 		ldrh	r3, [r3, #800]
 949 0524 0846     		mov	r0, r1
 950 0526 1146     		mov	r1, r2
 951 0528 1A46     		mov	r2, r3
 952 052a FFF7FEFF 		bl	memcpy
 239:.\AdvantageImpl.c ****                                 StoreEepromPage(EEPROM_DISPENSER_PUMP32_TRANSACTION_PAGE);
 953              		.loc 1 239 0
 954 052e 4FF40460 		mov	r0, #2112
 955 0532 FFF7FEFF 		bl	StoreEepromPage
 956 0536 10E1     		b	.L30
 957              	.L29:
 240:.\AdvantageImpl.c ****                             }
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 22


 241:.\AdvantageImpl.c ****                             else
 242:.\AdvantageImpl.c ****                             {
 243:.\AdvantageImpl.c ****                                 ClearEepromBuffer();
 958              		.loc 1 243 0
 959 0538 FFF7FEFF 		bl	ClearEepromBuffer
 244:.\AdvantageImpl.c ****                                 LoadEepromPage(EEPROM_DISPENSER_PUMP4_LAYOUT_PAGE);
 960              		.loc 1 244 0
 961 053c 4FF43070 		mov	r0, #704
 962 0540 FFF7FEFF 		bl	LoadEepromPage
 245:.\AdvantageImpl.c ****                                 if(GetEepromBuffer()[0] == ((pjob->_ppump->_rxbuffer[0x04] & 0x0F) 
 963              		.loc 1 245 0
 964 0544 FFF7FEFF 		bl	GetEepromBuffer
 965 0548 0346     		mov	r3, r0
 966 054a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 967 054c 1A46     		mov	r2, r3
 968 054e 7B69     		ldr	r3, [r7, #20]
 969 0550 DB69     		ldr	r3, [r3, #28]
 970 0552 93F8A431 		ldrb	r3, [r3, #420]	@ zero_extendqisi2
 971 0556 03F00F03 		and	r3, r3, #15
 972 055a 0133     		adds	r3, r3, #1
 973 055c 9A42     		cmp	r2, r3
 974 055e 40F0FC80 		bne	.L30
 246:.\AdvantageImpl.c ****                                 {
 247:.\AdvantageImpl.c ****                                     ClearEepromBuffer();
 975              		.loc 1 247 0
 976 0562 FFF7FEFF 		bl	ClearEepromBuffer
 248:.\AdvantageImpl.c ****                                     //Storing the current Date/Time for this transaction
 249:.\AdvantageImpl.c ****                                     memcpy(GetEepromBuffer(), GetRtcBuffer(), 0x07);
 977              		.loc 1 249 0
 978 0566 FFF7FEFF 		bl	GetEepromBuffer
 979 056a 0446     		mov	r4, r0
 980 056c FFF7FEFF 		bl	GetRtcBuffer
 981 0570 0346     		mov	r3, r0
 982 0572 2046     		mov	r0, r4
 983 0574 1946     		mov	r1, r3
 984 0576 0722     		movs	r2, #7
 985 0578 FFF7FEFF 		bl	memcpy
 250:.\AdvantageImpl.c ****                                     memcpy(&GetEepromBuffer()[0x07], pjob->_ppump->_rxbuffer, pjob-
 986              		.loc 1 250 0
 987 057c FFF7FEFF 		bl	GetEepromBuffer
 988 0580 0346     		mov	r3, r0
 989 0582 D91D     		adds	r1, r3, #7
 990 0584 7B69     		ldr	r3, [r7, #20]
 991 0586 DB69     		ldr	r3, [r3, #28]
 992 0588 03F5D072 		add	r2, r3, #416
 993 058c 7B69     		ldr	r3, [r7, #20]
 994 058e DB69     		ldr	r3, [r3, #28]
 995 0590 B3F82033 		ldrh	r3, [r3, #800]
 996 0594 0846     		mov	r0, r1
 997 0596 1146     		mov	r1, r2
 998 0598 1A46     		mov	r2, r3
 999 059a FFF7FEFF 		bl	memcpy
 251:.\AdvantageImpl.c ****                                     StoreEepromPage(EEPROM_DISPENSER_PUMP42_TRANSACTION_PAGE);
 1000              		.loc 1 251 0
 1001 059e 4FF41460 		mov	r0, #2368
 1002 05a2 FFF7FEFF 		bl	StoreEepromPage
 1003 05a6 D8E0     		b	.L30
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 23


 1004              	.L25:
 252:.\AdvantageImpl.c ****                                 }
 253:.\AdvantageImpl.c ****                             }
 254:.\AdvantageImpl.c ****                         }
 255:.\AdvantageImpl.c ****                     }
 256:.\AdvantageImpl.c ****                 }else{//CREDIT TRANSACTION
 257:.\AdvantageImpl.c ****                     //HERE WE STORE THE LAST TRANSACTION IN EEPROM! ALWAYS THE PREVIOUS TRANSACTION
 258:.\AdvantageImpl.c ****                     //WILL BE OVERWRITTEN AND LOST.
 259:.\AdvantageImpl.c ****                     //IN CASE OF A "CREDIT SALE", THE WHOLE DATA WILL BE STORED IN A SEPARATE MEMOR
 260:.\AdvantageImpl.c ****                     //SINCE IN CASE OF A RF LINK DROP, THE STATE OF THE SALE COULD BE RECOVERED BY 
 261:.\AdvantageImpl.c ****                     LoadEepromPage(EEPROM_DISPENSER_PUMP1_LAYOUT_PAGE);
 1005              		.loc 1 261 0
 1006 05a8 4FF40070 		mov	r0, #512
 1007 05ac FFF7FEFF 		bl	LoadEepromPage
 262:.\AdvantageImpl.c ****                     if(GetEepromBuffer()[0] == ((pjob->_ppump->_rxbuffer[0x04] & 0x0F) + 1))
 1008              		.loc 1 262 0
 1009 05b0 FFF7FEFF 		bl	GetEepromBuffer
 1010 05b4 0346     		mov	r3, r0
 1011 05b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1012 05b8 1A46     		mov	r2, r3
 1013 05ba 7B69     		ldr	r3, [r7, #20]
 1014 05bc DB69     		ldr	r3, [r3, #28]
 1015 05be 93F8A431 		ldrb	r3, [r3, #420]	@ zero_extendqisi2
 1016 05c2 03F00F03 		and	r3, r3, #15
 1017 05c6 0133     		adds	r3, r3, #1
 1018 05c8 9A42     		cmp	r2, r3
 1019 05ca 22D1     		bne	.L31
 263:.\AdvantageImpl.c ****                     {
 264:.\AdvantageImpl.c ****                         ClearEepromBuffer();
 1020              		.loc 1 264 0
 1021 05cc FFF7FEFF 		bl	ClearEepromBuffer
 265:.\AdvantageImpl.c ****                         //Storing the current Date/Time for this transaction
 266:.\AdvantageImpl.c ****                         memcpy(GetEepromBuffer(), GetRtcBuffer(), 0x07);
 1022              		.loc 1 266 0
 1023 05d0 FFF7FEFF 		bl	GetEepromBuffer
 1024 05d4 0446     		mov	r4, r0
 1025 05d6 FFF7FEFF 		bl	GetRtcBuffer
 1026 05da 0346     		mov	r3, r0
 1027 05dc 2046     		mov	r0, r4
 1028 05de 1946     		mov	r1, r3
 1029 05e0 0722     		movs	r2, #7
 1030 05e2 FFF7FEFF 		bl	memcpy
 267:.\AdvantageImpl.c ****                         memcpy(&GetEepromBuffer()[0x07], pjob->_ppump->_rxbuffer, pjob->_ppump->_rx
 1031              		.loc 1 267 0
 1032 05e6 FFF7FEFF 		bl	GetEepromBuffer
 1033 05ea 0346     		mov	r3, r0
 1034 05ec D91D     		adds	r1, r3, #7
 1035 05ee 7B69     		ldr	r3, [r7, #20]
 1036 05f0 DB69     		ldr	r3, [r3, #28]
 1037 05f2 03F5D072 		add	r2, r3, #416
 1038 05f6 7B69     		ldr	r3, [r7, #20]
 1039 05f8 DB69     		ldr	r3, [r3, #28]
 1040 05fa B3F82033 		ldrh	r3, [r3, #800]
 1041 05fe 0846     		mov	r0, r1
 1042 0600 1146     		mov	r1, r2
 1043 0602 1A46     		mov	r2, r3
 1044 0604 FFF7FEFF 		bl	memcpy
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 24


 268:.\AdvantageImpl.c ****                         StoreEepromPage(EEPROM_DISPENSER_PUMP14_TRANSACTION_PAGE);
 1045              		.loc 1 268 0
 1046 0608 4FF4D860 		mov	r0, #1728
 1047 060c FFF7FEFF 		bl	StoreEepromPage
 1048 0610 A3E0     		b	.L30
 1049              	.L31:
 269:.\AdvantageImpl.c ****                     }
 270:.\AdvantageImpl.c ****                     else
 271:.\AdvantageImpl.c ****                     {
 272:.\AdvantageImpl.c ****                         ClearEepromBuffer();
 1050              		.loc 1 272 0
 1051 0612 FFF7FEFF 		bl	ClearEepromBuffer
 273:.\AdvantageImpl.c ****                         LoadEepromPage(EEPROM_DISPENSER_PUMP2_LAYOUT_PAGE);
 1052              		.loc 1 273 0
 1053 0616 4FF41070 		mov	r0, #576
 1054 061a FFF7FEFF 		bl	LoadEepromPage
 274:.\AdvantageImpl.c ****                         if(GetEepromBuffer()[0] == ((pjob->_ppump->_rxbuffer[0x04] & 0x0F) + 1))
 1055              		.loc 1 274 0
 1056 061e FFF7FEFF 		bl	GetEepromBuffer
 1057 0622 0346     		mov	r3, r0
 1058 0624 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1059 0626 1A46     		mov	r2, r3
 1060 0628 7B69     		ldr	r3, [r7, #20]
 1061 062a DB69     		ldr	r3, [r3, #28]
 1062 062c 93F8A431 		ldrb	r3, [r3, #420]	@ zero_extendqisi2
 1063 0630 03F00F03 		and	r3, r3, #15
 1064 0634 0133     		adds	r3, r3, #1
 1065 0636 9A42     		cmp	r2, r3
 1066 0638 22D1     		bne	.L32
 275:.\AdvantageImpl.c ****                         {
 276:.\AdvantageImpl.c ****                             ClearEepromBuffer();
 1067              		.loc 1 276 0
 1068 063a FFF7FEFF 		bl	ClearEepromBuffer
 277:.\AdvantageImpl.c ****                             //Storing the current Date/Time for this transaction
 278:.\AdvantageImpl.c ****                             memcpy(GetEepromBuffer(), GetRtcBuffer(), 0x07);
 1069              		.loc 1 278 0
 1070 063e FFF7FEFF 		bl	GetEepromBuffer
 1071 0642 0446     		mov	r4, r0
 1072 0644 FFF7FEFF 		bl	GetRtcBuffer
 1073 0648 0346     		mov	r3, r0
 1074 064a 2046     		mov	r0, r4
 1075 064c 1946     		mov	r1, r3
 1076 064e 0722     		movs	r2, #7
 1077 0650 FFF7FEFF 		bl	memcpy
 279:.\AdvantageImpl.c ****                             memcpy(&GetEepromBuffer()[0x07], pjob->_ppump->_rxbuffer, pjob->_ppump-
 1078              		.loc 1 279 0
 1079 0654 FFF7FEFF 		bl	GetEepromBuffer
 1080 0658 0346     		mov	r3, r0
 1081 065a D91D     		adds	r1, r3, #7
 1082 065c 7B69     		ldr	r3, [r7, #20]
 1083 065e DB69     		ldr	r3, [r3, #28]
 1084 0660 03F5D072 		add	r2, r3, #416
 1085 0664 7B69     		ldr	r3, [r7, #20]
 1086 0666 DB69     		ldr	r3, [r3, #28]
 1087 0668 B3F82033 		ldrh	r3, [r3, #800]
 1088 066c 0846     		mov	r0, r1
 1089 066e 1146     		mov	r1, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 25


 1090 0670 1A46     		mov	r2, r3
 1091 0672 FFF7FEFF 		bl	memcpy
 280:.\AdvantageImpl.c ****                             StoreEepromPage(EEPROM_DISPENSER_PUMP24_TRANSACTION_PAGE);
 1092              		.loc 1 280 0
 1093 0676 4FF4F860 		mov	r0, #1984
 1094 067a FFF7FEFF 		bl	StoreEepromPage
 1095 067e 6CE0     		b	.L30
 1096              	.L32:
 281:.\AdvantageImpl.c ****                         }
 282:.\AdvantageImpl.c ****                         else
 283:.\AdvantageImpl.c ****                         {
 284:.\AdvantageImpl.c ****                             ClearEepromBuffer();
 1097              		.loc 1 284 0
 1098 0680 FFF7FEFF 		bl	ClearEepromBuffer
 285:.\AdvantageImpl.c ****                             LoadEepromPage(EEPROM_DISPENSER_PUMP3_LAYOUT_PAGE);
 1099              		.loc 1 285 0
 1100 0684 4FF42070 		mov	r0, #640
 1101 0688 FFF7FEFF 		bl	LoadEepromPage
 286:.\AdvantageImpl.c ****                             if(GetEepromBuffer()[0] == ((pjob->_ppump->_rxbuffer[0x04] & 0x0F) + 1)
 1102              		.loc 1 286 0
 1103 068c FFF7FEFF 		bl	GetEepromBuffer
 1104 0690 0346     		mov	r3, r0
 1105 0692 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1106 0694 1A46     		mov	r2, r3
 1107 0696 7B69     		ldr	r3, [r7, #20]
 1108 0698 DB69     		ldr	r3, [r3, #28]
 1109 069a 93F8A431 		ldrb	r3, [r3, #420]	@ zero_extendqisi2
 1110 069e 03F00F03 		and	r3, r3, #15
 1111 06a2 0133     		adds	r3, r3, #1
 1112 06a4 9A42     		cmp	r2, r3
 1113 06a6 22D1     		bne	.L33
 287:.\AdvantageImpl.c ****                             {
 288:.\AdvantageImpl.c ****                                 ClearEepromBuffer();
 1114              		.loc 1 288 0
 1115 06a8 FFF7FEFF 		bl	ClearEepromBuffer
 289:.\AdvantageImpl.c ****                                 //Storing the current Date/Time for this transaction
 290:.\AdvantageImpl.c ****                                 memcpy(GetEepromBuffer(), GetRtcBuffer(), 0x07);
 1116              		.loc 1 290 0
 1117 06ac FFF7FEFF 		bl	GetEepromBuffer
 1118 06b0 0446     		mov	r4, r0
 1119 06b2 FFF7FEFF 		bl	GetRtcBuffer
 1120 06b6 0346     		mov	r3, r0
 1121 06b8 2046     		mov	r0, r4
 1122 06ba 1946     		mov	r1, r3
 1123 06bc 0722     		movs	r2, #7
 1124 06be FFF7FEFF 		bl	memcpy
 291:.\AdvantageImpl.c ****                                 memcpy(&GetEepromBuffer()[0x07], pjob->_ppump->_rxbuffer, pjob->_pp
 1125              		.loc 1 291 0
 1126 06c2 FFF7FEFF 		bl	GetEepromBuffer
 1127 06c6 0346     		mov	r3, r0
 1128 06c8 D91D     		adds	r1, r3, #7
 1129 06ca 7B69     		ldr	r3, [r7, #20]
 1130 06cc DB69     		ldr	r3, [r3, #28]
 1131 06ce 03F5D072 		add	r2, r3, #416
 1132 06d2 7B69     		ldr	r3, [r7, #20]
 1133 06d4 DB69     		ldr	r3, [r3, #28]
 1134 06d6 B3F82033 		ldrh	r3, [r3, #800]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 26


 1135 06da 0846     		mov	r0, r1
 1136 06dc 1146     		mov	r1, r2
 1137 06de 1A46     		mov	r2, r3
 1138 06e0 FFF7FEFF 		bl	memcpy
 292:.\AdvantageImpl.c ****                                 StoreEepromPage(EEPROM_DISPENSER_PUMP34_TRANSACTION_PAGE);
 1139              		.loc 1 292 0
 1140 06e4 4FF40C60 		mov	r0, #2240
 1141 06e8 FFF7FEFF 		bl	StoreEepromPage
 1142 06ec 35E0     		b	.L30
 1143              	.L33:
 293:.\AdvantageImpl.c ****                             }
 294:.\AdvantageImpl.c ****                             else
 295:.\AdvantageImpl.c ****                             {
 296:.\AdvantageImpl.c ****                                 ClearEepromBuffer();
 1144              		.loc 1 296 0
 1145 06ee FFF7FEFF 		bl	ClearEepromBuffer
 297:.\AdvantageImpl.c ****                                 LoadEepromPage(EEPROM_DISPENSER_PUMP4_LAYOUT_PAGE);
 1146              		.loc 1 297 0
 1147 06f2 4FF43070 		mov	r0, #704
 1148 06f6 FFF7FEFF 		bl	LoadEepromPage
 298:.\AdvantageImpl.c ****                                 if(GetEepromBuffer()[0] == ((pjob->_ppump->_rxbuffer[0x04] & 0x0F) 
 1149              		.loc 1 298 0
 1150 06fa FFF7FEFF 		bl	GetEepromBuffer
 1151 06fe 0346     		mov	r3, r0
 1152 0700 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1153 0702 1A46     		mov	r2, r3
 1154 0704 7B69     		ldr	r3, [r7, #20]
 1155 0706 DB69     		ldr	r3, [r3, #28]
 1156 0708 93F8A431 		ldrb	r3, [r3, #420]	@ zero_extendqisi2
 1157 070c 03F00F03 		and	r3, r3, #15
 1158 0710 0133     		adds	r3, r3, #1
 1159 0712 9A42     		cmp	r2, r3
 1160 0714 21D1     		bne	.L30
 299:.\AdvantageImpl.c ****                                 {
 300:.\AdvantageImpl.c ****                                     ClearEepromBuffer();
 1161              		.loc 1 300 0
 1162 0716 FFF7FEFF 		bl	ClearEepromBuffer
 301:.\AdvantageImpl.c ****                                     //Storing the current Date/Time for this transaction
 302:.\AdvantageImpl.c ****                                     memcpy(GetEepromBuffer(), GetRtcBuffer(), 0x07);
 1163              		.loc 1 302 0
 1164 071a FFF7FEFF 		bl	GetEepromBuffer
 1165 071e 0446     		mov	r4, r0
 1166 0720 FFF7FEFF 		bl	GetRtcBuffer
 1167 0724 0346     		mov	r3, r0
 1168 0726 2046     		mov	r0, r4
 1169 0728 1946     		mov	r1, r3
 1170 072a 0722     		movs	r2, #7
 1171 072c FFF7FEFF 		bl	memcpy
 303:.\AdvantageImpl.c ****                                     memcpy(&GetEepromBuffer()[0x07], pjob->_ppump->_rxbuffer, pjob-
 1172              		.loc 1 303 0
 1173 0730 FFF7FEFF 		bl	GetEepromBuffer
 1174 0734 0346     		mov	r3, r0
 1175 0736 D91D     		adds	r1, r3, #7
 1176 0738 7B69     		ldr	r3, [r7, #20]
 1177 073a DB69     		ldr	r3, [r3, #28]
 1178 073c 03F5D072 		add	r2, r3, #416
 1179 0740 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 27


 1180 0742 DB69     		ldr	r3, [r3, #28]
 1181 0744 B3F82033 		ldrh	r3, [r3, #800]
 1182 0748 0846     		mov	r0, r1
 1183 074a 1146     		mov	r1, r2
 1184 074c 1A46     		mov	r2, r3
 1185 074e FFF7FEFF 		bl	memcpy
 304:.\AdvantageImpl.c ****                                     StoreEepromPage(EEPROM_DISPENSER_PUMP44_TRANSACTION_PAGE);
 1186              		.loc 1 304 0
 1187 0752 4FF41C60 		mov	r0, #2496
 1188 0756 FFF7FEFF 		bl	StoreEepromPage
 1189              	.L30:
 305:.\AdvantageImpl.c ****                                 }
 306:.\AdvantageImpl.c ****                             }
 307:.\AdvantageImpl.c ****                         }
 308:.\AdvantageImpl.c ****                     }
 309:.\AdvantageImpl.c ****                 }
 310:.\AdvantageImpl.c ****                 I2CBusUnlock();
 1190              		.loc 1 310 0
 1191 075a FFF7FEFF 		bl	I2CBusUnlock
 1192 075e CBE3     		b	.L34
 1193              	.L16:
 311:.\AdvantageImpl.c ****             }
 312:.\AdvantageImpl.c ****             else
 313:.\AdvantageImpl.c ****             {            
 314:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x09] = (pjob->_ppump->_rxbuffer[0x09] & 0x0F);//Hose id
 1194              		.loc 1 314 0
 1195 0760 7B69     		ldr	r3, [r7, #20]
 1196 0762 DB69     		ldr	r3, [r3, #28]
 1197 0764 7A69     		ldr	r2, [r7, #20]
 1198 0766 D269     		ldr	r2, [r2, #28]
 1199 0768 92F8A921 		ldrb	r2, [r2, #425]	@ zero_extendqisi2
 1200 076c 02F00F02 		and	r2, r2, #15
 1201 0770 D2B2     		uxtb	r2, r2
 1202 0772 83F8A921 		strb	r2, [r3, #425]
 315:.\AdvantageImpl.c ****                 pjob->_ppump->_authorizationinfo._hoseid = pjob->_ppump->_rxbuffer[0x09];//Hose id
 1203              		.loc 1 315 0
 1204 0776 7B69     		ldr	r3, [r7, #20]
 1205 0778 DB69     		ldr	r3, [r3, #28]
 1206 077a 7A69     		ldr	r2, [r7, #20]
 1207 077c D269     		ldr	r2, [r2, #28]
 1208 077e 92F8A921 		ldrb	r2, [r2, #425]	@ zero_extendqisi2
 1209 0782 83F8AA2B 		strb	r2, [r3, #2986]
 316:.\AdvantageImpl.c ****                 
 317:.\AdvantageImpl.c ****                 //In this position is located the payment type (CREDIT: 0x0E , CASH:0x0D)
 318:.\AdvantageImpl.c ****                 if(pjob->_ppump->_trasactionbuffer[0x00] == 0x0D)
 1210              		.loc 1 318 0
 1211 0786 7B69     		ldr	r3, [r7, #20]
 1212 0788 DB69     		ldr	r3, [r3, #28]
 1213 078a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1214 078e 0D2B     		cmp	r3, #13
 1215 0790 40F0E080 		bne	.L35
 1216              	.LBB5:
 319:.\AdvantageImpl.c ****                 {
 320:.\AdvantageImpl.c ****                     I2CBusLock();
 1217              		.loc 1 320 0
 1218 0794 FFF7FEFF 		bl	I2CBusLock
 321:.\AdvantageImpl.c ****                     ClearEepromBuffer();
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 28


 1219              		.loc 1 321 0
 1220 0798 FFF7FEFF 		bl	ClearEepromBuffer
 322:.\AdvantageImpl.c ****                     uint16 eeprompage = DispenserGetEepromPPUPageFromPumpID(pjob->_ppump->_pumpid);
 1221              		.loc 1 322 0
 1222 079c 7B69     		ldr	r3, [r7, #20]
 1223 079e DB69     		ldr	r3, [r3, #28]
 1224 07a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1225 07a2 1846     		mov	r0, r3
 1226 07a4 FFF7FEFF 		bl	DispenserGetEepromPPUPageFromPumpID
 1227 07a8 0346     		mov	r3, r0
 1228 07aa FB81     		strh	r3, [r7, #14]	@ movhi
 323:.\AdvantageImpl.c ****                     LoadEepromPage(eeprompage);
 1229              		.loc 1 323 0
 1230 07ac FB89     		ldrh	r3, [r7, #14]
 1231 07ae 1846     		mov	r0, r3
 1232 07b0 FFF7FEFF 		bl	LoadEepromPage
 324:.\AdvantageImpl.c ****                     switch(pjob->_ppump->_authorizationinfo._hoseid)
 1233              		.loc 1 324 0
 1234 07b4 7B69     		ldr	r3, [r7, #20]
 1235 07b6 DB69     		ldr	r3, [r3, #28]
 1236 07b8 93F8AA3B 		ldrb	r3, [r3, #2986]
 1237 07bc DBB2     		uxtb	r3, r3
 1238 07be 032B     		cmp	r3, #3
 1239 07c0 64D8     		bhi	.L36
 1240 07c2 01A2     		adr	r2, .L38
 1241 07c4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1242              		.p2align 2
 1243              	.L38:
 1244 07c8 D9070000 		.word	.L37+1
 1245 07cc 03080000 		.word	.L39+1
 1246 07d0 31080000 		.word	.L40+1
 1247 07d4 5F080000 		.word	.L41+1
 1248              		.p2align 1
 1249              	.L37:
 325:.\AdvantageImpl.c ****                     {
 326:.\AdvantageImpl.c ****                         case 0x00:
 327:.\AdvantageImpl.c ****                         //Six bytes only since the PPU is constrained to this length
 328:.\AdvantageImpl.c ****                         memcpy(PBYTECAST(&pjob->_ppump->_trasactionbuffer[GetBufferIndexFromDisplay
 1250              		.loc 1 328 0
 1251 07d8 7B69     		ldr	r3, [r7, #20]
 1252 07da DC69     		ldr	r4, [r3, #28]
 1253 07dc 6520     		movs	r0, #101
 1254 07de FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 1255 07e2 0346     		mov	r3, r0
 1256 07e4 2033     		adds	r3, r3, #32
 1257 07e6 1C44     		add	r4, r4, r3
 1258 07e8 FFF7FEFF 		bl	GetEepromBuffer
 1259 07ec 0546     		mov	r5, r0
 1260 07ee 6520     		movs	r0, #101
 1261 07f0 FFF7FEFF 		bl	GetBufferLengthFromDisplayID
 1262 07f4 0346     		mov	r3, r0
 1263 07f6 2046     		mov	r0, r4
 1264 07f8 2946     		mov	r1, r5
 1265 07fa 1A46     		mov	r2, r3
 1266 07fc FFF7FEFF 		bl	memcpy
 329:.\AdvantageImpl.c ****                         break;
 1267              		.loc 1 329 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 29


 1268 0800 44E0     		b	.L36
 1269              	.L39:
 330:.\AdvantageImpl.c ****                         case 0x01:
 331:.\AdvantageImpl.c ****                         //Six bytes only since the PPU is constrained to this length
 332:.\AdvantageImpl.c ****                         memcpy(PBYTECAST(&pjob->_ppump->_trasactionbuffer[GetBufferIndexFromDisplay
 1270              		.loc 1 332 0
 1271 0802 7B69     		ldr	r3, [r7, #20]
 1272 0804 DC69     		ldr	r4, [r3, #28]
 1273 0806 6520     		movs	r0, #101
 1274 0808 FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 1275 080c 0346     		mov	r3, r0
 1276 080e 2033     		adds	r3, r3, #32
 1277 0810 E518     		adds	r5, r4, r3
 1278 0812 FFF7FEFF 		bl	GetEepromBuffer
 1279 0816 0346     		mov	r3, r0
 1280 0818 03F11004 		add	r4, r3, #16
 1281 081c 6520     		movs	r0, #101
 1282 081e FFF7FEFF 		bl	GetBufferLengthFromDisplayID
 1283 0822 0346     		mov	r3, r0
 1284 0824 2846     		mov	r0, r5
 1285 0826 2146     		mov	r1, r4
 1286 0828 1A46     		mov	r2, r3
 1287 082a FFF7FEFF 		bl	memcpy
 333:.\AdvantageImpl.c ****                         break;
 1288              		.loc 1 333 0
 1289 082e 2DE0     		b	.L36
 1290              	.L40:
 334:.\AdvantageImpl.c ****                         case 0x02:
 335:.\AdvantageImpl.c ****                         //Six bytes only since the PPU is constrained to this length
 336:.\AdvantageImpl.c ****                         memcpy(PBYTECAST(&pjob->_ppump->_trasactionbuffer[GetBufferIndexFromDisplay
 1291              		.loc 1 336 0
 1292 0830 7B69     		ldr	r3, [r7, #20]
 1293 0832 DC69     		ldr	r4, [r3, #28]
 1294 0834 6520     		movs	r0, #101
 1295 0836 FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 1296 083a 0346     		mov	r3, r0
 1297 083c 2033     		adds	r3, r3, #32
 1298 083e E518     		adds	r5, r4, r3
 1299 0840 FFF7FEFF 		bl	GetEepromBuffer
 1300 0844 0346     		mov	r3, r0
 1301 0846 03F12004 		add	r4, r3, #32
 1302 084a 6520     		movs	r0, #101
 1303 084c FFF7FEFF 		bl	GetBufferLengthFromDisplayID
 1304 0850 0346     		mov	r3, r0
 1305 0852 2846     		mov	r0, r5
 1306 0854 2146     		mov	r1, r4
 1307 0856 1A46     		mov	r2, r3
 1308 0858 FFF7FEFF 		bl	memcpy
 337:.\AdvantageImpl.c ****                         break;
 1309              		.loc 1 337 0
 1310 085c 16E0     		b	.L36
 1311              	.L41:
 338:.\AdvantageImpl.c ****                         case 0x03:
 339:.\AdvantageImpl.c ****                         //Six bytes only since the PPU is constrained to this length
 340:.\AdvantageImpl.c ****                         memcpy(PBYTECAST(&pjob->_ppump->_trasactionbuffer[GetBufferIndexFromDisplay
 1312              		.loc 1 340 0
 1313 085e 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 30


 1314 0860 DC69     		ldr	r4, [r3, #28]
 1315 0862 6520     		movs	r0, #101
 1316 0864 FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 1317 0868 0346     		mov	r3, r0
 1318 086a 2033     		adds	r3, r3, #32
 1319 086c E518     		adds	r5, r4, r3
 1320 086e FFF7FEFF 		bl	GetEepromBuffer
 1321 0872 0346     		mov	r3, r0
 1322 0874 03F13004 		add	r4, r3, #48
 1323 0878 6520     		movs	r0, #101
 1324 087a FFF7FEFF 		bl	GetBufferLengthFromDisplayID
 1325 087e 0346     		mov	r3, r0
 1326 0880 2846     		mov	r0, r5
 1327 0882 2146     		mov	r1, r4
 1328 0884 1A46     		mov	r2, r3
 1329 0886 FFF7FEFF 		bl	memcpy
 341:.\AdvantageImpl.c ****                         break;
 1330              		.loc 1 341 0
 1331 088a 00BF     		nop
 1332              	.L36:
 342:.\AdvantageImpl.c ****                     }
 343:.\AdvantageImpl.c ****                     I2CBusUnlock();
 1333              		.loc 1 343 0
 1334 088c FFF7FEFF 		bl	I2CBusUnlock
 344:.\AdvantageImpl.c ****                     
 345:.\AdvantageImpl.c ****                     memcpy(PBYTECAST(&pjob->_ppump->_rxbuffer[0x0C]), PBYTECAST(&pjob->_ppump->_tra
 1335              		.loc 1 345 0
 1336 0890 7B69     		ldr	r3, [r7, #20]
 1337 0892 DB69     		ldr	r3, [r3, #28]
 1338 0894 03F5D675 		add	r5, r3, #428
 1339 0898 7B69     		ldr	r3, [r7, #20]
 1340 089a DC69     		ldr	r4, [r3, #28]
 1341 089c 6520     		movs	r0, #101
 1342 089e FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 1343 08a2 0346     		mov	r3, r0
 1344 08a4 2033     		adds	r3, r3, #32
 1345 08a6 2344     		add	r3, r3, r4
 1346 08a8 2846     		mov	r0, r5
 1347 08aa 1946     		mov	r1, r3
 1348 08ac 0622     		movs	r2, #6
 1349 08ae FFF7FEFF 		bl	memcpy
 346:.\AdvantageImpl.c ****                     
 347:.\AdvantageImpl.c ****                     //Bytes from index 12 to 17 are the digits for the PPU used for the transaction
 348:.\AdvantageImpl.c ****                     //Digits are in BCD format
 349:.\AdvantageImpl.c ****                     pjob->_ppump->_rxbuffer[0x0C] = (pjob->_ppump->_rxbuffer[0x0C] & 0x0F);
 1350              		.loc 1 349 0
 1351 08b2 7B69     		ldr	r3, [r7, #20]
 1352 08b4 DB69     		ldr	r3, [r3, #28]
 1353 08b6 7A69     		ldr	r2, [r7, #20]
 1354 08b8 D269     		ldr	r2, [r2, #28]
 1355 08ba 92F8AC21 		ldrb	r2, [r2, #428]	@ zero_extendqisi2
 1356 08be 02F00F02 		and	r2, r2, #15
 1357 08c2 D2B2     		uxtb	r2, r2
 1358 08c4 83F8AC21 		strb	r2, [r3, #428]
 350:.\AdvantageImpl.c ****                     pjob->_ppump->_rxbuffer[0x0D] = (pjob->_ppump->_rxbuffer[0x0D] & 0x0F);
 1359              		.loc 1 350 0
 1360 08c8 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 31


 1361 08ca DB69     		ldr	r3, [r3, #28]
 1362 08cc 7A69     		ldr	r2, [r7, #20]
 1363 08ce D269     		ldr	r2, [r2, #28]
 1364 08d0 92F8AD21 		ldrb	r2, [r2, #429]	@ zero_extendqisi2
 1365 08d4 02F00F02 		and	r2, r2, #15
 1366 08d8 D2B2     		uxtb	r2, r2
 1367 08da 83F8AD21 		strb	r2, [r3, #429]
 351:.\AdvantageImpl.c ****                     pjob->_ppump->_rxbuffer[0x0E] = (pjob->_ppump->_rxbuffer[0x0E] & 0x0F);
 1368              		.loc 1 351 0
 1369 08de 7B69     		ldr	r3, [r7, #20]
 1370 08e0 DB69     		ldr	r3, [r3, #28]
 1371 08e2 7A69     		ldr	r2, [r7, #20]
 1372 08e4 D269     		ldr	r2, [r2, #28]
 1373 08e6 92F8AE21 		ldrb	r2, [r2, #430]	@ zero_extendqisi2
 1374 08ea 02F00F02 		and	r2, r2, #15
 1375 08ee D2B2     		uxtb	r2, r2
 1376 08f0 83F8AE21 		strb	r2, [r3, #430]
 352:.\AdvantageImpl.c ****                     pjob->_ppump->_rxbuffer[0x0F] = (pjob->_ppump->_rxbuffer[0x0F] & 0x0F);
 1377              		.loc 1 352 0
 1378 08f4 7B69     		ldr	r3, [r7, #20]
 1379 08f6 DB69     		ldr	r3, [r3, #28]
 1380 08f8 7A69     		ldr	r2, [r7, #20]
 1381 08fa D269     		ldr	r2, [r2, #28]
 1382 08fc 92F8AF21 		ldrb	r2, [r2, #431]	@ zero_extendqisi2
 1383 0900 02F00F02 		and	r2, r2, #15
 1384 0904 D2B2     		uxtb	r2, r2
 1385 0906 83F8AF21 		strb	r2, [r3, #431]
 353:.\AdvantageImpl.c ****                     pjob->_ppump->_rxbuffer[0x10] = (pjob->_ppump->_rxbuffer[0x10] & 0x0F);
 1386              		.loc 1 353 0
 1387 090a 7B69     		ldr	r3, [r7, #20]
 1388 090c DB69     		ldr	r3, [r3, #28]
 1389 090e 7A69     		ldr	r2, [r7, #20]
 1390 0910 D269     		ldr	r2, [r2, #28]
 1391 0912 92F8B021 		ldrb	r2, [r2, #432]	@ zero_extendqisi2
 1392 0916 02F00F02 		and	r2, r2, #15
 1393 091a D2B2     		uxtb	r2, r2
 1394 091c 83F8B021 		strb	r2, [r3, #432]
 354:.\AdvantageImpl.c ****                     pjob->_ppump->_rxbuffer[0x11] = (pjob->_ppump->_rxbuffer[0x11] & 0x0F);
 1395              		.loc 1 354 0
 1396 0920 7B69     		ldr	r3, [r7, #20]
 1397 0922 DB69     		ldr	r3, [r3, #28]
 1398 0924 7A69     		ldr	r2, [r7, #20]
 1399 0926 D269     		ldr	r2, [r2, #28]
 1400 0928 92F8B121 		ldrb	r2, [r2, #433]	@ zero_extendqisi2
 1401 092c 02F00F02 		and	r2, r2, #15
 1402 0930 D2B2     		uxtb	r2, r2
 1403 0932 83F8B121 		strb	r2, [r3, #433]
 355:.\AdvantageImpl.c ****                     pjob->_ppump->_authorizationinfo._price = LSDBCDBUFF2HEX(PBYTECAST(&pjob->_ppum
 1404              		.loc 1 355 0
 1405 0936 7B69     		ldr	r3, [r7, #20]
 1406 0938 DC69     		ldr	r4, [r3, #28]
 1407 093a 7B69     		ldr	r3, [r7, #20]
 1408 093c DB69     		ldr	r3, [r3, #28]
 1409 093e 03F5D673 		add	r3, r3, #428
 1410 0942 1846     		mov	r0, r3
 1411 0944 0621     		movs	r1, #6
 1412 0946 FFF7FEFF 		bl	LSDBCDBUFF2HEX
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 32


 1413 094a 0346     		mov	r3, r0
 1414 094c 9BB2     		uxth	r3, r3
 1415 094e A4F8AC3B 		strh	r3, [r4, #2988]	@ movhi
 1416              	.LBE5:
 1417 0952 41E0     		b	.L42
 1418              	.L35:
 356:.\AdvantageImpl.c ****                     
 357:.\AdvantageImpl.c ****                 }
 358:.\AdvantageImpl.c ****                 else
 359:.\AdvantageImpl.c ****                 {
 360:.\AdvantageImpl.c ****                     pjob->_ppump->_rxbuffer[0x0C] = (pjob->_ppump->_rxbuffer[0x0C] & 0x0F);
 1419              		.loc 1 360 0
 1420 0954 7B69     		ldr	r3, [r7, #20]
 1421 0956 DB69     		ldr	r3, [r3, #28]
 1422 0958 7A69     		ldr	r2, [r7, #20]
 1423 095a D269     		ldr	r2, [r2, #28]
 1424 095c 92F8AC21 		ldrb	r2, [r2, #428]	@ zero_extendqisi2
 1425 0960 02F00F02 		and	r2, r2, #15
 1426 0964 D2B2     		uxtb	r2, r2
 1427 0966 83F8AC21 		strb	r2, [r3, #428]
 361:.\AdvantageImpl.c ****                     pjob->_ppump->_rxbuffer[0x0D] = (pjob->_ppump->_rxbuffer[0x0D] & 0x0F);
 1428              		.loc 1 361 0
 1429 096a 7B69     		ldr	r3, [r7, #20]
 1430 096c DB69     		ldr	r3, [r3, #28]
 1431 096e 7A69     		ldr	r2, [r7, #20]
 1432 0970 D269     		ldr	r2, [r2, #28]
 1433 0972 92F8AD21 		ldrb	r2, [r2, #429]	@ zero_extendqisi2
 1434 0976 02F00F02 		and	r2, r2, #15
 1435 097a D2B2     		uxtb	r2, r2
 1436 097c 83F8AD21 		strb	r2, [r3, #429]
 362:.\AdvantageImpl.c ****                     pjob->_ppump->_rxbuffer[0x0E] = (pjob->_ppump->_rxbuffer[0x0E] & 0x0F);
 1437              		.loc 1 362 0
 1438 0980 7B69     		ldr	r3, [r7, #20]
 1439 0982 DB69     		ldr	r3, [r3, #28]
 1440 0984 7A69     		ldr	r2, [r7, #20]
 1441 0986 D269     		ldr	r2, [r2, #28]
 1442 0988 92F8AE21 		ldrb	r2, [r2, #430]	@ zero_extendqisi2
 1443 098c 02F00F02 		and	r2, r2, #15
 1444 0990 D2B2     		uxtb	r2, r2
 1445 0992 83F8AE21 		strb	r2, [r3, #430]
 363:.\AdvantageImpl.c ****                     pjob->_ppump->_rxbuffer[0x0F] = (pjob->_ppump->_rxbuffer[0x0F] & 0x0F);
 1446              		.loc 1 363 0
 1447 0996 7B69     		ldr	r3, [r7, #20]
 1448 0998 DB69     		ldr	r3, [r3, #28]
 1449 099a 7A69     		ldr	r2, [r7, #20]
 1450 099c D269     		ldr	r2, [r2, #28]
 1451 099e 92F8AF21 		ldrb	r2, [r2, #431]	@ zero_extendqisi2
 1452 09a2 02F00F02 		and	r2, r2, #15
 1453 09a6 D2B2     		uxtb	r2, r2
 1454 09a8 83F8AF21 		strb	r2, [r3, #431]
 364:.\AdvantageImpl.c ****                     pjob->_ppump->_rxbuffer[0x10] = (pjob->_ppump->_rxbuffer[0x10] & 0x0F);
 1455              		.loc 1 364 0
 1456 09ac 7B69     		ldr	r3, [r7, #20]
 1457 09ae DB69     		ldr	r3, [r3, #28]
 1458 09b0 7A69     		ldr	r2, [r7, #20]
 1459 09b2 D269     		ldr	r2, [r2, #28]
 1460 09b4 92F8B021 		ldrb	r2, [r2, #432]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 33


 1461 09b8 02F00F02 		and	r2, r2, #15
 1462 09bc D2B2     		uxtb	r2, r2
 1463 09be 83F8B021 		strb	r2, [r3, #432]
 365:.\AdvantageImpl.c ****                     pjob->_ppump->_rxbuffer[0x11] = (pjob->_ppump->_rxbuffer[0x11] & 0x0F);
 1464              		.loc 1 365 0
 1465 09c2 7B69     		ldr	r3, [r7, #20]
 1466 09c4 DB69     		ldr	r3, [r3, #28]
 1467 09c6 7A69     		ldr	r2, [r7, #20]
 1468 09c8 D269     		ldr	r2, [r2, #28]
 1469 09ca 92F8B121 		ldrb	r2, [r2, #433]	@ zero_extendqisi2
 1470 09ce 02F00F02 		and	r2, r2, #15
 1471 09d2 D2B2     		uxtb	r2, r2
 1472 09d4 83F8B121 		strb	r2, [r3, #433]
 1473              	.L42:
 366:.\AdvantageImpl.c ****                 }
 367:.\AdvantageImpl.c ****                 
 368:.\AdvantageImpl.c ****                 //Bytes from index 19 to 26 are the digits for the fuel volume delivered in the tra
 369:.\AdvantageImpl.c ****                 //Digits are in BCD format
 370:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x13] = (pjob->_ppump->_rxbuffer[0x13] & 0x0F);
 1474              		.loc 1 370 0
 1475 09d8 7B69     		ldr	r3, [r7, #20]
 1476 09da DB69     		ldr	r3, [r3, #28]
 1477 09dc 7A69     		ldr	r2, [r7, #20]
 1478 09de D269     		ldr	r2, [r2, #28]
 1479 09e0 92F8B321 		ldrb	r2, [r2, #435]	@ zero_extendqisi2
 1480 09e4 02F00F02 		and	r2, r2, #15
 1481 09e8 D2B2     		uxtb	r2, r2
 1482 09ea 83F8B321 		strb	r2, [r3, #435]
 371:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x14] = (pjob->_ppump->_rxbuffer[0x14] & 0x0F);
 1483              		.loc 1 371 0
 1484 09ee 7B69     		ldr	r3, [r7, #20]
 1485 09f0 DB69     		ldr	r3, [r3, #28]
 1486 09f2 7A69     		ldr	r2, [r7, #20]
 1487 09f4 D269     		ldr	r2, [r2, #28]
 1488 09f6 92F8B421 		ldrb	r2, [r2, #436]	@ zero_extendqisi2
 1489 09fa 02F00F02 		and	r2, r2, #15
 1490 09fe D2B2     		uxtb	r2, r2
 1491 0a00 83F8B421 		strb	r2, [r3, #436]
 372:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x15] = (pjob->_ppump->_rxbuffer[0x15] & 0x0F);
 1492              		.loc 1 372 0
 1493 0a04 7B69     		ldr	r3, [r7, #20]
 1494 0a06 DB69     		ldr	r3, [r3, #28]
 1495 0a08 7A69     		ldr	r2, [r7, #20]
 1496 0a0a D269     		ldr	r2, [r2, #28]
 1497 0a0c 92F8B521 		ldrb	r2, [r2, #437]	@ zero_extendqisi2
 1498 0a10 02F00F02 		and	r2, r2, #15
 1499 0a14 D2B2     		uxtb	r2, r2
 1500 0a16 83F8B521 		strb	r2, [r3, #437]
 373:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x16] = (pjob->_ppump->_rxbuffer[0x16] & 0x0F);
 1501              		.loc 1 373 0
 1502 0a1a 7B69     		ldr	r3, [r7, #20]
 1503 0a1c DB69     		ldr	r3, [r3, #28]
 1504 0a1e 7A69     		ldr	r2, [r7, #20]
 1505 0a20 D269     		ldr	r2, [r2, #28]
 1506 0a22 92F8B621 		ldrb	r2, [r2, #438]	@ zero_extendqisi2
 1507 0a26 02F00F02 		and	r2, r2, #15
 1508 0a2a D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 34


 1509 0a2c 83F8B621 		strb	r2, [r3, #438]
 374:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x17] = (pjob->_ppump->_rxbuffer[0x17] & 0x0F);
 1510              		.loc 1 374 0
 1511 0a30 7B69     		ldr	r3, [r7, #20]
 1512 0a32 DB69     		ldr	r3, [r3, #28]
 1513 0a34 7A69     		ldr	r2, [r7, #20]
 1514 0a36 D269     		ldr	r2, [r2, #28]
 1515 0a38 92F8B721 		ldrb	r2, [r2, #439]	@ zero_extendqisi2
 1516 0a3c 02F00F02 		and	r2, r2, #15
 1517 0a40 D2B2     		uxtb	r2, r2
 1518 0a42 83F8B721 		strb	r2, [r3, #439]
 375:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x18] = (pjob->_ppump->_rxbuffer[0x18] & 0x0F);
 1519              		.loc 1 375 0
 1520 0a46 7B69     		ldr	r3, [r7, #20]
 1521 0a48 DB69     		ldr	r3, [r3, #28]
 1522 0a4a 7A69     		ldr	r2, [r7, #20]
 1523 0a4c D269     		ldr	r2, [r2, #28]
 1524 0a4e 92F8B821 		ldrb	r2, [r2, #440]	@ zero_extendqisi2
 1525 0a52 02F00F02 		and	r2, r2, #15
 1526 0a56 D2B2     		uxtb	r2, r2
 1527 0a58 83F8B821 		strb	r2, [r3, #440]
 376:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x19] = (pjob->_ppump->_rxbuffer[0x19] & 0x0F);
 1528              		.loc 1 376 0
 1529 0a5c 7B69     		ldr	r3, [r7, #20]
 1530 0a5e DB69     		ldr	r3, [r3, #28]
 1531 0a60 7A69     		ldr	r2, [r7, #20]
 1532 0a62 D269     		ldr	r2, [r2, #28]
 1533 0a64 92F8B921 		ldrb	r2, [r2, #441]	@ zero_extendqisi2
 1534 0a68 02F00F02 		and	r2, r2, #15
 1535 0a6c D2B2     		uxtb	r2, r2
 1536 0a6e 83F8B921 		strb	r2, [r3, #441]
 377:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x1A] = (pjob->_ppump->_rxbuffer[0x1A] & 0x0F);
 1537              		.loc 1 377 0
 1538 0a72 7B69     		ldr	r3, [r7, #20]
 1539 0a74 DB69     		ldr	r3, [r3, #28]
 1540 0a76 7A69     		ldr	r2, [r7, #20]
 1541 0a78 D269     		ldr	r2, [r2, #28]
 1542 0a7a 92F8BA21 		ldrb	r2, [r2, #442]	@ zero_extendqisi2
 1543 0a7e 02F00F02 		and	r2, r2, #15
 1544 0a82 D2B2     		uxtb	r2, r2
 1545 0a84 83F8BA21 		strb	r2, [r3, #442]
 378:.\AdvantageImpl.c ****                 pjob->_ppump->_authorizationinfo._volumeamount = LSDBCDBUFF2HEX(PBYTECAST(&pjob->_p
 1546              		.loc 1 378 0
 1547 0a88 7B69     		ldr	r3, [r7, #20]
 1548 0a8a DC69     		ldr	r4, [r3, #28]
 1549 0a8c 7B69     		ldr	r3, [r7, #20]
 1550 0a8e DB69     		ldr	r3, [r3, #28]
 1551 0a90 03F2B313 		addw	r3, r3, #435
 1552 0a94 1846     		mov	r0, r3
 1553 0a96 0821     		movs	r1, #8
 1554 0a98 FFF7FEFF 		bl	LSDBCDBUFF2HEX
 1555 0a9c 0346     		mov	r3, r0
 1556 0a9e C4F8B43B 		str	r3, [r4, #2996]
 379:.\AdvantageImpl.c ****                 
 380:.\AdvantageImpl.c ****                 ////////////////////////////////////////////////////////////////////////////////
 381:.\AdvantageImpl.c ****                 ////////////////////////////////////////////////////////////////////////////////
 382:.\AdvantageImpl.c ****                 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 35


 383:.\AdvantageImpl.c ****                 //Bytes from index 28 to 35 are the digits for the money charged to the transaction
 384:.\AdvantageImpl.c ****                 //Digits are in BCD format
 385:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x1C] = (pjob->_ppump->_rxbuffer[0x1C] & 0x00);//Zero to ma
 1557              		.loc 1 385 0
 1558 0aa2 7B69     		ldr	r3, [r7, #20]
 1559 0aa4 DB69     		ldr	r3, [r3, #28]
 1560 0aa6 0022     		movs	r2, #0
 1561 0aa8 83F8BC21 		strb	r2, [r3, #444]
 386:.\AdvantageImpl.c ****                 
 387:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x1D] = (pjob->_ppump->_rxbuffer[0x1D] & 0x0F);
 1562              		.loc 1 387 0
 1563 0aac 7B69     		ldr	r3, [r7, #20]
 1564 0aae DB69     		ldr	r3, [r3, #28]
 1565 0ab0 7A69     		ldr	r2, [r7, #20]
 1566 0ab2 D269     		ldr	r2, [r2, #28]
 1567 0ab4 92F8BD21 		ldrb	r2, [r2, #445]	@ zero_extendqisi2
 1568 0ab8 02F00F02 		and	r2, r2, #15
 1569 0abc D2B2     		uxtb	r2, r2
 1570 0abe 83F8BD21 		strb	r2, [r3, #445]
 388:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x1E] = (pjob->_ppump->_rxbuffer[0x1E] & 0x0F);
 1571              		.loc 1 388 0
 1572 0ac2 7B69     		ldr	r3, [r7, #20]
 1573 0ac4 DB69     		ldr	r3, [r3, #28]
 1574 0ac6 7A69     		ldr	r2, [r7, #20]
 1575 0ac8 D269     		ldr	r2, [r2, #28]
 1576 0aca 92F8BE21 		ldrb	r2, [r2, #446]	@ zero_extendqisi2
 1577 0ace 02F00F02 		and	r2, r2, #15
 1578 0ad2 D2B2     		uxtb	r2, r2
 1579 0ad4 83F8BE21 		strb	r2, [r3, #446]
 389:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x1F] = (pjob->_ppump->_rxbuffer[0x1F] & 0x0F);
 1580              		.loc 1 389 0
 1581 0ad8 7B69     		ldr	r3, [r7, #20]
 1582 0ada DB69     		ldr	r3, [r3, #28]
 1583 0adc 7A69     		ldr	r2, [r7, #20]
 1584 0ade D269     		ldr	r2, [r2, #28]
 1585 0ae0 92F8BF21 		ldrb	r2, [r2, #447]	@ zero_extendqisi2
 1586 0ae4 02F00F02 		and	r2, r2, #15
 1587 0ae8 D2B2     		uxtb	r2, r2
 1588 0aea 83F8BF21 		strb	r2, [r3, #447]
 390:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x20] = (pjob->_ppump->_rxbuffer[0x20] & 0x0F);
 1589              		.loc 1 390 0
 1590 0aee 7B69     		ldr	r3, [r7, #20]
 1591 0af0 DB69     		ldr	r3, [r3, #28]
 1592 0af2 7A69     		ldr	r2, [r7, #20]
 1593 0af4 D269     		ldr	r2, [r2, #28]
 1594 0af6 92F8C021 		ldrb	r2, [r2, #448]	@ zero_extendqisi2
 1595 0afa 02F00F02 		and	r2, r2, #15
 1596 0afe D2B2     		uxtb	r2, r2
 1597 0b00 83F8C021 		strb	r2, [r3, #448]
 391:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x21] = (pjob->_ppump->_rxbuffer[0x21] & 0x0F);
 1598              		.loc 1 391 0
 1599 0b04 7B69     		ldr	r3, [r7, #20]
 1600 0b06 DB69     		ldr	r3, [r3, #28]
 1601 0b08 7A69     		ldr	r2, [r7, #20]
 1602 0b0a D269     		ldr	r2, [r2, #28]
 1603 0b0c 92F8C121 		ldrb	r2, [r2, #449]	@ zero_extendqisi2
 1604 0b10 02F00F02 		and	r2, r2, #15
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 36


 1605 0b14 D2B2     		uxtb	r2, r2
 1606 0b16 83F8C121 		strb	r2, [r3, #449]
 392:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x22] = (pjob->_ppump->_rxbuffer[0x22] & 0x0F);
 1607              		.loc 1 392 0
 1608 0b1a 7B69     		ldr	r3, [r7, #20]
 1609 0b1c DB69     		ldr	r3, [r3, #28]
 1610 0b1e 7A69     		ldr	r2, [r7, #20]
 1611 0b20 D269     		ldr	r2, [r2, #28]
 1612 0b22 92F8C221 		ldrb	r2, [r2, #450]	@ zero_extendqisi2
 1613 0b26 02F00F02 		and	r2, r2, #15
 1614 0b2a D2B2     		uxtb	r2, r2
 1615 0b2c 83F8C221 		strb	r2, [r3, #450]
 393:.\AdvantageImpl.c ****                 pjob->_ppump->_rxbuffer[0x23] = (pjob->_ppump->_rxbuffer[0x23] & 0x0F);
 1616              		.loc 1 393 0
 1617 0b30 7B69     		ldr	r3, [r7, #20]
 1618 0b32 DB69     		ldr	r3, [r3, #28]
 1619 0b34 7A69     		ldr	r2, [r7, #20]
 1620 0b36 D269     		ldr	r2, [r2, #28]
 1621 0b38 92F8C321 		ldrb	r2, [r2, #451]	@ zero_extendqisi2
 1622 0b3c 02F00F02 		and	r2, r2, #15
 1623 0b40 D2B2     		uxtb	r2, r2
 1624 0b42 83F8C321 		strb	r2, [r3, #451]
 394:.\AdvantageImpl.c ****                 //INQUIRY ABOUT THE EXTRA x10 RESULT SINCE THERE IS AN EXTRA 0 IN THE RESPONSE FOR 
 395:.\AdvantageImpl.c ****                 //MEANWHILE DIVIDING BY 10 TO REMOVE THE ZERO
 396:.\AdvantageImpl.c ****                 pjob->_ppump->_authorizationinfo._presetamount = (LSDBCDBUFF2HEX(PBYTECAST(&pjob->_
 1625              		.loc 1 396 0
 1626 0b46 7B69     		ldr	r3, [r7, #20]
 1627 0b48 DC69     		ldr	r4, [r3, #28]
 1628 0b4a 7B69     		ldr	r3, [r7, #20]
 1629 0b4c DB69     		ldr	r3, [r3, #28]
 1630 0b4e 03F5DE73 		add	r3, r3, #444
 1631 0b52 1846     		mov	r0, r3
 1632 0b54 0821     		movs	r1, #8
 1633 0b56 FFF7FEFF 		bl	LSDBCDBUFF2HEX
 1634 0b5a 0246     		mov	r2, r0
 1635 0b5c C94B     		ldr	r3, .L54
 1636 0b5e A3FB0223 		umull	r2, r3, r3, r2
 1637 0b62 DB08     		lsrs	r3, r3, #3
 1638 0b64 C4F8B03B 		str	r3, [r4, #2992]
 397:.\AdvantageImpl.c ****                     
 398:.\AdvantageImpl.c ****                 ClearRtcBuffer();
 1639              		.loc 1 398 0
 1640 0b68 FFF7FEFF 		bl	ClearRtcBuffer
 399:.\AdvantageImpl.c ****                 ReadRTC();
 1641              		.loc 1 399 0
 1642 0b6c FFF7FEFF 		bl	ReadRTC
 400:.\AdvantageImpl.c ****                 //CAREFUL WITH RETURNS BETWEEN THE LOCK/UNLOCK CALLS
 401:.\AdvantageImpl.c ****                 //AND RECURSIVE CALLS THAT WOULD DEAD LOCK!
 402:.\AdvantageImpl.c ****                 I2CBusLock();
 1643              		.loc 1 402 0
 1644 0b70 FFF7FEFF 		bl	I2CBusLock
 403:.\AdvantageImpl.c ****             
 404:.\AdvantageImpl.c ****                 ClearEepromBuffer();
 1645              		.loc 1 404 0
 1646 0b74 FFF7FEFF 		bl	ClearEepromBuffer
 405:.\AdvantageImpl.c ****                 //In this position is located the payment type (CREDIT: 0x0E , CASH:0x0D)
 406:.\AdvantageImpl.c ****                 if(pjob->_ppump->_trasactionbuffer[0x00] == 0x0D)
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 37


 1647              		.loc 1 406 0
 1648 0b78 7B69     		ldr	r3, [r7, #20]
 1649 0b7a DB69     		ldr	r3, [r3, #28]
 1650 0b7c 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1651 0b80 0D2B     		cmp	r3, #13
 1652 0b82 40F0DB80 		bne	.L43
 407:.\AdvantageImpl.c ****                 {
 408:.\AdvantageImpl.c ****                     //HERE WE STORE THE LAST TRANSACTION IN EEPROM! ALWAYS THE PREVIOUS TRANSACTION
 409:.\AdvantageImpl.c ****                     //WILL BE OVERWRITTEN AND LOST.
 410:.\AdvantageImpl.c ****                     //IN CASE OF A "CREDIT SALE", THE WHOLE DATA WILL BE STORED IN A SEPARATE MEMOR
 411:.\AdvantageImpl.c ****                     //SINCE IN CASE OF A RF LINK DROP, THE STATE OF THE SALE COULD BE RECOVERED BY 
 412:.\AdvantageImpl.c ****                     LoadEepromPage(EEPROM_DISPENSER_PUMP1_LAYOUT_PAGE);
 1653              		.loc 1 412 0
 1654 0b86 4FF40070 		mov	r0, #512
 1655 0b8a FFF7FEFF 		bl	LoadEepromPage
 413:.\AdvantageImpl.c ****                     if(GetEepromBuffer()[0] == ((pjob->_ppump->_rxbuffer[0x04] & 0x0F) + 1))
 1656              		.loc 1 413 0
 1657 0b8e FFF7FEFF 		bl	GetEepromBuffer
 1658 0b92 0346     		mov	r3, r0
 1659 0b94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1660 0b96 1A46     		mov	r2, r3
 1661 0b98 7B69     		ldr	r3, [r7, #20]
 1662 0b9a DB69     		ldr	r3, [r3, #28]
 1663 0b9c 93F8A431 		ldrb	r3, [r3, #420]	@ zero_extendqisi2
 1664 0ba0 03F00F03 		and	r3, r3, #15
 1665 0ba4 0133     		adds	r3, r3, #1
 1666 0ba6 9A42     		cmp	r2, r3
 1667 0ba8 22D1     		bne	.L44
 414:.\AdvantageImpl.c ****                     {
 415:.\AdvantageImpl.c ****                         ClearEepromBuffer();
 1668              		.loc 1 415 0
 1669 0baa FFF7FEFF 		bl	ClearEepromBuffer
 416:.\AdvantageImpl.c ****                         //Storing the current Date/Time for this transaction
 417:.\AdvantageImpl.c ****                         memcpy(GetEepromBuffer(), GetRtcBuffer(), 0x07);
 1670              		.loc 1 417 0
 1671 0bae FFF7FEFF 		bl	GetEepromBuffer
 1672 0bb2 0446     		mov	r4, r0
 1673 0bb4 FFF7FEFF 		bl	GetRtcBuffer
 1674 0bb8 0346     		mov	r3, r0
 1675 0bba 2046     		mov	r0, r4
 1676 0bbc 1946     		mov	r1, r3
 1677 0bbe 0722     		movs	r2, #7
 1678 0bc0 FFF7FEFF 		bl	memcpy
 418:.\AdvantageImpl.c ****                         memcpy(&GetEepromBuffer()[0x07], pjob->_ppump->_rxbuffer, pjob->_ppump->_rx
 1679              		.loc 1 418 0
 1680 0bc4 FFF7FEFF 		bl	GetEepromBuffer
 1681 0bc8 0346     		mov	r3, r0
 1682 0bca D91D     		adds	r1, r3, #7
 1683 0bcc 7B69     		ldr	r3, [r7, #20]
 1684 0bce DB69     		ldr	r3, [r3, #28]
 1685 0bd0 03F5D072 		add	r2, r3, #416
 1686 0bd4 7B69     		ldr	r3, [r7, #20]
 1687 0bd6 DB69     		ldr	r3, [r3, #28]
 1688 0bd8 B3F82033 		ldrh	r3, [r3, #800]
 1689 0bdc 0846     		mov	r0, r1
 1690 0bde 1146     		mov	r1, r2
 1691 0be0 1A46     		mov	r2, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 38


 1692 0be2 FFF7FEFF 		bl	memcpy
 419:.\AdvantageImpl.c ****                         StoreEepromPage(EEPROM_DISPENSER_PUMP12_TRANSACTION_PAGE);
 1693              		.loc 1 419 0
 1694 0be6 4FF4C860 		mov	r0, #1600
 1695 0bea FFF7FEFF 		bl	StoreEepromPage
 1696 0bee 81E1     		b	.L48
 1697              	.L44:
 420:.\AdvantageImpl.c ****                     }
 421:.\AdvantageImpl.c ****                     else
 422:.\AdvantageImpl.c ****                     {
 423:.\AdvantageImpl.c ****                         ClearEepromBuffer();
 1698              		.loc 1 423 0
 1699 0bf0 FFF7FEFF 		bl	ClearEepromBuffer
 424:.\AdvantageImpl.c ****                         LoadEepromPage(EEPROM_DISPENSER_PUMP2_LAYOUT_PAGE);
 1700              		.loc 1 424 0
 1701 0bf4 4FF41070 		mov	r0, #576
 1702 0bf8 FFF7FEFF 		bl	LoadEepromPage
 425:.\AdvantageImpl.c ****                         if(GetEepromBuffer()[0] == ((pjob->_ppump->_rxbuffer[0x04] & 0x0F) + 1))
 1703              		.loc 1 425 0
 1704 0bfc FFF7FEFF 		bl	GetEepromBuffer
 1705 0c00 0346     		mov	r3, r0
 1706 0c02 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1707 0c04 1A46     		mov	r2, r3
 1708 0c06 7B69     		ldr	r3, [r7, #20]
 1709 0c08 DB69     		ldr	r3, [r3, #28]
 1710 0c0a 93F8A431 		ldrb	r3, [r3, #420]	@ zero_extendqisi2
 1711 0c0e 03F00F03 		and	r3, r3, #15
 1712 0c12 0133     		adds	r3, r3, #1
 1713 0c14 9A42     		cmp	r2, r3
 1714 0c16 22D1     		bne	.L46
 426:.\AdvantageImpl.c ****                         {
 427:.\AdvantageImpl.c ****                             ClearEepromBuffer();
 1715              		.loc 1 427 0
 1716 0c18 FFF7FEFF 		bl	ClearEepromBuffer
 428:.\AdvantageImpl.c ****                             //Storing the current Date/Time for this transaction
 429:.\AdvantageImpl.c ****                             memcpy(GetEepromBuffer(), GetRtcBuffer(), 0x07);
 1717              		.loc 1 429 0
 1718 0c1c FFF7FEFF 		bl	GetEepromBuffer
 1719 0c20 0446     		mov	r4, r0
 1720 0c22 FFF7FEFF 		bl	GetRtcBuffer
 1721 0c26 0346     		mov	r3, r0
 1722 0c28 2046     		mov	r0, r4
 1723 0c2a 1946     		mov	r1, r3
 1724 0c2c 0722     		movs	r2, #7
 1725 0c2e FFF7FEFF 		bl	memcpy
 430:.\AdvantageImpl.c ****                             memcpy(&GetEepromBuffer()[0x07], pjob->_ppump->_rxbuffer, pjob->_ppump-
 1726              		.loc 1 430 0
 1727 0c32 FFF7FEFF 		bl	GetEepromBuffer
 1728 0c36 0346     		mov	r3, r0
 1729 0c38 D91D     		adds	r1, r3, #7
 1730 0c3a 7B69     		ldr	r3, [r7, #20]
 1731 0c3c DB69     		ldr	r3, [r3, #28]
 1732 0c3e 03F5D072 		add	r2, r3, #416
 1733 0c42 7B69     		ldr	r3, [r7, #20]
 1734 0c44 DB69     		ldr	r3, [r3, #28]
 1735 0c46 B3F82033 		ldrh	r3, [r3, #800]
 1736 0c4a 0846     		mov	r0, r1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 39


 1737 0c4c 1146     		mov	r1, r2
 1738 0c4e 1A46     		mov	r2, r3
 1739 0c50 FFF7FEFF 		bl	memcpy
 431:.\AdvantageImpl.c ****                             StoreEepromPage(EEPROM_DISPENSER_PUMP22_TRANSACTION_PAGE);
 1740              		.loc 1 431 0
 1741 0c54 4FF4E860 		mov	r0, #1856
 1742 0c58 FFF7FEFF 		bl	StoreEepromPage
 1743 0c5c 4AE1     		b	.L48
 1744              	.L46:
 432:.\AdvantageImpl.c ****                         }
 433:.\AdvantageImpl.c ****                         else
 434:.\AdvantageImpl.c ****                         {
 435:.\AdvantageImpl.c ****                             ClearEepromBuffer();
 1745              		.loc 1 435 0
 1746 0c5e FFF7FEFF 		bl	ClearEepromBuffer
 436:.\AdvantageImpl.c ****                             LoadEepromPage(EEPROM_DISPENSER_PUMP3_LAYOUT_PAGE);
 1747              		.loc 1 436 0
 1748 0c62 4FF42070 		mov	r0, #640
 1749 0c66 FFF7FEFF 		bl	LoadEepromPage
 437:.\AdvantageImpl.c ****                             if(GetEepromBuffer()[0] == ((pjob->_ppump->_rxbuffer[0x04] & 0x0F) + 1)
 1750              		.loc 1 437 0
 1751 0c6a FFF7FEFF 		bl	GetEepromBuffer
 1752 0c6e 0346     		mov	r3, r0
 1753 0c70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1754 0c72 1A46     		mov	r2, r3
 1755 0c74 7B69     		ldr	r3, [r7, #20]
 1756 0c76 DB69     		ldr	r3, [r3, #28]
 1757 0c78 93F8A431 		ldrb	r3, [r3, #420]	@ zero_extendqisi2
 1758 0c7c 03F00F03 		and	r3, r3, #15
 1759 0c80 0133     		adds	r3, r3, #1
 1760 0c82 9A42     		cmp	r2, r3
 1761 0c84 22D1     		bne	.L47
 438:.\AdvantageImpl.c ****                             {
 439:.\AdvantageImpl.c ****                                 ClearEepromBuffer();
 1762              		.loc 1 439 0
 1763 0c86 FFF7FEFF 		bl	ClearEepromBuffer
 440:.\AdvantageImpl.c ****                                 //Storing the current Date/Time for this transaction
 441:.\AdvantageImpl.c ****                                 memcpy(GetEepromBuffer(), GetRtcBuffer(), 0x07);
 1764              		.loc 1 441 0
 1765 0c8a FFF7FEFF 		bl	GetEepromBuffer
 1766 0c8e 0446     		mov	r4, r0
 1767 0c90 FFF7FEFF 		bl	GetRtcBuffer
 1768 0c94 0346     		mov	r3, r0
 1769 0c96 2046     		mov	r0, r4
 1770 0c98 1946     		mov	r1, r3
 1771 0c9a 0722     		movs	r2, #7
 1772 0c9c FFF7FEFF 		bl	memcpy
 442:.\AdvantageImpl.c ****                                 memcpy(&GetEepromBuffer()[0x07], pjob->_ppump->_rxbuffer, pjob->_pp
 1773              		.loc 1 442 0
 1774 0ca0 FFF7FEFF 		bl	GetEepromBuffer
 1775 0ca4 0346     		mov	r3, r0
 1776 0ca6 D91D     		adds	r1, r3, #7
 1777 0ca8 7B69     		ldr	r3, [r7, #20]
 1778 0caa DB69     		ldr	r3, [r3, #28]
 1779 0cac 03F5D072 		add	r2, r3, #416
 1780 0cb0 7B69     		ldr	r3, [r7, #20]
 1781 0cb2 DB69     		ldr	r3, [r3, #28]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 40


 1782 0cb4 B3F82033 		ldrh	r3, [r3, #800]
 1783 0cb8 0846     		mov	r0, r1
 1784 0cba 1146     		mov	r1, r2
 1785 0cbc 1A46     		mov	r2, r3
 1786 0cbe FFF7FEFF 		bl	memcpy
 443:.\AdvantageImpl.c ****                                 StoreEepromPage(EEPROM_DISPENSER_PUMP32_TRANSACTION_PAGE);
 1787              		.loc 1 443 0
 1788 0cc2 4FF40460 		mov	r0, #2112
 1789 0cc6 FFF7FEFF 		bl	StoreEepromPage
 1790 0cca 13E1     		b	.L48
 1791              	.L47:
 444:.\AdvantageImpl.c ****                             }
 445:.\AdvantageImpl.c ****                             else
 446:.\AdvantageImpl.c ****                             {
 447:.\AdvantageImpl.c ****                                 ClearEepromBuffer();
 1792              		.loc 1 447 0
 1793 0ccc FFF7FEFF 		bl	ClearEepromBuffer
 448:.\AdvantageImpl.c ****                                 LoadEepromPage(EEPROM_DISPENSER_PUMP4_LAYOUT_PAGE);
 1794              		.loc 1 448 0
 1795 0cd0 4FF43070 		mov	r0, #704
 1796 0cd4 FFF7FEFF 		bl	LoadEepromPage
 449:.\AdvantageImpl.c ****                                 if(GetEepromBuffer()[0] == ((pjob->_ppump->_rxbuffer[0x04] & 0x0F) 
 1797              		.loc 1 449 0
 1798 0cd8 FFF7FEFF 		bl	GetEepromBuffer
 1799 0cdc 0346     		mov	r3, r0
 1800 0cde 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1801 0ce0 1A46     		mov	r2, r3
 1802 0ce2 7B69     		ldr	r3, [r7, #20]
 1803 0ce4 DB69     		ldr	r3, [r3, #28]
 1804 0ce6 93F8A431 		ldrb	r3, [r3, #420]	@ zero_extendqisi2
 1805 0cea 03F00F03 		and	r3, r3, #15
 1806 0cee 0133     		adds	r3, r3, #1
 1807 0cf0 9A42     		cmp	r2, r3
 1808 0cf2 40F0FF80 		bne	.L48
 450:.\AdvantageImpl.c ****                                 {
 451:.\AdvantageImpl.c ****                                     ClearEepromBuffer();
 1809              		.loc 1 451 0
 1810 0cf6 FFF7FEFF 		bl	ClearEepromBuffer
 452:.\AdvantageImpl.c ****                                     //Storing the current Date/Time for this transaction
 453:.\AdvantageImpl.c ****                                     memcpy(GetEepromBuffer(), GetRtcBuffer(), 0x07);
 1811              		.loc 1 453 0
 1812 0cfa FFF7FEFF 		bl	GetEepromBuffer
 1813 0cfe 0446     		mov	r4, r0
 1814 0d00 FFF7FEFF 		bl	GetRtcBuffer
 1815 0d04 0346     		mov	r3, r0
 1816 0d06 2046     		mov	r0, r4
 1817 0d08 1946     		mov	r1, r3
 1818 0d0a 0722     		movs	r2, #7
 1819 0d0c FFF7FEFF 		bl	memcpy
 454:.\AdvantageImpl.c ****                                     memcpy(&GetEepromBuffer()[0x07], pjob->_ppump->_rxbuffer, pjob-
 1820              		.loc 1 454 0
 1821 0d10 FFF7FEFF 		bl	GetEepromBuffer
 1822 0d14 0346     		mov	r3, r0
 1823 0d16 D91D     		adds	r1, r3, #7
 1824 0d18 7B69     		ldr	r3, [r7, #20]
 1825 0d1a DB69     		ldr	r3, [r3, #28]
 1826 0d1c 03F5D072 		add	r2, r3, #416
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 41


 1827 0d20 7B69     		ldr	r3, [r7, #20]
 1828 0d22 DB69     		ldr	r3, [r3, #28]
 1829 0d24 B3F82033 		ldrh	r3, [r3, #800]
 1830 0d28 0846     		mov	r0, r1
 1831 0d2a 1146     		mov	r1, r2
 1832 0d2c 1A46     		mov	r2, r3
 1833 0d2e FFF7FEFF 		bl	memcpy
 455:.\AdvantageImpl.c ****                                     StoreEepromPage(EEPROM_DISPENSER_PUMP42_TRANSACTION_PAGE);
 1834              		.loc 1 455 0
 1835 0d32 4FF41460 		mov	r0, #2368
 1836 0d36 FFF7FEFF 		bl	StoreEepromPage
 1837 0d3a DBE0     		b	.L48
 1838              	.L43:
 456:.\AdvantageImpl.c ****                                 }
 457:.\AdvantageImpl.c ****                             }
 458:.\AdvantageImpl.c ****                         }
 459:.\AdvantageImpl.c ****                     }
 460:.\AdvantageImpl.c ****                 }else{//CREDIT TRANSACTION
 461:.\AdvantageImpl.c ****                     //HERE WE STORE THE LAST TRANSACTION IN EEPROM! ALWAYS THE PREVIOUS TRANSACTION
 462:.\AdvantageImpl.c ****                     //WILL BE OVERWRITTEN AND LOST.
 463:.\AdvantageImpl.c ****                     //IN CASE OF A "CREDIT SALE", THE WHOLE DATA WILL BE STORED IN A SEPARATE MEMOR
 464:.\AdvantageImpl.c ****                     //SINCE IN CASE OF A RF LINK DROP, THE STATE OF THE SALE COULD BE RECOVERED BY 
 465:.\AdvantageImpl.c ****                     LoadEepromPage(EEPROM_DISPENSER_PUMP1_LAYOUT_PAGE);
 1839              		.loc 1 465 0
 1840 0d3c 4FF40070 		mov	r0, #512
 1841 0d40 FFF7FEFF 		bl	LoadEepromPage
 466:.\AdvantageImpl.c ****                     if(GetEepromBuffer()[0] == ((pjob->_ppump->_rxbuffer[0x04] & 0x0F) + 1))
 1842              		.loc 1 466 0
 1843 0d44 FFF7FEFF 		bl	GetEepromBuffer
 1844 0d48 0346     		mov	r3, r0
 1845 0d4a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1846 0d4c 1A46     		mov	r2, r3
 1847 0d4e 7B69     		ldr	r3, [r7, #20]
 1848 0d50 DB69     		ldr	r3, [r3, #28]
 1849 0d52 93F8A431 		ldrb	r3, [r3, #420]	@ zero_extendqisi2
 1850 0d56 03F00F03 		and	r3, r3, #15
 1851 0d5a 0133     		adds	r3, r3, #1
 1852 0d5c 9A42     		cmp	r2, r3
 1853 0d5e 22D1     		bne	.L49
 467:.\AdvantageImpl.c ****                     {
 468:.\AdvantageImpl.c ****                         ClearEepromBuffer();
 1854              		.loc 1 468 0
 1855 0d60 FFF7FEFF 		bl	ClearEepromBuffer
 469:.\AdvantageImpl.c ****                         //Storing the current Date/Time for this transaction
 470:.\AdvantageImpl.c ****                         memcpy(GetEepromBuffer(), GetRtcBuffer(), 0x07);
 1856              		.loc 1 470 0
 1857 0d64 FFF7FEFF 		bl	GetEepromBuffer
 1858 0d68 0446     		mov	r4, r0
 1859 0d6a FFF7FEFF 		bl	GetRtcBuffer
 1860 0d6e 0346     		mov	r3, r0
 1861 0d70 2046     		mov	r0, r4
 1862 0d72 1946     		mov	r1, r3
 1863 0d74 0722     		movs	r2, #7
 1864 0d76 FFF7FEFF 		bl	memcpy
 471:.\AdvantageImpl.c ****                         memcpy(&GetEepromBuffer()[0x07], pjob->_ppump->_rxbuffer, pjob->_ppump->_rx
 1865              		.loc 1 471 0
 1866 0d7a FFF7FEFF 		bl	GetEepromBuffer
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 42


 1867 0d7e 0346     		mov	r3, r0
 1868 0d80 D91D     		adds	r1, r3, #7
 1869 0d82 7B69     		ldr	r3, [r7, #20]
 1870 0d84 DB69     		ldr	r3, [r3, #28]
 1871 0d86 03F5D072 		add	r2, r3, #416
 1872 0d8a 7B69     		ldr	r3, [r7, #20]
 1873 0d8c DB69     		ldr	r3, [r3, #28]
 1874 0d8e B3F82033 		ldrh	r3, [r3, #800]
 1875 0d92 0846     		mov	r0, r1
 1876 0d94 1146     		mov	r1, r2
 1877 0d96 1A46     		mov	r2, r3
 1878 0d98 FFF7FEFF 		bl	memcpy
 472:.\AdvantageImpl.c ****                         StoreEepromPage(EEPROM_DISPENSER_PUMP14_TRANSACTION_PAGE);
 1879              		.loc 1 472 0
 1880 0d9c 4FF4D860 		mov	r0, #1728
 1881 0da0 FFF7FEFF 		bl	StoreEepromPage
 1882 0da4 A6E0     		b	.L48
 1883              	.L49:
 473:.\AdvantageImpl.c ****                     }
 474:.\AdvantageImpl.c ****                     else
 475:.\AdvantageImpl.c ****                     {
 476:.\AdvantageImpl.c ****                         ClearEepromBuffer();
 1884              		.loc 1 476 0
 1885 0da6 FFF7FEFF 		bl	ClearEepromBuffer
 477:.\AdvantageImpl.c ****                         LoadEepromPage(EEPROM_DISPENSER_PUMP2_LAYOUT_PAGE);
 1886              		.loc 1 477 0
 1887 0daa 4FF41070 		mov	r0, #576
 1888 0dae FFF7FEFF 		bl	LoadEepromPage
 478:.\AdvantageImpl.c ****                         if(GetEepromBuffer()[0] == ((pjob->_ppump->_rxbuffer[0x04] & 0x0F) + 1))
 1889              		.loc 1 478 0
 1890 0db2 FFF7FEFF 		bl	GetEepromBuffer
 1891 0db6 0346     		mov	r3, r0
 1892 0db8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1893 0dba 1A46     		mov	r2, r3
 1894 0dbc 7B69     		ldr	r3, [r7, #20]
 1895 0dbe DB69     		ldr	r3, [r3, #28]
 1896 0dc0 93F8A431 		ldrb	r3, [r3, #420]	@ zero_extendqisi2
 1897 0dc4 03F00F03 		and	r3, r3, #15
 1898 0dc8 0133     		adds	r3, r3, #1
 1899 0dca 9A42     		cmp	r2, r3
 1900 0dcc 22D1     		bne	.L50
 479:.\AdvantageImpl.c ****                         {
 480:.\AdvantageImpl.c ****                             ClearEepromBuffer();
 1901              		.loc 1 480 0
 1902 0dce FFF7FEFF 		bl	ClearEepromBuffer
 481:.\AdvantageImpl.c ****                             //Storing the current Date/Time for this transaction
 482:.\AdvantageImpl.c ****                             memcpy(GetEepromBuffer(), GetRtcBuffer(), 0x07);
 1903              		.loc 1 482 0
 1904 0dd2 FFF7FEFF 		bl	GetEepromBuffer
 1905 0dd6 0446     		mov	r4, r0
 1906 0dd8 FFF7FEFF 		bl	GetRtcBuffer
 1907 0ddc 0346     		mov	r3, r0
 1908 0dde 2046     		mov	r0, r4
 1909 0de0 1946     		mov	r1, r3
 1910 0de2 0722     		movs	r2, #7
 1911 0de4 FFF7FEFF 		bl	memcpy
 483:.\AdvantageImpl.c ****                             memcpy(&GetEepromBuffer()[0x07], pjob->_ppump->_rxbuffer, pjob->_ppump-
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 43


 1912              		.loc 1 483 0
 1913 0de8 FFF7FEFF 		bl	GetEepromBuffer
 1914 0dec 0346     		mov	r3, r0
 1915 0dee D91D     		adds	r1, r3, #7
 1916 0df0 7B69     		ldr	r3, [r7, #20]
 1917 0df2 DB69     		ldr	r3, [r3, #28]
 1918 0df4 03F5D072 		add	r2, r3, #416
 1919 0df8 7B69     		ldr	r3, [r7, #20]
 1920 0dfa DB69     		ldr	r3, [r3, #28]
 1921 0dfc B3F82033 		ldrh	r3, [r3, #800]
 1922 0e00 0846     		mov	r0, r1
 1923 0e02 1146     		mov	r1, r2
 1924 0e04 1A46     		mov	r2, r3
 1925 0e06 FFF7FEFF 		bl	memcpy
 484:.\AdvantageImpl.c ****                             StoreEepromPage(EEPROM_DISPENSER_PUMP24_TRANSACTION_PAGE);
 1926              		.loc 1 484 0
 1927 0e0a 4FF4F860 		mov	r0, #1984
 1928 0e0e FFF7FEFF 		bl	StoreEepromPage
 1929 0e12 6FE0     		b	.L48
 1930              	.L50:
 485:.\AdvantageImpl.c ****                         }
 486:.\AdvantageImpl.c ****                         else
 487:.\AdvantageImpl.c ****                         {
 488:.\AdvantageImpl.c ****                             ClearEepromBuffer();
 1931              		.loc 1 488 0
 1932 0e14 FFF7FEFF 		bl	ClearEepromBuffer
 489:.\AdvantageImpl.c ****                             LoadEepromPage(EEPROM_DISPENSER_PUMP3_LAYOUT_PAGE);
 1933              		.loc 1 489 0
 1934 0e18 4FF42070 		mov	r0, #640
 1935 0e1c FFF7FEFF 		bl	LoadEepromPage
 490:.\AdvantageImpl.c ****                             if(GetEepromBuffer()[0] == ((pjob->_ppump->_rxbuffer[0x04] & 0x0F) + 1)
 1936              		.loc 1 490 0
 1937 0e20 FFF7FEFF 		bl	GetEepromBuffer
 1938 0e24 0346     		mov	r3, r0
 1939 0e26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1940 0e28 1A46     		mov	r2, r3
 1941 0e2a 7B69     		ldr	r3, [r7, #20]
 1942 0e2c DB69     		ldr	r3, [r3, #28]
 1943 0e2e 93F8A431 		ldrb	r3, [r3, #420]	@ zero_extendqisi2
 1944 0e32 03F00F03 		and	r3, r3, #15
 1945 0e36 0133     		adds	r3, r3, #1
 1946 0e38 9A42     		cmp	r2, r3
 1947 0e3a 25D1     		bne	.L51
 491:.\AdvantageImpl.c ****                             {
 492:.\AdvantageImpl.c ****                                 ClearEepromBuffer();
 1948              		.loc 1 492 0
 1949 0e3c FFF7FEFF 		bl	ClearEepromBuffer
 493:.\AdvantageImpl.c ****                                 //Storing the current Date/Time for this transaction
 494:.\AdvantageImpl.c ****                                 memcpy(GetEepromBuffer(), GetRtcBuffer(), 0x07);
 1950              		.loc 1 494 0
 1951 0e40 FFF7FEFF 		bl	GetEepromBuffer
 1952 0e44 0446     		mov	r4, r0
 1953 0e46 FFF7FEFF 		bl	GetRtcBuffer
 1954 0e4a 0346     		mov	r3, r0
 1955 0e4c 2046     		mov	r0, r4
 1956 0e4e 1946     		mov	r1, r3
 1957 0e50 0722     		movs	r2, #7
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 44


 1958 0e52 FFF7FEFF 		bl	memcpy
 495:.\AdvantageImpl.c ****                                 memcpy(&GetEepromBuffer()[0x07], pjob->_ppump->_rxbuffer, pjob->_pp
 1959              		.loc 1 495 0
 1960 0e56 FFF7FEFF 		bl	GetEepromBuffer
 1961 0e5a 0346     		mov	r3, r0
 1962 0e5c D91D     		adds	r1, r3, #7
 1963 0e5e 7B69     		ldr	r3, [r7, #20]
 1964 0e60 DB69     		ldr	r3, [r3, #28]
 1965 0e62 03F5D072 		add	r2, r3, #416
 1966 0e66 7B69     		ldr	r3, [r7, #20]
 1967 0e68 DB69     		ldr	r3, [r3, #28]
 1968 0e6a B3F82033 		ldrh	r3, [r3, #800]
 1969 0e6e 0846     		mov	r0, r1
 1970 0e70 1146     		mov	r1, r2
 1971 0e72 1A46     		mov	r2, r3
 1972 0e74 FFF7FEFF 		bl	memcpy
 496:.\AdvantageImpl.c ****                                 StoreEepromPage(EEPROM_DISPENSER_PUMP34_TRANSACTION_PAGE);
 1973              		.loc 1 496 0
 1974 0e78 4FF40C60 		mov	r0, #2240
 1975 0e7c FFF7FEFF 		bl	StoreEepromPage
 1976 0e80 38E0     		b	.L48
 1977              	.L55:
 1978 0e82 00BF     		.align	2
 1979              	.L54:
 1980 0e84 CDCCCCCC 		.word	-858993459
 1981              	.L51:
 497:.\AdvantageImpl.c ****                             }
 498:.\AdvantageImpl.c ****                             else
 499:.\AdvantageImpl.c ****                             {
 500:.\AdvantageImpl.c ****                                 ClearEepromBuffer();
 1982              		.loc 1 500 0
 1983 0e88 FFF7FEFF 		bl	ClearEepromBuffer
 501:.\AdvantageImpl.c ****                                 LoadEepromPage(EEPROM_DISPENSER_PUMP4_LAYOUT_PAGE);
 1984              		.loc 1 501 0
 1985 0e8c 4FF43070 		mov	r0, #704
 1986 0e90 FFF7FEFF 		bl	LoadEepromPage
 502:.\AdvantageImpl.c ****                                 if(GetEepromBuffer()[0] == ((pjob->_ppump->_rxbuffer[0x04] & 0x0F) 
 1987              		.loc 1 502 0
 1988 0e94 FFF7FEFF 		bl	GetEepromBuffer
 1989 0e98 0346     		mov	r3, r0
 1990 0e9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1991 0e9c 1A46     		mov	r2, r3
 1992 0e9e 7B69     		ldr	r3, [r7, #20]
 1993 0ea0 DB69     		ldr	r3, [r3, #28]
 1994 0ea2 93F8A431 		ldrb	r3, [r3, #420]	@ zero_extendqisi2
 1995 0ea6 03F00F03 		and	r3, r3, #15
 1996 0eaa 0133     		adds	r3, r3, #1
 1997 0eac 9A42     		cmp	r2, r3
 1998 0eae 21D1     		bne	.L48
 503:.\AdvantageImpl.c ****                                 {
 504:.\AdvantageImpl.c ****                                     ClearEepromBuffer();
 1999              		.loc 1 504 0
 2000 0eb0 FFF7FEFF 		bl	ClearEepromBuffer
 505:.\AdvantageImpl.c ****                                     //Storing the current Date/Time for this transaction
 506:.\AdvantageImpl.c ****                                     memcpy(GetEepromBuffer(), GetRtcBuffer(), 0x07);
 2001              		.loc 1 506 0
 2002 0eb4 FFF7FEFF 		bl	GetEepromBuffer
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 45


 2003 0eb8 0446     		mov	r4, r0
 2004 0eba FFF7FEFF 		bl	GetRtcBuffer
 2005 0ebe 0346     		mov	r3, r0
 2006 0ec0 2046     		mov	r0, r4
 2007 0ec2 1946     		mov	r1, r3
 2008 0ec4 0722     		movs	r2, #7
 2009 0ec6 FFF7FEFF 		bl	memcpy
 507:.\AdvantageImpl.c ****                                     memcpy(&GetEepromBuffer()[0x07], pjob->_ppump->_rxbuffer, pjob-
 2010              		.loc 1 507 0
 2011 0eca FFF7FEFF 		bl	GetEepromBuffer
 2012 0ece 0346     		mov	r3, r0
 2013 0ed0 D91D     		adds	r1, r3, #7
 2014 0ed2 7B69     		ldr	r3, [r7, #20]
 2015 0ed4 DB69     		ldr	r3, [r3, #28]
 2016 0ed6 03F5D072 		add	r2, r3, #416
 2017 0eda 7B69     		ldr	r3, [r7, #20]
 2018 0edc DB69     		ldr	r3, [r3, #28]
 2019 0ede B3F82033 		ldrh	r3, [r3, #800]
 2020 0ee2 0846     		mov	r0, r1
 2021 0ee4 1146     		mov	r1, r2
 2022 0ee6 1A46     		mov	r2, r3
 2023 0ee8 FFF7FEFF 		bl	memcpy
 508:.\AdvantageImpl.c ****                                     StoreEepromPage(EEPROM_DISPENSER_PUMP44_TRANSACTION_PAGE);
 2024              		.loc 1 508 0
 2025 0eec 4FF41C60 		mov	r0, #2496
 2026 0ef0 FFF7FEFF 		bl	StoreEepromPage
 2027              	.L48:
 509:.\AdvantageImpl.c ****                                 }
 510:.\AdvantageImpl.c ****                             }
 511:.\AdvantageImpl.c ****                         }
 512:.\AdvantageImpl.c ****                     }
 513:.\AdvantageImpl.c ****                 }
 514:.\AdvantageImpl.c ****                 I2CBusUnlock();
 2028              		.loc 1 514 0
 2029 0ef4 FFF7FEFF 		bl	I2CBusUnlock
 2030              	.L34:
 515:.\AdvantageImpl.c ****             }
 516:.\AdvantageImpl.c ****                 
 517:.\AdvantageImpl.c ****             //HERE WE ATTEMPT TO PUSH THE TRANSACTION INTO THE PUMP'S TRANSACTIONAL QUEUE.
 518:.\AdvantageImpl.c ****             //THIS IS DONE ONLY IF THERE IS ROOM IN THE QUEUE, OTHERWISE THIS STATE WON'T
 519:.\AdvantageImpl.c ****             //BE REPORTED TO THE REMOTE PEER.
 520:.\AdvantageImpl.c ****             pjob->_ppump->PumpTransQueueLock(pjob->_ppump);
 2031              		.loc 1 520 0
 2032 0ef8 7B69     		ldr	r3, [r7, #20]
 2033 0efa DB69     		ldr	r3, [r3, #28]
 2034 0efc D3F8443B 		ldr	r3, [r3, #2884]
 2035 0f00 7A69     		ldr	r2, [r7, #20]
 2036 0f02 D269     		ldr	r2, [r2, #28]
 2037 0f04 1046     		mov	r0, r2
 2038 0f06 9847     		blx	r3
 521:.\AdvantageImpl.c ****             PNEAR_PUMPTRANSACTIONALSTATEPTR pts = pjob->_ppump->PumpTransQueueAllocate(pjob->_ppump
 2039              		.loc 1 521 0
 2040 0f08 7B69     		ldr	r3, [r7, #20]
 2041 0f0a DB69     		ldr	r3, [r3, #28]
 2042 0f0c D3F8583B 		ldr	r3, [r3, #2904]
 2043 0f10 7A69     		ldr	r2, [r7, #20]
 2044 0f12 D269     		ldr	r2, [r2, #28]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 46


 2045 0f14 1046     		mov	r0, r2
 2046 0f16 9847     		blx	r3
 2047 0f18 B860     		str	r0, [r7, #8]
 522:.\AdvantageImpl.c ****             pjob->_ppump->PumpTransQueueUnlock(pjob->_ppump);
 2048              		.loc 1 522 0
 2049 0f1a 7B69     		ldr	r3, [r7, #20]
 2050 0f1c DB69     		ldr	r3, [r3, #28]
 2051 0f1e D3F8483B 		ldr	r3, [r3, #2888]
 2052 0f22 7A69     		ldr	r2, [r7, #20]
 2053 0f24 D269     		ldr	r2, [r2, #28]
 2054 0f26 1046     		mov	r0, r2
 2055 0f28 9847     		blx	r3
 523:.\AdvantageImpl.c ****             if(pts)
 2056              		.loc 1 523 0
 2057 0f2a BB68     		ldr	r3, [r7, #8]
 2058 0f2c 002B     		cmp	r3, #0
 2059 0f2e 31D0     		beq	.L13
 524:.\AdvantageImpl.c ****             {
 525:.\AdvantageImpl.c ****                 pts->_transtate = RF_MUX_CASH_SALE_END_REPORT_RESPONSE;
 2060              		.loc 1 525 0
 2061 0f30 BB68     		ldr	r3, [r7, #8]
 2062 0f32 A422     		movs	r2, #164
 2063 0f34 5A70     		strb	r2, [r3, #1]
 526:.\AdvantageImpl.c ****                 memcpy(pts->_buffer, pjob->_ppump->_rxbuffer, pjob->_ppump->_rxbuffersize);
 2064              		.loc 1 526 0
 2065 0f36 BB68     		ldr	r3, [r7, #8]
 2066 0f38 991C     		adds	r1, r3, #2
 2067 0f3a 7B69     		ldr	r3, [r7, #20]
 2068 0f3c DB69     		ldr	r3, [r3, #28]
 2069 0f3e 03F5D072 		add	r2, r3, #416
 2070 0f42 7B69     		ldr	r3, [r7, #20]
 2071 0f44 DB69     		ldr	r3, [r3, #28]
 2072 0f46 B3F82033 		ldrh	r3, [r3, #800]
 2073 0f4a 0846     		mov	r0, r1
 2074 0f4c 1146     		mov	r1, r2
 2075 0f4e 1A46     		mov	r2, r3
 2076 0f50 FFF7FEFF 		bl	memcpy
 527:.\AdvantageImpl.c ****                 pts->_buffersize = pjob->_ppump->_rxbuffersize;
 2077              		.loc 1 527 0
 2078 0f54 7B69     		ldr	r3, [r7, #20]
 2079 0f56 DB69     		ldr	r3, [r3, #28]
 2080 0f58 B3F82023 		ldrh	r2, [r3, #800]
 2081 0f5c BB68     		ldr	r3, [r7, #8]
 2082 0f5e A3F80221 		strh	r2, [r3, #258]	@ movhi
 528:.\AdvantageImpl.c ****                 
 529:.\AdvantageImpl.c ****                 pjob->_ppump->PumpTransQueueLock(pjob->_ppump);
 2083              		.loc 1 529 0
 2084 0f62 7B69     		ldr	r3, [r7, #20]
 2085 0f64 DB69     		ldr	r3, [r3, #28]
 2086 0f66 D3F8443B 		ldr	r3, [r3, #2884]
 2087 0f6a 7A69     		ldr	r2, [r7, #20]
 2088 0f6c D269     		ldr	r2, [r2, #28]
 2089 0f6e 1046     		mov	r0, r2
 2090 0f70 9847     		blx	r3
 530:.\AdvantageImpl.c ****                 pjob->_ppump->PumpTransQueueEnqueue(pjob->_ppump, pts);
 2091              		.loc 1 530 0
 2092 0f72 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 47


 2093 0f74 DB69     		ldr	r3, [r3, #28]
 2094 0f76 D3F8503B 		ldr	r3, [r3, #2896]
 2095 0f7a 7A69     		ldr	r2, [r7, #20]
 2096 0f7c D269     		ldr	r2, [r2, #28]
 2097 0f7e 1046     		mov	r0, r2
 2098 0f80 B968     		ldr	r1, [r7, #8]
 2099 0f82 9847     		blx	r3
 531:.\AdvantageImpl.c ****                 pjob->_ppump->PumpTransQueueUnlock(pjob->_ppump);
 2100              		.loc 1 531 0
 2101 0f84 7B69     		ldr	r3, [r7, #20]
 2102 0f86 DB69     		ldr	r3, [r3, #28]
 2103 0f88 D3F8483B 		ldr	r3, [r3, #2888]
 2104 0f8c 7A69     		ldr	r2, [r7, #20]
 2105 0f8e D269     		ldr	r2, [r2, #28]
 2106 0f90 1046     		mov	r0, r2
 2107 0f92 9847     		blx	r3
 2108              	.L13:
 2109              	.LBE3:
 532:.\AdvantageImpl.c ****             }
 533:.\AdvantageImpl.c ****             
 534:.\AdvantageImpl.c ****         }  
 535:.\AdvantageImpl.c ****     }
 536:.\AdvantageImpl.c **** }
 2110              		.loc 1 536 0
 2111 0f94 1837     		adds	r7, r7, #24
 2112              		.cfi_def_cfa_offset 16
 2113 0f96 BD46     		mov	sp, r7
 2114              		.cfi_def_cfa_register 13
 2115              		@ sp needed
 2116 0f98 B0BD     		pop	{r4, r5, r7, pc}
 2117              		.cfi_endproc
 2118              	.LFE66:
 2119              		.size	ProcessPumpTransactionData, .-ProcessPumpTransactionData
 2120 0f9a 00BF     		.section	.text.ProcessPumpTotalsDataReport,"ax",%progbits
 2121              		.align	2
 2122              		.global	ProcessPumpTotalsDataReport
 2123              		.thumb
 2124              		.thumb_func
 2125              		.type	ProcessPumpTotalsDataReport, %function
 2126              	ProcessPumpTotalsDataReport:
 2127              	.LFB67:
 537:.\AdvantageImpl.c **** 
 538:.\AdvantageImpl.c **** //@Created By: HIJH
 539:.\AdvantageImpl.c **** //@Septembre de 2016
 540:.\AdvantageImpl.c **** void ProcessPumpTotalsDataReport(void *pparam)
 541:.\AdvantageImpl.c **** {
 2128              		.loc 1 541 0
 2129              		.cfi_startproc
 2130              		@ args = 0, pretend = 0, frame = 24
 2131              		@ frame_needed = 1, uses_anonymous_args = 0
 2132 0000 80B5     		push	{r7, lr}
 2133              		.cfi_def_cfa_offset 8
 2134              		.cfi_offset 7, -8
 2135              		.cfi_offset 14, -4
 2136 0002 86B0     		sub	sp, sp, #24
 2137              		.cfi_def_cfa_offset 32
 2138 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 48


 2139              		.cfi_def_cfa_register 7
 2140 0006 7860     		str	r0, [r7, #4]
 542:.\AdvantageImpl.c ****     PPUMPTRANSACTIONJOBCONTEXTPTR pjob = (PPUMPTRANSACTIONJOBCONTEXTPTR)pparam;
 2141              		.loc 1 542 0
 2142 0008 7B68     		ldr	r3, [r7, #4]
 2143 000a 7B61     		str	r3, [r7, #20]
 543:.\AdvantageImpl.c ****     if(pjob)
 2144              		.loc 1 543 0
 2145 000c 7B69     		ldr	r3, [r7, #20]
 2146 000e 002B     		cmp	r3, #0
 2147 0010 00F09A80 		beq	.L56
 2148              	.LBB6:
 544:.\AdvantageImpl.c ****     {
 545:.\AdvantageImpl.c ****         bool dataok = true;
 2149              		.loc 1 545 0
 2150 0014 0123     		movs	r3, #1
 2151 0016 FB74     		strb	r3, [r7, #19]
 546:.\AdvantageImpl.c ****         uint8 numhoses = 0x00;
 2152              		.loc 1 546 0
 2153 0018 0023     		movs	r3, #0
 2154 001a BB74     		strb	r3, [r7, #18]
 547:.\AdvantageImpl.c ****         switch(pjob->_ppump->_pumpindex)
 2155              		.loc 1 547 0
 2156 001c 7B69     		ldr	r3, [r7, #20]
 2157 001e DB69     		ldr	r3, [r3, #28]
 2158 0020 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2159 0022 002B     		cmp	r3, #0
 2160 0024 02D0     		beq	.L59
 2161 0026 012B     		cmp	r3, #1
 2162 0028 04D0     		beq	.L60
 2163 002a 07E0     		b	.L58
 2164              	.L59:
 548:.\AdvantageImpl.c ****         {
 549:.\AdvantageImpl.c ****             case 0x00:
 550:.\AdvantageImpl.c ****             {
 551:.\AdvantageImpl.c ****                 numhoses = _g_dispenserlayoutinfo._hosesposition1;
 2165              		.loc 1 551 0
 2166 002c 484B     		ldr	r3, .L63
 2167 002e DB78     		ldrb	r3, [r3, #3]
 2168 0030 BB74     		strb	r3, [r7, #18]
 552:.\AdvantageImpl.c ****                 break;
 2169              		.loc 1 552 0
 2170 0032 03E0     		b	.L58
 2171              	.L60:
 553:.\AdvantageImpl.c ****             }
 554:.\AdvantageImpl.c ****             case 0x01:
 555:.\AdvantageImpl.c ****             {
 556:.\AdvantageImpl.c ****                 numhoses = _g_dispenserlayoutinfo._hosesposition2;
 2172              		.loc 1 556 0
 2173 0034 464B     		ldr	r3, .L63
 2174 0036 1B79     		ldrb	r3, [r3, #4]
 2175 0038 BB74     		strb	r3, [r7, #18]
 557:.\AdvantageImpl.c ****                 break;
 2176              		.loc 1 557 0
 2177 003a 00BF     		nop
 2178              	.L58:
 558:.\AdvantageImpl.c ****             }
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 49


 559:.\AdvantageImpl.c ****         }
 560:.\AdvantageImpl.c ****         
 561:.\AdvantageImpl.c **** //        uint8 strmlrc = FindLRC(pjob->_ppump->_rxbuffer);
 562:.\AdvantageImpl.c **** //        uint8 locallrc = GetLRC(pjob->_ppump->_rxbuffer);
 563:.\AdvantageImpl.c **** //        if(strmlrc != locallrc && pjob->_reenqueuecounter < _MAX_RETRIES_)
 564:.\AdvantageImpl.c **** //        {
 565:.\AdvantageImpl.c **** //            pjob->_reenqueuecounter++;
 566:.\AdvantageImpl.c **** //            pjob->_reenqueue = true;
 567:.\AdvantageImpl.c **** //            return;
 568:.\AdvantageImpl.c **** //        }
 569:.\AdvantageImpl.c ****         pjob->_reenqueue = false;
 2179              		.loc 1 569 0
 2180 003c 7B69     		ldr	r3, [r7, #20]
 2181 003e 0022     		movs	r2, #0
 2182 0040 1A70     		strb	r2, [r3]
 570:.\AdvantageImpl.c ****         
 571:.\AdvantageImpl.c ****         pjob->_ppump->PumpTransQueueLock(pjob->_ppump);
 2183              		.loc 1 571 0
 2184 0042 7B69     		ldr	r3, [r7, #20]
 2185 0044 DB69     		ldr	r3, [r3, #28]
 2186 0046 D3F8443B 		ldr	r3, [r3, #2884]
 2187 004a 7A69     		ldr	r2, [r7, #20]
 2188 004c D269     		ldr	r2, [r2, #28]
 2189 004e 1046     		mov	r0, r2
 2190 0050 9847     		blx	r3
 572:.\AdvantageImpl.c ****         bool transtatefound = pjob->_ppump->PumpTransQueueFind(pjob->_ppump, RF_MUX_TOTALS_REPORT_R
 2191              		.loc 1 572 0
 2192 0052 7B69     		ldr	r3, [r7, #20]
 2193 0054 DB69     		ldr	r3, [r3, #28]
 2194 0056 D3F84C3B 		ldr	r3, [r3, #2892]
 2195 005a 7A69     		ldr	r2, [r7, #20]
 2196 005c D269     		ldr	r2, [r2, #28]
 2197 005e 1046     		mov	r0, r2
 2198 0060 E821     		movs	r1, #232
 2199 0062 9847     		blx	r3
 2200 0064 0346     		mov	r3, r0
 2201 0066 7B74     		strb	r3, [r7, #17]
 573:.\AdvantageImpl.c ****         PNEAR_PUMPTRANSACTIONALSTATEPTR pts = pjob->_ppump->PumpTransQueueAllocate(pjob->_ppump);
 2202              		.loc 1 573 0
 2203 0068 7B69     		ldr	r3, [r7, #20]
 2204 006a DB69     		ldr	r3, [r3, #28]
 2205 006c D3F8583B 		ldr	r3, [r3, #2904]
 2206 0070 7A69     		ldr	r2, [r7, #20]
 2207 0072 D269     		ldr	r2, [r2, #28]
 2208 0074 1046     		mov	r0, r2
 2209 0076 9847     		blx	r3
 2210 0078 F860     		str	r0, [r7, #12]
 574:.\AdvantageImpl.c ****         pjob->_ppump->PumpTransQueueUnlock(pjob->_ppump);
 2211              		.loc 1 574 0
 2212 007a 7B69     		ldr	r3, [r7, #20]
 2213 007c DB69     		ldr	r3, [r3, #28]
 2214 007e D3F8483B 		ldr	r3, [r3, #2888]
 2215 0082 7A69     		ldr	r2, [r7, #20]
 2216 0084 D269     		ldr	r2, [r2, #28]
 2217 0086 1046     		mov	r0, r2
 2218 0088 9847     		blx	r3
 575:.\AdvantageImpl.c ****         if(pts && !transtatefound)
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 50


 2219              		.loc 1 575 0
 2220 008a FB68     		ldr	r3, [r7, #12]
 2221 008c 002B     		cmp	r3, #0
 2222 008e 38D0     		beq	.L61
 2223              		.loc 1 575 0 is_stmt 0 discriminator 1
 2224 0090 7B7C     		ldrb	r3, [r7, #17]
 2225 0092 83F00103 		eor	r3, r3, #1
 2226 0096 DBB2     		uxtb	r3, r3
 2227 0098 002B     		cmp	r3, #0
 2228 009a 32D0     		beq	.L61
 576:.\AdvantageImpl.c ****         {
 577:.\AdvantageImpl.c ****             pts->_transtate = RF_MUX_TOTALS_REPORT_RESPONSE;
 2229              		.loc 1 577 0 is_stmt 1
 2230 009c FB68     		ldr	r3, [r7, #12]
 2231 009e E822     		movs	r2, #232
 2232 00a0 5A70     		strb	r2, [r3, #1]
 578:.\AdvantageImpl.c ****             
 579:.\AdvantageImpl.c ****             memcpy(pts->_buffer, pjob->_ppump->_rxbuffer, pjob->_ppump->_rxbuffersize);
 2233              		.loc 1 579 0
 2234 00a2 FB68     		ldr	r3, [r7, #12]
 2235 00a4 991C     		adds	r1, r3, #2
 2236 00a6 7B69     		ldr	r3, [r7, #20]
 2237 00a8 DB69     		ldr	r3, [r3, #28]
 2238 00aa 03F5D072 		add	r2, r3, #416
 2239 00ae 7B69     		ldr	r3, [r7, #20]
 2240 00b0 DB69     		ldr	r3, [r3, #28]
 2241 00b2 B3F82033 		ldrh	r3, [r3, #800]
 2242 00b6 0846     		mov	r0, r1
 2243 00b8 1146     		mov	r1, r2
 2244 00ba 1A46     		mov	r2, r3
 2245 00bc FFF7FEFF 		bl	memcpy
 580:.\AdvantageImpl.c ****             pts->_buffersize = pjob->_ppump->_rxbuffersize;
 2246              		.loc 1 580 0
 2247 00c0 7B69     		ldr	r3, [r7, #20]
 2248 00c2 DB69     		ldr	r3, [r3, #28]
 2249 00c4 B3F82023 		ldrh	r2, [r3, #800]
 2250 00c8 FB68     		ldr	r3, [r7, #12]
 2251 00ca A3F80221 		strh	r2, [r3, #258]	@ movhi
 581:.\AdvantageImpl.c ****             
 582:.\AdvantageImpl.c ****             pjob->_ppump->PumpTransQueueLock(pjob->_ppump);
 2252              		.loc 1 582 0
 2253 00ce 7B69     		ldr	r3, [r7, #20]
 2254 00d0 DB69     		ldr	r3, [r3, #28]
 2255 00d2 D3F8443B 		ldr	r3, [r3, #2884]
 2256 00d6 7A69     		ldr	r2, [r7, #20]
 2257 00d8 D269     		ldr	r2, [r2, #28]
 2258 00da 1046     		mov	r0, r2
 2259 00dc 9847     		blx	r3
 583:.\AdvantageImpl.c ****             pjob->_ppump->PumpTransQueueEnqueue(pjob->_ppump, pts);
 2260              		.loc 1 583 0
 2261 00de 7B69     		ldr	r3, [r7, #20]
 2262 00e0 DB69     		ldr	r3, [r3, #28]
 2263 00e2 D3F8503B 		ldr	r3, [r3, #2896]
 2264 00e6 7A69     		ldr	r2, [r7, #20]
 2265 00e8 D269     		ldr	r2, [r2, #28]
 2266 00ea 1046     		mov	r0, r2
 2267 00ec F968     		ldr	r1, [r7, #12]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 51


 2268 00ee 9847     		blx	r3
 584:.\AdvantageImpl.c ****             pjob->_ppump->PumpTransQueueUnlock(pjob->_ppump);
 2269              		.loc 1 584 0
 2270 00f0 7B69     		ldr	r3, [r7, #20]
 2271 00f2 DB69     		ldr	r3, [r3, #28]
 2272 00f4 D3F8483B 		ldr	r3, [r3, #2888]
 2273 00f8 7A69     		ldr	r2, [r7, #20]
 2274 00fa D269     		ldr	r2, [r2, #28]
 2275 00fc 1046     		mov	r0, r2
 2276 00fe 9847     		blx	r3
 2277 0100 18E0     		b	.L62
 2278              	.L61:
 585:.\AdvantageImpl.c ****         }
 586:.\AdvantageImpl.c ****         else
 587:.\AdvantageImpl.c ****         {
 588:.\AdvantageImpl.c ****             pjob->_ppump->PumpTransQueueLock(pjob->_ppump);
 2279              		.loc 1 588 0
 2280 0102 7B69     		ldr	r3, [r7, #20]
 2281 0104 DB69     		ldr	r3, [r3, #28]
 2282 0106 D3F8443B 		ldr	r3, [r3, #2884]
 2283 010a 7A69     		ldr	r2, [r7, #20]
 2284 010c D269     		ldr	r2, [r2, #28]
 2285 010e 1046     		mov	r0, r2
 2286 0110 9847     		blx	r3
 589:.\AdvantageImpl.c ****             pjob->_ppump->PumpTransQueueDeallocate(pjob->_ppump, pts);
 2287              		.loc 1 589 0
 2288 0112 7B69     		ldr	r3, [r7, #20]
 2289 0114 DB69     		ldr	r3, [r3, #28]
 2290 0116 D3F8543B 		ldr	r3, [r3, #2900]
 2291 011a 7A69     		ldr	r2, [r7, #20]
 2292 011c D269     		ldr	r2, [r2, #28]
 2293 011e 1046     		mov	r0, r2
 2294 0120 F968     		ldr	r1, [r7, #12]
 2295 0122 9847     		blx	r3
 590:.\AdvantageImpl.c ****             pjob->_ppump->PumpTransQueueUnlock(pjob->_ppump);
 2296              		.loc 1 590 0
 2297 0124 7B69     		ldr	r3, [r7, #20]
 2298 0126 DB69     		ldr	r3, [r3, #28]
 2299 0128 D3F8483B 		ldr	r3, [r3, #2888]
 2300 012c 7A69     		ldr	r2, [r7, #20]
 2301 012e D269     		ldr	r2, [r2, #28]
 2302 0130 1046     		mov	r0, r2
 2303 0132 9847     		blx	r3
 2304              	.L62:
 591:.\AdvantageImpl.c ****         }
 592:.\AdvantageImpl.c ****         memset(pjob->_ppump->_rxbuffer, 0x00, _PUMP_RX_BUFFER_SIZE_);
 2305              		.loc 1 592 0
 2306 0134 7B69     		ldr	r3, [r7, #20]
 2307 0136 DB69     		ldr	r3, [r3, #28]
 2308 0138 03F5D073 		add	r3, r3, #416
 2309 013c 1846     		mov	r0, r3
 2310 013e 0021     		movs	r1, #0
 2311 0140 4FF4C072 		mov	r2, #384
 2312 0144 FFF7FEFF 		bl	memset
 2313              	.L56:
 2314              	.LBE6:
 593:.\AdvantageImpl.c ****     }
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 52


 594:.\AdvantageImpl.c **** }
 2315              		.loc 1 594 0
 2316 0148 1837     		adds	r7, r7, #24
 2317              		.cfi_def_cfa_offset 8
 2318 014a BD46     		mov	sp, r7
 2319              		.cfi_def_cfa_register 13
 2320              		@ sp needed
 2321 014c 80BD     		pop	{r7, pc}
 2322              	.L64:
 2323 014e 00BF     		.align	2
 2324              	.L63:
 2325 0150 00000000 		.word	_g_dispenserlayoutinfo
 2326              		.cfi_endproc
 2327              	.LFE67:
 2328              		.size	ProcessPumpTotalsDataReport, .-ProcessPumpTotalsDataReport
 2329              		.section	.text.ProcessPumpTotalsDataPpuCheck,"ax",%progbits
 2330              		.align	2
 2331              		.global	ProcessPumpTotalsDataPpuCheck
 2332              		.thumb
 2333              		.thumb_func
 2334              		.type	ProcessPumpTotalsDataPpuCheck, %function
 2335              	ProcessPumpTotalsDataPpuCheck:
 2336              	.LFB68:
 595:.\AdvantageImpl.c **** 
 596:.\AdvantageImpl.c **** //@Created By: HIJH
 597:.\AdvantageImpl.c **** //@Septembre de 2016
 598:.\AdvantageImpl.c **** void ProcessPumpTotalsDataPpuCheck(void *pparam)
 599:.\AdvantageImpl.c **** {
 2337              		.loc 1 599 0
 2338              		.cfi_startproc
 2339              		@ args = 0, pretend = 0, frame = 16
 2340              		@ frame_needed = 1, uses_anonymous_args = 0
 2341 0000 80B5     		push	{r7, lr}
 2342              		.cfi_def_cfa_offset 8
 2343              		.cfi_offset 7, -8
 2344              		.cfi_offset 14, -4
 2345 0002 84B0     		sub	sp, sp, #16
 2346              		.cfi_def_cfa_offset 24
 2347 0004 00AF     		add	r7, sp, #0
 2348              		.cfi_def_cfa_register 7
 2349 0006 7860     		str	r0, [r7, #4]
 600:.\AdvantageImpl.c ****     PPUMPTRANSACTIONJOBCONTEXTPTR pjob = (PPUMPTRANSACTIONJOBCONTEXTPTR)pparam;
 2350              		.loc 1 600 0
 2351 0008 7B68     		ldr	r3, [r7, #4]
 2352 000a FB60     		str	r3, [r7, #12]
 601:.\AdvantageImpl.c ****     if(pjob)
 2353              		.loc 1 601 0
 2354 000c FB68     		ldr	r3, [r7, #12]
 2355 000e 002B     		cmp	r3, #0
 2356 0010 09D0     		beq	.L65
 602:.\AdvantageImpl.c ****     {
 603:.\AdvantageImpl.c **** /*        
 604:.\AdvantageImpl.c ****         
 605:.\AdvantageImpl.c ****         PNEAR_PUMPTRANSACTIONALSTATEPTR pts = pjob->_ppump->PumpTransQueueAllocate(pjob->_ppump);
 606:.\AdvantageImpl.c ****         if(pts)
 607:.\AdvantageImpl.c ****         {
 608:.\AdvantageImpl.c ****             pts->_transtate = _PUMP_POSITION_TRANSREPORT_;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 53


 609:.\AdvantageImpl.c ****             memcpy(pts->_buffer, pjob->_ppump->_rxbuffer, pjob->_ppump->_rxbuffersize);
 610:.\AdvantageImpl.c ****             pts->_buffersize = pjob->_ppump->_rxbuffersize;
 611:.\AdvantageImpl.c ****         }
 612:.\AdvantageImpl.c ****         
 613:.\AdvantageImpl.c ****         
 614:.\AdvantageImpl.c ****         uint8 var = 0;//THIS IS A DUMMY VAR TO DROP THE WARNING IF THERE IS NO ASSIGNMENT!!
 615:.\AdvantageImpl.c ****         uint8 index = 0;
 616:.\AdvantageImpl.c ****         //All indexes were taken according to the documentation
 617:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x02 + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);//Hose id
 618:.\AdvantageImpl.c **** 
 619:.\AdvantageImpl.c ****         //Bytes from index 0x04 + _PUMP_TOTALS_BUFFER_SHIFT_*index to 0x0F + _PUMP_TOTALS_BUFFER_SH
 620:.\AdvantageImpl.c ****         //are the digits for the total fuel volume delivered until now on this pump
 621:.\AdvantageImpl.c ****         //Digits are in BCD format
 622:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x04 + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 623:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x05 + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 624:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x06 + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 625:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x07 + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 626:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x08 + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 627:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x09 + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 628:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x0A + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 629:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x0B + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 630:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x0C + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 631:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x0D + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 632:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x0E + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 633:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x0F + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 634:.\AdvantageImpl.c **** 
 635:.\AdvantageImpl.c ****         //Bytes from index 0x11 + _PUMP_TOTALS_BUFFER_SHIFT_*index to 0x1C + _PUMP_TOTALS_BUFFER_SH
 636:.\AdvantageImpl.c ****         //are the digits for the total money charged until now on this pump
 637:.\AdvantageImpl.c ****         //Digits are in BCD format
 638:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x11 + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 639:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x12 + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 640:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x13 + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 641:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x14 + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 642:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x15 + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 643:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x16 + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 644:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x17 + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 645:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x18 + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 646:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x19 + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 647:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x1A + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 648:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x1B + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 649:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x1C + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 650:.\AdvantageImpl.c ****         
 651:.\AdvantageImpl.c ****         //Bytes from index 0x1E + _PUMP_TOTALS_BUFFER_SHIFT_*index to 0x23 + _PUMP_TOTALS_BUFFER_SH
 652:.\AdvantageImpl.c ****         //are the digits for the reference PPU used on this pump/hose
 653:.\AdvantageImpl.c ****         //Digits are in BCD format
 654:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x1E + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 655:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x1F + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 656:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x20 + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 657:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x21 + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 658:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x22 + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 659:.\AdvantageImpl.c ****         var = (pjob->_ppump->_rxbuffer[0x23 + _PUMP_TOTALS_BUFFER_SHIFT_*index] & 0x0F);
 660:.\AdvantageImpl.c **** */        
 661:.\AdvantageImpl.c ****         memset(pjob->_ppump->_rxbuffer, 0x00, _PUMP_RX_BUFFER_SIZE_);
 2357              		.loc 1 661 0
 2358 0012 FB68     		ldr	r3, [r7, #12]
 2359 0014 DB69     		ldr	r3, [r3, #28]
 2360 0016 03F5D073 		add	r3, r3, #416
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 54


 2361 001a 1846     		mov	r0, r3
 2362 001c 0021     		movs	r1, #0
 2363 001e 4FF4C072 		mov	r2, #384
 2364 0022 FFF7FEFF 		bl	memset
 2365              	.L65:
 662:.\AdvantageImpl.c ****     }
 663:.\AdvantageImpl.c **** }
 2366              		.loc 1 663 0
 2367 0026 1037     		adds	r7, r7, #16
 2368              		.cfi_def_cfa_offset 8
 2369 0028 BD46     		mov	sp, r7
 2370              		.cfi_def_cfa_register 13
 2371              		@ sp needed
 2372 002a 80BD     		pop	{r7, pc}
 2373              		.cfi_endproc
 2374              	.LFE68:
 2375              		.size	ProcessPumpTotalsDataPpuCheck, .-ProcessPumpTotalsDataPpuCheck
 2376              		.section	.text.PumpJobTimeout,"ax",%progbits
 2377              		.align	2
 2378              		.global	PumpJobTimeout
 2379              		.thumb
 2380              		.thumb_func
 2381              		.type	PumpJobTimeout, %function
 2382              	PumpJobTimeout:
 2383              	.LFB69:
 664:.\AdvantageImpl.c **** 
 665:.\AdvantageImpl.c **** //@Created By: HIJH
 666:.\AdvantageImpl.c **** //@Date: Septembre de 2016
 667:.\AdvantageImpl.c **** //This must be used to notify the log registry about the timeout issue
 668:.\AdvantageImpl.c **** void PumpJobTimeout(void *pparam)
 669:.\AdvantageImpl.c **** {
 2384              		.loc 1 669 0
 2385              		.cfi_startproc
 2386              		@ args = 0, pretend = 0, frame = 16
 2387              		@ frame_needed = 1, uses_anonymous_args = 0
 2388              		@ link register save eliminated.
 2389 0000 80B4     		push	{r7}
 2390              		.cfi_def_cfa_offset 4
 2391              		.cfi_offset 7, -4
 2392 0002 85B0     		sub	sp, sp, #20
 2393              		.cfi_def_cfa_offset 24
 2394 0004 00AF     		add	r7, sp, #0
 2395              		.cfi_def_cfa_register 7
 2396 0006 7860     		str	r0, [r7, #4]
 670:.\AdvantageImpl.c ****     PPUMPTRANSACTIONJOBCONTEXTPTR pjob = (PPUMPTRANSACTIONJOBCONTEXTPTR)pparam;
 2397              		.loc 1 670 0
 2398 0008 7B68     		ldr	r3, [r7, #4]
 2399 000a FB60     		str	r3, [r7, #12]
 671:.\AdvantageImpl.c ****     if(pjob)
 2400              		.loc 1 671 0
 2401 000c FB68     		ldr	r3, [r7, #12]
 2402 000e 002B     		cmp	r3, #0
 2403 0010 0CD0     		beq	.L67
 672:.\AdvantageImpl.c ****     {
 673:.\AdvantageImpl.c ****         //Release the Current Loop and log if possible
 674:.\AdvantageImpl.c ****         if(pjob->_retriescounter >= _MAX_RETRIES_)
 2404              		.loc 1 674 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 55


 2405 0012 FB68     		ldr	r3, [r7, #12]
 2406 0014 DB89     		ldrh	r3, [r3, #14]	@ movhi
 2407 0016 9BB2     		uxth	r3, r3
 2408 0018 132B     		cmp	r3, #19
 2409 001a 07D9     		bls	.L67
 675:.\AdvantageImpl.c ****         {
 676:.\AdvantageImpl.c ****             pjob->_ppump->_pumpstate = PUMP_UNKNOWN;
 2410              		.loc 1 676 0
 2411 001c FB68     		ldr	r3, [r7, #12]
 2412 001e DB69     		ldr	r3, [r3, #28]
 2413 0020 FF22     		movs	r2, #255
 2414 0022 9A70     		strb	r2, [r3, #2]
 677:.\AdvantageImpl.c ****             pjob->_ppump->_transhealth = _PUMP_FAIL_;
 2415              		.loc 1 677 0
 2416 0024 FB68     		ldr	r3, [r7, #12]
 2417 0026 DB69     		ldr	r3, [r3, #28]
 2418 0028 0222     		movs	r2, #2
 2419 002a 1A76     		strb	r2, [r3, #24]
 2420              	.L67:
 678:.\AdvantageImpl.c ****         }
 679:.\AdvantageImpl.c ****     }
 680:.\AdvantageImpl.c **** }
 2421              		.loc 1 680 0
 2422 002c 1437     		adds	r7, r7, #20
 2423              		.cfi_def_cfa_offset 4
 2424 002e BD46     		mov	sp, r7
 2425              		.cfi_def_cfa_register 13
 2426              		@ sp needed
 2427 0030 5DF8047B 		ldr	r7, [sp], #4
 2428              		.cfi_restore 7
 2429              		.cfi_def_cfa_offset 0
 2430 0034 7047     		bx	lr
 2431              		.cfi_endproc
 2432              	.LFE69:
 2433              		.size	PumpJobTimeout, .-PumpJobTimeout
 2434 0036 00BF     		.section	.text.PumpStateJobTimeout,"ax",%progbits
 2435              		.align	2
 2436              		.global	PumpStateJobTimeout
 2437              		.thumb
 2438              		.thumb_func
 2439              		.type	PumpStateJobTimeout, %function
 2440              	PumpStateJobTimeout:
 2441              	.LFB70:
 681:.\AdvantageImpl.c **** 
 682:.\AdvantageImpl.c **** //@Created By: HIJH
 683:.\AdvantageImpl.c **** //@Date: Septembre de 2016
 684:.\AdvantageImpl.c **** //This must be used to notify the log registry about the timeout issue
 685:.\AdvantageImpl.c **** void PumpStateJobTimeout(void *pparam)
 686:.\AdvantageImpl.c **** {
 2442              		.loc 1 686 0
 2443              		.cfi_startproc
 2444              		@ args = 0, pretend = 0, frame = 16
 2445              		@ frame_needed = 1, uses_anonymous_args = 0
 2446              		@ link register save eliminated.
 2447 0000 80B4     		push	{r7}
 2448              		.cfi_def_cfa_offset 4
 2449              		.cfi_offset 7, -4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 56


 2450 0002 85B0     		sub	sp, sp, #20
 2451              		.cfi_def_cfa_offset 24
 2452 0004 00AF     		add	r7, sp, #0
 2453              		.cfi_def_cfa_register 7
 2454 0006 7860     		str	r0, [r7, #4]
 687:.\AdvantageImpl.c ****     PPUMPTRANSACTIONJOBCONTEXTPTR pjob = (PPUMPTRANSACTIONJOBCONTEXTPTR)pparam;
 2455              		.loc 1 687 0
 2456 0008 7B68     		ldr	r3, [r7, #4]
 2457 000a FB60     		str	r3, [r7, #12]
 688:.\AdvantageImpl.c ****     if(pjob)
 2458              		.loc 1 688 0
 2459 000c FB68     		ldr	r3, [r7, #12]
 2460 000e 002B     		cmp	r3, #0
 2461 0010 0CD0     		beq	.L69
 689:.\AdvantageImpl.c ****     {
 690:.\AdvantageImpl.c ****         //Release the Current Loop and log if possible
 691:.\AdvantageImpl.c ****         if(pjob->_retriescounter >= _MAX_RETRIES_)
 2462              		.loc 1 691 0
 2463 0012 FB68     		ldr	r3, [r7, #12]
 2464 0014 DB89     		ldrh	r3, [r3, #14]	@ movhi
 2465 0016 9BB2     		uxth	r3, r3
 2466 0018 132B     		cmp	r3, #19
 2467 001a 07D9     		bls	.L69
 692:.\AdvantageImpl.c ****         {
 693:.\AdvantageImpl.c ****             pjob->_ppump->_pumpstate = PUMP_UNKNOWN;
 2468              		.loc 1 693 0
 2469 001c FB68     		ldr	r3, [r7, #12]
 2470 001e DB69     		ldr	r3, [r3, #28]
 2471 0020 FF22     		movs	r2, #255
 2472 0022 9A70     		strb	r2, [r3, #2]
 694:.\AdvantageImpl.c ****             pjob->_ppump->_transhealth = _PUMP_FAIL_;
 2473              		.loc 1 694 0
 2474 0024 FB68     		ldr	r3, [r7, #12]
 2475 0026 DB69     		ldr	r3, [r3, #28]
 2476 0028 0222     		movs	r2, #2
 2477 002a 1A76     		strb	r2, [r3, #24]
 2478              	.L69:
 695:.\AdvantageImpl.c ****         }
 696:.\AdvantageImpl.c ****     }
 697:.\AdvantageImpl.c **** }
 2479              		.loc 1 697 0
 2480 002c 1437     		adds	r7, r7, #20
 2481              		.cfi_def_cfa_offset 4
 2482 002e BD46     		mov	sp, r7
 2483              		.cfi_def_cfa_register 13
 2484              		@ sp needed
 2485 0030 5DF8047B 		ldr	r7, [sp], #4
 2486              		.cfi_restore 7
 2487              		.cfi_def_cfa_offset 0
 2488 0034 7047     		bx	lr
 2489              		.cfi_endproc
 2490              	.LFE70:
 2491              		.size	PumpStateJobTimeout, .-PumpStateJobTimeout
 2492 0036 00BF     		.section	.text.PumpAuthorization,"ax",%progbits
 2493              		.align	2
 2494              		.global	PumpAuthorization
 2495              		.thumb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 57


 2496              		.thumb_func
 2497              		.type	PumpAuthorization, %function
 2498              	PumpAuthorization:
 2499              	.LFB71:
 698:.\AdvantageImpl.c **** 
 699:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 700:.\AdvantageImpl.c **** //////////////////////                 BLOCK OF AVAILABLE REQUEST HANDLERS
 701:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 702:.\AdvantageImpl.c **** 
 703:.\AdvantageImpl.c **** //@Created By: HIJH
 704:.\AdvantageImpl.c **** //@Date: Septembre de 2016
 705:.\AdvantageImpl.c **** //Sends the authorization request to the pump. This is a single byte command with no response
 706:.\AdvantageImpl.c **** void PumpAuthorization(void *pparam)
 707:.\AdvantageImpl.c **** {
 2500              		.loc 1 707 0
 2501              		.cfi_startproc
 2502              		@ args = 0, pretend = 0, frame = 24
 2503              		@ frame_needed = 1, uses_anonymous_args = 0
 2504 0000 80B5     		push	{r7, lr}
 2505              		.cfi_def_cfa_offset 8
 2506              		.cfi_offset 7, -8
 2507              		.cfi_offset 14, -4
 2508 0002 86B0     		sub	sp, sp, #24
 2509              		.cfi_def_cfa_offset 32
 2510 0004 00AF     		add	r7, sp, #0
 2511              		.cfi_def_cfa_register 7
 2512 0006 7860     		str	r0, [r7, #4]
 708:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 2513              		.loc 1 708 0
 2514 0008 7B68     		ldr	r3, [r7, #4]
 2515 000a 7B61     		str	r3, [r7, #20]
 709:.\AdvantageImpl.c ****     if(ppump)
 2516              		.loc 1 709 0
 2517 000c 7B69     		ldr	r3, [r7, #20]
 2518 000e 002B     		cmp	r3, #0
 2519 0010 34D0     		beq	.L71
 2520              	.LBB7:
 710:.\AdvantageImpl.c ****     {
 711:.\AdvantageImpl.c **** 
 712:.\AdvantageImpl.c ****         if(!ppump->_presetdone)
 2521              		.loc 1 712 0
 2522 0012 7B69     		ldr	r3, [r7, #20]
 2523 0014 1B7A     		ldrb	r3, [r3, #8]
 2524 0016 DBB2     		uxtb	r3, r3
 2525 0018 83F00103 		eor	r3, r3, #1
 2526 001c DBB2     		uxtb	r3, r3
 2527 001e 002B     		cmp	r3, #0
 2528 0020 00D0     		beq	.L73
 713:.\AdvantageImpl.c ****             return;
 2529              		.loc 1 713 0
 2530 0022 2BE0     		b	.L71
 2531              	.L73:
 714:.\AdvantageImpl.c **** 
 715:.\AdvantageImpl.c ****         uint8_t index = 0;
 2532              		.loc 1 715 0
 2533 0024 0023     		movs	r3, #0
 2534 0026 FB74     		strb	r3, [r7, #19]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 58


 716:.\AdvantageImpl.c ****         memset(ppump->_rxbuffer, 0x00, _PUMP_RX_BUFFER_SIZE_);
 2535              		.loc 1 716 0
 2536 0028 7B69     		ldr	r3, [r7, #20]
 2537 002a 03F5D073 		add	r3, r3, #416
 2538 002e 1846     		mov	r0, r3
 2539 0030 0021     		movs	r1, #0
 2540 0032 4FF4C072 		mov	r2, #384
 2541 0036 FFF7FEFF 		bl	memset
 717:.\AdvantageImpl.c ****         PUARTMESSAGEPTR puartdisp = GetUARTMessageSlot(UART_DISPENSER);
 2542              		.loc 1 717 0
 2543 003a A220     		movs	r0, #162
 2544 003c FFF7FEFF 		bl	GetUARTMessageSlot
 2545 0040 F860     		str	r0, [r7, #12]
 718:.\AdvantageImpl.c ****         if(puartdisp)
 2546              		.loc 1 718 0
 2547 0042 FB68     		ldr	r3, [r7, #12]
 2548 0044 002B     		cmp	r3, #0
 2549 0046 19D0     		beq	.L71
 719:.\AdvantageImpl.c ****         {
 720:.\AdvantageImpl.c ****             //Just one byte for the response
 721:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = PUMP_COMMAND(PUMP_AUTHORIZATION, ppump->_pumpid);
 2550              		.loc 1 721 0
 2551 0048 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 2552 004a 5A1C     		adds	r2, r3, #1
 2553 004c FA74     		strb	r2, [r7, #19]
 2554 004e 1946     		mov	r1, r3
 2555 0050 7B69     		ldr	r3, [r7, #20]
 2556 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2557 0054 DBB2     		uxtb	r3, r3
 2558 0056 03F00F03 		and	r3, r3, #15
 2559 005a DBB2     		uxtb	r3, r3
 2560 005c 43F01003 		orr	r3, r3, #16
 2561 0060 DBB2     		uxtb	r3, r3
 2562 0062 DAB2     		uxtb	r2, r3
 2563 0064 FB68     		ldr	r3, [r7, #12]
 2564 0066 0B44     		add	r3, r3, r1
 2565 0068 1A71     		strb	r2, [r3, #4]
 722:.\AdvantageImpl.c ****             puartdisp->_messagelength = 1;//One byte
 2566              		.loc 1 722 0
 2567 006a FB68     		ldr	r3, [r7, #12]
 2568 006c 0122     		movs	r2, #1
 2569 006e 5A80     		strh	r2, [r3, #2]	@ movhi
 723:.\AdvantageImpl.c ****             puartdisp->_messagestate = PENDING;
 2570              		.loc 1 723 0
 2571 0070 FB68     		ldr	r3, [r7, #12]
 2572 0072 C222     		movs	r2, #194
 2573 0074 1A70     		strb	r2, [r3]
 724:.\AdvantageImpl.c ****          
 725:.\AdvantageImpl.c ****             ppump->_authorized = true;
 2574              		.loc 1 725 0
 2575 0076 7B69     		ldr	r3, [r7, #20]
 2576 0078 0122     		movs	r2, #1
 2577 007a 9A71     		strb	r2, [r3, #6]
 2578              	.L71:
 2579              	.LBE7:
 726:.\AdvantageImpl.c ****         }        
 727:.\AdvantageImpl.c ****     }
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 59


 728:.\AdvantageImpl.c **** }
 2580              		.loc 1 728 0
 2581 007c 1837     		adds	r7, r7, #24
 2582              		.cfi_def_cfa_offset 8
 2583 007e BD46     		mov	sp, r7
 2584              		.cfi_def_cfa_register 13
 2585              		@ sp needed
 2586 0080 80BD     		pop	{r7, pc}
 2587              		.cfi_endproc
 2588              	.LFE71:
 2589              		.size	PumpAuthorization, .-PumpAuthorization
 2590 0082 00BF     		.section	.text.PumpStartupAuthorization,"ax",%progbits
 2591              		.align	2
 2592              		.global	PumpStartupAuthorization
 2593              		.thumb
 2594              		.thumb_func
 2595              		.type	PumpStartupAuthorization, %function
 2596              	PumpStartupAuthorization:
 2597              	.LFB72:
 729:.\AdvantageImpl.c **** 
 730:.\AdvantageImpl.c **** //@Created By: HIJH
 731:.\AdvantageImpl.c **** //@Date: Septembre de 2016
 732:.\AdvantageImpl.c **** //Sends the authorization request to the pump. This is a single byte command with no response
 733:.\AdvantageImpl.c **** void PumpStartupAuthorization(void *pparam)
 734:.\AdvantageImpl.c **** {
 2598              		.loc 1 734 0
 2599              		.cfi_startproc
 2600              		@ args = 0, pretend = 0, frame = 24
 2601              		@ frame_needed = 1, uses_anonymous_args = 0
 2602 0000 80B5     		push	{r7, lr}
 2603              		.cfi_def_cfa_offset 8
 2604              		.cfi_offset 7, -8
 2605              		.cfi_offset 14, -4
 2606 0002 86B0     		sub	sp, sp, #24
 2607              		.cfi_def_cfa_offset 32
 2608 0004 00AF     		add	r7, sp, #0
 2609              		.cfi_def_cfa_register 7
 2610 0006 7860     		str	r0, [r7, #4]
 735:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 2611              		.loc 1 735 0
 2612 0008 7B68     		ldr	r3, [r7, #4]
 2613 000a 7B61     		str	r3, [r7, #20]
 736:.\AdvantageImpl.c ****     if(ppump)
 2614              		.loc 1 736 0
 2615 000c 7B69     		ldr	r3, [r7, #20]
 2616 000e 002B     		cmp	r3, #0
 2617 0010 2BD0     		beq	.L74
 2618              	.LBB8:
 737:.\AdvantageImpl.c ****     {                
 738:.\AdvantageImpl.c ****         uint8_t index = 0;
 2619              		.loc 1 738 0
 2620 0012 0023     		movs	r3, #0
 2621 0014 FB74     		strb	r3, [r7, #19]
 739:.\AdvantageImpl.c ****         memset(ppump->_rxbuffer, 0x00, _PUMP_RX_BUFFER_SIZE_);
 2622              		.loc 1 739 0
 2623 0016 7B69     		ldr	r3, [r7, #20]
 2624 0018 03F5D073 		add	r3, r3, #416
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 60


 2625 001c 1846     		mov	r0, r3
 2626 001e 0021     		movs	r1, #0
 2627 0020 4FF4C072 		mov	r2, #384
 2628 0024 FFF7FEFF 		bl	memset
 740:.\AdvantageImpl.c ****         PUARTMESSAGEPTR puartdisp = GetUARTMessageSlot(UART_DISPENSER);
 2629              		.loc 1 740 0
 2630 0028 A220     		movs	r0, #162
 2631 002a FFF7FEFF 		bl	GetUARTMessageSlot
 2632 002e F860     		str	r0, [r7, #12]
 741:.\AdvantageImpl.c ****         if(puartdisp)
 2633              		.loc 1 741 0
 2634 0030 FB68     		ldr	r3, [r7, #12]
 2635 0032 002B     		cmp	r3, #0
 2636 0034 16D0     		beq	.L76
 742:.\AdvantageImpl.c ****         {
 743:.\AdvantageImpl.c ****             //Just one byte for the response
 744:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = PUMP_COMMAND(PUMP_AUTHORIZATION, ppump->_pumpid);
 2637              		.loc 1 744 0
 2638 0036 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 2639 0038 5A1C     		adds	r2, r3, #1
 2640 003a FA74     		strb	r2, [r7, #19]
 2641 003c 1946     		mov	r1, r3
 2642 003e 7B69     		ldr	r3, [r7, #20]
 2643 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2644 0042 DBB2     		uxtb	r3, r3
 2645 0044 03F00F03 		and	r3, r3, #15
 2646 0048 DBB2     		uxtb	r3, r3
 2647 004a 43F01003 		orr	r3, r3, #16
 2648 004e DBB2     		uxtb	r3, r3
 2649 0050 DAB2     		uxtb	r2, r3
 2650 0052 FB68     		ldr	r3, [r7, #12]
 2651 0054 0B44     		add	r3, r3, r1
 2652 0056 1A71     		strb	r2, [r3, #4]
 745:.\AdvantageImpl.c ****             puartdisp->_messagelength = 1;//One byte
 2653              		.loc 1 745 0
 2654 0058 FB68     		ldr	r3, [r7, #12]
 2655 005a 0122     		movs	r2, #1
 2656 005c 5A80     		strh	r2, [r3, #2]	@ movhi
 746:.\AdvantageImpl.c ****             puartdisp->_messagestate = PENDING;
 2657              		.loc 1 746 0
 2658 005e FB68     		ldr	r3, [r7, #12]
 2659 0060 C222     		movs	r2, #194
 2660 0062 1A70     		strb	r2, [r3]
 2661              	.L76:
 747:.\AdvantageImpl.c ****             
 748:.\AdvantageImpl.c ****         }
 749:.\AdvantageImpl.c ****         CyDelay(100);
 2662              		.loc 1 749 0
 2663 0064 6420     		movs	r0, #100
 2664 0066 FFF7FEFF 		bl	CyDelay
 2665              	.L74:
 2666              	.LBE8:
 750:.\AdvantageImpl.c ****     }
 751:.\AdvantageImpl.c **** }
 2667              		.loc 1 751 0
 2668 006a 1837     		adds	r7, r7, #24
 2669              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 61


 2670 006c BD46     		mov	sp, r7
 2671              		.cfi_def_cfa_register 13
 2672              		@ sp needed
 2673 006e 80BD     		pop	{r7, pc}
 2674              		.cfi_endproc
 2675              	.LFE72:
 2676              		.size	PumpStartupAuthorization, .-PumpStartupAuthorization
 2677              		.section	.text.PumpStateRequest,"ax",%progbits
 2678              		.align	2
 2679              		.global	PumpStateRequest
 2680              		.thumb
 2681              		.thumb_func
 2682              		.type	PumpStateRequest, %function
 2683              	PumpStateRequest:
 2684              	.LFB73:
 752:.\AdvantageImpl.c **** 
 753:.\AdvantageImpl.c **** //@Created By: HIJH
 754:.\AdvantageImpl.c **** //@Date: Septembre de 2016
 755:.\AdvantageImpl.c **** //Sends the state request to the pump. This is a single byte command with one byte of response
 756:.\AdvantageImpl.c **** void PumpStateRequest(void *pparam)
 757:.\AdvantageImpl.c **** {
 2685              		.loc 1 757 0
 2686              		.cfi_startproc
 2687              		@ args = 0, pretend = 0, frame = 24
 2688              		@ frame_needed = 1, uses_anonymous_args = 0
 2689 0000 80B5     		push	{r7, lr}
 2690              		.cfi_def_cfa_offset 8
 2691              		.cfi_offset 7, -8
 2692              		.cfi_offset 14, -4
 2693 0002 86B0     		sub	sp, sp, #24
 2694              		.cfi_def_cfa_offset 32
 2695 0004 00AF     		add	r7, sp, #0
 2696              		.cfi_def_cfa_register 7
 2697 0006 7860     		str	r0, [r7, #4]
 758:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 2698              		.loc 1 758 0
 2699 0008 7B68     		ldr	r3, [r7, #4]
 2700 000a 7B61     		str	r3, [r7, #20]
 759:.\AdvantageImpl.c ****     if(ppump)
 2701              		.loc 1 759 0
 2702 000c 7B69     		ldr	r3, [r7, #20]
 2703 000e 002B     		cmp	r3, #0
 2704 0010 23D0     		beq	.L77
 2705              	.LBB9:
 760:.\AdvantageImpl.c ****     {
 761:.\AdvantageImpl.c ****         uint8_t index = 0;
 2706              		.loc 1 761 0
 2707 0012 0023     		movs	r3, #0
 2708 0014 FB74     		strb	r3, [r7, #19]
 762:.\AdvantageImpl.c ****         memset(ppump->_rxbuffer, 0x00, _PUMP_RX_BUFFER_SIZE_);
 2709              		.loc 1 762 0
 2710 0016 7B69     		ldr	r3, [r7, #20]
 2711 0018 03F5D073 		add	r3, r3, #416
 2712 001c 1846     		mov	r0, r3
 2713 001e 0021     		movs	r1, #0
 2714 0020 4FF4C072 		mov	r2, #384
 2715 0024 FFF7FEFF 		bl	memset
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 62


 763:.\AdvantageImpl.c ****         PUARTMESSAGEPTR puartdisp = GetUARTMessageSlot(UART_DISPENSER);
 2716              		.loc 1 763 0
 2717 0028 A220     		movs	r0, #162
 2718 002a FFF7FEFF 		bl	GetUARTMessageSlot
 2719 002e F860     		str	r0, [r7, #12]
 764:.\AdvantageImpl.c ****         if(puartdisp)
 2720              		.loc 1 764 0
 2721 0030 FB68     		ldr	r3, [r7, #12]
 2722 0032 002B     		cmp	r3, #0
 2723 0034 11D0     		beq	.L77
 765:.\AdvantageImpl.c ****         {
 766:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = PUMP_COMMAND(PUMP_STATE_REQUEST, ppump->_pumpid);
 2724              		.loc 1 766 0
 2725 0036 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 2726 0038 5A1C     		adds	r2, r3, #1
 2727 003a FA74     		strb	r2, [r7, #19]
 2728 003c 1946     		mov	r1, r3
 2729 003e 7B69     		ldr	r3, [r7, #20]
 2730 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2731 0042 03F00F03 		and	r3, r3, #15
 2732 0046 DAB2     		uxtb	r2, r3
 2733 0048 FB68     		ldr	r3, [r7, #12]
 2734 004a 0B44     		add	r3, r3, r1
 2735 004c 1A71     		strb	r2, [r3, #4]
 767:.\AdvantageImpl.c ****             puartdisp->_messagelength = 1;//One byte
 2736              		.loc 1 767 0
 2737 004e FB68     		ldr	r3, [r7, #12]
 2738 0050 0122     		movs	r2, #1
 2739 0052 5A80     		strh	r2, [r3, #2]	@ movhi
 768:.\AdvantageImpl.c ****             puartdisp->_messagestate = PENDING;
 2740              		.loc 1 768 0
 2741 0054 FB68     		ldr	r3, [r7, #12]
 2742 0056 C222     		movs	r2, #194
 2743 0058 1A70     		strb	r2, [r3]
 2744              	.L77:
 2745              	.LBE9:
 769:.\AdvantageImpl.c ****         }
 770:.\AdvantageImpl.c ****     }
 771:.\AdvantageImpl.c **** }
 2746              		.loc 1 771 0
 2747 005a 1837     		adds	r7, r7, #24
 2748              		.cfi_def_cfa_offset 8
 2749 005c BD46     		mov	sp, r7
 2750              		.cfi_def_cfa_register 13
 2751              		@ sp needed
 2752 005e 80BD     		pop	{r7, pc}
 2753              		.cfi_endproc
 2754              	.LFE73:
 2755              		.size	PumpStateRequest, .-PumpStateRequest
 2756              		.section	.text.PumpRTMoneyRequest,"ax",%progbits
 2757              		.align	2
 2758              		.global	PumpRTMoneyRequest
 2759              		.thumb
 2760              		.thumb_func
 2761              		.type	PumpRTMoneyRequest, %function
 2762              	PumpRTMoneyRequest:
 2763              	.LFB74:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 63


 772:.\AdvantageImpl.c **** 
 773:.\AdvantageImpl.c **** //@Created By: HIJH
 774:.\AdvantageImpl.c **** //@Date: Septembre de 2016
 775:.\AdvantageImpl.c **** void PumpRTMoneyRequest(void *pparam)
 776:.\AdvantageImpl.c **** {
 2764              		.loc 1 776 0
 2765              		.cfi_startproc
 2766              		@ args = 0, pretend = 0, frame = 24
 2767              		@ frame_needed = 1, uses_anonymous_args = 0
 2768 0000 80B5     		push	{r7, lr}
 2769              		.cfi_def_cfa_offset 8
 2770              		.cfi_offset 7, -8
 2771              		.cfi_offset 14, -4
 2772 0002 86B0     		sub	sp, sp, #24
 2773              		.cfi_def_cfa_offset 32
 2774 0004 00AF     		add	r7, sp, #0
 2775              		.cfi_def_cfa_register 7
 2776 0006 7860     		str	r0, [r7, #4]
 777:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 2777              		.loc 1 777 0
 2778 0008 7B68     		ldr	r3, [r7, #4]
 2779 000a 7B61     		str	r3, [r7, #20]
 778:.\AdvantageImpl.c ****     if(ppump)
 2780              		.loc 1 778 0
 2781 000c 7B69     		ldr	r3, [r7, #20]
 2782 000e 002B     		cmp	r3, #0
 2783 0010 28D0     		beq	.L79
 2784              	.LBB10:
 779:.\AdvantageImpl.c ****     {
 780:.\AdvantageImpl.c ****         uint8_t index = 0;
 2785              		.loc 1 780 0
 2786 0012 0023     		movs	r3, #0
 2787 0014 FB74     		strb	r3, [r7, #19]
 781:.\AdvantageImpl.c ****         memset(ppump->_rxbuffer, 0x00, _PUMP_RX_BUFFER_SIZE_);
 2788              		.loc 1 781 0
 2789 0016 7B69     		ldr	r3, [r7, #20]
 2790 0018 03F5D073 		add	r3, r3, #416
 2791 001c 1846     		mov	r0, r3
 2792 001e 0021     		movs	r1, #0
 2793 0020 4FF4C072 		mov	r2, #384
 2794 0024 FFF7FEFF 		bl	memset
 782:.\AdvantageImpl.c ****         PUARTMESSAGEPTR puartdisp = GetUARTMessageSlot(UART_DISPENSER);
 2795              		.loc 1 782 0
 2796 0028 A220     		movs	r0, #162
 2797 002a FFF7FEFF 		bl	GetUARTMessageSlot
 2798 002e F860     		str	r0, [r7, #12]
 783:.\AdvantageImpl.c ****         if(puartdisp)
 2799              		.loc 1 783 0
 2800 0030 FB68     		ldr	r3, [r7, #12]
 2801 0032 002B     		cmp	r3, #0
 2802 0034 16D0     		beq	.L79
 784:.\AdvantageImpl.c ****         {
 785:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = PUMP_COMMAND(PUMP_REAL_TIME_MONEY_REQUEST, ppump->_pum
 2803              		.loc 1 785 0
 2804 0036 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 2805 0038 5A1C     		adds	r2, r3, #1
 2806 003a FA74     		strb	r2, [r7, #19]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 64


 2807 003c 1946     		mov	r1, r3
 2808 003e 7B69     		ldr	r3, [r7, #20]
 2809 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2810 0042 DBB2     		uxtb	r3, r3
 2811 0044 03F00F03 		and	r3, r3, #15
 2812 0048 DBB2     		uxtb	r3, r3
 2813 004a 43F06003 		orr	r3, r3, #96
 2814 004e DBB2     		uxtb	r3, r3
 2815 0050 DAB2     		uxtb	r2, r3
 2816 0052 FB68     		ldr	r3, [r7, #12]
 2817 0054 0B44     		add	r3, r3, r1
 2818 0056 1A71     		strb	r2, [r3, #4]
 786:.\AdvantageImpl.c ****             puartdisp->_messagelength = 1;//One byte
 2819              		.loc 1 786 0
 2820 0058 FB68     		ldr	r3, [r7, #12]
 2821 005a 0122     		movs	r2, #1
 2822 005c 5A80     		strh	r2, [r3, #2]	@ movhi
 787:.\AdvantageImpl.c ****             puartdisp->_messagestate = PENDING;
 2823              		.loc 1 787 0
 2824 005e FB68     		ldr	r3, [r7, #12]
 2825 0060 C222     		movs	r2, #194
 2826 0062 1A70     		strb	r2, [r3]
 2827              	.L79:
 2828              	.LBE10:
 788:.\AdvantageImpl.c ****         }
 789:.\AdvantageImpl.c ****     }
 790:.\AdvantageImpl.c **** }
 2829              		.loc 1 790 0
 2830 0064 1837     		adds	r7, r7, #24
 2831              		.cfi_def_cfa_offset 8
 2832 0066 BD46     		mov	sp, r7
 2833              		.cfi_def_cfa_register 13
 2834              		@ sp needed
 2835 0068 80BD     		pop	{r7, pc}
 2836              		.cfi_endproc
 2837              	.LFE74:
 2838              		.size	PumpRTMoneyRequest, .-PumpRTMoneyRequest
 2839 006a 00BF     		.section	.text.PumpTransactionDataRequest,"ax",%progbits
 2840              		.align	2
 2841              		.global	PumpTransactionDataRequest
 2842              		.thumb
 2843              		.thumb_func
 2844              		.type	PumpTransactionDataRequest, %function
 2845              	PumpTransactionDataRequest:
 2846              	.LFB75:
 791:.\AdvantageImpl.c **** 
 792:.\AdvantageImpl.c **** //@Created By: HIJH
 793:.\AdvantageImpl.c **** //@Date: Septembre de 2016
 794:.\AdvantageImpl.c **** //Requests the last transaction data to the pump. This is a single byte command with a fixed length
 795:.\AdvantageImpl.c **** void PumpTransactionDataRequest(void *pparam)
 796:.\AdvantageImpl.c **** {
 2847              		.loc 1 796 0
 2848              		.cfi_startproc
 2849              		@ args = 0, pretend = 0, frame = 24
 2850              		@ frame_needed = 1, uses_anonymous_args = 0
 2851 0000 80B5     		push	{r7, lr}
 2852              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 65


 2853              		.cfi_offset 7, -8
 2854              		.cfi_offset 14, -4
 2855 0002 86B0     		sub	sp, sp, #24
 2856              		.cfi_def_cfa_offset 32
 2857 0004 00AF     		add	r7, sp, #0
 2858              		.cfi_def_cfa_register 7
 2859 0006 7860     		str	r0, [r7, #4]
 797:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 2860              		.loc 1 797 0
 2861 0008 7B68     		ldr	r3, [r7, #4]
 2862 000a 7B61     		str	r3, [r7, #20]
 798:.\AdvantageImpl.c ****     if(ppump)
 2863              		.loc 1 798 0
 2864 000c 7B69     		ldr	r3, [r7, #20]
 2865 000e 002B     		cmp	r3, #0
 2866 0010 28D0     		beq	.L81
 2867              	.LBB11:
 799:.\AdvantageImpl.c ****     {        
 800:.\AdvantageImpl.c ****         uint8_t index = 0;
 2868              		.loc 1 800 0
 2869 0012 0023     		movs	r3, #0
 2870 0014 FB74     		strb	r3, [r7, #19]
 801:.\AdvantageImpl.c ****         memset(ppump->_rxbuffer, 0x00, _PUMP_RX_BUFFER_SIZE_);
 2871              		.loc 1 801 0
 2872 0016 7B69     		ldr	r3, [r7, #20]
 2873 0018 03F5D073 		add	r3, r3, #416
 2874 001c 1846     		mov	r0, r3
 2875 001e 0021     		movs	r1, #0
 2876 0020 4FF4C072 		mov	r2, #384
 2877 0024 FFF7FEFF 		bl	memset
 802:.\AdvantageImpl.c ****         PUARTMESSAGEPTR puartdisp = GetUARTMessageSlot(UART_DISPENSER);
 2878              		.loc 1 802 0
 2879 0028 A220     		movs	r0, #162
 2880 002a FFF7FEFF 		bl	GetUARTMessageSlot
 2881 002e F860     		str	r0, [r7, #12]
 803:.\AdvantageImpl.c ****         if(puartdisp)
 2882              		.loc 1 803 0
 2883 0030 FB68     		ldr	r3, [r7, #12]
 2884 0032 002B     		cmp	r3, #0
 2885 0034 16D0     		beq	.L81
 804:.\AdvantageImpl.c ****         {
 805:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = PUMP_COMMAND(PUMP_TRANSACTION_DATA_REQUEST, ppump->_pu
 2886              		.loc 1 805 0
 2887 0036 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 2888 0038 5A1C     		adds	r2, r3, #1
 2889 003a FA74     		strb	r2, [r7, #19]
 2890 003c 1946     		mov	r1, r3
 2891 003e 7B69     		ldr	r3, [r7, #20]
 2892 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2893 0042 DBB2     		uxtb	r3, r3
 2894 0044 03F00F03 		and	r3, r3, #15
 2895 0048 DBB2     		uxtb	r3, r3
 2896 004a 43F04003 		orr	r3, r3, #64
 2897 004e DBB2     		uxtb	r3, r3
 2898 0050 DAB2     		uxtb	r2, r3
 2899 0052 FB68     		ldr	r3, [r7, #12]
 2900 0054 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 66


 2901 0056 1A71     		strb	r2, [r3, #4]
 806:.\AdvantageImpl.c ****             puartdisp->_messagelength = 1;//One byte
 2902              		.loc 1 806 0
 2903 0058 FB68     		ldr	r3, [r7, #12]
 2904 005a 0122     		movs	r2, #1
 2905 005c 5A80     		strh	r2, [r3, #2]	@ movhi
 807:.\AdvantageImpl.c ****             puartdisp->_messagestate = PENDING;
 2906              		.loc 1 807 0
 2907 005e FB68     		ldr	r3, [r7, #12]
 2908 0060 C222     		movs	r2, #194
 2909 0062 1A70     		strb	r2, [r3]
 2910              	.L81:
 2911              	.LBE11:
 808:.\AdvantageImpl.c ****         }
 809:.\AdvantageImpl.c ****     }
 810:.\AdvantageImpl.c **** }
 2912              		.loc 1 810 0
 2913 0064 1837     		adds	r7, r7, #24
 2914              		.cfi_def_cfa_offset 8
 2915 0066 BD46     		mov	sp, r7
 2916              		.cfi_def_cfa_register 13
 2917              		@ sp needed
 2918 0068 80BD     		pop	{r7, pc}
 2919              		.cfi_endproc
 2920              	.LFE75:
 2921              		.size	PumpTransactionDataRequest, .-PumpTransactionDataRequest
 2922 006a 00BF     		.section	.text.PumpTotalsDataRequest,"ax",%progbits
 2923              		.align	2
 2924              		.global	PumpTotalsDataRequest
 2925              		.thumb
 2926              		.thumb_func
 2927              		.type	PumpTotalsDataRequest, %function
 2928              	PumpTotalsDataRequest:
 2929              	.LFB76:
 811:.\AdvantageImpl.c **** 
 812:.\AdvantageImpl.c **** //@Created By: HIJH
 813:.\AdvantageImpl.c **** //@Date: Septembre de 2016
 814:.\AdvantageImpl.c **** //Requests the report of totals for the current pump. This is a single byte command with a variable
 815:.\AdvantageImpl.c **** //that depends on the number of available hoses.
 816:.\AdvantageImpl.c **** void PumpTotalsDataRequest(void *pparam)
 817:.\AdvantageImpl.c **** {
 2930              		.loc 1 817 0
 2931              		.cfi_startproc
 2932              		@ args = 0, pretend = 0, frame = 24
 2933              		@ frame_needed = 1, uses_anonymous_args = 0
 2934 0000 80B5     		push	{r7, lr}
 2935              		.cfi_def_cfa_offset 8
 2936              		.cfi_offset 7, -8
 2937              		.cfi_offset 14, -4
 2938 0002 86B0     		sub	sp, sp, #24
 2939              		.cfi_def_cfa_offset 32
 2940 0004 00AF     		add	r7, sp, #0
 2941              		.cfi_def_cfa_register 7
 2942 0006 7860     		str	r0, [r7, #4]
 818:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 2943              		.loc 1 818 0
 2944 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 67


 2945 000a 7B61     		str	r3, [r7, #20]
 819:.\AdvantageImpl.c ****     if(ppump)
 2946              		.loc 1 819 0
 2947 000c 7B69     		ldr	r3, [r7, #20]
 2948 000e 002B     		cmp	r3, #0
 2949 0010 28D0     		beq	.L83
 2950              	.LBB12:
 820:.\AdvantageImpl.c ****     {        
 821:.\AdvantageImpl.c ****         uint8_t index = 0;
 2951              		.loc 1 821 0
 2952 0012 0023     		movs	r3, #0
 2953 0014 FB74     		strb	r3, [r7, #19]
 822:.\AdvantageImpl.c ****         memset(ppump->_rxbuffer, 0x00, _PUMP_RX_BUFFER_SIZE_);
 2954              		.loc 1 822 0
 2955 0016 7B69     		ldr	r3, [r7, #20]
 2956 0018 03F5D073 		add	r3, r3, #416
 2957 001c 1846     		mov	r0, r3
 2958 001e 0021     		movs	r1, #0
 2959 0020 4FF4C072 		mov	r2, #384
 2960 0024 FFF7FEFF 		bl	memset
 823:.\AdvantageImpl.c ****         PUARTMESSAGEPTR puartdisp = GetUARTMessageSlot(UART_DISPENSER);
 2961              		.loc 1 823 0
 2962 0028 A220     		movs	r0, #162
 2963 002a FFF7FEFF 		bl	GetUARTMessageSlot
 2964 002e F860     		str	r0, [r7, #12]
 824:.\AdvantageImpl.c ****         if(puartdisp)
 2965              		.loc 1 824 0
 2966 0030 FB68     		ldr	r3, [r7, #12]
 2967 0032 002B     		cmp	r3, #0
 2968 0034 16D0     		beq	.L83
 825:.\AdvantageImpl.c ****         {
 826:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = PUMP_COMMAND(PUMP_TOTALS_DATA_REQUEST, ppump->_pumpid)
 2969              		.loc 1 826 0
 2970 0036 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 2971 0038 5A1C     		adds	r2, r3, #1
 2972 003a FA74     		strb	r2, [r7, #19]
 2973 003c 1946     		mov	r1, r3
 2974 003e 7B69     		ldr	r3, [r7, #20]
 2975 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2976 0042 DBB2     		uxtb	r3, r3
 2977 0044 03F00F03 		and	r3, r3, #15
 2978 0048 DBB2     		uxtb	r3, r3
 2979 004a 43F05003 		orr	r3, r3, #80
 2980 004e DBB2     		uxtb	r3, r3
 2981 0050 DAB2     		uxtb	r2, r3
 2982 0052 FB68     		ldr	r3, [r7, #12]
 2983 0054 0B44     		add	r3, r3, r1
 2984 0056 1A71     		strb	r2, [r3, #4]
 827:.\AdvantageImpl.c ****             puartdisp->_messagelength = 1;//One byte
 2985              		.loc 1 827 0
 2986 0058 FB68     		ldr	r3, [r7, #12]
 2987 005a 0122     		movs	r2, #1
 2988 005c 5A80     		strh	r2, [r3, #2]	@ movhi
 828:.\AdvantageImpl.c ****             puartdisp->_messagestate = PENDING;
 2989              		.loc 1 828 0
 2990 005e FB68     		ldr	r3, [r7, #12]
 2991 0060 C222     		movs	r2, #194
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 68


 2992 0062 1A70     		strb	r2, [r3]
 2993              	.L83:
 2994              	.LBE12:
 829:.\AdvantageImpl.c ****         }
 830:.\AdvantageImpl.c ****     }
 831:.\AdvantageImpl.c **** }
 2995              		.loc 1 831 0
 2996 0064 1837     		adds	r7, r7, #24
 2997              		.cfi_def_cfa_offset 8
 2998 0066 BD46     		mov	sp, r7
 2999              		.cfi_def_cfa_register 13
 3000              		@ sp needed
 3001 0068 80BD     		pop	{r7, pc}
 3002              		.cfi_endproc
 3003              	.LFE76:
 3004              		.size	PumpTotalsDataRequest, .-PumpTotalsDataRequest
 3005 006a 00BF     		.section	.text.PumpDataToPump,"ax",%progbits
 3006              		.align	2
 3007              		.global	PumpDataToPump
 3008              		.thumb
 3009              		.thumb_func
 3010              		.type	PumpDataToPump, %function
 3011              	PumpDataToPump:
 3012              	.LFB77:
 832:.\AdvantageImpl.c **** 
 833:.\AdvantageImpl.c **** //@Created By: HIJH
 834:.\AdvantageImpl.c **** //@Date: Septembre de 2016
 835:.\AdvantageImpl.c **** //Requests the pump to enter in "SEND DATA" mode. This is a single byte command with a special one 
 836:.\AdvantageImpl.c **** //that indicates that the pump is ready to receive data.
 837:.\AdvantageImpl.c **** void PumpDataToPump(void *pparam)
 838:.\AdvantageImpl.c **** {
 3013              		.loc 1 838 0
 3014              		.cfi_startproc
 3015              		@ args = 0, pretend = 0, frame = 24
 3016              		@ frame_needed = 1, uses_anonymous_args = 0
 3017 0000 80B5     		push	{r7, lr}
 3018              		.cfi_def_cfa_offset 8
 3019              		.cfi_offset 7, -8
 3020              		.cfi_offset 14, -4
 3021 0002 86B0     		sub	sp, sp, #24
 3022              		.cfi_def_cfa_offset 32
 3023 0004 00AF     		add	r7, sp, #0
 3024              		.cfi_def_cfa_register 7
 3025 0006 7860     		str	r0, [r7, #4]
 839:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 3026              		.loc 1 839 0
 3027 0008 7B68     		ldr	r3, [r7, #4]
 3028 000a 7B61     		str	r3, [r7, #20]
 840:.\AdvantageImpl.c ****     if(ppump)
 3029              		.loc 1 840 0
 3030 000c 7B69     		ldr	r3, [r7, #20]
 3031 000e 002B     		cmp	r3, #0
 3032 0010 28D0     		beq	.L85
 3033              	.LBB13:
 841:.\AdvantageImpl.c ****     {
 842:.\AdvantageImpl.c ****         uint8_t index = 0;        
 3034              		.loc 1 842 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 69


 3035 0012 0023     		movs	r3, #0
 3036 0014 FB74     		strb	r3, [r7, #19]
 843:.\AdvantageImpl.c ****         memset(ppump->_rxbuffer, 0x00, _PUMP_RX_BUFFER_SIZE_);
 3037              		.loc 1 843 0
 3038 0016 7B69     		ldr	r3, [r7, #20]
 3039 0018 03F5D073 		add	r3, r3, #416
 3040 001c 1846     		mov	r0, r3
 3041 001e 0021     		movs	r1, #0
 3042 0020 4FF4C072 		mov	r2, #384
 3043 0024 FFF7FEFF 		bl	memset
 844:.\AdvantageImpl.c ****         PUARTMESSAGEPTR puartdisp = GetUARTMessageSlot(UART_DISPENSER);
 3044              		.loc 1 844 0
 3045 0028 A220     		movs	r0, #162
 3046 002a FFF7FEFF 		bl	GetUARTMessageSlot
 3047 002e F860     		str	r0, [r7, #12]
 845:.\AdvantageImpl.c ****         if(puartdisp)
 3048              		.loc 1 845 0
 3049 0030 FB68     		ldr	r3, [r7, #12]
 3050 0032 002B     		cmp	r3, #0
 3051 0034 16D0     		beq	.L85
 846:.\AdvantageImpl.c ****         {
 847:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = PUMP_COMMAND(PUMP_DATA_TO_PUMP, ppump->_pumpid);
 3052              		.loc 1 847 0
 3053 0036 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 3054 0038 5A1C     		adds	r2, r3, #1
 3055 003a FA74     		strb	r2, [r7, #19]
 3056 003c 1946     		mov	r1, r3
 3057 003e 7B69     		ldr	r3, [r7, #20]
 3058 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3059 0042 DBB2     		uxtb	r3, r3
 3060 0044 03F00F03 		and	r3, r3, #15
 3061 0048 DBB2     		uxtb	r3, r3
 3062 004a 43F02003 		orr	r3, r3, #32
 3063 004e DBB2     		uxtb	r3, r3
 3064 0050 DAB2     		uxtb	r2, r3
 3065 0052 FB68     		ldr	r3, [r7, #12]
 3066 0054 0B44     		add	r3, r3, r1
 3067 0056 1A71     		strb	r2, [r3, #4]
 848:.\AdvantageImpl.c ****             puartdisp->_messagelength = 1;//One byte
 3068              		.loc 1 848 0
 3069 0058 FB68     		ldr	r3, [r7, #12]
 3070 005a 0122     		movs	r2, #1
 3071 005c 5A80     		strh	r2, [r3, #2]	@ movhi
 849:.\AdvantageImpl.c ****             puartdisp->_messagestate = PENDING;
 3072              		.loc 1 849 0
 3073 005e FB68     		ldr	r3, [r7, #12]
 3074 0060 C222     		movs	r2, #194
 3075 0062 1A70     		strb	r2, [r3]
 3076              	.L85:
 3077              	.LBE13:
 850:.\AdvantageImpl.c ****         }
 851:.\AdvantageImpl.c ****     }
 852:.\AdvantageImpl.c **** }
 3078              		.loc 1 852 0
 3079 0064 1837     		adds	r7, r7, #24
 3080              		.cfi_def_cfa_offset 8
 3081 0066 BD46     		mov	sp, r7
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 70


 3082              		.cfi_def_cfa_register 13
 3083              		@ sp needed
 3084 0068 80BD     		pop	{r7, pc}
 3085              		.cfi_endproc
 3086              	.LFE77:
 3087              		.size	PumpDataToPump, .-PumpDataToPump
 3088 006a 00BF     		.section	.text.PumpCreditPresetHose,"ax",%progbits
 3089              		.align	2
 3090              		.global	PumpCreditPresetHose
 3091              		.thumb
 3092              		.thumb_func
 3093              		.type	PumpCreditPresetHose, %function
 3094              	PumpCreditPresetHose:
 3095              	.LFB78:
 853:.\AdvantageImpl.c **** 
 854:.\AdvantageImpl.c **** 
 855:.\AdvantageImpl.c **** //@Created By: HIJH
 856:.\AdvantageImpl.c **** //@Septembre de 2016
 857:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 858:.\AdvantageImpl.c **** //This preset is a convention that applies to "Credit Transactions"
 859:.\AdvantageImpl.c **** //The pump will hold all the necessary information for the preset.
 860:.\AdvantageImpl.c **** //For this message the data comes as follows:
 861:.\AdvantageImpl.c **** void PumpCreditPresetHose(void *pparam)
 862:.\AdvantageImpl.c **** {
 3096              		.loc 1 862 0
 3097              		.cfi_startproc
 3098              		@ args = 0, pretend = 0, frame = 40
 3099              		@ frame_needed = 1, uses_anonymous_args = 0
 3100 0000 90B5     		push	{r4, r7, lr}
 3101              		.cfi_def_cfa_offset 12
 3102              		.cfi_offset 4, -12
 3103              		.cfi_offset 7, -8
 3104              		.cfi_offset 14, -4
 3105 0002 8BB0     		sub	sp, sp, #44
 3106              		.cfi_def_cfa_offset 56
 3107 0004 00AF     		add	r7, sp, #0
 3108              		.cfi_def_cfa_register 7
 3109 0006 7860     		str	r0, [r7, #4]
 863:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 3110              		.loc 1 863 0
 3111 0008 7B68     		ldr	r3, [r7, #4]
 3112 000a 3B62     		str	r3, [r7, #32]
 864:.\AdvantageImpl.c ****     if(ppump)
 3113              		.loc 1 864 0
 3114 000c 3B6A     		ldr	r3, [r7, #32]
 3115 000e 002B     		cmp	r3, #0
 3116 0010 00F0C881 		beq	.L87
 3117              	.LBB14:
 865:.\AdvantageImpl.c ****     {
 866:.\AdvantageImpl.c ****         uint8_t index = 0;        
 3118              		.loc 1 866 0
 3119 0014 0023     		movs	r3, #0
 3120 0016 87F82730 		strb	r3, [r7, #39]
 867:.\AdvantageImpl.c ****         PUARTMESSAGEPTR puartdisp = GetUARTMessageSlot(UART_DISPENSER);
 3121              		.loc 1 867 0
 3122 001a A220     		movs	r0, #162
 3123 001c FFF7FEFF 		bl	GetUARTMessageSlot
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 71


 3124 0020 F861     		str	r0, [r7, #28]
 868:.\AdvantageImpl.c ****         memset(ppump->_rxbuffer, 0x00, _PUMP_RX_BUFFER_SIZE_);
 3125              		.loc 1 868 0
 3126 0022 3B6A     		ldr	r3, [r7, #32]
 3127 0024 03F5D073 		add	r3, r3, #416
 3128 0028 1846     		mov	r0, r3
 3129 002a 0021     		movs	r1, #0
 3130 002c 4FF4C072 		mov	r2, #384
 3131 0030 FFF7FEFF 		bl	memset
 869:.\AdvantageImpl.c ****         if(puartdisp)
 3132              		.loc 1 869 0
 3133 0034 FB69     		ldr	r3, [r7, #28]
 3134 0036 002B     		cmp	r3, #0
 3135 0038 00F0B481 		beq	.L87
 870:.\AdvantageImpl.c ****         {
 871:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 872:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = SOM;
 3136              		.loc 1 872 0
 3137 003c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3138 0040 5A1C     		adds	r2, r3, #1
 3139 0042 87F82720 		strb	r2, [r7, #39]
 3140 0046 1A46     		mov	r2, r3
 3141 0048 FB69     		ldr	r3, [r7, #28]
 3142 004a 1344     		add	r3, r3, r2
 3143 004c FF22     		movs	r2, #255
 3144 004e 1A71     		strb	r2, [r3, #4]
 873:.\AdvantageImpl.c ****             if(_g_dispenserlayoutinfo._displaydigitsmode == 0x06)
 3145              		.loc 1 873 0
 3146 0050 AC4B     		ldr	r3, .L110
 3147 0052 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3148 0054 062B     		cmp	r3, #6
 3149 0056 40F0D580 		bne	.L89
 3150              	.LBB15:
 874:.\AdvantageImpl.c ****             {
 875:.\AdvantageImpl.c ****                 uint8 transtype = ((0xF0 | ppump->_authorizationinfo._presettype) == 0xF1)? 0xF2: 0
 3151              		.loc 1 875 0
 3152 005a 3B6A     		ldr	r3, [r7, #32]
 3153 005c 93F8A93B 		ldrb	r3, [r3, #2985]
 3154 0060 DBB2     		uxtb	r3, r3
 3155 0062 63F00F03 		orn	r3, r3, #15
 3156 0066 DBB2     		uxtb	r3, r3
 3157 0068 F12B     		cmp	r3, #241
 3158 006a 01D1     		bne	.L90
 3159              		.loc 1 875 0 is_stmt 0 discriminator 1
 3160 006c F223     		movs	r3, #242
 3161 006e 00E0     		b	.L91
 3162              	.L90:
 3163              		.loc 1 875 0 discriminator 2
 3164 0070 F123     		movs	r3, #241
 3165              	.L91:
 3166              		.loc 1 875 0 discriminator 4
 3167 0072 FB76     		strb	r3, [r7, #27]
 876:.\AdvantageImpl.c ****                 if(transtype == 0xF1)
 3168              		.loc 1 876 0 is_stmt 1 discriminator 4
 3169 0074 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 3170 0076 F12B     		cmp	r3, #241
 3171 0078 0AD1     		bne	.L92
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 72


 877:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = 0xE3;
 3172              		.loc 1 877 0
 3173 007a 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3174 007e 5A1C     		adds	r2, r3, #1
 3175 0080 87F82720 		strb	r2, [r7, #39]
 3176 0084 1A46     		mov	r2, r3
 3177 0086 FB69     		ldr	r3, [r7, #28]
 3178 0088 1344     		add	r3, r3, r2
 3179 008a E322     		movs	r2, #227
 3180 008c 1A71     		strb	r2, [r3, #4]
 3181 008e 09E0     		b	.L93
 3182              	.L92:
 878:.\AdvantageImpl.c ****                 else
 879:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = 0xE2;
 3183              		.loc 1 879 0
 3184 0090 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3185 0094 5A1C     		adds	r2, r3, #1
 3186 0096 87F82720 		strb	r2, [r7, #39]
 3187 009a 1A46     		mov	r2, r3
 3188 009c FB69     		ldr	r3, [r7, #28]
 3189 009e 1344     		add	r3, r3, r2
 3190 00a0 E222     		movs	r2, #226
 3191 00a2 1A71     		strb	r2, [r3, #4]
 3192              	.L93:
 880:.\AdvantageImpl.c ****                     
 881:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0004 INDEX POSITION WITHIN THE PUMP'S BUFF
 882:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
 883:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = transtype;
 3193              		.loc 1 883 0
 3194 00a4 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3195 00a8 5A1C     		adds	r2, r3, #1
 3196 00aa 87F82720 		strb	r2, [r7, #39]
 3197 00ae 1A46     		mov	r2, r3
 3198 00b0 FB69     		ldr	r3, [r7, #28]
 3199 00b2 1344     		add	r3, r3, r2
 3200 00b4 FA7E     		ldrb	r2, [r7, #27]
 3201 00b6 1A71     		strb	r2, [r3, #4]
 884:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xF4;
 3202              		.loc 1 884 0
 3203 00b8 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3204 00bc 5A1C     		adds	r2, r3, #1
 3205 00be 87F82720 		strb	r2, [r7, #39]
 3206 00c2 1A46     		mov	r2, r3
 3207 00c4 FB69     		ldr	r3, [r7, #28]
 3208 00c6 1344     		add	r3, r3, r2
 3209 00c8 F422     		movs	r2, #244
 3210 00ca 1A71     		strb	r2, [r3, #4]
 885:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xF6; //Hose Data next
 3211              		.loc 1 885 0
 3212 00cc 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3213 00d0 5A1C     		adds	r2, r3, #1
 3214 00d2 87F82720 		strb	r2, [r7, #39]
 3215 00d6 1A46     		mov	r2, r3
 3216 00d8 FB69     		ldr	r3, [r7, #28]
 3217 00da 1344     		add	r3, r3, r2
 3218 00dc F622     		movs	r2, #246
 3219 00de 1A71     		strb	r2, [r3, #4]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 73


 886:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0006 INDEX POSITION WITHIN THE PUMP'S BUFF
 887:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
 888:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = (0xE0 | (ppump->_authorizationinfo._hoseid & 0x0F)
 3220              		.loc 1 888 0
 3221 00e0 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3222 00e4 5A1C     		adds	r2, r3, #1
 3223 00e6 87F82720 		strb	r2, [r7, #39]
 3224 00ea 1946     		mov	r1, r3
 3225 00ec 3B6A     		ldr	r3, [r7, #32]
 3226 00ee 93F8AA3B 		ldrb	r3, [r3, #2986]
 3227 00f2 DBB2     		uxtb	r3, r3
 3228 00f4 DBB2     		uxtb	r3, r3
 3229 00f6 03F00F03 		and	r3, r3, #15
 3230 00fa DBB2     		uxtb	r3, r3
 3231 00fc 63F01F03 		orn	r3, r3, #31
 3232 0100 DBB2     		uxtb	r3, r3
 3233 0102 DAB2     		uxtb	r2, r3
 3234 0104 FB69     		ldr	r3, [r7, #28]
 3235 0106 0B44     		add	r3, r3, r1
 3236 0108 1A71     		strb	r2, [r3, #4]
 889:.\AdvantageImpl.c ****                 
 890:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xF8; //Preset Data next
 3237              		.loc 1 890 0
 3238 010a 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3239 010e 5A1C     		adds	r2, r3, #1
 3240 0110 87F82720 		strb	r2, [r7, #39]
 3241 0114 1A46     		mov	r2, r3
 3242 0116 FB69     		ldr	r3, [r7, #28]
 3243 0118 1344     		add	r3, r3, r2
 3244 011a F822     		movs	r2, #248
 3245 011c 1A71     		strb	r2, [r3, #4]
 891:.\AdvantageImpl.c ****                 //Here we copy the remaining 8 bytes for the preset value
 892:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0008 INDEX POSITION WITHIN THE PUMP'S BUFF
 893:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
 894:.\AdvantageImpl.c ****                 memset(PBYTECAST(&ppump->_trasactionbuffer[0x0008]),0x00, 0x0008);
 3246              		.loc 1 894 0
 3247 011e 3B6A     		ldr	r3, [r7, #32]
 3248 0120 2833     		adds	r3, r3, #40
 3249 0122 1846     		mov	r0, r3
 3250 0124 0021     		movs	r1, #0
 3251 0126 0822     		movs	r2, #8
 3252 0128 FFF7FEFF 		bl	memset
 895:.\AdvantageImpl.c ****                 B78AD90CF552D9B30A(ppump->_authorizationinfo._presetamount, PBYTECAST(&ppump->_tras
 3253              		.loc 1 895 0
 3254 012c 3B6A     		ldr	r3, [r7, #32]
 3255 012e D3F8B03B 		ldr	r3, [r3, #2992]
 3256 0132 1A46     		mov	r2, r3
 3257 0134 4FF00003 		mov	r3, #0
 3258 0138 396A     		ldr	r1, [r7, #32]
 3259 013a 01F12804 		add	r4, r1, #40
 3260 013e 1046     		mov	r0, r2
 3261 0140 1946     		mov	r1, r3
 3262 0142 2246     		mov	r2, r4
 3263 0144 FFF7FEFF 		bl	B78AD90CF552D9B30A
 896:.\AdvantageImpl.c ****                 char8 *ptr = &ppump->_trasactionbuffer[0x0008];
 3264              		.loc 1 896 0
 3265 0148 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 74


 3266 014a 2833     		adds	r3, r3, #40
 3267 014c 7B61     		str	r3, [r7, #20]
 897:.\AdvantageImpl.c ****                 if(transtype == 0xF1) //Volume PRESET, then multiply by 1000
 3268              		.loc 1 897 0
 3269 014e FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 3270 0150 F12B     		cmp	r3, #241
 3271 0152 27D1     		bne	.L94
 3272              	.LBB16:
 898:.\AdvantageImpl.c ****                 {
 899:.\AdvantageImpl.c ****                     CastVolumeValue(ptr, 0x08);
 3273              		.loc 1 899 0
 3274 0154 7869     		ldr	r0, [r7, #20]
 3275 0156 0821     		movs	r1, #8
 3276 0158 FFF7FEFF 		bl	CastVolumeValue
 900:.\AdvantageImpl.c ****                     
 901:.\AdvantageImpl.c ****                     FOR(uint8 buffndx = 0, buffndx < 0x05, buffndx++)
 3277              		.loc 1 901 0
 3278 015c 0023     		movs	r3, #0
 3279 015e 87F82630 		strb	r3, [r7, #38]
 3280 0162 1AE0     		b	.L95
 3281              	.L96:
 902:.\AdvantageImpl.c ****                         puartdisp->_messagetx[index++] = (0xE0 | (ptr[buffndx] & 0x0F)); //Translat
 3282              		.loc 1 902 0 discriminator 3
 3283 0164 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3284 0168 5A1C     		adds	r2, r3, #1
 3285 016a 87F82720 		strb	r2, [r7, #39]
 3286 016e 1946     		mov	r1, r3
 3287 0170 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 3288 0174 7A69     		ldr	r2, [r7, #20]
 3289 0176 1344     		add	r3, r3, r2
 3290 0178 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3291 017a DBB2     		uxtb	r3, r3
 3292 017c 03F00F03 		and	r3, r3, #15
 3293 0180 DBB2     		uxtb	r3, r3
 3294 0182 63F01F03 		orn	r3, r3, #31
 3295 0186 DBB2     		uxtb	r3, r3
 3296 0188 DAB2     		uxtb	r2, r3
 3297 018a FB69     		ldr	r3, [r7, #28]
 3298 018c 0B44     		add	r3, r3, r1
 3299 018e 1A71     		strb	r2, [r3, #4]
 901:.\AdvantageImpl.c ****                         puartdisp->_messagetx[index++] = (0xE0 | (ptr[buffndx] & 0x0F)); //Translat
 3300              		.loc 1 901 0 discriminator 3
 3301 0190 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 3302 0194 0133     		adds	r3, r3, #1
 3303 0196 87F82630 		strb	r3, [r7, #38]
 3304              	.L95:
 901:.\AdvantageImpl.c ****                         puartdisp->_messagetx[index++] = (0xE0 | (ptr[buffndx] & 0x0F)); //Translat
 3305              		.loc 1 901 0 is_stmt 0 discriminator 1
 3306 019a 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 3307 019e 042B     		cmp	r3, #4
 3308 01a0 E0D9     		bls	.L96
 3309              	.LBE16:
 3310 01a2 2EE0     		b	.L97
 3311              	.L94:
 3312              	.LBB17:
 903:.\AdvantageImpl.c ****                 }
 904:.\AdvantageImpl.c ****                 else
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 75


 905:.\AdvantageImpl.c ****                 {
 906:.\AdvantageImpl.c ****                     if(!(_g_dispenserlayoutinfo._moneydecimals == 0x03 && _g_dispenserlayoutinfo._p
 3313              		.loc 1 906 0 is_stmt 1
 3314 01a4 574B     		ldr	r3, .L110
 3315 01a6 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 3316 01a8 032B     		cmp	r3, #3
 3317 01aa 03D1     		bne	.L98
 3318              		.loc 1 906 0 is_stmt 0 discriminator 1
 3319 01ac 554B     		ldr	r3, .L110
 3320 01ae 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 3321 01b0 022B     		cmp	r3, #2
 3322 01b2 03D0     		beq	.L99
 3323              	.L98:
 907:.\AdvantageImpl.c ****                         CastMoneyValue(ptr, 0x08);
 3324              		.loc 1 907 0 is_stmt 1
 3325 01b4 7869     		ldr	r0, [r7, #20]
 3326 01b6 0821     		movs	r1, #8
 3327 01b8 FFF7FEFF 		bl	CastMoneyValue
 3328              	.L99:
 908:.\AdvantageImpl.c ****                     
 909:.\AdvantageImpl.c ****                     FOR(uint8 buffndx = 0, buffndx < 0x06, buffndx++)
 3329              		.loc 1 909 0
 3330 01bc 0023     		movs	r3, #0
 3331 01be 87F82530 		strb	r3, [r7, #37]
 3332 01c2 1AE0     		b	.L100
 3333              	.L101:
 910:.\AdvantageImpl.c ****                         puartdisp->_messagetx[index++] = (0xE0 | (ptr[buffndx] & 0x0F)); //Translat
 3334              		.loc 1 910 0 discriminator 3
 3335 01c4 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3336 01c8 5A1C     		adds	r2, r3, #1
 3337 01ca 87F82720 		strb	r2, [r7, #39]
 3338 01ce 1946     		mov	r1, r3
 3339 01d0 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 3340 01d4 7A69     		ldr	r2, [r7, #20]
 3341 01d6 1344     		add	r3, r3, r2
 3342 01d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3343 01da DBB2     		uxtb	r3, r3
 3344 01dc 03F00F03 		and	r3, r3, #15
 3345 01e0 DBB2     		uxtb	r3, r3
 3346 01e2 63F01F03 		orn	r3, r3, #31
 3347 01e6 DBB2     		uxtb	r3, r3
 3348 01e8 DAB2     		uxtb	r2, r3
 3349 01ea FB69     		ldr	r3, [r7, #28]
 3350 01ec 0B44     		add	r3, r3, r1
 3351 01ee 1A71     		strb	r2, [r3, #4]
 909:.\AdvantageImpl.c ****                         puartdisp->_messagetx[index++] = (0xE0 | (ptr[buffndx] & 0x0F)); //Translat
 3352              		.loc 1 909 0 discriminator 3
 3353 01f0 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 3354 01f4 0133     		adds	r3, r3, #1
 3355 01f6 87F82530 		strb	r3, [r7, #37]
 3356              	.L100:
 909:.\AdvantageImpl.c ****                         puartdisp->_messagetx[index++] = (0xE0 | (ptr[buffndx] & 0x0F)); //Translat
 3357              		.loc 1 909 0 is_stmt 0 discriminator 1
 3358 01fa 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 3359 01fe 052B     		cmp	r3, #5
 3360 0200 E0D9     		bls	.L101
 3361              	.L97:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 76


 3362              	.LBE17:
 3363              	.LBE15:
 3364 0202 A0E0     		b	.L102
 3365              	.L89:
 911:.\AdvantageImpl.c ****                 }
 912:.\AdvantageImpl.c ****             }
 913:.\AdvantageImpl.c ****             else if(_g_dispenserlayoutinfo._displaydigitsmode == 0x07)
 3366              		.loc 1 913 0 is_stmt 1
 3367 0204 3F4B     		ldr	r3, .L110
 3368 0206 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3369 0208 072B     		cmp	r3, #7
 3370 020a 40F09C80 		bne	.L102
 3371              	.LBB18:
 914:.\AdvantageImpl.c ****             {
 915:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xE1;
 3372              		.loc 1 915 0
 3373 020e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3374 0212 5A1C     		adds	r2, r3, #1
 3375 0214 87F82720 		strb	r2, [r7, #39]
 3376 0218 1A46     		mov	r2, r3
 3377 021a FB69     		ldr	r3, [r7, #28]
 3378 021c 1344     		add	r3, r3, r2
 3379 021e E122     		movs	r2, #225
 3380 0220 1A71     		strb	r2, [r3, #4]
 916:.\AdvantageImpl.c ****                     
 917:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0004 INDEX POSITION WITHIN THE PUMP'S BUFF
 918:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
 919:.\AdvantageImpl.c ****                 uint8 transtype = ((0xF0 | ppump->_authorizationinfo._presettype) == 0xF1)? 0xF2: 0
 3381              		.loc 1 919 0
 3382 0222 3B6A     		ldr	r3, [r7, #32]
 3383 0224 93F8A93B 		ldrb	r3, [r3, #2985]
 3384 0228 DBB2     		uxtb	r3, r3
 3385 022a 63F00F03 		orn	r3, r3, #15
 3386 022e DBB2     		uxtb	r3, r3
 3387 0230 F12B     		cmp	r3, #241
 3388 0232 01D1     		bne	.L103
 3389              		.loc 1 919 0 is_stmt 0 discriminator 1
 3390 0234 F223     		movs	r3, #242
 3391 0236 00E0     		b	.L104
 3392              	.L103:
 3393              		.loc 1 919 0 discriminator 2
 3394 0238 F123     		movs	r3, #241
 3395              	.L104:
 3396              		.loc 1 919 0 discriminator 4
 3397 023a FB74     		strb	r3, [r7, #19]
 920:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = transtype;
 3398              		.loc 1 920 0 is_stmt 1 discriminator 4
 3399 023c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3400 0240 5A1C     		adds	r2, r3, #1
 3401 0242 87F82720 		strb	r2, [r7, #39]
 3402 0246 1A46     		mov	r2, r3
 3403 0248 FB69     		ldr	r3, [r7, #28]
 3404 024a 1344     		add	r3, r3, r2
 3405 024c FA7C     		ldrb	r2, [r7, #19]
 3406 024e 1A71     		strb	r2, [r3, #4]
 921:.\AdvantageImpl.c **** 
 922:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xF6; //Hose Data next
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 77


 3407              		.loc 1 922 0 discriminator 4
 3408 0250 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3409 0254 5A1C     		adds	r2, r3, #1
 3410 0256 87F82720 		strb	r2, [r7, #39]
 3411 025a 1A46     		mov	r2, r3
 3412 025c FB69     		ldr	r3, [r7, #28]
 3413 025e 1344     		add	r3, r3, r2
 3414 0260 F622     		movs	r2, #246
 3415 0262 1A71     		strb	r2, [r3, #4]
 923:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0006 INDEX POSITION WITHIN THE PUMP'S BUFF
 924:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
 925:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = (0xE0 | (ppump->_authorizationinfo._hoseid & 0x0F)
 3416              		.loc 1 925 0 discriminator 4
 3417 0264 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3418 0268 5A1C     		adds	r2, r3, #1
 3419 026a 87F82720 		strb	r2, [r7, #39]
 3420 026e 1946     		mov	r1, r3
 3421 0270 3B6A     		ldr	r3, [r7, #32]
 3422 0272 93F8AA3B 		ldrb	r3, [r3, #2986]
 3423 0276 DBB2     		uxtb	r3, r3
 3424 0278 DBB2     		uxtb	r3, r3
 3425 027a 03F00F03 		and	r3, r3, #15
 3426 027e DBB2     		uxtb	r3, r3
 3427 0280 63F01F03 		orn	r3, r3, #31
 3428 0284 DBB2     		uxtb	r3, r3
 3429 0286 DAB2     		uxtb	r2, r3
 3430 0288 FB69     		ldr	r3, [r7, #28]
 3431 028a 0B44     		add	r3, r3, r1
 3432 028c 1A71     		strb	r2, [r3, #4]
 926:.\AdvantageImpl.c ****                 
 927:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xF8; //Preset Data next
 3433              		.loc 1 927 0 discriminator 4
 3434 028e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3435 0292 5A1C     		adds	r2, r3, #1
 3436 0294 87F82720 		strb	r2, [r7, #39]
 3437 0298 1A46     		mov	r2, r3
 3438 029a FB69     		ldr	r3, [r7, #28]
 3439 029c 1344     		add	r3, r3, r2
 3440 029e F822     		movs	r2, #248
 3441 02a0 1A71     		strb	r2, [r3, #4]
 928:.\AdvantageImpl.c ****                 //Here we copy the remaining 8 bytes for the preset value
 929:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0008 INDEX POSITION WITHIN THE PUMP'S BUFF
 930:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
 931:.\AdvantageImpl.c ****                 memset(PBYTECAST(&ppump->_trasactionbuffer[0x0008]),0x00, 0x0008);
 3442              		.loc 1 931 0 discriminator 4
 3443 02a2 3B6A     		ldr	r3, [r7, #32]
 3444 02a4 2833     		adds	r3, r3, #40
 3445 02a6 1846     		mov	r0, r3
 3446 02a8 0021     		movs	r1, #0
 3447 02aa 0822     		movs	r2, #8
 3448 02ac FFF7FEFF 		bl	memset
 932:.\AdvantageImpl.c ****                 B78AD90CF552D9B30A(ppump->_authorizationinfo._presetamount, PBYTECAST(&ppump->_tras
 3449              		.loc 1 932 0 discriminator 4
 3450 02b0 3B6A     		ldr	r3, [r7, #32]
 3451 02b2 D3F8B03B 		ldr	r3, [r3, #2992]
 3452 02b6 1A46     		mov	r2, r3
 3453 02b8 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 78


 3454 02bc 396A     		ldr	r1, [r7, #32]
 3455 02be 01F12804 		add	r4, r1, #40
 3456 02c2 1046     		mov	r0, r2
 3457 02c4 1946     		mov	r1, r3
 3458 02c6 2246     		mov	r2, r4
 3459 02c8 FFF7FEFF 		bl	B78AD90CF552D9B30A
 933:.\AdvantageImpl.c ****                 char8 *ptr = &ppump->_trasactionbuffer[0x0008];
 3460              		.loc 1 933 0 discriminator 4
 3461 02cc 3B6A     		ldr	r3, [r7, #32]
 3462 02ce 2833     		adds	r3, r3, #40
 3463 02d0 FB60     		str	r3, [r7, #12]
 934:.\AdvantageImpl.c ****                 if(transtype == 0xF1) //Volume PRESET, then multiply by 1000
 3464              		.loc 1 934 0 discriminator 4
 3465 02d2 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 3466 02d4 F12B     		cmp	r3, #241
 3467 02d6 04D1     		bne	.L105
 935:.\AdvantageImpl.c ****                     CastVolumeValue(ptr, 0x08);
 3468              		.loc 1 935 0
 3469 02d8 F868     		ldr	r0, [r7, #12]
 3470 02da 0821     		movs	r1, #8
 3471 02dc FFF7FEFF 		bl	CastVolumeValue
 3472 02e0 0BE0     		b	.L106
 3473              	.L105:
 936:.\AdvantageImpl.c ****                 else if(!(_g_dispenserlayoutinfo._moneydecimals == 0x03 && _g_dispenserlayoutinfo._
 3474              		.loc 1 936 0
 3475 02e2 084B     		ldr	r3, .L110
 3476 02e4 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 3477 02e6 032B     		cmp	r3, #3
 3478 02e8 03D1     		bne	.L107
 3479              		.loc 1 936 0 is_stmt 0 discriminator 1
 3480 02ea 064B     		ldr	r3, .L110
 3481 02ec 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 3482 02ee 022B     		cmp	r3, #2
 3483 02f0 03D0     		beq	.L106
 3484              	.L107:
 937:.\AdvantageImpl.c ****                     CastMoneyValue(ptr, 0x08);
 3485              		.loc 1 937 0 is_stmt 1
 3486 02f2 F868     		ldr	r0, [r7, #12]
 3487 02f4 0821     		movs	r1, #8
 3488 02f6 FFF7FEFF 		bl	CastMoneyValue
 3489              	.L106:
 938:.\AdvantageImpl.c ****                     
 939:.\AdvantageImpl.c ****                 FOR(uint8 buffndx = 0, buffndx < 0x08, buffndx++)
 3490              		.loc 1 939 0
 3491 02fa 0023     		movs	r3, #0
 3492 02fc 87F82430 		strb	r3, [r7, #36]
 3493 0300 1DE0     		b	.L108
 3494              	.L111:
 3495 0302 00BF     		.align	2
 3496              	.L110:
 3497 0304 00000000 		.word	_g_dispenserlayoutinfo
 3498              	.L109:
 940:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (ptr[buffndx] & 0x0F)); //Translate fr
 3499              		.loc 1 940 0 discriminator 3
 3500 0308 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3501 030c 5A1C     		adds	r2, r3, #1
 3502 030e 87F82720 		strb	r2, [r7, #39]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 79


 3503 0312 1946     		mov	r1, r3
 3504 0314 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 3505 0318 FA68     		ldr	r2, [r7, #12]
 3506 031a 1344     		add	r3, r3, r2
 3507 031c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3508 031e DBB2     		uxtb	r3, r3
 3509 0320 03F00F03 		and	r3, r3, #15
 3510 0324 DBB2     		uxtb	r3, r3
 3511 0326 63F01F03 		orn	r3, r3, #31
 3512 032a DBB2     		uxtb	r3, r3
 3513 032c DAB2     		uxtb	r2, r3
 3514 032e FB69     		ldr	r3, [r7, #28]
 3515 0330 0B44     		add	r3, r3, r1
 3516 0332 1A71     		strb	r2, [r3, #4]
 939:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (ptr[buffndx] & 0x0F)); //Translate fr
 3517              		.loc 1 939 0 discriminator 3
 3518 0334 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 3519 0338 0133     		adds	r3, r3, #1
 3520 033a 87F82430 		strb	r3, [r7, #36]
 3521              	.L108:
 939:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (ptr[buffndx] & 0x0F)); //Translate fr
 3522              		.loc 1 939 0 is_stmt 0 discriminator 1
 3523 033e 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 3524 0342 072B     		cmp	r3, #7
 3525 0344 E0D9     		bls	.L109
 3526              	.L102:
 3527              	.LBE18:
 941:.\AdvantageImpl.c ****             }
 942:.\AdvantageImpl.c ****             ppump->_presetdone = true;
 3528              		.loc 1 942 0 is_stmt 1
 3529 0346 3B6A     		ldr	r3, [r7, #32]
 3530 0348 0122     		movs	r2, #1
 3531 034a 1A72     		strb	r2, [r3, #8]
 943:.\AdvantageImpl.c ****             
 944:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = LRCn; //LRC next
 3532              		.loc 1 944 0
 3533 034c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3534 0350 5A1C     		adds	r2, r3, #1
 3535 0352 87F82720 		strb	r2, [r7, #39]
 3536 0356 1A46     		mov	r2, r3
 3537 0358 FB69     		ldr	r3, [r7, #28]
 3538 035a 1344     		add	r3, r3, r2
 3539 035c FB22     		movs	r2, #251
 3540 035e 1A71     		strb	r2, [r3, #4]
 945:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = GetLRC(puartdisp->_messagetx);
 3541              		.loc 1 945 0
 3542 0360 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3543 0364 5A1C     		adds	r2, r3, #1
 3544 0366 87F82720 		strb	r2, [r7, #39]
 3545 036a 1C46     		mov	r4, r3
 3546 036c FB69     		ldr	r3, [r7, #28]
 3547 036e 0433     		adds	r3, r3, #4
 3548 0370 1846     		mov	r0, r3
 3549 0372 FFF7FEFF 		bl	GetLRC
 3550 0376 0346     		mov	r3, r0
 3551 0378 1A46     		mov	r2, r3
 3552 037a FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 80


 3553 037c 2344     		add	r3, r3, r4
 3554 037e 1A71     		strb	r2, [r3, #4]
 946:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = EOM;
 3555              		.loc 1 946 0
 3556 0380 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3557 0384 5A1C     		adds	r2, r3, #1
 3558 0386 87F82720 		strb	r2, [r7, #39]
 3559 038a 1A46     		mov	r2, r3
 3560 038c FB69     		ldr	r3, [r7, #28]
 3561 038e 1344     		add	r3, r3, r2
 3562 0390 F022     		movs	r2, #240
 3563 0392 1A71     		strb	r2, [r3, #4]
 947:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 948:.\AdvantageImpl.c ****             
 949:.\AdvantageImpl.c ****             puartdisp->_messagelength = index;
 3564              		.loc 1 949 0
 3565 0394 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3566 0398 9AB2     		uxth	r2, r3
 3567 039a FB69     		ldr	r3, [r7, #28]
 3568 039c 5A80     		strh	r2, [r3, #2]	@ movhi
 950:.\AdvantageImpl.c ****             puartdisp->_messagestate = PENDING;
 3569              		.loc 1 950 0
 3570 039e FB69     		ldr	r3, [r7, #28]
 3571 03a0 C222     		movs	r2, #194
 3572 03a2 1A70     		strb	r2, [r3]
 3573              	.L87:
 3574              	.LBE14:
 951:.\AdvantageImpl.c ****         }
 952:.\AdvantageImpl.c ****     }
 953:.\AdvantageImpl.c ****     
 954:.\AdvantageImpl.c **** }
 3575              		.loc 1 954 0
 3576 03a4 2C37     		adds	r7, r7, #44
 3577              		.cfi_def_cfa_offset 12
 3578 03a6 BD46     		mov	sp, r7
 3579              		.cfi_def_cfa_register 13
 3580              		@ sp needed
 3581 03a8 90BD     		pop	{r4, r7, pc}
 3582              		.cfi_endproc
 3583              	.LFE78:
 3584              		.size	PumpCreditPresetHose, .-PumpCreditPresetHose
 3585 03aa 00BF     		.section	.text.PumpPresetHose,"ax",%progbits
 3586              		.align	2
 3587              		.global	PumpPresetHose
 3588              		.thumb
 3589              		.thumb_func
 3590              		.type	PumpPresetHose, %function
 3591              	PumpPresetHose:
 3592              	.LFB79:
 955:.\AdvantageImpl.c **** 
 956:.\AdvantageImpl.c **** //@Created By: HIJH
 957:.\AdvantageImpl.c **** //@Septembre de 2016
 958:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 959:.\AdvantageImpl.c **** //Preset values will be placed within the SinkMessage's buffer. This is a convention that applies t
 960:.\AdvantageImpl.c **** //all of the available transactions. The pump function must deal with this while it is assembling t
 961:.\AdvantageImpl.c **** //For this message the data comes as follows:
 962:.\AdvantageImpl.c **** // - First byte is the preset type (Volume:1 / Money:2 )
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 81


 963:.\AdvantageImpl.c **** // - Second byte is the Hose (A:0, B:1, C:2, D:3)
 964:.\AdvantageImpl.c **** // - Block of 8 bytes for the preset value
 965:.\AdvantageImpl.c **** //This block of data (10 bytes) must be moved to another position within the same buffer (even posi
 966:.\AdvantageImpl.c **** void PumpPresetHose(void *pparam)
 967:.\AdvantageImpl.c **** {
 3593              		.loc 1 967 0
 3594              		.cfi_startproc
 3595              		@ args = 0, pretend = 0, frame = 40
 3596              		@ frame_needed = 1, uses_anonymous_args = 0
 3597 0000 90B5     		push	{r4, r7, lr}
 3598              		.cfi_def_cfa_offset 12
 3599              		.cfi_offset 4, -12
 3600              		.cfi_offset 7, -8
 3601              		.cfi_offset 14, -4
 3602 0002 8BB0     		sub	sp, sp, #44
 3603              		.cfi_def_cfa_offset 56
 3604 0004 00AF     		add	r7, sp, #0
 3605              		.cfi_def_cfa_register 7
 3606 0006 7860     		str	r0, [r7, #4]
 968:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 3607              		.loc 1 968 0
 3608 0008 7B68     		ldr	r3, [r7, #4]
 3609 000a 3B62     		str	r3, [r7, #32]
 969:.\AdvantageImpl.c ****     if(ppump)
 3610              		.loc 1 969 0
 3611 000c 3B6A     		ldr	r3, [r7, #32]
 3612 000e 002B     		cmp	r3, #0
 3613 0010 00F0AC81 		beq	.L112
 3614              	.LBB19:
 970:.\AdvantageImpl.c ****     {
 971:.\AdvantageImpl.c ****         uint8_t index = 0;        
 3615              		.loc 1 971 0
 3616 0014 0023     		movs	r3, #0
 3617 0016 87F82730 		strb	r3, [r7, #39]
 972:.\AdvantageImpl.c ****         PUARTMESSAGEPTR puartdisp = GetUARTMessageSlot(UART_DISPENSER);
 3618              		.loc 1 972 0
 3619 001a A220     		movs	r0, #162
 3620 001c FFF7FEFF 		bl	GetUARTMessageSlot
 3621 0020 F861     		str	r0, [r7, #28]
 973:.\AdvantageImpl.c ****         memset(ppump->_rxbuffer, 0x00, _PUMP_RX_BUFFER_SIZE_);
 3622              		.loc 1 973 0
 3623 0022 3B6A     		ldr	r3, [r7, #32]
 3624 0024 03F5D073 		add	r3, r3, #416
 3625 0028 1846     		mov	r0, r3
 3626 002a 0021     		movs	r1, #0
 3627 002c 4FF4C072 		mov	r2, #384
 3628 0030 FFF7FEFF 		bl	memset
 974:.\AdvantageImpl.c ****         if(puartdisp)
 3629              		.loc 1 974 0
 3630 0034 FB69     		ldr	r3, [r7, #28]
 3631 0036 002B     		cmp	r3, #0
 3632 0038 00F09881 		beq	.L112
 975:.\AdvantageImpl.c ****         {
 976:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 977:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = SOM;
 3633              		.loc 1 977 0
 3634 003c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 82


 3635 0040 5A1C     		adds	r2, r3, #1
 3636 0042 87F82720 		strb	r2, [r7, #39]
 3637 0046 1A46     		mov	r2, r3
 3638 0048 FB69     		ldr	r3, [r7, #28]
 3639 004a 1344     		add	r3, r3, r2
 3640 004c FF22     		movs	r2, #255
 3641 004e 1A71     		strb	r2, [r3, #4]
 978:.\AdvantageImpl.c ****             if(_g_dispenserlayoutinfo._displaydigitsmode == 0x06)
 3642              		.loc 1 978 0
 3643 0050 C84B     		ldr	r3, .L135
 3644 0052 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3645 0054 062B     		cmp	r3, #6
 3646 0056 40F0C580 		bne	.L114
 3647              	.LBB20:
 979:.\AdvantageImpl.c ****             {
 980:.\AdvantageImpl.c ****                 uint8 transtype = (0xF0 | ((ppump->_trasactionbuffer[0x0004] == 0x0F)? 0x02: 0x01))
 3648              		.loc 1 980 0
 3649 005a 3B6A     		ldr	r3, [r7, #32]
 3650 005c 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 3651 0060 0F2B     		cmp	r3, #15
 3652 0062 01D1     		bne	.L115
 3653              		.loc 1 980 0 is_stmt 0 discriminator 1
 3654 0064 F223     		movs	r3, #242
 3655 0066 00E0     		b	.L116
 3656              	.L115:
 3657              		.loc 1 980 0 discriminator 2
 3658 0068 F123     		movs	r3, #241
 3659              	.L116:
 3660              		.loc 1 980 0 discriminator 4
 3661 006a FB76     		strb	r3, [r7, #27]
 981:.\AdvantageImpl.c ****                 if(transtype == 0xF1)
 3662              		.loc 1 981 0 is_stmt 1 discriminator 4
 3663 006c FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 3664 006e F12B     		cmp	r3, #241
 3665 0070 0AD1     		bne	.L117
 982:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = 0xE3;
 3666              		.loc 1 982 0
 3667 0072 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3668 0076 5A1C     		adds	r2, r3, #1
 3669 0078 87F82720 		strb	r2, [r7, #39]
 3670 007c 1A46     		mov	r2, r3
 3671 007e FB69     		ldr	r3, [r7, #28]
 3672 0080 1344     		add	r3, r3, r2
 3673 0082 E322     		movs	r2, #227
 3674 0084 1A71     		strb	r2, [r3, #4]
 3675 0086 09E0     		b	.L118
 3676              	.L117:
 983:.\AdvantageImpl.c ****                 else
 984:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = 0xE2;
 3677              		.loc 1 984 0
 3678 0088 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3679 008c 5A1C     		adds	r2, r3, #1
 3680 008e 87F82720 		strb	r2, [r7, #39]
 3681 0092 1A46     		mov	r2, r3
 3682 0094 FB69     		ldr	r3, [r7, #28]
 3683 0096 1344     		add	r3, r3, r2
 3684 0098 E222     		movs	r2, #226
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 83


 3685 009a 1A71     		strb	r2, [r3, #4]
 3686              	.L118:
 985:.\AdvantageImpl.c ****                 
 986:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0004 INDEX POSITION WITHIN THE PUMP'S BUFF
 987:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
 988:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = transtype;
 3687              		.loc 1 988 0
 3688 009c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3689 00a0 5A1C     		adds	r2, r3, #1
 3690 00a2 87F82720 		strb	r2, [r7, #39]
 3691 00a6 1A46     		mov	r2, r3
 3692 00a8 FB69     		ldr	r3, [r7, #28]
 3693 00aa 1344     		add	r3, r3, r2
 3694 00ac FA7E     		ldrb	r2, [r7, #27]
 3695 00ae 1A71     		strb	r2, [r3, #4]
 989:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xF4;
 3696              		.loc 1 989 0
 3697 00b0 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3698 00b4 5A1C     		adds	r2, r3, #1
 3699 00b6 87F82720 		strb	r2, [r7, #39]
 3700 00ba 1A46     		mov	r2, r3
 3701 00bc FB69     		ldr	r3, [r7, #28]
 3702 00be 1344     		add	r3, r3, r2
 3703 00c0 F422     		movs	r2, #244
 3704 00c2 1A71     		strb	r2, [r3, #4]
 990:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xF6; //Hose Data next
 3705              		.loc 1 990 0
 3706 00c4 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3707 00c8 5A1C     		adds	r2, r3, #1
 3708 00ca 87F82720 		strb	r2, [r7, #39]
 3709 00ce 1A46     		mov	r2, r3
 3710 00d0 FB69     		ldr	r3, [r7, #28]
 3711 00d2 1344     		add	r3, r3, r2
 3712 00d4 F622     		movs	r2, #246
 3713 00d6 1A71     		strb	r2, [r3, #4]
 991:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0006 INDEX POSITION WITHIN THE PUMP'S BUFF
 992:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
 993:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ppump->_trasactionbuffer[GetBuffer
 3714              		.loc 1 993 0
 3715 00d8 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3716 00dc 5A1C     		adds	r2, r3, #1
 3717 00de 87F82720 		strb	r2, [r7, #39]
 3718 00e2 1C46     		mov	r4, r3
 3719 00e4 0720     		movs	r0, #7
 3720 00e6 FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 3721 00ea 0346     		mov	r3, r0
 3722 00ec 1A46     		mov	r2, r3
 3723 00ee 3B6A     		ldr	r3, [r7, #32]
 3724 00f0 1344     		add	r3, r3, r2
 3725 00f2 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 3726 00f6 03F00F03 		and	r3, r3, #15
 3727 00fa DBB2     		uxtb	r3, r3
 3728 00fc 63F01F03 		orn	r3, r3, #31
 3729 0100 DAB2     		uxtb	r2, r3
 3730 0102 FB69     		ldr	r3, [r7, #28]
 3731 0104 2344     		add	r3, r3, r4
 3732 0106 1A71     		strb	r2, [r3, #4]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 84


 994:.\AdvantageImpl.c ****                 //puartdisp->_messagetx[index++] = 0xE0;
 995:.\AdvantageImpl.c ****                 
 996:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xF8; //Preset Data next
 3733              		.loc 1 996 0
 3734 0108 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3735 010c 5A1C     		adds	r2, r3, #1
 3736 010e 87F82720 		strb	r2, [r7, #39]
 3737 0112 1A46     		mov	r2, r3
 3738 0114 FB69     		ldr	r3, [r7, #28]
 3739 0116 1344     		add	r3, r3, r2
 3740 0118 F822     		movs	r2, #248
 3741 011a 1A71     		strb	r2, [r3, #4]
 997:.\AdvantageImpl.c ****                 //Here we copy the remaining 8 bytes for the preset value
 998:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0008 INDEX POSITION WITHIN THE PUMP'S BUFF
 999:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1000:.\AdvantageImpl.c ****                 char8 *ptr = &ppump->_trasactionbuffer[0x0008];
 3742              		.loc 1 1000 0
 3743 011c 3B6A     		ldr	r3, [r7, #32]
 3744 011e 2833     		adds	r3, r3, #40
 3745 0120 7B61     		str	r3, [r7, #20]
1001:.\AdvantageImpl.c ****                 if(transtype == 0xF1) //Volume PRESET, then multiply by 1000
 3746              		.loc 1 1001 0
 3747 0122 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 3748 0124 F12B     		cmp	r3, #241
 3749 0126 2AD1     		bne	.L119
 3750              	.LBB21:
1002:.\AdvantageImpl.c ****                 {
1003:.\AdvantageImpl.c ****                     CastVolumeValue(ptr, 0x08);
 3751              		.loc 1 1003 0
 3752 0128 7869     		ldr	r0, [r7, #20]
 3753 012a 0821     		movs	r1, #8
 3754 012c FFF7FEFF 		bl	CastVolumeValue
1004:.\AdvantageImpl.c ****                     
1005:.\AdvantageImpl.c ****                     FOR(uint8 buffndx = 0, buffndx < 0x05, buffndx++)
 3755              		.loc 1 1005 0
 3756 0130 0023     		movs	r3, #0
 3757 0132 87F82630 		strb	r3, [r7, #38]
 3758 0136 1DE0     		b	.L120
 3759              	.L121:
1006:.\AdvantageImpl.c ****                         puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Tran
 3760              		.loc 1 1006 0 discriminator 3
 3761 0138 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3762 013c 5A1C     		adds	r2, r3, #1
 3763 013e 87F82720 		strb	r2, [r7, #39]
 3764 0142 1946     		mov	r1, r3
 3765 0144 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 3766 0148 C3F10703 		rsb	r3, r3, #7
 3767 014c 1A46     		mov	r2, r3
 3768 014e 7B69     		ldr	r3, [r7, #20]
 3769 0150 1344     		add	r3, r3, r2
 3770 0152 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3771 0154 DBB2     		uxtb	r3, r3
 3772 0156 03F00F03 		and	r3, r3, #15
 3773 015a DBB2     		uxtb	r3, r3
 3774 015c 63F01F03 		orn	r3, r3, #31
 3775 0160 DBB2     		uxtb	r3, r3
 3776 0162 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 85


 3777 0164 FB69     		ldr	r3, [r7, #28]
 3778 0166 0B44     		add	r3, r3, r1
 3779 0168 1A71     		strb	r2, [r3, #4]
1005:.\AdvantageImpl.c ****                         puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Tran
 3780              		.loc 1 1005 0 discriminator 3
 3781 016a 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 3782 016e 0133     		adds	r3, r3, #1
 3783 0170 87F82630 		strb	r3, [r7, #38]
 3784              	.L120:
1005:.\AdvantageImpl.c ****                         puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Tran
 3785              		.loc 1 1005 0 is_stmt 0 discriminator 1
 3786 0174 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 3787 0178 042B     		cmp	r3, #4
 3788 017a DDD9     		bls	.L121
 3789              	.LBE21:
 3790 017c 31E0     		b	.L122
 3791              	.L119:
 3792              	.LBB22:
1007:.\AdvantageImpl.c ****                 }
1008:.\AdvantageImpl.c ****                 else
1009:.\AdvantageImpl.c ****                 {
1010:.\AdvantageImpl.c ****                     if(!(_g_dispenserlayoutinfo._moneydecimals == 0x03 && _g_dispenserlayoutinfo._p
 3793              		.loc 1 1010 0 is_stmt 1
 3794 017e 7D4B     		ldr	r3, .L135
 3795 0180 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 3796 0182 032B     		cmp	r3, #3
 3797 0184 03D1     		bne	.L123
 3798              		.loc 1 1010 0 is_stmt 0 discriminator 1
 3799 0186 7B4B     		ldr	r3, .L135
 3800 0188 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 3801 018a 022B     		cmp	r3, #2
 3802 018c 03D0     		beq	.L124
 3803              	.L123:
1011:.\AdvantageImpl.c ****                         CastMoneyValue(ptr, 0x08);
 3804              		.loc 1 1011 0 is_stmt 1
 3805 018e 7869     		ldr	r0, [r7, #20]
 3806 0190 0821     		movs	r1, #8
 3807 0192 FFF7FEFF 		bl	CastMoneyValue
 3808              	.L124:
1012:.\AdvantageImpl.c ****                     
1013:.\AdvantageImpl.c ****                     FOR(uint8 buffndx = 0, buffndx < 0x06, buffndx++)
 3809              		.loc 1 1013 0
 3810 0196 0023     		movs	r3, #0
 3811 0198 87F82530 		strb	r3, [r7, #37]
 3812 019c 1DE0     		b	.L125
 3813              	.L126:
1014:.\AdvantageImpl.c ****                         puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Tran
 3814              		.loc 1 1014 0 discriminator 3
 3815 019e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3816 01a2 5A1C     		adds	r2, r3, #1
 3817 01a4 87F82720 		strb	r2, [r7, #39]
 3818 01a8 1946     		mov	r1, r3
 3819 01aa 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 3820 01ae C3F10703 		rsb	r3, r3, #7
 3821 01b2 1A46     		mov	r2, r3
 3822 01b4 7B69     		ldr	r3, [r7, #20]
 3823 01b6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 86


 3824 01b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3825 01ba DBB2     		uxtb	r3, r3
 3826 01bc 03F00F03 		and	r3, r3, #15
 3827 01c0 DBB2     		uxtb	r3, r3
 3828 01c2 63F01F03 		orn	r3, r3, #31
 3829 01c6 DBB2     		uxtb	r3, r3
 3830 01c8 DAB2     		uxtb	r2, r3
 3831 01ca FB69     		ldr	r3, [r7, #28]
 3832 01cc 0B44     		add	r3, r3, r1
 3833 01ce 1A71     		strb	r2, [r3, #4]
1013:.\AdvantageImpl.c ****                         puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Tran
 3834              		.loc 1 1013 0 discriminator 3
 3835 01d0 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 3836 01d4 0133     		adds	r3, r3, #1
 3837 01d6 87F82530 		strb	r3, [r7, #37]
 3838              	.L125:
1013:.\AdvantageImpl.c ****                         puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Tran
 3839              		.loc 1 1013 0 is_stmt 0 discriminator 1
 3840 01da 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 3841 01de 052B     		cmp	r3, #5
 3842 01e0 DDD9     		bls	.L126
 3843              	.L122:
 3844              	.LBE22:
 3845              	.LBE20:
 3846 01e2 94E0     		b	.L127
 3847              	.L114:
1015:.\AdvantageImpl.c ****                 }
1016:.\AdvantageImpl.c ****             }
1017:.\AdvantageImpl.c ****             else if(_g_dispenserlayoutinfo._displaydigitsmode == 0x07)
 3848              		.loc 1 1017 0 is_stmt 1
 3849 01e4 634B     		ldr	r3, .L135
 3850 01e6 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3851 01e8 072B     		cmp	r3, #7
 3852 01ea 40F09080 		bne	.L127
 3853              	.LBB23:
1018:.\AdvantageImpl.c ****             {
1019:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xE1;
 3854              		.loc 1 1019 0
 3855 01ee 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3856 01f2 5A1C     		adds	r2, r3, #1
 3857 01f4 87F82720 		strb	r2, [r7, #39]
 3858 01f8 1A46     		mov	r2, r3
 3859 01fa FB69     		ldr	r3, [r7, #28]
 3860 01fc 1344     		add	r3, r3, r2
 3861 01fe E122     		movs	r2, #225
 3862 0200 1A71     		strb	r2, [r3, #4]
1020:.\AdvantageImpl.c ****                     
1021:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0004 INDEX POSITION WITHIN THE PUMP'S BUFF
1022:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1023:.\AdvantageImpl.c ****                 uint8 transtype = (0xF0 | ((ppump->_trasactionbuffer[0x0004] == 0x0F)? 0x02: 0x01))
 3863              		.loc 1 1023 0
 3864 0202 3B6A     		ldr	r3, [r7, #32]
 3865 0204 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 3866 0208 0F2B     		cmp	r3, #15
 3867 020a 01D1     		bne	.L128
 3868              		.loc 1 1023 0 is_stmt 0 discriminator 1
 3869 020c F223     		movs	r3, #242
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 87


 3870 020e 00E0     		b	.L129
 3871              	.L128:
 3872              		.loc 1 1023 0 discriminator 2
 3873 0210 F123     		movs	r3, #241
 3874              	.L129:
 3875              		.loc 1 1023 0 discriminator 4
 3876 0212 FB74     		strb	r3, [r7, #19]
1024:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = transtype;
 3877              		.loc 1 1024 0 is_stmt 1 discriminator 4
 3878 0214 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3879 0218 5A1C     		adds	r2, r3, #1
 3880 021a 87F82720 		strb	r2, [r7, #39]
 3881 021e 1A46     		mov	r2, r3
 3882 0220 FB69     		ldr	r3, [r7, #28]
 3883 0222 1344     		add	r3, r3, r2
 3884 0224 FA7C     		ldrb	r2, [r7, #19]
 3885 0226 1A71     		strb	r2, [r3, #4]
1025:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xF4;
 3886              		.loc 1 1025 0 discriminator 4
 3887 0228 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3888 022c 5A1C     		adds	r2, r3, #1
 3889 022e 87F82720 		strb	r2, [r7, #39]
 3890 0232 1A46     		mov	r2, r3
 3891 0234 FB69     		ldr	r3, [r7, #28]
 3892 0236 1344     		add	r3, r3, r2
 3893 0238 F422     		movs	r2, #244
 3894 023a 1A71     		strb	r2, [r3, #4]
1026:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xF6; //Hose Data next
 3895              		.loc 1 1026 0 discriminator 4
 3896 023c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3897 0240 5A1C     		adds	r2, r3, #1
 3898 0242 87F82720 		strb	r2, [r7, #39]
 3899 0246 1A46     		mov	r2, r3
 3900 0248 FB69     		ldr	r3, [r7, #28]
 3901 024a 1344     		add	r3, r3, r2
 3902 024c F622     		movs	r2, #246
 3903 024e 1A71     		strb	r2, [r3, #4]
1027:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0006 INDEX POSITION WITHIN THE PUMP'S BUFF
1028:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1029:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ppump->_trasactionbuffer[GetBuffer
 3904              		.loc 1 1029 0 discriminator 4
 3905 0250 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3906 0254 5A1C     		adds	r2, r3, #1
 3907 0256 87F82720 		strb	r2, [r7, #39]
 3908 025a 1C46     		mov	r4, r3
 3909 025c 0720     		movs	r0, #7
 3910 025e FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 3911 0262 0346     		mov	r3, r0
 3912 0264 1A46     		mov	r2, r3
 3913 0266 3B6A     		ldr	r3, [r7, #32]
 3914 0268 1344     		add	r3, r3, r2
 3915 026a 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 3916 026e 03F00F03 		and	r3, r3, #15
 3917 0272 DBB2     		uxtb	r3, r3
 3918 0274 63F01F03 		orn	r3, r3, #31
 3919 0278 DAB2     		uxtb	r2, r3
 3920 027a FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 88


 3921 027c 2344     		add	r3, r3, r4
 3922 027e 1A71     		strb	r2, [r3, #4]
1030:.\AdvantageImpl.c ****                 //puartdisp->_messagetx[index++] = 0xE0;
1031:.\AdvantageImpl.c ****                 
1032:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xF8; //Preset Data next
 3923              		.loc 1 1032 0 discriminator 4
 3924 0280 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3925 0284 5A1C     		adds	r2, r3, #1
 3926 0286 87F82720 		strb	r2, [r7, #39]
 3927 028a 1A46     		mov	r2, r3
 3928 028c FB69     		ldr	r3, [r7, #28]
 3929 028e 1344     		add	r3, r3, r2
 3930 0290 F822     		movs	r2, #248
 3931 0292 1A71     		strb	r2, [r3, #4]
1033:.\AdvantageImpl.c ****                 //Here we copy the remaining 8 bytes for the preset value
1034:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0008 INDEX POSITION WITHIN THE PUMP'S BUFF
1035:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1036:.\AdvantageImpl.c ****                 char8 *ptr = &ppump->_trasactionbuffer[0x0008];
 3932              		.loc 1 1036 0 discriminator 4
 3933 0294 3B6A     		ldr	r3, [r7, #32]
 3934 0296 2833     		adds	r3, r3, #40
 3935 0298 FB60     		str	r3, [r7, #12]
1037:.\AdvantageImpl.c ****                 if(transtype == 0xF1) //Volume PRESET, then multiply by 1000
 3936              		.loc 1 1037 0 discriminator 4
 3937 029a FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 3938 029c F12B     		cmp	r3, #241
 3939 029e 04D1     		bne	.L130
1038:.\AdvantageImpl.c ****                     CastVolumeValue(ptr, 0x08);
 3940              		.loc 1 1038 0
 3941 02a0 F868     		ldr	r0, [r7, #12]
 3942 02a2 0821     		movs	r1, #8
 3943 02a4 FFF7FEFF 		bl	CastVolumeValue
 3944 02a8 0BE0     		b	.L131
 3945              	.L130:
1039:.\AdvantageImpl.c ****                 else if(!(_g_dispenserlayoutinfo._moneydecimals == 0x03 && _g_dispenserlayoutinfo._
 3946              		.loc 1 1039 0
 3947 02aa 324B     		ldr	r3, .L135
 3948 02ac DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 3949 02ae 032B     		cmp	r3, #3
 3950 02b0 03D1     		bne	.L132
 3951              		.loc 1 1039 0 is_stmt 0 discriminator 1
 3952 02b2 304B     		ldr	r3, .L135
 3953 02b4 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 3954 02b6 022B     		cmp	r3, #2
 3955 02b8 03D0     		beq	.L131
 3956              	.L132:
1040:.\AdvantageImpl.c ****                     CastMoneyValue(ptr, 0x08);
 3957              		.loc 1 1040 0 is_stmt 1
 3958 02ba F868     		ldr	r0, [r7, #12]
 3959 02bc 0821     		movs	r1, #8
 3960 02be FFF7FEFF 		bl	CastMoneyValue
 3961              	.L131:
1041:.\AdvantageImpl.c ****                     
1042:.\AdvantageImpl.c ****                 FOR(uint8 buffndx = 0, buffndx < 0x08, buffndx++)
 3962              		.loc 1 1042 0
 3963 02c2 0023     		movs	r3, #0
 3964 02c4 87F82430 		strb	r3, [r7, #36]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 89


 3965 02c8 1DE0     		b	.L133
 3966              	.L134:
1043:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Translat
 3967              		.loc 1 1043 0 discriminator 3
 3968 02ca 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 3969 02ce 5A1C     		adds	r2, r3, #1
 3970 02d0 87F82720 		strb	r2, [r7, #39]
 3971 02d4 1946     		mov	r1, r3
 3972 02d6 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 3973 02da C3F10703 		rsb	r3, r3, #7
 3974 02de 1A46     		mov	r2, r3
 3975 02e0 FB68     		ldr	r3, [r7, #12]
 3976 02e2 1344     		add	r3, r3, r2
 3977 02e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3978 02e6 DBB2     		uxtb	r3, r3
 3979 02e8 03F00F03 		and	r3, r3, #15
 3980 02ec DBB2     		uxtb	r3, r3
 3981 02ee 63F01F03 		orn	r3, r3, #31
 3982 02f2 DBB2     		uxtb	r3, r3
 3983 02f4 DAB2     		uxtb	r2, r3
 3984 02f6 FB69     		ldr	r3, [r7, #28]
 3985 02f8 0B44     		add	r3, r3, r1
 3986 02fa 1A71     		strb	r2, [r3, #4]
1042:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Translat
 3987              		.loc 1 1042 0 discriminator 3
 3988 02fc 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 3989 0300 0133     		adds	r3, r3, #1
 3990 0302 87F82430 		strb	r3, [r7, #36]
 3991              	.L133:
1042:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Translat
 3992              		.loc 1 1042 0 is_stmt 0 discriminator 1
 3993 0306 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 3994 030a 072B     		cmp	r3, #7
 3995 030c DDD9     		bls	.L134
 3996              	.L127:
 3997              	.LBE23:
1044:.\AdvantageImpl.c ****             }
1045:.\AdvantageImpl.c ****             ppump->_presetdone = true;
 3998              		.loc 1 1045 0 is_stmt 1
 3999 030e 3B6A     		ldr	r3, [r7, #32]
 4000 0310 0122     		movs	r2, #1
 4001 0312 1A72     		strb	r2, [r3, #8]
1046:.\AdvantageImpl.c ****             
1047:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = LRCn; //LRC next
 4002              		.loc 1 1047 0
 4003 0314 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4004 0318 5A1C     		adds	r2, r3, #1
 4005 031a 87F82720 		strb	r2, [r7, #39]
 4006 031e 1A46     		mov	r2, r3
 4007 0320 FB69     		ldr	r3, [r7, #28]
 4008 0322 1344     		add	r3, r3, r2
 4009 0324 FB22     		movs	r2, #251
 4010 0326 1A71     		strb	r2, [r3, #4]
1048:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = GetLRC(puartdisp->_messagetx);
 4011              		.loc 1 1048 0
 4012 0328 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4013 032c 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 90


 4014 032e 87F82720 		strb	r2, [r7, #39]
 4015 0332 1C46     		mov	r4, r3
 4016 0334 FB69     		ldr	r3, [r7, #28]
 4017 0336 0433     		adds	r3, r3, #4
 4018 0338 1846     		mov	r0, r3
 4019 033a FFF7FEFF 		bl	GetLRC
 4020 033e 0346     		mov	r3, r0
 4021 0340 1A46     		mov	r2, r3
 4022 0342 FB69     		ldr	r3, [r7, #28]
 4023 0344 2344     		add	r3, r3, r4
 4024 0346 1A71     		strb	r2, [r3, #4]
1049:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = EOM;
 4025              		.loc 1 1049 0
 4026 0348 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4027 034c 5A1C     		adds	r2, r3, #1
 4028 034e 87F82720 		strb	r2, [r7, #39]
 4029 0352 1A46     		mov	r2, r3
 4030 0354 FB69     		ldr	r3, [r7, #28]
 4031 0356 1344     		add	r3, r3, r2
 4032 0358 F022     		movs	r2, #240
 4033 035a 1A71     		strb	r2, [r3, #4]
1050:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
1051:.\AdvantageImpl.c ****             
1052:.\AdvantageImpl.c ****             puartdisp->_messagelength = index;
 4034              		.loc 1 1052 0
 4035 035c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4036 0360 9AB2     		uxth	r2, r3
 4037 0362 FB69     		ldr	r3, [r7, #28]
 4038 0364 5A80     		strh	r2, [r3, #2]	@ movhi
1053:.\AdvantageImpl.c ****             puartdisp->_messagestate = PENDING;
 4039              		.loc 1 1053 0
 4040 0366 FB69     		ldr	r3, [r7, #28]
 4041 0368 C222     		movs	r2, #194
 4042 036a 1A70     		strb	r2, [r3]
 4043              	.L112:
 4044              	.LBE19:
1054:.\AdvantageImpl.c ****         }
1055:.\AdvantageImpl.c ****     }
1056:.\AdvantageImpl.c ****     
1057:.\AdvantageImpl.c **** }
 4045              		.loc 1 1057 0
 4046 036c 2C37     		adds	r7, r7, #44
 4047              		.cfi_def_cfa_offset 12
 4048 036e BD46     		mov	sp, r7
 4049              		.cfi_def_cfa_register 13
 4050              		@ sp needed
 4051 0370 90BD     		pop	{r4, r7, pc}
 4052              	.L136:
 4053 0372 00BF     		.align	2
 4054              	.L135:
 4055 0374 00000000 		.word	_g_dispenserlayoutinfo
 4056              		.cfi_endproc
 4057              	.LFE79:
 4058              		.size	PumpPresetHose, .-PumpPresetHose
 4059              		.section	.text.PumpPresetNoHose,"ax",%progbits
 4060              		.align	2
 4061              		.global	PumpPresetNoHose
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 91


 4062              		.thumb
 4063              		.thumb_func
 4064              		.type	PumpPresetNoHose, %function
 4065              	PumpPresetNoHose:
 4066              	.LFB80:
1058:.\AdvantageImpl.c **** 
1059:.\AdvantageImpl.c **** //@Created By: HIJH
1060:.\AdvantageImpl.c **** //@Septembre de 2016
1061:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
1062:.\AdvantageImpl.c **** //Preset values will be placed within the SinkMessage's buffer. This is a convention that applies t
1063:.\AdvantageImpl.c **** //all of the available transactions. The pump function must deal with this while it is assembling t
1064:.\AdvantageImpl.c **** //For this message the data comes as follows:
1065:.\AdvantageImpl.c **** // - First byte is the preset type (Volume:1 / Money:2 )
1066:.\AdvantageImpl.c **** // - Block of 8 bytes for the preset value
1067:.\AdvantageImpl.c **** //This block of data (10 bytes) must be moved to another position within the same buffer (even posi
1068:.\AdvantageImpl.c **** void PumpPresetNoHose(void *pparam)
1069:.\AdvantageImpl.c **** {
 4067              		.loc 1 1069 0
 4068              		.cfi_startproc
 4069              		@ args = 0, pretend = 0, frame = 40
 4070              		@ frame_needed = 1, uses_anonymous_args = 0
 4071 0000 90B5     		push	{r4, r7, lr}
 4072              		.cfi_def_cfa_offset 12
 4073              		.cfi_offset 4, -12
 4074              		.cfi_offset 7, -8
 4075              		.cfi_offset 14, -4
 4076 0002 8BB0     		sub	sp, sp, #44
 4077              		.cfi_def_cfa_offset 56
 4078 0004 00AF     		add	r7, sp, #0
 4079              		.cfi_def_cfa_register 7
 4080 0006 7860     		str	r0, [r7, #4]
1070:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 4081              		.loc 1 1070 0
 4082 0008 7B68     		ldr	r3, [r7, #4]
 4083 000a 3B62     		str	r3, [r7, #32]
1071:.\AdvantageImpl.c ****     if(ppump)
 4084              		.loc 1 1071 0
 4085 000c 3B6A     		ldr	r3, [r7, #32]
 4086 000e 002B     		cmp	r3, #0
 4087 0010 00F05381 		beq	.L137
 4088              	.LBB24:
1072:.\AdvantageImpl.c ****     {
1073:.\AdvantageImpl.c ****         uint8_t index = 0;
 4089              		.loc 1 1073 0
 4090 0014 0023     		movs	r3, #0
 4091 0016 87F82730 		strb	r3, [r7, #39]
1074:.\AdvantageImpl.c ****         memset(ppump->_rxbuffer, 0x00, _PUMP_RX_BUFFER_SIZE_);
 4092              		.loc 1 1074 0
 4093 001a 3B6A     		ldr	r3, [r7, #32]
 4094 001c 03F5D073 		add	r3, r3, #416
 4095 0020 1846     		mov	r0, r3
 4096 0022 0021     		movs	r1, #0
 4097 0024 4FF4C072 		mov	r2, #384
 4098 0028 FFF7FEFF 		bl	memset
1075:.\AdvantageImpl.c ****         PUARTMESSAGEPTR puartdisp = GetUARTMessageSlot(UART_DISPENSER);
 4099              		.loc 1 1075 0
 4100 002c A220     		movs	r0, #162
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 92


 4101 002e FFF7FEFF 		bl	GetUARTMessageSlot
 4102 0032 F861     		str	r0, [r7, #28]
1076:.\AdvantageImpl.c ****         if(puartdisp)
 4103              		.loc 1 1076 0
 4104 0034 FB69     		ldr	r3, [r7, #28]
 4105 0036 002B     		cmp	r3, #0
 4106 0038 00F03F81 		beq	.L137
1077:.\AdvantageImpl.c ****         {
1078:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
1079:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = SOM;
 4107              		.loc 1 1079 0
 4108 003c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4109 0040 5A1C     		adds	r2, r3, #1
 4110 0042 87F82720 		strb	r2, [r7, #39]
 4111 0046 1A46     		mov	r2, r3
 4112 0048 FB69     		ldr	r3, [r7, #28]
 4113 004a 1344     		add	r3, r3, r2
 4114 004c FF22     		movs	r2, #255
 4115 004e 1A71     		strb	r2, [r3, #4]
1080:.\AdvantageImpl.c ****             if(_g_dispenserlayoutinfo._displaydigitsmode == 0x06)
 4116              		.loc 1 1080 0
 4117 0050 9B4B     		ldr	r3, .L160
 4118 0052 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 4119 0054 062B     		cmp	r3, #6
 4120 0056 40F09980 		bne	.L139
 4121              	.LBB25:
1081:.\AdvantageImpl.c ****             {
1082:.\AdvantageImpl.c ****                 uint8 transtype = (0xF0 | ((ppump->_trasactionbuffer[0x0004] == 0x0F)? 0x02: 0x01))
 4122              		.loc 1 1082 0
 4123 005a 3B6A     		ldr	r3, [r7, #32]
 4124 005c 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 4125 0060 0F2B     		cmp	r3, #15
 4126 0062 01D1     		bne	.L140
 4127              		.loc 1 1082 0 is_stmt 0 discriminator 1
 4128 0064 F223     		movs	r3, #242
 4129 0066 00E0     		b	.L141
 4130              	.L140:
 4131              		.loc 1 1082 0 discriminator 2
 4132 0068 F123     		movs	r3, #241
 4133              	.L141:
 4134              		.loc 1 1082 0 discriminator 4
 4135 006a FB76     		strb	r3, [r7, #27]
1083:.\AdvantageImpl.c ****                 if(transtype == 0xF1)
 4136              		.loc 1 1083 0 is_stmt 1 discriminator 4
 4137 006c FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 4138 006e F12B     		cmp	r3, #241
 4139 0070 0AD1     		bne	.L142
1084:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = 0xE6;
 4140              		.loc 1 1084 0
 4141 0072 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4142 0076 5A1C     		adds	r2, r3, #1
 4143 0078 87F82720 		strb	r2, [r7, #39]
 4144 007c 1A46     		mov	r2, r3
 4145 007e FB69     		ldr	r3, [r7, #28]
 4146 0080 1344     		add	r3, r3, r2
 4147 0082 E622     		movs	r2, #230
 4148 0084 1A71     		strb	r2, [r3, #4]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 93


 4149 0086 09E0     		b	.L143
 4150              	.L142:
1085:.\AdvantageImpl.c ****                 else
1086:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = 0xE5;
 4151              		.loc 1 1086 0
 4152 0088 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4153 008c 5A1C     		adds	r2, r3, #1
 4154 008e 87F82720 		strb	r2, [r7, #39]
 4155 0092 1A46     		mov	r2, r3
 4156 0094 FB69     		ldr	r3, [r7, #28]
 4157 0096 1344     		add	r3, r3, r2
 4158 0098 E522     		movs	r2, #229
 4159 009a 1A71     		strb	r2, [r3, #4]
 4160              	.L143:
1087:.\AdvantageImpl.c **** 
1088:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0004 INDEX POSITION WITHIN THE PUMP'S BUFF
1089:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1090:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = transtype;
 4161              		.loc 1 1090 0
 4162 009c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4163 00a0 5A1C     		adds	r2, r3, #1
 4164 00a2 87F82720 		strb	r2, [r7, #39]
 4165 00a6 1A46     		mov	r2, r3
 4166 00a8 FB69     		ldr	r3, [r7, #28]
 4167 00aa 1344     		add	r3, r3, r2
 4168 00ac FA7E     		ldrb	r2, [r7, #27]
 4169 00ae 1A71     		strb	r2, [r3, #4]
1091:.\AdvantageImpl.c ****                             
1092:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xF8; //Preset Data next
 4170              		.loc 1 1092 0
 4171 00b0 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4172 00b4 5A1C     		adds	r2, r3, #1
 4173 00b6 87F82720 		strb	r2, [r7, #39]
 4174 00ba 1A46     		mov	r2, r3
 4175 00bc FB69     		ldr	r3, [r7, #28]
 4176 00be 1344     		add	r3, r3, r2
 4177 00c0 F822     		movs	r2, #248
 4178 00c2 1A71     		strb	r2, [r3, #4]
1093:.\AdvantageImpl.c ****                 //Here we copy the remaining 8 bytes for the preset value
1094:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0008 INDEX POSITION WITHIN THE PUMP'S BUFF
1095:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1096:.\AdvantageImpl.c ****                 char8 *ptr = &ppump->_trasactionbuffer[0x0008];
 4179              		.loc 1 1096 0
 4180 00c4 3B6A     		ldr	r3, [r7, #32]
 4181 00c6 2833     		adds	r3, r3, #40
 4182 00c8 7B61     		str	r3, [r7, #20]
1097:.\AdvantageImpl.c ****                 if(transtype == 0xF1) //Volume PRESET, then multiply by 1000
 4183              		.loc 1 1097 0
 4184 00ca FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 4185 00cc F12B     		cmp	r3, #241
 4186 00ce 2AD1     		bne	.L144
 4187              	.LBB26:
1098:.\AdvantageImpl.c ****                 {
1099:.\AdvantageImpl.c ****                     CastVolumeValue(ptr, 0x08);
 4188              		.loc 1 1099 0
 4189 00d0 7869     		ldr	r0, [r7, #20]
 4190 00d2 0821     		movs	r1, #8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 94


 4191 00d4 FFF7FEFF 		bl	CastVolumeValue
1100:.\AdvantageImpl.c ****                 
1101:.\AdvantageImpl.c ****                     FOR(uint8 buffndx = 0, buffndx < 0x05, buffndx++)
 4192              		.loc 1 1101 0
 4193 00d8 0023     		movs	r3, #0
 4194 00da 87F82630 		strb	r3, [r7, #38]
 4195 00de 1DE0     		b	.L145
 4196              	.L146:
1102:.\AdvantageImpl.c ****                         puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Tran
 4197              		.loc 1 1102 0 discriminator 3
 4198 00e0 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4199 00e4 5A1C     		adds	r2, r3, #1
 4200 00e6 87F82720 		strb	r2, [r7, #39]
 4201 00ea 1946     		mov	r1, r3
 4202 00ec 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 4203 00f0 C3F10703 		rsb	r3, r3, #7
 4204 00f4 1A46     		mov	r2, r3
 4205 00f6 7B69     		ldr	r3, [r7, #20]
 4206 00f8 1344     		add	r3, r3, r2
 4207 00fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4208 00fc DBB2     		uxtb	r3, r3
 4209 00fe 03F00F03 		and	r3, r3, #15
 4210 0102 DBB2     		uxtb	r3, r3
 4211 0104 63F01F03 		orn	r3, r3, #31
 4212 0108 DBB2     		uxtb	r3, r3
 4213 010a DAB2     		uxtb	r2, r3
 4214 010c FB69     		ldr	r3, [r7, #28]
 4215 010e 0B44     		add	r3, r3, r1
 4216 0110 1A71     		strb	r2, [r3, #4]
1101:.\AdvantageImpl.c ****                         puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Tran
 4217              		.loc 1 1101 0 discriminator 3
 4218 0112 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 4219 0116 0133     		adds	r3, r3, #1
 4220 0118 87F82630 		strb	r3, [r7, #38]
 4221              	.L145:
1101:.\AdvantageImpl.c ****                         puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Tran
 4222              		.loc 1 1101 0 is_stmt 0 discriminator 1
 4223 011c 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 4224 0120 042B     		cmp	r3, #4
 4225 0122 DDD9     		bls	.L146
 4226              	.LBE26:
 4227 0124 31E0     		b	.L147
 4228              	.L144:
 4229              	.LBB27:
1103:.\AdvantageImpl.c ****                 }
1104:.\AdvantageImpl.c ****                 else
1105:.\AdvantageImpl.c ****                 {
1106:.\AdvantageImpl.c ****                     if(!(_g_dispenserlayoutinfo._moneydecimals == 0x03 && _g_dispenserlayoutinfo._p
 4230              		.loc 1 1106 0 is_stmt 1
 4231 0126 664B     		ldr	r3, .L160
 4232 0128 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 4233 012a 032B     		cmp	r3, #3
 4234 012c 03D1     		bne	.L148
 4235              		.loc 1 1106 0 is_stmt 0 discriminator 1
 4236 012e 644B     		ldr	r3, .L160
 4237 0130 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 4238 0132 022B     		cmp	r3, #2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 95


 4239 0134 03D0     		beq	.L149
 4240              	.L148:
1107:.\AdvantageImpl.c ****                         CastMoneyValue(ptr, 0x08);
 4241              		.loc 1 1107 0 is_stmt 1
 4242 0136 7869     		ldr	r0, [r7, #20]
 4243 0138 0821     		movs	r1, #8
 4244 013a FFF7FEFF 		bl	CastMoneyValue
 4245              	.L149:
1108:.\AdvantageImpl.c ****                     
1109:.\AdvantageImpl.c ****                     FOR(uint8 buffndx = 0, buffndx < 0x06, buffndx++)
 4246              		.loc 1 1109 0
 4247 013e 0023     		movs	r3, #0
 4248 0140 87F82530 		strb	r3, [r7, #37]
 4249 0144 1DE0     		b	.L150
 4250              	.L151:
1110:.\AdvantageImpl.c ****                         puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Tran
 4251              		.loc 1 1110 0 discriminator 3
 4252 0146 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4253 014a 5A1C     		adds	r2, r3, #1
 4254 014c 87F82720 		strb	r2, [r7, #39]
 4255 0150 1946     		mov	r1, r3
 4256 0152 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 4257 0156 C3F10703 		rsb	r3, r3, #7
 4258 015a 1A46     		mov	r2, r3
 4259 015c 7B69     		ldr	r3, [r7, #20]
 4260 015e 1344     		add	r3, r3, r2
 4261 0160 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4262 0162 DBB2     		uxtb	r3, r3
 4263 0164 03F00F03 		and	r3, r3, #15
 4264 0168 DBB2     		uxtb	r3, r3
 4265 016a 63F01F03 		orn	r3, r3, #31
 4266 016e DBB2     		uxtb	r3, r3
 4267 0170 DAB2     		uxtb	r2, r3
 4268 0172 FB69     		ldr	r3, [r7, #28]
 4269 0174 0B44     		add	r3, r3, r1
 4270 0176 1A71     		strb	r2, [r3, #4]
1109:.\AdvantageImpl.c ****                         puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Tran
 4271              		.loc 1 1109 0 discriminator 3
 4272 0178 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 4273 017c 0133     		adds	r3, r3, #1
 4274 017e 87F82530 		strb	r3, [r7, #37]
 4275              	.L150:
1109:.\AdvantageImpl.c ****                         puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Tran
 4276              		.loc 1 1109 0 is_stmt 0 discriminator 1
 4277 0182 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 4278 0186 052B     		cmp	r3, #5
 4279 0188 DDD9     		bls	.L151
 4280              	.L147:
 4281              	.LBE27:
 4282              	.LBE25:
 4283 018a 67E0     		b	.L152
 4284              	.L139:
1111:.\AdvantageImpl.c ****                 }
1112:.\AdvantageImpl.c ****             }
1113:.\AdvantageImpl.c ****             else if(_g_dispenserlayoutinfo._displaydigitsmode == 0x07)
 4285              		.loc 1 1113 0 is_stmt 1
 4286 018c 4C4B     		ldr	r3, .L160
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 96


 4287 018e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 4288 0190 072B     		cmp	r3, #7
 4289 0192 63D1     		bne	.L152
 4290              	.LBB28:
1114:.\AdvantageImpl.c ****             {
1115:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xE3;
 4291              		.loc 1 1115 0
 4292 0194 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4293 0198 5A1C     		adds	r2, r3, #1
 4294 019a 87F82720 		strb	r2, [r7, #39]
 4295 019e 1A46     		mov	r2, r3
 4296 01a0 FB69     		ldr	r3, [r7, #28]
 4297 01a2 1344     		add	r3, r3, r2
 4298 01a4 E322     		movs	r2, #227
 4299 01a6 1A71     		strb	r2, [r3, #4]
1116:.\AdvantageImpl.c **** 
1117:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0004 INDEX POSITION WITHIN THE PUMP'S BUFF
1118:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1119:.\AdvantageImpl.c ****                 uint8 transtype = (0xF0 | ((ppump->_trasactionbuffer[0x0004] == 0x0F)? 0x02: 0x01))
 4300              		.loc 1 1119 0
 4301 01a8 3B6A     		ldr	r3, [r7, #32]
 4302 01aa 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 4303 01ae 0F2B     		cmp	r3, #15
 4304 01b0 01D1     		bne	.L153
 4305              		.loc 1 1119 0 is_stmt 0 discriminator 1
 4306 01b2 F223     		movs	r3, #242
 4307 01b4 00E0     		b	.L154
 4308              	.L153:
 4309              		.loc 1 1119 0 discriminator 2
 4310 01b6 F123     		movs	r3, #241
 4311              	.L154:
 4312              		.loc 1 1119 0 discriminator 4
 4313 01b8 FB74     		strb	r3, [r7, #19]
1120:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = transtype;
 4314              		.loc 1 1120 0 is_stmt 1 discriminator 4
 4315 01ba 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4316 01be 5A1C     		adds	r2, r3, #1
 4317 01c0 87F82720 		strb	r2, [r7, #39]
 4318 01c4 1A46     		mov	r2, r3
 4319 01c6 FB69     		ldr	r3, [r7, #28]
 4320 01c8 1344     		add	r3, r3, r2
 4321 01ca FA7C     		ldrb	r2, [r7, #19]
 4322 01cc 1A71     		strb	r2, [r3, #4]
1121:.\AdvantageImpl.c ****                             
1122:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xF8; //Preset Data next
 4323              		.loc 1 1122 0 discriminator 4
 4324 01ce 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4325 01d2 5A1C     		adds	r2, r3, #1
 4326 01d4 87F82720 		strb	r2, [r7, #39]
 4327 01d8 1A46     		mov	r2, r3
 4328 01da FB69     		ldr	r3, [r7, #28]
 4329 01dc 1344     		add	r3, r3, r2
 4330 01de F822     		movs	r2, #248
 4331 01e0 1A71     		strb	r2, [r3, #4]
1123:.\AdvantageImpl.c ****                 //Here we copy the remaining 8 bytes for the preset value
1124:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0008 INDEX POSITION WITHIN THE PUMP'S BUFF
1125:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 97


1126:.\AdvantageImpl.c ****                 char8 *ptr = &ppump->_trasactionbuffer[0x0008];
 4332              		.loc 1 1126 0 discriminator 4
 4333 01e2 3B6A     		ldr	r3, [r7, #32]
 4334 01e4 2833     		adds	r3, r3, #40
 4335 01e6 FB60     		str	r3, [r7, #12]
1127:.\AdvantageImpl.c ****                 if(transtype == 0xF1) //Volume PRESET, then multiply by 1000
 4336              		.loc 1 1127 0 discriminator 4
 4337 01e8 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 4338 01ea F12B     		cmp	r3, #241
 4339 01ec 04D1     		bne	.L155
1128:.\AdvantageImpl.c ****                     CastVolumeValue(ptr, 0x08);
 4340              		.loc 1 1128 0
 4341 01ee F868     		ldr	r0, [r7, #12]
 4342 01f0 0821     		movs	r1, #8
 4343 01f2 FFF7FEFF 		bl	CastVolumeValue
 4344 01f6 0BE0     		b	.L156
 4345              	.L155:
1129:.\AdvantageImpl.c ****                 else if(!(_g_dispenserlayoutinfo._moneydecimals == 0x03 && _g_dispenserlayoutinfo._
 4346              		.loc 1 1129 0
 4347 01f8 314B     		ldr	r3, .L160
 4348 01fa DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 4349 01fc 032B     		cmp	r3, #3
 4350 01fe 03D1     		bne	.L157
 4351              		.loc 1 1129 0 is_stmt 0 discriminator 1
 4352 0200 2F4B     		ldr	r3, .L160
 4353 0202 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 4354 0204 022B     		cmp	r3, #2
 4355 0206 03D0     		beq	.L156
 4356              	.L157:
1130:.\AdvantageImpl.c ****                     CastMoneyValue(ptr, 0x08);
 4357              		.loc 1 1130 0 is_stmt 1
 4358 0208 F868     		ldr	r0, [r7, #12]
 4359 020a 0821     		movs	r1, #8
 4360 020c FFF7FEFF 		bl	CastMoneyValue
 4361              	.L156:
1131:.\AdvantageImpl.c ****                 
1132:.\AdvantageImpl.c ****                 FOR(uint8 buffndx = 0, buffndx < 0x08, buffndx++)
 4362              		.loc 1 1132 0
 4363 0210 0023     		movs	r3, #0
 4364 0212 87F82430 		strb	r3, [r7, #36]
 4365 0216 1DE0     		b	.L158
 4366              	.L159:
1133:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Translat
 4367              		.loc 1 1133 0 discriminator 3
 4368 0218 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4369 021c 5A1C     		adds	r2, r3, #1
 4370 021e 87F82720 		strb	r2, [r7, #39]
 4371 0222 1946     		mov	r1, r3
 4372 0224 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 4373 0228 C3F10703 		rsb	r3, r3, #7
 4374 022c 1A46     		mov	r2, r3
 4375 022e FB68     		ldr	r3, [r7, #12]
 4376 0230 1344     		add	r3, r3, r2
 4377 0232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4378 0234 DBB2     		uxtb	r3, r3
 4379 0236 03F00F03 		and	r3, r3, #15
 4380 023a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 98


 4381 023c 63F01F03 		orn	r3, r3, #31
 4382 0240 DBB2     		uxtb	r3, r3
 4383 0242 DAB2     		uxtb	r2, r3
 4384 0244 FB69     		ldr	r3, [r7, #28]
 4385 0246 0B44     		add	r3, r3, r1
 4386 0248 1A71     		strb	r2, [r3, #4]
1132:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Translat
 4387              		.loc 1 1132 0 discriminator 3
 4388 024a 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 4389 024e 0133     		adds	r3, r3, #1
 4390 0250 87F82430 		strb	r3, [r7, #36]
 4391              	.L158:
1132:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Translat
 4392              		.loc 1 1132 0 is_stmt 0 discriminator 1
 4393 0254 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 4394 0258 072B     		cmp	r3, #7
 4395 025a DDD9     		bls	.L159
 4396              	.L152:
 4397              	.LBE28:
1134:.\AdvantageImpl.c ****             }
1135:.\AdvantageImpl.c ****             ppump->_presetdone = true;
 4398              		.loc 1 1135 0 is_stmt 1
 4399 025c 3B6A     		ldr	r3, [r7, #32]
 4400 025e 0122     		movs	r2, #1
 4401 0260 1A72     		strb	r2, [r3, #8]
1136:.\AdvantageImpl.c **** 
1137:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = LRCn; //LRC next
 4402              		.loc 1 1137 0
 4403 0262 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4404 0266 5A1C     		adds	r2, r3, #1
 4405 0268 87F82720 		strb	r2, [r7, #39]
 4406 026c 1A46     		mov	r2, r3
 4407 026e FB69     		ldr	r3, [r7, #28]
 4408 0270 1344     		add	r3, r3, r2
 4409 0272 FB22     		movs	r2, #251
 4410 0274 1A71     		strb	r2, [r3, #4]
1138:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = GetLRC(puartdisp->_messagetx);
 4411              		.loc 1 1138 0
 4412 0276 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4413 027a 5A1C     		adds	r2, r3, #1
 4414 027c 87F82720 		strb	r2, [r7, #39]
 4415 0280 1C46     		mov	r4, r3
 4416 0282 FB69     		ldr	r3, [r7, #28]
 4417 0284 0433     		adds	r3, r3, #4
 4418 0286 1846     		mov	r0, r3
 4419 0288 FFF7FEFF 		bl	GetLRC
 4420 028c 0346     		mov	r3, r0
 4421 028e 1A46     		mov	r2, r3
 4422 0290 FB69     		ldr	r3, [r7, #28]
 4423 0292 2344     		add	r3, r3, r4
 4424 0294 1A71     		strb	r2, [r3, #4]
1139:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = EOM;
 4425              		.loc 1 1139 0
 4426 0296 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4427 029a 5A1C     		adds	r2, r3, #1
 4428 029c 87F82720 		strb	r2, [r7, #39]
 4429 02a0 1A46     		mov	r2, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 99


 4430 02a2 FB69     		ldr	r3, [r7, #28]
 4431 02a4 1344     		add	r3, r3, r2
 4432 02a6 F022     		movs	r2, #240
 4433 02a8 1A71     		strb	r2, [r3, #4]
1140:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
1141:.\AdvantageImpl.c ****             
1142:.\AdvantageImpl.c ****             puartdisp->_messagelength = index;
 4434              		.loc 1 1142 0
 4435 02aa 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4436 02ae 9AB2     		uxth	r2, r3
 4437 02b0 FB69     		ldr	r3, [r7, #28]
 4438 02b2 5A80     		strh	r2, [r3, #2]	@ movhi
1143:.\AdvantageImpl.c ****             puartdisp->_messagestate = PENDING;
 4439              		.loc 1 1143 0
 4440 02b4 FB69     		ldr	r3, [r7, #28]
 4441 02b6 C222     		movs	r2, #194
 4442 02b8 1A70     		strb	r2, [r3]
 4443              	.L137:
 4444              	.LBE24:
1144:.\AdvantageImpl.c ****         }
1145:.\AdvantageImpl.c ****     }
1146:.\AdvantageImpl.c ****     
1147:.\AdvantageImpl.c **** }
 4445              		.loc 1 1147 0
 4446 02ba 2C37     		adds	r7, r7, #44
 4447              		.cfi_def_cfa_offset 12
 4448 02bc BD46     		mov	sp, r7
 4449              		.cfi_def_cfa_register 13
 4450              		@ sp needed
 4451 02be 90BD     		pop	{r4, r7, pc}
 4452              	.L161:
 4453              		.align	2
 4454              	.L160:
 4455 02c0 00000000 		.word	_g_dispenserlayoutinfo
 4456              		.cfi_endproc
 4457              	.LFE80:
 4458              		.size	PumpPresetNoHose, .-PumpPresetNoHose
 4459              		.section	.text.PumpPresetNotification,"ax",%progbits
 4460              		.align	2
 4461              		.global	PumpPresetNotification
 4462              		.thumb
 4463              		.thumb_func
 4464              		.type	PumpPresetNotification, %function
 4465              	PumpPresetNotification:
 4466              	.LFB81:
1148:.\AdvantageImpl.c **** 
1149:.\AdvantageImpl.c **** //@Created By: HIJH
1150:.\AdvantageImpl.c **** //@Septembre de 2016
1151:.\AdvantageImpl.c **** //Message to be notified to the remote peer (NSX)
1152:.\AdvantageImpl.c **** void PumpPresetNotification(LPVOID pparam)
1153:.\AdvantageImpl.c **** {
 4467              		.loc 1 1153 0
 4468              		.cfi_startproc
 4469              		@ args = 0, pretend = 0, frame = 32
 4470              		@ frame_needed = 1, uses_anonymous_args = 0
 4471 0000 B0B5     		push	{r4, r5, r7, lr}
 4472              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 100


 4473              		.cfi_offset 4, -16
 4474              		.cfi_offset 5, -12
 4475              		.cfi_offset 7, -8
 4476              		.cfi_offset 14, -4
 4477 0002 88B0     		sub	sp, sp, #32
 4478              		.cfi_def_cfa_offset 48
 4479 0004 00AF     		add	r7, sp, #0
 4480              		.cfi_def_cfa_register 7
 4481 0006 7860     		str	r0, [r7, #4]
1154:.\AdvantageImpl.c ****     PPUMPTRANSACTIONJOBCONTEXTPTR pjob = (PPUMPTRANSACTIONJOBCONTEXTPTR)pparam;
 4482              		.loc 1 1154 0
 4483 0008 7B68     		ldr	r3, [r7, #4]
 4484 000a FB61     		str	r3, [r7, #28]
1155:.\AdvantageImpl.c ****     if(pjob)
 4485              		.loc 1 1155 0
 4486 000c FB69     		ldr	r3, [r7, #28]
 4487 000e 002B     		cmp	r3, #0
 4488 0010 00F0FD80 		beq	.L162
 4489              	.LBB29:
1156:.\AdvantageImpl.c ****     {
1157:.\AdvantageImpl.c ****         //HERE WE ATTEMPT TO PUSH THE TRANSACTION INTO THE PUMP'S TRANSACTIONAL QUEUE.
1158:.\AdvantageImpl.c ****         //THIS IS DONE ONLY IF THERE IS ROOM IN THE QUEUE, OTHERWISE THIS STATE WON'T
1159:.\AdvantageImpl.c ****         //BE REPORTED TO THE REMOTE PEER.
1160:.\AdvantageImpl.c ****         pjob->_ppump->PumpTransQueueLock(pjob->_ppump);
 4490              		.loc 1 1160 0
 4491 0014 FB69     		ldr	r3, [r7, #28]
 4492 0016 DB69     		ldr	r3, [r3, #28]
 4493 0018 D3F8443B 		ldr	r3, [r3, #2884]
 4494 001c FA69     		ldr	r2, [r7, #28]
 4495 001e D269     		ldr	r2, [r2, #28]
 4496 0020 1046     		mov	r0, r2
 4497 0022 9847     		blx	r3
1161:.\AdvantageImpl.c ****         PNEAR_PUMPTRANSACTIONALSTATEPTR pts = pjob->_ppump->PumpTransQueueAllocate(pjob->_ppump);
 4498              		.loc 1 1161 0
 4499 0024 FB69     		ldr	r3, [r7, #28]
 4500 0026 DB69     		ldr	r3, [r3, #28]
 4501 0028 D3F8583B 		ldr	r3, [r3, #2904]
 4502 002c FA69     		ldr	r2, [r7, #28]
 4503 002e D269     		ldr	r2, [r2, #28]
 4504 0030 1046     		mov	r0, r2
 4505 0032 9847     		blx	r3
 4506 0034 B861     		str	r0, [r7, #24]
1162:.\AdvantageImpl.c ****         pjob->_ppump->PumpTransQueueUnlock(pjob->_ppump);
 4507              		.loc 1 1162 0
 4508 0036 FB69     		ldr	r3, [r7, #28]
 4509 0038 DB69     		ldr	r3, [r3, #28]
 4510 003a D3F8483B 		ldr	r3, [r3, #2888]
 4511 003e FA69     		ldr	r2, [r7, #28]
 4512 0040 D269     		ldr	r2, [r2, #28]
 4513 0042 1046     		mov	r0, r2
 4514 0044 9847     		blx	r3
1163:.\AdvantageImpl.c ****         if(pts)
 4515              		.loc 1 1163 0
 4516 0046 BB69     		ldr	r3, [r7, #24]
 4517 0048 002B     		cmp	r3, #0
 4518 004a 00F0E080 		beq	.L162
 4519              	.LBB30:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 101


1164:.\AdvantageImpl.c ****         {
1165:.\AdvantageImpl.c ****             uint8 index = 0;
 4520              		.loc 1 1165 0
 4521 004e 0023     		movs	r3, #0
 4522 0050 FB75     		strb	r3, [r7, #23]
1166:.\AdvantageImpl.c ****             pts->_transtate = RF_MUX_CASH_SALE_START_REQUEST;
 4523              		.loc 1 1166 0
 4524 0052 BB69     		ldr	r3, [r7, #24]
 4525 0054 AA22     		movs	r2, #170
 4526 0056 5A70     		strb	r2, [r3, #1]
1167:.\AdvantageImpl.c ****             //Pump ID always comes in position 0x00
1168:.\AdvantageImpl.c ****             pts->_buffer[index++] = pjob->_ppump->_pumpid;
 4527              		.loc 1 1168 0
 4528 0058 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4529 005a 5A1C     		adds	r2, r3, #1
 4530 005c FA75     		strb	r2, [r7, #23]
 4531 005e 1946     		mov	r1, r3
 4532 0060 FB69     		ldr	r3, [r7, #28]
 4533 0062 DB69     		ldr	r3, [r3, #28]
 4534 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4535 0066 BB69     		ldr	r3, [r7, #24]
 4536 0068 0B44     		add	r3, r3, r1
 4537 006a 9A70     		strb	r2, [r3, #2]
1169:.\AdvantageImpl.c ****             //PRESET type
1170:.\AdvantageImpl.c ****             pts->_buffer[index++] = (0xF0 | ((pjob->_ppump->_trasactionbuffer[0x0004] == 0x0F)? 0x0
 4538              		.loc 1 1170 0
 4539 006c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4540 006e 5A1C     		adds	r2, r3, #1
 4541 0070 FA75     		strb	r2, [r7, #23]
 4542 0072 1946     		mov	r1, r3
 4543 0074 FB69     		ldr	r3, [r7, #28]
 4544 0076 DB69     		ldr	r3, [r3, #28]
 4545 0078 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 4546 007c 0F2B     		cmp	r3, #15
 4547 007e 01D1     		bne	.L164
 4548              		.loc 1 1170 0 is_stmt 0 discriminator 1
 4549 0080 F222     		movs	r2, #242
 4550 0082 00E0     		b	.L165
 4551              	.L164:
 4552              		.loc 1 1170 0 discriminator 2
 4553 0084 F122     		movs	r2, #241
 4554              	.L165:
 4555              		.loc 1 1170 0 discriminator 4
 4556 0086 BB69     		ldr	r3, [r7, #24]
 4557 0088 0B44     		add	r3, r3, r1
 4558 008a 9A70     		strb	r2, [r3, #2]
1171:.\AdvantageImpl.c ****             
1172:.\AdvantageImpl.c ****             //Entering here means that volume preset was chosen and since this is a 6-6-4 dispenser
1173:.\AdvantageImpl.c ****             if(pjob->_ppump->_trasactionbuffer[0x0004] == 0x10)
 4559              		.loc 1 1173 0 is_stmt 1 discriminator 4
 4560 008c FB69     		ldr	r3, [r7, #28]
 4561 008e DB69     		ldr	r3, [r3, #28]
 4562 0090 93F82430 		ldrb	r3, [r3, #36]	@ zero_extendqisi2
 4563 0094 102B     		cmp	r3, #16
 4564 0096 28D1     		bne	.L166
 4565              	.LBB31:
1174:.\AdvantageImpl.c ****             {
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 102


1175:.\AdvantageImpl.c ****                 PSTRBUFFTOGG(PBYTECAST(&pjob->_ppump->_trasactionbuffer[0x0008]), 0x08);
 4566              		.loc 1 1175 0
 4567 0098 FB69     		ldr	r3, [r7, #28]
 4568 009a DB69     		ldr	r3, [r3, #28]
 4569 009c 2833     		adds	r3, r3, #40
 4570 009e 1846     		mov	r0, r3
 4571 00a0 0821     		movs	r1, #8
 4572 00a2 FFF7FEFF 		bl	PSTRBUFFTOGG
1176:.\AdvantageImpl.c ****                 uint32 volumeamount = LSDBCDBUFF2HEX(PBYTECAST(&pjob->_ppump->_trasactionbuffer[0x0
 4573              		.loc 1 1176 0
 4574 00a6 FB69     		ldr	r3, [r7, #28]
 4575 00a8 DB69     		ldr	r3, [r3, #28]
 4576 00aa 2833     		adds	r3, r3, #40
 4577 00ac 1846     		mov	r0, r3
 4578 00ae 0821     		movs	r1, #8
 4579 00b0 FFF7FEFF 		bl	LSDBCDBUFF2HEX
 4580 00b4 3861     		str	r0, [r7, #16]
1177:.\AdvantageImpl.c ****                 memset(PBYTECAST(&pjob->_ppump->_trasactionbuffer[0x0008]), 0x00, 0x08);
 4581              		.loc 1 1177 0
 4582 00b6 FB69     		ldr	r3, [r7, #28]
 4583 00b8 DB69     		ldr	r3, [r3, #28]
 4584 00ba 2833     		adds	r3, r3, #40
 4585 00bc 1846     		mov	r0, r3
 4586 00be 0021     		movs	r1, #0
 4587 00c0 0822     		movs	r2, #8
 4588 00c2 FFF7FEFF 		bl	memset
1178:.\AdvantageImpl.c ****                 B78AD90CF552D9B30A(volumeamount * 10, PBYTECAST(&pjob->_ppump->_trasactionbuffer[0x
 4589              		.loc 1 1178 0
 4590 00c6 3A69     		ldr	r2, [r7, #16]
 4591 00c8 1346     		mov	r3, r2
 4592 00ca 9B00     		lsls	r3, r3, #2
 4593 00cc 1344     		add	r3, r3, r2
 4594 00ce 5B00     		lsls	r3, r3, #1
 4595 00d0 1A46     		mov	r2, r3
 4596 00d2 4FF00003 		mov	r3, #0
 4597 00d6 F969     		ldr	r1, [r7, #28]
 4598 00d8 C969     		ldr	r1, [r1, #28]
 4599 00da 01F12804 		add	r4, r1, #40
 4600 00de 1046     		mov	r0, r2
 4601 00e0 1946     		mov	r1, r3
 4602 00e2 2246     		mov	r2, r4
 4603 00e4 FFF7FEFF 		bl	B78AD90CF552D9B30A
 4604              	.LBE31:
 4605 00e8 06E0     		b	.L167
 4606              	.L166:
1179:.\AdvantageImpl.c ****             }else//Money PRESET
1180:.\AdvantageImpl.c ****                 PSTRBUFFTOGG(PBYTECAST(&pjob->_ppump->_trasactionbuffer[0x0008]), 0x08);
 4607              		.loc 1 1180 0
 4608 00ea FB69     		ldr	r3, [r7, #28]
 4609 00ec DB69     		ldr	r3, [r3, #28]
 4610 00ee 2833     		adds	r3, r3, #40
 4611 00f0 1846     		mov	r0, r3
 4612 00f2 0821     		movs	r1, #8
 4613 00f4 FFF7FEFF 		bl	PSTRBUFFTOGG
 4614              	.L167:
1181:.\AdvantageImpl.c ****                 
1182:.\AdvantageImpl.c ****             memcpy(&pts->_buffer[index], &pjob->_ppump->_trasactionbuffer[0x0008], 0x08);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 103


 4615              		.loc 1 1182 0
 4616 00f8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4617 00fa BA69     		ldr	r2, [r7, #24]
 4618 00fc 1344     		add	r3, r3, r2
 4619 00fe 9A1C     		adds	r2, r3, #2
 4620 0100 FB69     		ldr	r3, [r7, #28]
 4621 0102 DB69     		ldr	r3, [r3, #28]
 4622 0104 2833     		adds	r3, r3, #40
 4623 0106 1046     		mov	r0, r2
 4624 0108 1946     		mov	r1, r3
 4625 010a 0822     		movs	r2, #8
 4626 010c FFF7FEFF 		bl	memcpy
1183:.\AdvantageImpl.c ****             index += 0x08;
 4627              		.loc 1 1183 0
 4628 0110 FB7D     		ldrb	r3, [r7, #23]
 4629 0112 0833     		adds	r3, r3, #8
 4630 0114 FB75     		strb	r3, [r7, #23]
1184:.\AdvantageImpl.c ****             //Car's Plate
1185:.\AdvantageImpl.c ****             memcpy(&pts->_buffer[index], &pjob->_ppump->_trasactionbuffer[GetBufferIndexFromDisplay
 4631              		.loc 1 1185 0
 4632 0116 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4633 0118 BA69     		ldr	r2, [r7, #24]
 4634 011a 1344     		add	r3, r3, r2
 4635 011c 9D1C     		adds	r5, r3, #2
 4636 011e FB69     		ldr	r3, [r7, #28]
 4637 0120 DC69     		ldr	r4, [r3, #28]
 4638 0122 0A20     		movs	r0, #10
 4639 0124 FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 4640 0128 0346     		mov	r3, r0
 4641 012a 2033     		adds	r3, r3, #32
 4642 012c 1C44     		add	r4, r4, r3
 4643 012e 0A20     		movs	r0, #10
 4644 0130 FFF7FEFF 		bl	GetBufferLengthFromDisplayID
 4645 0134 0346     		mov	r3, r0
 4646 0136 2846     		mov	r0, r5
 4647 0138 2146     		mov	r1, r4
 4648 013a 1A46     		mov	r2, r3
 4649 013c FFF7FEFF 		bl	memcpy
1186:.\AdvantageImpl.c ****             index += GetBufferLengthFromDisplayID(DISPLAY_DIGITE_PLACA);
 4650              		.loc 1 1186 0
 4651 0140 0A20     		movs	r0, #10
 4652 0142 FFF7FEFF 		bl	GetBufferLengthFromDisplayID
 4653 0146 0346     		mov	r3, r0
 4654 0148 1A46     		mov	r2, r3
 4655 014a FB7D     		ldrb	r3, [r7, #23]
 4656 014c 1344     		add	r3, r3, r2
 4657 014e FB75     		strb	r3, [r7, #23]
1187:.\AdvantageImpl.c ****             pts->_buffer[index] = index;
 4658              		.loc 1 1187 0
 4659 0150 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4660 0152 BA69     		ldr	r2, [r7, #24]
 4661 0154 1344     		add	r3, r3, r2
 4662 0156 FA7D     		ldrb	r2, [r7, #23]
 4663 0158 9A70     		strb	r2, [r3, #2]
1188:.\AdvantageImpl.c ****             //Car's Milleage
1189:.\AdvantageImpl.c ****             memcpy(&pts->_buffer[index], &pjob->_ppump->_trasactionbuffer[GetBufferIndexFromDisplay
 4664              		.loc 1 1189 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 104


 4665 015a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4666 015c BA69     		ldr	r2, [r7, #24]
 4667 015e 1344     		add	r3, r3, r2
 4668 0160 9D1C     		adds	r5, r3, #2
 4669 0162 FB69     		ldr	r3, [r7, #28]
 4670 0164 DC69     		ldr	r4, [r3, #28]
 4671 0166 0E20     		movs	r0, #14
 4672 0168 FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 4673 016c 0346     		mov	r3, r0
 4674 016e 2033     		adds	r3, r3, #32
 4675 0170 1C44     		add	r4, r4, r3
 4676 0172 0E20     		movs	r0, #14
 4677 0174 FFF7FEFF 		bl	GetBufferLengthFromDisplayID
 4678 0178 0346     		mov	r3, r0
 4679 017a 2846     		mov	r0, r5
 4680 017c 2146     		mov	r1, r4
 4681 017e 1A46     		mov	r2, r3
 4682 0180 FFF7FEFF 		bl	memcpy
1190:.\AdvantageImpl.c ****             index += GetBufferLengthFromDisplayID(DISPLAY_INTRODUZCA_KILOMETRAJE);
 4683              		.loc 1 1190 0
 4684 0184 0E20     		movs	r0, #14
 4685 0186 FFF7FEFF 		bl	GetBufferLengthFromDisplayID
 4686 018a 0346     		mov	r3, r0
 4687 018c 1A46     		mov	r2, r3
 4688 018e FB7D     		ldrb	r3, [r7, #23]
 4689 0190 1344     		add	r3, r3, r2
 4690 0192 FB75     		strb	r3, [r7, #23]
1191:.\AdvantageImpl.c ****             
1192:.\AdvantageImpl.c ****             pts->_buffersize = index;
 4691              		.loc 1 1192 0
 4692 0194 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4693 0196 9AB2     		uxth	r2, r3
 4694 0198 BB69     		ldr	r3, [r7, #24]
 4695 019a A3F80221 		strh	r2, [r3, #258]	@ movhi
1193:.\AdvantageImpl.c ****             
1194:.\AdvantageImpl.c ****             PNEAR_PUMPTRANSACTIONALSTATEPTR ptstemp = pjob->_ppump->PumpTransQueueAllocate(pjob->_p
 4696              		.loc 1 1194 0
 4697 019e FB69     		ldr	r3, [r7, #28]
 4698 01a0 DB69     		ldr	r3, [r3, #28]
 4699 01a2 D3F8583B 		ldr	r3, [r3, #2904]
 4700 01a6 FA69     		ldr	r2, [r7, #28]
 4701 01a8 D269     		ldr	r2, [r2, #28]
 4702 01aa 1046     		mov	r0, r2
 4703 01ac 9847     		blx	r3
 4704 01ae F860     		str	r0, [r7, #12]
1195:.\AdvantageImpl.c ****             if(ptstemp)
 4705              		.loc 1 1195 0
 4706 01b0 FB68     		ldr	r3, [r7, #12]
 4707 01b2 002B     		cmp	r3, #0
 4708 01b4 22D0     		beq	.L168
1196:.\AdvantageImpl.c ****             {
1197:.\AdvantageImpl.c ****                 pjob->_ppump->PumpTransQueueDeallocate(pjob->_ppump,ptstemp);
 4709              		.loc 1 1197 0
 4710 01b6 FB69     		ldr	r3, [r7, #28]
 4711 01b8 DB69     		ldr	r3, [r3, #28]
 4712 01ba D3F8543B 		ldr	r3, [r3, #2900]
 4713 01be FA69     		ldr	r2, [r7, #28]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 105


 4714 01c0 D269     		ldr	r2, [r2, #28]
 4715 01c2 1046     		mov	r0, r2
 4716 01c4 F968     		ldr	r1, [r7, #12]
 4717 01c6 9847     		blx	r3
1198:.\AdvantageImpl.c ****                 pjob->_ppump->PumpTransQueueLock(pjob->_ppump);
 4718              		.loc 1 1198 0
 4719 01c8 FB69     		ldr	r3, [r7, #28]
 4720 01ca DB69     		ldr	r3, [r3, #28]
 4721 01cc D3F8443B 		ldr	r3, [r3, #2884]
 4722 01d0 FA69     		ldr	r2, [r7, #28]
 4723 01d2 D269     		ldr	r2, [r2, #28]
 4724 01d4 1046     		mov	r0, r2
 4725 01d6 9847     		blx	r3
1199:.\AdvantageImpl.c ****                 pjob->_ppump->PumpTransQueueEnqueue(pjob->_ppump, pts);
 4726              		.loc 1 1199 0
 4727 01d8 FB69     		ldr	r3, [r7, #28]
 4728 01da DB69     		ldr	r3, [r3, #28]
 4729 01dc D3F8503B 		ldr	r3, [r3, #2896]
 4730 01e0 FA69     		ldr	r2, [r7, #28]
 4731 01e2 D269     		ldr	r2, [r2, #28]
 4732 01e4 1046     		mov	r0, r2
 4733 01e6 B969     		ldr	r1, [r7, #24]
 4734 01e8 9847     		blx	r3
1200:.\AdvantageImpl.c ****                 pjob->_ppump->PumpTransQueueUnlock(pjob->_ppump);
 4735              		.loc 1 1200 0
 4736 01ea FB69     		ldr	r3, [r7, #28]
 4737 01ec DB69     		ldr	r3, [r3, #28]
 4738 01ee D3F8483B 		ldr	r3, [r3, #2888]
 4739 01f2 FA69     		ldr	r2, [r7, #28]
 4740 01f4 D269     		ldr	r2, [r2, #28]
 4741 01f6 1046     		mov	r0, r2
 4742 01f8 9847     		blx	r3
 4743 01fa 08E0     		b	.L162
 4744              	.L168:
1201:.\AdvantageImpl.c ****             }else
1202:.\AdvantageImpl.c ****                 pjob->_ppump->PumpTransQueueDeallocate(pjob->_ppump, pts);
 4745              		.loc 1 1202 0
 4746 01fc FB69     		ldr	r3, [r7, #28]
 4747 01fe DB69     		ldr	r3, [r3, #28]
 4748 0200 D3F8543B 		ldr	r3, [r3, #2900]
 4749 0204 FA69     		ldr	r2, [r7, #28]
 4750 0206 D269     		ldr	r2, [r2, #28]
 4751 0208 1046     		mov	r0, r2
 4752 020a B969     		ldr	r1, [r7, #24]
 4753 020c 9847     		blx	r3
 4754              	.L162:
 4755              	.LBE30:
 4756              	.LBE29:
1203:.\AdvantageImpl.c ****         }
1204:.\AdvantageImpl.c ****     }
1205:.\AdvantageImpl.c **** }
 4757              		.loc 1 1205 0
 4758 020e 2037     		adds	r7, r7, #32
 4759              		.cfi_def_cfa_offset 16
 4760 0210 BD46     		mov	sp, r7
 4761              		.cfi_def_cfa_register 13
 4762              		@ sp needed
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 106


 4763 0212 B0BD     		pop	{r4, r5, r7, pc}
 4764              		.cfi_endproc
 4765              	.LFE81:
 4766              		.size	PumpPresetNotification, .-PumpPresetNotification
 4767              		.section	.text.PumpCreditPresetNotification,"ax",%progbits
 4768              		.align	2
 4769              		.global	PumpCreditPresetNotification
 4770              		.thumb
 4771              		.thumb_func
 4772              		.type	PumpCreditPresetNotification, %function
 4773              	PumpCreditPresetNotification:
 4774              	.LFB82:
1206:.\AdvantageImpl.c **** 
1207:.\AdvantageImpl.c **** 
1208:.\AdvantageImpl.c **** //@Created By: HIJH
1209:.\AdvantageImpl.c **** //@Septembre de 2016
1210:.\AdvantageImpl.c **** //Message to be notified to the remote peer (NSX)
1211:.\AdvantageImpl.c **** void PumpCreditPresetNotification(LPVOID pparam)
1212:.\AdvantageImpl.c **** {
 4775              		.loc 1 1212 0
 4776              		.cfi_startproc
 4777              		@ args = 0, pretend = 0, frame = 24
 4778              		@ frame_needed = 1, uses_anonymous_args = 0
 4779 0000 80B5     		push	{r7, lr}
 4780              		.cfi_def_cfa_offset 8
 4781              		.cfi_offset 7, -8
 4782              		.cfi_offset 14, -4
 4783 0002 86B0     		sub	sp, sp, #24
 4784              		.cfi_def_cfa_offset 32
 4785 0004 00AF     		add	r7, sp, #0
 4786              		.cfi_def_cfa_register 7
 4787 0006 7860     		str	r0, [r7, #4]
1213:.\AdvantageImpl.c ****     PPUMPTRANSACTIONJOBCONTEXTPTR pjob = (PPUMPTRANSACTIONJOBCONTEXTPTR)pparam;
 4788              		.loc 1 1213 0
 4789 0008 7B68     		ldr	r3, [r7, #4]
 4790 000a 7B61     		str	r3, [r7, #20]
1214:.\AdvantageImpl.c ****     if(pjob)
 4791              		.loc 1 1214 0
 4792 000c 7B69     		ldr	r3, [r7, #20]
 4793 000e 002B     		cmp	r3, #0
 4794 0010 67D0     		beq	.L169
 4795              	.LBB32:
1215:.\AdvantageImpl.c ****     {
1216:.\AdvantageImpl.c ****         //HERE WE ATTEMPT TO PUSH THE TRANSACTION INTO THE PUMP'S TRANSACTIONAL QUEUE.
1217:.\AdvantageImpl.c ****         //THIS IS DONE ONLY IF THERE IS ROOM IN THE QUEUE, OTHERWISE THIS STATE WON'T
1218:.\AdvantageImpl.c ****         //BE REPORTED TO THE REMOTE PEER.
1219:.\AdvantageImpl.c ****         pjob->_ppump->PumpTransQueueLock(pjob->_ppump);
 4796              		.loc 1 1219 0
 4797 0012 7B69     		ldr	r3, [r7, #20]
 4798 0014 DB69     		ldr	r3, [r3, #28]
 4799 0016 D3F8443B 		ldr	r3, [r3, #2884]
 4800 001a 7A69     		ldr	r2, [r7, #20]
 4801 001c D269     		ldr	r2, [r2, #28]
 4802 001e 1046     		mov	r0, r2
 4803 0020 9847     		blx	r3
1220:.\AdvantageImpl.c ****         PNEAR_PUMPTRANSACTIONALSTATEPTR pts = pjob->_ppump->PumpTransQueueAllocate(pjob->_ppump);
 4804              		.loc 1 1220 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 107


 4805 0022 7B69     		ldr	r3, [r7, #20]
 4806 0024 DB69     		ldr	r3, [r3, #28]
 4807 0026 D3F8583B 		ldr	r3, [r3, #2904]
 4808 002a 7A69     		ldr	r2, [r7, #20]
 4809 002c D269     		ldr	r2, [r2, #28]
 4810 002e 1046     		mov	r0, r2
 4811 0030 9847     		blx	r3
 4812 0032 3861     		str	r0, [r7, #16]
1221:.\AdvantageImpl.c ****         pjob->_ppump->PumpTransQueueUnlock(pjob->_ppump);
 4813              		.loc 1 1221 0
 4814 0034 7B69     		ldr	r3, [r7, #20]
 4815 0036 DB69     		ldr	r3, [r3, #28]
 4816 0038 D3F8483B 		ldr	r3, [r3, #2888]
 4817 003c 7A69     		ldr	r2, [r7, #20]
 4818 003e D269     		ldr	r2, [r2, #28]
 4819 0040 1046     		mov	r0, r2
 4820 0042 9847     		blx	r3
1222:.\AdvantageImpl.c ****         if(pts)
 4821              		.loc 1 1222 0
 4822 0044 3B69     		ldr	r3, [r7, #16]
 4823 0046 002B     		cmp	r3, #0
 4824 0048 4BD0     		beq	.L169
 4825              	.LBB33:
1223:.\AdvantageImpl.c ****         {
1224:.\AdvantageImpl.c ****             uint8 index = 0;
 4826              		.loc 1 1224 0
 4827 004a 0023     		movs	r3, #0
 4828 004c FB73     		strb	r3, [r7, #15]
1225:.\AdvantageImpl.c ****             pts->_transtate = RF_MUX_CREDIT_PRESET_NOTIFICATION_REQUEST;
 4829              		.loc 1 1225 0
 4830 004e 3B69     		ldr	r3, [r7, #16]
 4831 0050 AE22     		movs	r2, #174
 4832 0052 5A70     		strb	r2, [r3, #1]
1226:.\AdvantageImpl.c ****             //Pump ID always comes in position 0x00
1227:.\AdvantageImpl.c ****             pts->_buffer[index++] = pjob->_ppump->_pumpid;
 4833              		.loc 1 1227 0
 4834 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4835 0056 5A1C     		adds	r2, r3, #1
 4836 0058 FA73     		strb	r2, [r7, #15]
 4837 005a 1946     		mov	r1, r3
 4838 005c 7B69     		ldr	r3, [r7, #20]
 4839 005e DB69     		ldr	r3, [r3, #28]
 4840 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4841 0062 3B69     		ldr	r3, [r7, #16]
 4842 0064 0B44     		add	r3, r3, r1
 4843 0066 9A70     		strb	r2, [r3, #2]
1228:.\AdvantageImpl.c ****             pts->_buffersize = index;
 4844              		.loc 1 1228 0
 4845 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4846 006a 9AB2     		uxth	r2, r3
 4847 006c 3B69     		ldr	r3, [r7, #16]
 4848 006e A3F80221 		strh	r2, [r3, #258]	@ movhi
1229:.\AdvantageImpl.c ****             
1230:.\AdvantageImpl.c ****             PNEAR_PUMPTRANSACTIONALSTATEPTR ptstemp = pjob->_ppump->PumpTransQueueAllocate(pjob->_p
 4849              		.loc 1 1230 0
 4850 0072 7B69     		ldr	r3, [r7, #20]
 4851 0074 DB69     		ldr	r3, [r3, #28]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 108


 4852 0076 D3F8583B 		ldr	r3, [r3, #2904]
 4853 007a 7A69     		ldr	r2, [r7, #20]
 4854 007c D269     		ldr	r2, [r2, #28]
 4855 007e 1046     		mov	r0, r2
 4856 0080 9847     		blx	r3
 4857 0082 B860     		str	r0, [r7, #8]
1231:.\AdvantageImpl.c ****             if(ptstemp)
 4858              		.loc 1 1231 0
 4859 0084 BB68     		ldr	r3, [r7, #8]
 4860 0086 002B     		cmp	r3, #0
 4861 0088 22D0     		beq	.L171
1232:.\AdvantageImpl.c ****             {
1233:.\AdvantageImpl.c ****                 pjob->_ppump->PumpTransQueueDeallocate(pjob->_ppump,ptstemp);
 4862              		.loc 1 1233 0
 4863 008a 7B69     		ldr	r3, [r7, #20]
 4864 008c DB69     		ldr	r3, [r3, #28]
 4865 008e D3F8543B 		ldr	r3, [r3, #2900]
 4866 0092 7A69     		ldr	r2, [r7, #20]
 4867 0094 D269     		ldr	r2, [r2, #28]
 4868 0096 1046     		mov	r0, r2
 4869 0098 B968     		ldr	r1, [r7, #8]
 4870 009a 9847     		blx	r3
1234:.\AdvantageImpl.c ****                 pjob->_ppump->PumpTransQueueLock(pjob->_ppump);
 4871              		.loc 1 1234 0
 4872 009c 7B69     		ldr	r3, [r7, #20]
 4873 009e DB69     		ldr	r3, [r3, #28]
 4874 00a0 D3F8443B 		ldr	r3, [r3, #2884]
 4875 00a4 7A69     		ldr	r2, [r7, #20]
 4876 00a6 D269     		ldr	r2, [r2, #28]
 4877 00a8 1046     		mov	r0, r2
 4878 00aa 9847     		blx	r3
1235:.\AdvantageImpl.c ****                 pjob->_ppump->PumpTransQueueEnqueue(pjob->_ppump, pts);
 4879              		.loc 1 1235 0
 4880 00ac 7B69     		ldr	r3, [r7, #20]
 4881 00ae DB69     		ldr	r3, [r3, #28]
 4882 00b0 D3F8503B 		ldr	r3, [r3, #2896]
 4883 00b4 7A69     		ldr	r2, [r7, #20]
 4884 00b6 D269     		ldr	r2, [r2, #28]
 4885 00b8 1046     		mov	r0, r2
 4886 00ba 3969     		ldr	r1, [r7, #16]
 4887 00bc 9847     		blx	r3
1236:.\AdvantageImpl.c ****                 pjob->_ppump->PumpTransQueueUnlock(pjob->_ppump);
 4888              		.loc 1 1236 0
 4889 00be 7B69     		ldr	r3, [r7, #20]
 4890 00c0 DB69     		ldr	r3, [r3, #28]
 4891 00c2 D3F8483B 		ldr	r3, [r3, #2888]
 4892 00c6 7A69     		ldr	r2, [r7, #20]
 4893 00c8 D269     		ldr	r2, [r2, #28]
 4894 00ca 1046     		mov	r0, r2
 4895 00cc 9847     		blx	r3
 4896 00ce 08E0     		b	.L169
 4897              	.L171:
1237:.\AdvantageImpl.c ****             }else
1238:.\AdvantageImpl.c ****                 pjob->_ppump->PumpTransQueueDeallocate(pjob->_ppump, pts);
 4898              		.loc 1 1238 0
 4899 00d0 7B69     		ldr	r3, [r7, #20]
 4900 00d2 DB69     		ldr	r3, [r3, #28]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 109


 4901 00d4 D3F8543B 		ldr	r3, [r3, #2900]
 4902 00d8 7A69     		ldr	r2, [r7, #20]
 4903 00da D269     		ldr	r2, [r2, #28]
 4904 00dc 1046     		mov	r0, r2
 4905 00de 3969     		ldr	r1, [r7, #16]
 4906 00e0 9847     		blx	r3
 4907              	.L169:
 4908              	.LBE33:
 4909              	.LBE32:
1239:.\AdvantageImpl.c ****         }
1240:.\AdvantageImpl.c ****     }
1241:.\AdvantageImpl.c **** }
 4910              		.loc 1 1241 0
 4911 00e2 1837     		adds	r7, r7, #24
 4912              		.cfi_def_cfa_offset 8
 4913 00e4 BD46     		mov	sp, r7
 4914              		.cfi_def_cfa_register 13
 4915              		@ sp needed
 4916 00e6 80BD     		pop	{r7, pc}
 4917              		.cfi_endproc
 4918              	.LFE82:
 4919              		.size	PumpCreditPresetNotification, .-PumpCreditPresetNotification
 4920              		.section	.text.PumpFullPresetHose,"ax",%progbits
 4921              		.align	2
 4922              		.global	PumpFullPresetHose
 4923              		.thumb
 4924              		.thumb_func
 4925              		.type	PumpFullPresetHose, %function
 4926              	PumpFullPresetHose:
 4927              	.LFB83:
1242:.\AdvantageImpl.c **** 
1243:.\AdvantageImpl.c **** //@Created By: HIJH
1244:.\AdvantageImpl.c **** //@Septembre de 2016
1245:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
1246:.\AdvantageImpl.c **** //Preset values will be placed within the SinkMessage's buffer. This is a convention that applies t
1247:.\AdvantageImpl.c **** //all of the available transactions. The pump function must deal with this while it is assembling t
1248:.\AdvantageImpl.c **** //For this message the data comes as follows:
1249:.\AdvantageImpl.c **** // - First byte is the preset type (Volume:1 / Money:2 )
1250:.\AdvantageImpl.c **** // - Second byte is the Hose (A:0, B:1, C:2, D:3)
1251:.\AdvantageImpl.c **** // - Block of 8 bytes for the preset value
1252:.\AdvantageImpl.c **** //This block of data (10 bytes) must be moved to another position within the same buffer (even posi
1253:.\AdvantageImpl.c **** void PumpFullPresetHose(void *pparam)
1254:.\AdvantageImpl.c **** {
 4928              		.loc 1 1254 0
 4929              		.cfi_startproc
 4930              		@ args = 0, pretend = 0, frame = 40
 4931              		@ frame_needed = 1, uses_anonymous_args = 0
 4932 0000 90B5     		push	{r4, r7, lr}
 4933              		.cfi_def_cfa_offset 12
 4934              		.cfi_offset 4, -12
 4935              		.cfi_offset 7, -8
 4936              		.cfi_offset 14, -4
 4937 0002 8BB0     		sub	sp, sp, #44
 4938              		.cfi_def_cfa_offset 56
 4939 0004 00AF     		add	r7, sp, #0
 4940              		.cfi_def_cfa_register 7
 4941 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 110


1255:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 4942              		.loc 1 1255 0
 4943 0008 7B68     		ldr	r3, [r7, #4]
 4944 000a 3B62     		str	r3, [r7, #32]
1256:.\AdvantageImpl.c ****     if(ppump)
 4945              		.loc 1 1256 0
 4946 000c 3B6A     		ldr	r3, [r7, #32]
 4947 000e 002B     		cmp	r3, #0
 4948 0010 00F08481 		beq	.L172
 4949              	.LBB34:
1257:.\AdvantageImpl.c ****     {
1258:.\AdvantageImpl.c ****         uint8_t index = 0;        
 4950              		.loc 1 1258 0
 4951 0014 0023     		movs	r3, #0
 4952 0016 87F82730 		strb	r3, [r7, #39]
1259:.\AdvantageImpl.c ****         PUARTMESSAGEPTR puartdisp = GetUARTMessageSlot(UART_DISPENSER);
 4953              		.loc 1 1259 0
 4954 001a A220     		movs	r0, #162
 4955 001c FFF7FEFF 		bl	GetUARTMessageSlot
 4956 0020 F861     		str	r0, [r7, #28]
1260:.\AdvantageImpl.c ****         memset(ppump->_rxbuffer, 0x00, _PUMP_RX_BUFFER_SIZE_);
 4957              		.loc 1 1260 0
 4958 0022 3B6A     		ldr	r3, [r7, #32]
 4959 0024 03F5D073 		add	r3, r3, #416
 4960 0028 1846     		mov	r0, r3
 4961 002a 0021     		movs	r1, #0
 4962 002c 4FF4C072 		mov	r2, #384
 4963 0030 FFF7FEFF 		bl	memset
1261:.\AdvantageImpl.c ****         if(puartdisp)
 4964              		.loc 1 1261 0
 4965 0034 FB69     		ldr	r3, [r7, #28]
 4966 0036 002B     		cmp	r3, #0
 4967 0038 00F07081 		beq	.L172
1262:.\AdvantageImpl.c ****         {
1263:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
1264:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = SOM;
 4968              		.loc 1 1264 0
 4969 003c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4970 0040 5A1C     		adds	r2, r3, #1
 4971 0042 87F82720 		strb	r2, [r7, #39]
 4972 0046 1A46     		mov	r2, r3
 4973 0048 FB69     		ldr	r3, [r7, #28]
 4974 004a 1344     		add	r3, r3, r2
 4975 004c FF22     		movs	r2, #255
 4976 004e 1A71     		strb	r2, [r3, #4]
1265:.\AdvantageImpl.c ****             if(_g_dispenserlayoutinfo._displaydigitsmode == 0x06)
 4977              		.loc 1 1265 0
 4978 0050 B44B     		ldr	r3, .L186
 4979 0052 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 4980 0054 062B     		cmp	r3, #6
 4981 0056 40F09780 		bne	.L174
 4982              	.LBB35:
1266:.\AdvantageImpl.c ****             {
1267:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xE3;
 4983              		.loc 1 1267 0
 4984 005a 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4985 005e 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 111


 4986 0060 87F82720 		strb	r2, [r7, #39]
 4987 0064 1A46     		mov	r2, r3
 4988 0066 FB69     		ldr	r3, [r7, #28]
 4989 0068 1344     		add	r3, r3, r2
 4990 006a E322     		movs	r2, #227
 4991 006c 1A71     		strb	r2, [r3, #4]
1268:.\AdvantageImpl.c **** 
1269:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0004 INDEX POSITION WITHIN THE PUMP'S BUFF
1270:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1271:.\AdvantageImpl.c ****                 uint8 transtype = 0xF1;//preset type (0xF2 = Money, 0xF1 = Volume)
 4992              		.loc 1 1271 0
 4993 006e F123     		movs	r3, #241
 4994 0070 FB76     		strb	r3, [r7, #27]
1272:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = transtype;//preset type (0xF2 = Money, 0xF1 = Volu
 4995              		.loc 1 1272 0
 4996 0072 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4997 0076 5A1C     		adds	r2, r3, #1
 4998 0078 87F82720 		strb	r2, [r7, #39]
 4999 007c 1A46     		mov	r2, r3
 5000 007e FB69     		ldr	r3, [r7, #28]
 5001 0080 1344     		add	r3, r3, r2
 5002 0082 FA7E     		ldrb	r2, [r7, #27]
 5003 0084 1A71     		strb	r2, [r3, #4]
1273:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xF4;
 5004              		.loc 1 1273 0
 5005 0086 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5006 008a 5A1C     		adds	r2, r3, #1
 5007 008c 87F82720 		strb	r2, [r7, #39]
 5008 0090 1A46     		mov	r2, r3
 5009 0092 FB69     		ldr	r3, [r7, #28]
 5010 0094 1344     		add	r3, r3, r2
 5011 0096 F422     		movs	r2, #244
 5012 0098 1A71     		strb	r2, [r3, #4]
1274:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xF6; //Hose Data next
 5013              		.loc 1 1274 0
 5014 009a 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5015 009e 5A1C     		adds	r2, r3, #1
 5016 00a0 87F82720 		strb	r2, [r7, #39]
 5017 00a4 1A46     		mov	r2, r3
 5018 00a6 FB69     		ldr	r3, [r7, #28]
 5019 00a8 1344     		add	r3, r3, r2
 5020 00aa F622     		movs	r2, #246
 5021 00ac 1A71     		strb	r2, [r3, #4]
1275:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0006 INDEX POSITION WITHIN THE PUMP'S BUFF
1276:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1277:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ppump->_trasactionbuffer[GetBuffer
 5022              		.loc 1 1277 0
 5023 00ae 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5024 00b2 5A1C     		adds	r2, r3, #1
 5025 00b4 87F82720 		strb	r2, [r7, #39]
 5026 00b8 1C46     		mov	r4, r3
 5027 00ba 0720     		movs	r0, #7
 5028 00bc FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 5029 00c0 0346     		mov	r3, r0
 5030 00c2 1A46     		mov	r2, r3
 5031 00c4 3B6A     		ldr	r3, [r7, #32]
 5032 00c6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 112


 5033 00c8 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 5034 00cc 03F00F03 		and	r3, r3, #15
 5035 00d0 DBB2     		uxtb	r3, r3
 5036 00d2 63F01F03 		orn	r3, r3, #31
 5037 00d6 DAB2     		uxtb	r2, r3
 5038 00d8 FB69     		ldr	r3, [r7, #28]
 5039 00da 2344     		add	r3, r3, r4
 5040 00dc 1A71     		strb	r2, [r3, #4]
1278:.\AdvantageImpl.c ****                 
1279:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xF8; //Preset Data next
 5041              		.loc 1 1279 0
 5042 00de 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5043 00e2 5A1C     		adds	r2, r3, #1
 5044 00e4 87F82720 		strb	r2, [r7, #39]
 5045 00e8 1A46     		mov	r2, r3
 5046 00ea FB69     		ldr	r3, [r7, #28]
 5047 00ec 1344     		add	r3, r3, r2
 5048 00ee F822     		movs	r2, #248
 5049 00f0 1A71     		strb	r2, [r3, #4]
1280:.\AdvantageImpl.c ****                 //Here we copy the remaining 8 bytes for the preset value
1281:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0008 INDEX POSITION WITHIN THE PUMP'S BUFF
1282:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1283:.\AdvantageImpl.c ****                 char8 *ptr = &ppump->_trasactionbuffer[0x0008];
 5050              		.loc 1 1283 0
 5051 00f2 3B6A     		ldr	r3, [r7, #32]
 5052 00f4 2833     		adds	r3, r3, #40
 5053 00f6 7B61     		str	r3, [r7, #20]
1284:.\AdvantageImpl.c ****                 B78AD90CF552D9B30A(_PUMP_MAXIMUM_PRESET_GALLONS_, (LPRAWPTR)ptr);
 5054              		.loc 1 1284 0
 5055 00f8 4FF4FA70 		mov	r0, #500
 5056 00fc 4FF00001 		mov	r1, #0
 5057 0100 7A69     		ldr	r2, [r7, #20]
 5058 0102 FFF7FEFF 		bl	B78AD90CF552D9B30A
1285:.\AdvantageImpl.c **** 
1286:.\AdvantageImpl.c ****                 PSTRBUFFTOGG(PBYTECAST(&ppump->_trasactionbuffer[0x0008]), 0x08);
 5059              		.loc 1 1286 0
 5060 0106 3B6A     		ldr	r3, [r7, #32]
 5061 0108 2833     		adds	r3, r3, #40
 5062 010a 1846     		mov	r0, r3
 5063 010c 0821     		movs	r1, #8
 5064 010e FFF7FEFF 		bl	PSTRBUFFTOGG
1287:.\AdvantageImpl.c ****                 if(transtype == 0xF1) //Volume PRESET, then multiply by 1000
 5065              		.loc 1 1287 0
 5066 0112 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 5067 0114 F12B     		cmp	r3, #241
 5068 0116 04D1     		bne	.L175
1288:.\AdvantageImpl.c ****                     CastVolumeValue(ptr, 0x08);
 5069              		.loc 1 1288 0
 5070 0118 7869     		ldr	r0, [r7, #20]
 5071 011a 0821     		movs	r1, #8
 5072 011c FFF7FEFF 		bl	CastVolumeValue
 5073 0120 0BE0     		b	.L176
 5074              	.L175:
1289:.\AdvantageImpl.c ****                 else if(!(_g_dispenserlayoutinfo._moneydecimals == 0x03 && _g_dispenserlayoutinfo._
 5075              		.loc 1 1289 0
 5076 0122 804B     		ldr	r3, .L186
 5077 0124 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 113


 5078 0126 032B     		cmp	r3, #3
 5079 0128 03D1     		bne	.L177
 5080              		.loc 1 1289 0 is_stmt 0 discriminator 1
 5081 012a 7E4B     		ldr	r3, .L186
 5082 012c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 5083 012e 022B     		cmp	r3, #2
 5084 0130 03D0     		beq	.L176
 5085              	.L177:
1290:.\AdvantageImpl.c ****                     CastMoneyValue(ptr, 0x08);
 5086              		.loc 1 1290 0 is_stmt 1
 5087 0132 7869     		ldr	r0, [r7, #20]
 5088 0134 0821     		movs	r1, #8
 5089 0136 FFF7FEFF 		bl	CastMoneyValue
 5090              	.L176:
1291:.\AdvantageImpl.c **** 
1292:.\AdvantageImpl.c ****                 FOR(uint8 buffndx = 0, buffndx < 0x05, buffndx++)
 5091              		.loc 1 1292 0
 5092 013a 0023     		movs	r3, #0
 5093 013c 87F82630 		strb	r3, [r7, #38]
 5094 0140 1DE0     		b	.L178
 5095              	.L179:
1293:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Translat
 5096              		.loc 1 1293 0 discriminator 3
 5097 0142 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5098 0146 5A1C     		adds	r2, r3, #1
 5099 0148 87F82720 		strb	r2, [r7, #39]
 5100 014c 1946     		mov	r1, r3
 5101 014e 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 5102 0152 C3F10703 		rsb	r3, r3, #7
 5103 0156 1A46     		mov	r2, r3
 5104 0158 7B69     		ldr	r3, [r7, #20]
 5105 015a 1344     		add	r3, r3, r2
 5106 015c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5107 015e DBB2     		uxtb	r3, r3
 5108 0160 03F00F03 		and	r3, r3, #15
 5109 0164 DBB2     		uxtb	r3, r3
 5110 0166 63F01F03 		orn	r3, r3, #31
 5111 016a DBB2     		uxtb	r3, r3
 5112 016c DAB2     		uxtb	r2, r3
 5113 016e FB69     		ldr	r3, [r7, #28]
 5114 0170 0B44     		add	r3, r3, r1
 5115 0172 1A71     		strb	r2, [r3, #4]
1292:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Translat
 5116              		.loc 1 1292 0 discriminator 3
 5117 0174 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 5118 0178 0133     		adds	r3, r3, #1
 5119 017a 87F82630 		strb	r3, [r7, #38]
 5120              	.L178:
1292:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Translat
 5121              		.loc 1 1292 0 is_stmt 0 discriminator 1
 5122 017e 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 5123 0182 042B     		cmp	r3, #4
 5124 0184 DDD9     		bls	.L179
 5125              	.LBE35:
 5126 0186 9AE0     		b	.L180
 5127              	.L174:
1294:.\AdvantageImpl.c ****                     
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 114


1295:.\AdvantageImpl.c ****             }
1296:.\AdvantageImpl.c ****             else if(_g_dispenserlayoutinfo._displaydigitsmode == 0x07)
 5128              		.loc 1 1296 0 is_stmt 1
 5129 0188 664B     		ldr	r3, .L186
 5130 018a 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 5131 018c 072B     		cmp	r3, #7
 5132 018e 40F09680 		bne	.L180
 5133              	.LBB36:
1297:.\AdvantageImpl.c ****             {
1298:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xE1;
 5134              		.loc 1 1298 0
 5135 0192 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5136 0196 5A1C     		adds	r2, r3, #1
 5137 0198 87F82720 		strb	r2, [r7, #39]
 5138 019c 1A46     		mov	r2, r3
 5139 019e FB69     		ldr	r3, [r7, #28]
 5140 01a0 1344     		add	r3, r3, r2
 5141 01a2 E122     		movs	r2, #225
 5142 01a4 1A71     		strb	r2, [r3, #4]
1299:.\AdvantageImpl.c **** 
1300:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0004 INDEX POSITION WITHIN THE PUMP'S BUFF
1301:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1302:.\AdvantageImpl.c ****                 uint8 transtype = 0xF1;//preset type (0xF2 = Money, 0xF1 = Volume)
 5143              		.loc 1 1302 0
 5144 01a6 F123     		movs	r3, #241
 5145 01a8 FB74     		strb	r3, [r7, #19]
1303:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = transtype;//preset type (0xF2 = Money, 0xF1 = Volu
 5146              		.loc 1 1303 0
 5147 01aa 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5148 01ae 5A1C     		adds	r2, r3, #1
 5149 01b0 87F82720 		strb	r2, [r7, #39]
 5150 01b4 1A46     		mov	r2, r3
 5151 01b6 FB69     		ldr	r3, [r7, #28]
 5152 01b8 1344     		add	r3, r3, r2
 5153 01ba FA7C     		ldrb	r2, [r7, #19]
 5154 01bc 1A71     		strb	r2, [r3, #4]
1304:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xF4;
 5155              		.loc 1 1304 0
 5156 01be 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5157 01c2 5A1C     		adds	r2, r3, #1
 5158 01c4 87F82720 		strb	r2, [r7, #39]
 5159 01c8 1A46     		mov	r2, r3
 5160 01ca FB69     		ldr	r3, [r7, #28]
 5161 01cc 1344     		add	r3, r3, r2
 5162 01ce F422     		movs	r2, #244
 5163 01d0 1A71     		strb	r2, [r3, #4]
1305:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xF6; //Hose Data next
 5164              		.loc 1 1305 0
 5165 01d2 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5166 01d6 5A1C     		adds	r2, r3, #1
 5167 01d8 87F82720 		strb	r2, [r7, #39]
 5168 01dc 1A46     		mov	r2, r3
 5169 01de FB69     		ldr	r3, [r7, #28]
 5170 01e0 1344     		add	r3, r3, r2
 5171 01e2 F622     		movs	r2, #246
 5172 01e4 1A71     		strb	r2, [r3, #4]
1306:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0006 INDEX POSITION WITHIN THE PUMP'S BUFF
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 115


1307:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1308:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ppump->_trasactionbuffer[GetBuffer
 5173              		.loc 1 1308 0
 5174 01e6 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5175 01ea 5A1C     		adds	r2, r3, #1
 5176 01ec 87F82720 		strb	r2, [r7, #39]
 5177 01f0 1C46     		mov	r4, r3
 5178 01f2 0720     		movs	r0, #7
 5179 01f4 FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 5180 01f8 0346     		mov	r3, r0
 5181 01fa 1A46     		mov	r2, r3
 5182 01fc 3B6A     		ldr	r3, [r7, #32]
 5183 01fe 1344     		add	r3, r3, r2
 5184 0200 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 5185 0204 03F00F03 		and	r3, r3, #15
 5186 0208 DBB2     		uxtb	r3, r3
 5187 020a 63F01F03 		orn	r3, r3, #31
 5188 020e DAB2     		uxtb	r2, r3
 5189 0210 FB69     		ldr	r3, [r7, #28]
 5190 0212 2344     		add	r3, r3, r4
 5191 0214 1A71     		strb	r2, [r3, #4]
1309:.\AdvantageImpl.c ****                 
1310:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xF8; //Preset Data next
 5192              		.loc 1 1310 0
 5193 0216 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5194 021a 5A1C     		adds	r2, r3, #1
 5195 021c 87F82720 		strb	r2, [r7, #39]
 5196 0220 1A46     		mov	r2, r3
 5197 0222 FB69     		ldr	r3, [r7, #28]
 5198 0224 1344     		add	r3, r3, r2
 5199 0226 F822     		movs	r2, #248
 5200 0228 1A71     		strb	r2, [r3, #4]
1311:.\AdvantageImpl.c ****                 //Here we copy the remaining 8 bytes for the preset value
1312:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0008 INDEX POSITION WITHIN THE PUMP'S BUFF
1313:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1314:.\AdvantageImpl.c ****                 char8 *ptr = &ppump->_trasactionbuffer[0x0008];
 5201              		.loc 1 1314 0
 5202 022a 3B6A     		ldr	r3, [r7, #32]
 5203 022c 2833     		adds	r3, r3, #40
 5204 022e FB60     		str	r3, [r7, #12]
1315:.\AdvantageImpl.c ****                 B78AD90CF552D9B30A(_PUMP_MAXIMUM_PRESET_GALLONS_, (LPRAWPTR)ptr);
 5205              		.loc 1 1315 0
 5206 0230 4FF4FA70 		mov	r0, #500
 5207 0234 4FF00001 		mov	r1, #0
 5208 0238 FA68     		ldr	r2, [r7, #12]
 5209 023a FFF7FEFF 		bl	B78AD90CF552D9B30A
1316:.\AdvantageImpl.c **** 
1317:.\AdvantageImpl.c ****                 PSTRBUFFTOGG(PBYTECAST(&ppump->_trasactionbuffer[0x0008]), 0x08);
 5210              		.loc 1 1317 0
 5211 023e 3B6A     		ldr	r3, [r7, #32]
 5212 0240 2833     		adds	r3, r3, #40
 5213 0242 1846     		mov	r0, r3
 5214 0244 0821     		movs	r1, #8
 5215 0246 FFF7FEFF 		bl	PSTRBUFFTOGG
1318:.\AdvantageImpl.c ****                 if(transtype == 0xF1) //Volume PRESET, then multiply by 1000
 5216              		.loc 1 1318 0
 5217 024a FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 116


 5218 024c F12B     		cmp	r3, #241
 5219 024e 04D1     		bne	.L181
1319:.\AdvantageImpl.c ****                     CastVolumeValue(ptr, 0x08);
 5220              		.loc 1 1319 0
 5221 0250 F868     		ldr	r0, [r7, #12]
 5222 0252 0821     		movs	r1, #8
 5223 0254 FFF7FEFF 		bl	CastVolumeValue
 5224 0258 0BE0     		b	.L182
 5225              	.L181:
1320:.\AdvantageImpl.c ****                 else if(!(_g_dispenserlayoutinfo._moneydecimals == 0x03 && _g_dispenserlayoutinfo._
 5226              		.loc 1 1320 0
 5227 025a 324B     		ldr	r3, .L186
 5228 025c DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 5229 025e 032B     		cmp	r3, #3
 5230 0260 03D1     		bne	.L183
 5231              		.loc 1 1320 0 is_stmt 0 discriminator 1
 5232 0262 304B     		ldr	r3, .L186
 5233 0264 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 5234 0266 022B     		cmp	r3, #2
 5235 0268 03D0     		beq	.L182
 5236              	.L183:
1321:.\AdvantageImpl.c ****                     CastMoneyValue(ptr, 0x08);
 5237              		.loc 1 1321 0 is_stmt 1
 5238 026a F868     		ldr	r0, [r7, #12]
 5239 026c 0821     		movs	r1, #8
 5240 026e FFF7FEFF 		bl	CastMoneyValue
 5241              	.L182:
1322:.\AdvantageImpl.c **** 
1323:.\AdvantageImpl.c ****                 FOR(uint8 buffndx = 0, buffndx < 0x08, buffndx++)
 5242              		.loc 1 1323 0
 5243 0272 0023     		movs	r3, #0
 5244 0274 87F82530 		strb	r3, [r7, #37]
 5245 0278 1DE0     		b	.L184
 5246              	.L185:
1324:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Translat
 5247              		.loc 1 1324 0 discriminator 3
 5248 027a 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5249 027e 5A1C     		adds	r2, r3, #1
 5250 0280 87F82720 		strb	r2, [r7, #39]
 5251 0284 1946     		mov	r1, r3
 5252 0286 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 5253 028a C3F10703 		rsb	r3, r3, #7
 5254 028e 1A46     		mov	r2, r3
 5255 0290 FB68     		ldr	r3, [r7, #12]
 5256 0292 1344     		add	r3, r3, r2
 5257 0294 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5258 0296 DBB2     		uxtb	r3, r3
 5259 0298 03F00F03 		and	r3, r3, #15
 5260 029c DBB2     		uxtb	r3, r3
 5261 029e 63F01F03 		orn	r3, r3, #31
 5262 02a2 DBB2     		uxtb	r3, r3
 5263 02a4 DAB2     		uxtb	r2, r3
 5264 02a6 FB69     		ldr	r3, [r7, #28]
 5265 02a8 0B44     		add	r3, r3, r1
 5266 02aa 1A71     		strb	r2, [r3, #4]
1323:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Translat
 5267              		.loc 1 1323 0 discriminator 3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 117


 5268 02ac 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 5269 02b0 0133     		adds	r3, r3, #1
 5270 02b2 87F82530 		strb	r3, [r7, #37]
 5271              	.L184:
1323:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Translat
 5272              		.loc 1 1323 0 is_stmt 0 discriminator 1
 5273 02b6 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 5274 02ba 072B     		cmp	r3, #7
 5275 02bc DDD9     		bls	.L185
 5276              	.L180:
 5277              	.LBE36:
1325:.\AdvantageImpl.c ****                     
1326:.\AdvantageImpl.c ****             }
1327:.\AdvantageImpl.c ****             ppump->_presetdone = true;
 5278              		.loc 1 1327 0 is_stmt 1
 5279 02be 3B6A     		ldr	r3, [r7, #32]
 5280 02c0 0122     		movs	r2, #1
 5281 02c2 1A72     		strb	r2, [r3, #8]
1328:.\AdvantageImpl.c **** 
1329:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = LRCn; //LRC next
 5282              		.loc 1 1329 0
 5283 02c4 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5284 02c8 5A1C     		adds	r2, r3, #1
 5285 02ca 87F82720 		strb	r2, [r7, #39]
 5286 02ce 1A46     		mov	r2, r3
 5287 02d0 FB69     		ldr	r3, [r7, #28]
 5288 02d2 1344     		add	r3, r3, r2
 5289 02d4 FB22     		movs	r2, #251
 5290 02d6 1A71     		strb	r2, [r3, #4]
1330:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = GetLRC(puartdisp->_messagetx);
 5291              		.loc 1 1330 0
 5292 02d8 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5293 02dc 5A1C     		adds	r2, r3, #1
 5294 02de 87F82720 		strb	r2, [r7, #39]
 5295 02e2 1C46     		mov	r4, r3
 5296 02e4 FB69     		ldr	r3, [r7, #28]
 5297 02e6 0433     		adds	r3, r3, #4
 5298 02e8 1846     		mov	r0, r3
 5299 02ea FFF7FEFF 		bl	GetLRC
 5300 02ee 0346     		mov	r3, r0
 5301 02f0 1A46     		mov	r2, r3
 5302 02f2 FB69     		ldr	r3, [r7, #28]
 5303 02f4 2344     		add	r3, r3, r4
 5304 02f6 1A71     		strb	r2, [r3, #4]
1331:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = EOM;
 5305              		.loc 1 1331 0
 5306 02f8 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5307 02fc 5A1C     		adds	r2, r3, #1
 5308 02fe 87F82720 		strb	r2, [r7, #39]
 5309 0302 1A46     		mov	r2, r3
 5310 0304 FB69     		ldr	r3, [r7, #28]
 5311 0306 1344     		add	r3, r3, r2
 5312 0308 F022     		movs	r2, #240
 5313 030a 1A71     		strb	r2, [r3, #4]
1332:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
1333:.\AdvantageImpl.c ****             
1334:.\AdvantageImpl.c ****             puartdisp->_messagelength = index;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 118


 5314              		.loc 1 1334 0
 5315 030c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5316 0310 9AB2     		uxth	r2, r3
 5317 0312 FB69     		ldr	r3, [r7, #28]
 5318 0314 5A80     		strh	r2, [r3, #2]	@ movhi
1335:.\AdvantageImpl.c ****             puartdisp->_messagestate = PENDING;
 5319              		.loc 1 1335 0
 5320 0316 FB69     		ldr	r3, [r7, #28]
 5321 0318 C222     		movs	r2, #194
 5322 031a 1A70     		strb	r2, [r3]
 5323              	.L172:
 5324              	.LBE34:
1336:.\AdvantageImpl.c ****         }
1337:.\AdvantageImpl.c ****     }
1338:.\AdvantageImpl.c ****     
1339:.\AdvantageImpl.c **** }
 5325              		.loc 1 1339 0
 5326 031c 2C37     		adds	r7, r7, #44
 5327              		.cfi_def_cfa_offset 12
 5328 031e BD46     		mov	sp, r7
 5329              		.cfi_def_cfa_register 13
 5330              		@ sp needed
 5331 0320 90BD     		pop	{r4, r7, pc}
 5332              	.L187:
 5333 0322 00BF     		.align	2
 5334              	.L186:
 5335 0324 00000000 		.word	_g_dispenserlayoutinfo
 5336              		.cfi_endproc
 5337              	.LFE83:
 5338              		.size	PumpFullPresetHose, .-PumpFullPresetHose
 5339              		.section	.text.PumpFullPresetNoHose,"ax",%progbits
 5340              		.align	2
 5341              		.global	PumpFullPresetNoHose
 5342              		.thumb
 5343              		.thumb_func
 5344              		.type	PumpFullPresetNoHose, %function
 5345              	PumpFullPresetNoHose:
 5346              	.LFB84:
1340:.\AdvantageImpl.c **** 
1341:.\AdvantageImpl.c **** //@Created By: HIJH
1342:.\AdvantageImpl.c **** //@Septembre de 2016
1343:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
1344:.\AdvantageImpl.c **** //Preset values will be placed within the SinkMessage's buffer. This is a convention that applies t
1345:.\AdvantageImpl.c **** //all of the available transactions. The pump function must deal with this while it is assembling t
1346:.\AdvantageImpl.c **** //For this message the data comes as follows:
1347:.\AdvantageImpl.c **** // - First byte is the preset type (Volume:1 / Money:2 )
1348:.\AdvantageImpl.c **** // - Second byte is the Hose (A:0, B:1, C:2, D:3)
1349:.\AdvantageImpl.c **** // - Block of 8 bytes for the preset value
1350:.\AdvantageImpl.c **** //This block of data (10 bytes) must be moved to another position within the same buffer (even posi
1351:.\AdvantageImpl.c **** void PumpFullPresetNoHose(void *pparam)
1352:.\AdvantageImpl.c **** {
 5347              		.loc 1 1352 0
 5348              		.cfi_startproc
 5349              		@ args = 0, pretend = 0, frame = 40
 5350              		@ frame_needed = 1, uses_anonymous_args = 0
 5351 0000 90B5     		push	{r4, r7, lr}
 5352              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 119


 5353              		.cfi_offset 4, -12
 5354              		.cfi_offset 7, -8
 5355              		.cfi_offset 14, -4
 5356 0002 8BB0     		sub	sp, sp, #44
 5357              		.cfi_def_cfa_offset 56
 5358 0004 00AF     		add	r7, sp, #0
 5359              		.cfi_def_cfa_register 7
 5360 0006 7860     		str	r0, [r7, #4]
1353:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 5361              		.loc 1 1353 0
 5362 0008 7B68     		ldr	r3, [r7, #4]
 5363 000a 3B62     		str	r3, [r7, #32]
1354:.\AdvantageImpl.c ****     if(ppump)
 5364              		.loc 1 1354 0
 5365 000c 3B6A     		ldr	r3, [r7, #32]
 5366 000e 002B     		cmp	r3, #0
 5367 0010 00F02A81 		beq	.L188
 5368              	.LBB37:
1355:.\AdvantageImpl.c ****     {
1356:.\AdvantageImpl.c ****         uint8_t index = 0;        
 5369              		.loc 1 1356 0
 5370 0014 0023     		movs	r3, #0
 5371 0016 87F82730 		strb	r3, [r7, #39]
1357:.\AdvantageImpl.c ****         PUARTMESSAGEPTR puartdisp = GetUARTMessageSlot(UART_DISPENSER);
 5372              		.loc 1 1357 0
 5373 001a A220     		movs	r0, #162
 5374 001c FFF7FEFF 		bl	GetUARTMessageSlot
 5375 0020 F861     		str	r0, [r7, #28]
1358:.\AdvantageImpl.c ****         memset(ppump->_rxbuffer, 0x00, _PUMP_RX_BUFFER_SIZE_);
 5376              		.loc 1 1358 0
 5377 0022 3B6A     		ldr	r3, [r7, #32]
 5378 0024 03F5D073 		add	r3, r3, #416
 5379 0028 1846     		mov	r0, r3
 5380 002a 0021     		movs	r1, #0
 5381 002c 4FF4C072 		mov	r2, #384
 5382 0030 FFF7FEFF 		bl	memset
1359:.\AdvantageImpl.c ****         if(puartdisp)
 5383              		.loc 1 1359 0
 5384 0034 FB69     		ldr	r3, [r7, #28]
 5385 0036 002B     		cmp	r3, #0
 5386 0038 00F01681 		beq	.L188
1360:.\AdvantageImpl.c ****         {
1361:.\AdvantageImpl.c ****             //This is required for the "Temination Handler" that will post the preset to the remote
1362:.\AdvantageImpl.c ****             ppump->_trasactionbuffer[0x0004] = 0x0F;
 5387              		.loc 1 1362 0
 5388 003c 3B6A     		ldr	r3, [r7, #32]
 5389 003e 0F22     		movs	r2, #15
 5390 0040 83F82420 		strb	r2, [r3, #36]
1363:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
1364:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = SOM;
 5391              		.loc 1 1364 0
 5392 0044 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5393 0048 5A1C     		adds	r2, r3, #1
 5394 004a 87F82720 		strb	r2, [r7, #39]
 5395 004e 1A46     		mov	r2, r3
 5396 0050 FB69     		ldr	r3, [r7, #28]
 5397 0052 1344     		add	r3, r3, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 120


 5398 0054 FF22     		movs	r2, #255
 5399 0056 1A71     		strb	r2, [r3, #4]
1365:.\AdvantageImpl.c ****             if(_g_dispenserlayoutinfo._displaydigitsmode == 0x06)
 5400              		.loc 1 1365 0
 5401 0058 854B     		ldr	r3, .L202
 5402 005a 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 5403 005c 062B     		cmp	r3, #6
 5404 005e 6AD1     		bne	.L190
 5405              	.LBB38:
1366:.\AdvantageImpl.c ****             {
1367:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xE5;
 5406              		.loc 1 1367 0
 5407 0060 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5408 0064 5A1C     		adds	r2, r3, #1
 5409 0066 87F82720 		strb	r2, [r7, #39]
 5410 006a 1A46     		mov	r2, r3
 5411 006c FB69     		ldr	r3, [r7, #28]
 5412 006e 1344     		add	r3, r3, r2
 5413 0070 E522     		movs	r2, #229
 5414 0072 1A71     		strb	r2, [r3, #4]
1368:.\AdvantageImpl.c ****                 
1369:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0004 INDEX POSITION WITHIN THE PUMP'S BUFF
1370:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1371:.\AdvantageImpl.c ****                 uint8 transtype = 0xF1;//preset type (0xF2 = Money, 0xF1 = Volume)
 5415              		.loc 1 1371 0
 5416 0074 F123     		movs	r3, #241
 5417 0076 FB76     		strb	r3, [r7, #27]
1372:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = transtype;//preset type (0xF2 = Money, 0xF1 = Volu
 5418              		.loc 1 1372 0
 5419 0078 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5420 007c 5A1C     		adds	r2, r3, #1
 5421 007e 87F82720 		strb	r2, [r7, #39]
 5422 0082 1A46     		mov	r2, r3
 5423 0084 FB69     		ldr	r3, [r7, #28]
 5424 0086 1344     		add	r3, r3, r2
 5425 0088 FA7E     		ldrb	r2, [r7, #27]
 5426 008a 1A71     		strb	r2, [r3, #4]
1373:.\AdvantageImpl.c ****                 
1374:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xF8; //Preset Data next
 5427              		.loc 1 1374 0
 5428 008c 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5429 0090 5A1C     		adds	r2, r3, #1
 5430 0092 87F82720 		strb	r2, [r7, #39]
 5431 0096 1A46     		mov	r2, r3
 5432 0098 FB69     		ldr	r3, [r7, #28]
 5433 009a 1344     		add	r3, r3, r2
 5434 009c F822     		movs	r2, #248
 5435 009e 1A71     		strb	r2, [r3, #4]
1375:.\AdvantageImpl.c ****                 //Here we copy the remaining 8 bytes for the preset value
1376:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0008 INDEX POSITION WITHIN THE PUMP'S BUFF
1377:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1378:.\AdvantageImpl.c ****                 char8 *ptr = &ppump->_trasactionbuffer[0x0008];
 5436              		.loc 1 1378 0
 5437 00a0 3B6A     		ldr	r3, [r7, #32]
 5438 00a2 2833     		adds	r3, r3, #40
 5439 00a4 7B61     		str	r3, [r7, #20]
1379:.\AdvantageImpl.c ****                 //B78AD90CF552D9B30A(_PUMP_MAXIMUM_PRESET_6_DIGITS_, (LPRAWPTR)ptr);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 121


1380:.\AdvantageImpl.c ****                 B78AD90CF552D9B30A(10 * _PUMP_MAXIMUM_PRESET_GALLONS_, (LPRAWPTR)ptr);
 5440              		.loc 1 1380 0
 5441 00a6 41F28830 		movw	r0, #5000
 5442 00aa 4FF00001 		mov	r1, #0
 5443 00ae 7A69     		ldr	r2, [r7, #20]
 5444 00b0 FFF7FEFF 		bl	B78AD90CF552D9B30A
1381:.\AdvantageImpl.c **** 
1382:.\AdvantageImpl.c ****                 PSTRBUFFTOGG(PBYTECAST(&ppump->_trasactionbuffer[0x0008]), 0x08);
 5445              		.loc 1 1382 0
 5446 00b4 3B6A     		ldr	r3, [r7, #32]
 5447 00b6 2833     		adds	r3, r3, #40
 5448 00b8 1846     		mov	r0, r3
 5449 00ba 0821     		movs	r1, #8
 5450 00bc FFF7FEFF 		bl	PSTRBUFFTOGG
1383:.\AdvantageImpl.c ****                 if(transtype == 0xF1) //Volume PRESET, then multiply by 1000
 5451              		.loc 1 1383 0
 5452 00c0 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 5453 00c2 F12B     		cmp	r3, #241
 5454 00c4 04D1     		bne	.L191
1384:.\AdvantageImpl.c ****                     CastVolumeValue(ptr, 0x08);
 5455              		.loc 1 1384 0
 5456 00c6 7869     		ldr	r0, [r7, #20]
 5457 00c8 0821     		movs	r1, #8
 5458 00ca FFF7FEFF 		bl	CastVolumeValue
 5459 00ce 0BE0     		b	.L192
 5460              	.L191:
1385:.\AdvantageImpl.c ****                 else if(!(_g_dispenserlayoutinfo._moneydecimals == 0x03 && _g_dispenserlayoutinfo._
 5461              		.loc 1 1385 0
 5462 00d0 674B     		ldr	r3, .L202
 5463 00d2 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 5464 00d4 032B     		cmp	r3, #3
 5465 00d6 03D1     		bne	.L193
 5466              		.loc 1 1385 0 is_stmt 0 discriminator 1
 5467 00d8 654B     		ldr	r3, .L202
 5468 00da 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 5469 00dc 022B     		cmp	r3, #2
 5470 00de 03D0     		beq	.L192
 5471              	.L193:
1386:.\AdvantageImpl.c ****                     CastMoneyValue(ptr, 0x08);
 5472              		.loc 1 1386 0 is_stmt 1
 5473 00e0 7869     		ldr	r0, [r7, #20]
 5474 00e2 0821     		movs	r1, #8
 5475 00e4 FFF7FEFF 		bl	CastMoneyValue
 5476              	.L192:
1387:.\AdvantageImpl.c **** 
1388:.\AdvantageImpl.c ****                 FOR(uint8 buffndx = 0, buffndx < 0x05, buffndx++)
 5477              		.loc 1 1388 0
 5478 00e8 0023     		movs	r3, #0
 5479 00ea 87F82630 		strb	r3, [r7, #38]
 5480 00ee 1DE0     		b	.L194
 5481              	.L195:
1389:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Translat
 5482              		.loc 1 1389 0 discriminator 3
 5483 00f0 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5484 00f4 5A1C     		adds	r2, r3, #1
 5485 00f6 87F82720 		strb	r2, [r7, #39]
 5486 00fa 1946     		mov	r1, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 122


 5487 00fc 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 5488 0100 C3F10703 		rsb	r3, r3, #7
 5489 0104 1A46     		mov	r2, r3
 5490 0106 7B69     		ldr	r3, [r7, #20]
 5491 0108 1344     		add	r3, r3, r2
 5492 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5493 010c DBB2     		uxtb	r3, r3
 5494 010e 03F00F03 		and	r3, r3, #15
 5495 0112 DBB2     		uxtb	r3, r3
 5496 0114 63F01F03 		orn	r3, r3, #31
 5497 0118 DBB2     		uxtb	r3, r3
 5498 011a DAB2     		uxtb	r2, r3
 5499 011c FB69     		ldr	r3, [r7, #28]
 5500 011e 0B44     		add	r3, r3, r1
 5501 0120 1A71     		strb	r2, [r3, #4]
1388:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Translat
 5502              		.loc 1 1388 0 discriminator 3
 5503 0122 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 5504 0126 0133     		adds	r3, r3, #1
 5505 0128 87F82630 		strb	r3, [r7, #38]
 5506              	.L194:
1388:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Translat
 5507              		.loc 1 1388 0 is_stmt 0 discriminator 1
 5508 012c 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 5509 0130 042B     		cmp	r3, #4
 5510 0132 DDD9     		bls	.L195
 5511              	.LBE38:
 5512 0134 69E0     		b	.L196
 5513              	.L190:
 5514              	.LBB39:
1390:.\AdvantageImpl.c ****                     
1391:.\AdvantageImpl.c ****             }
1392:.\AdvantageImpl.c ****             else
1393:.\AdvantageImpl.c ****             {
1394:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xE3;
 5515              		.loc 1 1394 0 is_stmt 1
 5516 0136 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5517 013a 5A1C     		adds	r2, r3, #1
 5518 013c 87F82720 		strb	r2, [r7, #39]
 5519 0140 1A46     		mov	r2, r3
 5520 0142 FB69     		ldr	r3, [r7, #28]
 5521 0144 1344     		add	r3, r3, r2
 5522 0146 E322     		movs	r2, #227
 5523 0148 1A71     		strb	r2, [r3, #4]
1395:.\AdvantageImpl.c ****                 
1396:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0004 INDEX POSITION WITHIN THE PUMP'S BUFF
1397:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1398:.\AdvantageImpl.c ****                 uint8 transtype = 0xF1;//preset type (0xF2 = Money, 0xF1 = Volume)
 5524              		.loc 1 1398 0
 5525 014a F123     		movs	r3, #241
 5526 014c FB74     		strb	r3, [r7, #19]
1399:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = transtype;//preset type (0xF2 = Money, 0xF1 = Volu
 5527              		.loc 1 1399 0
 5528 014e 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5529 0152 5A1C     		adds	r2, r3, #1
 5530 0154 87F82720 		strb	r2, [r7, #39]
 5531 0158 1A46     		mov	r2, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 123


 5532 015a FB69     		ldr	r3, [r7, #28]
 5533 015c 1344     		add	r3, r3, r2
 5534 015e FA7C     		ldrb	r2, [r7, #19]
 5535 0160 1A71     		strb	r2, [r3, #4]
1400:.\AdvantageImpl.c ****                 
1401:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xF8; //Preset Data next
 5536              		.loc 1 1401 0
 5537 0162 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5538 0166 5A1C     		adds	r2, r3, #1
 5539 0168 87F82720 		strb	r2, [r7, #39]
 5540 016c 1A46     		mov	r2, r3
 5541 016e FB69     		ldr	r3, [r7, #28]
 5542 0170 1344     		add	r3, r3, r2
 5543 0172 F822     		movs	r2, #248
 5544 0174 1A71     		strb	r2, [r3, #4]
1402:.\AdvantageImpl.c ****                 //Here we copy the remaining 8 bytes for the preset value
1403:.\AdvantageImpl.c ****                 ///THIS IS AN APPLIED CONVENTION ===>> 0x0008 INDEX POSITION WITHIN THE PUMP'S BUFF
1404:.\AdvantageImpl.c ****                 ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1405:.\AdvantageImpl.c ****                 char8 *ptr = &ppump->_trasactionbuffer[0x0008];
 5545              		.loc 1 1405 0
 5546 0176 3B6A     		ldr	r3, [r7, #32]
 5547 0178 2833     		adds	r3, r3, #40
 5548 017a FB60     		str	r3, [r7, #12]
1406:.\AdvantageImpl.c ****                 //B78AD90CF552D9B30A(_PUMP_MAXIMUM_PRESET_6_DIGITS_, (LPRAWPTR)ptr);
1407:.\AdvantageImpl.c ****                 B78AD90CF552D9B30A(_PUMP_MAXIMUM_PRESET_GALLONS_, (LPRAWPTR)ptr);
 5549              		.loc 1 1407 0
 5550 017c 4FF4FA70 		mov	r0, #500
 5551 0180 4FF00001 		mov	r1, #0
 5552 0184 FA68     		ldr	r2, [r7, #12]
 5553 0186 FFF7FEFF 		bl	B78AD90CF552D9B30A
1408:.\AdvantageImpl.c **** 
1409:.\AdvantageImpl.c ****                 PSTRBUFFTOGG(PBYTECAST(&ppump->_trasactionbuffer[0x0008]), 0x08);
 5554              		.loc 1 1409 0
 5555 018a 3B6A     		ldr	r3, [r7, #32]
 5556 018c 2833     		adds	r3, r3, #40
 5557 018e 1846     		mov	r0, r3
 5558 0190 0821     		movs	r1, #8
 5559 0192 FFF7FEFF 		bl	PSTRBUFFTOGG
1410:.\AdvantageImpl.c ****                 if(transtype == 0xF1) //Volume PRESET, then multiply by 1000
 5560              		.loc 1 1410 0
 5561 0196 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 5562 0198 F12B     		cmp	r3, #241
 5563 019a 04D1     		bne	.L197
1411:.\AdvantageImpl.c ****                     CastVolumeValue(ptr, 0x08);
 5564              		.loc 1 1411 0
 5565 019c F868     		ldr	r0, [r7, #12]
 5566 019e 0821     		movs	r1, #8
 5567 01a0 FFF7FEFF 		bl	CastVolumeValue
 5568 01a4 0BE0     		b	.L198
 5569              	.L197:
1412:.\AdvantageImpl.c ****                 else if(!(_g_dispenserlayoutinfo._moneydecimals == 0x03 && _g_dispenserlayoutinfo._
 5570              		.loc 1 1412 0
 5571 01a6 324B     		ldr	r3, .L202
 5572 01a8 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 5573 01aa 032B     		cmp	r3, #3
 5574 01ac 03D1     		bne	.L199
 5575              		.loc 1 1412 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 124


 5576 01ae 304B     		ldr	r3, .L202
 5577 01b0 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 5578 01b2 022B     		cmp	r3, #2
 5579 01b4 03D0     		beq	.L198
 5580              	.L199:
1413:.\AdvantageImpl.c ****                     CastMoneyValue(ptr, 0x08);
 5581              		.loc 1 1413 0 is_stmt 1
 5582 01b6 F868     		ldr	r0, [r7, #12]
 5583 01b8 0821     		movs	r1, #8
 5584 01ba FFF7FEFF 		bl	CastMoneyValue
 5585              	.L198:
1414:.\AdvantageImpl.c **** 
1415:.\AdvantageImpl.c ****                 FOR(uint8 buffndx = 0, buffndx < 0x08, buffndx++)
 5586              		.loc 1 1415 0
 5587 01be 0023     		movs	r3, #0
 5588 01c0 87F82530 		strb	r3, [r7, #37]
 5589 01c4 1DE0     		b	.L200
 5590              	.L201:
1416:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Translat
 5591              		.loc 1 1416 0 discriminator 3
 5592 01c6 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5593 01ca 5A1C     		adds	r2, r3, #1
 5594 01cc 87F82720 		strb	r2, [r7, #39]
 5595 01d0 1946     		mov	r1, r3
 5596 01d2 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 5597 01d6 C3F10703 		rsb	r3, r3, #7
 5598 01da 1A46     		mov	r2, r3
 5599 01dc FB68     		ldr	r3, [r7, #12]
 5600 01de 1344     		add	r3, r3, r2
 5601 01e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5602 01e2 DBB2     		uxtb	r3, r3
 5603 01e4 03F00F03 		and	r3, r3, #15
 5604 01e8 DBB2     		uxtb	r3, r3
 5605 01ea 63F01F03 		orn	r3, r3, #31
 5606 01ee DBB2     		uxtb	r3, r3
 5607 01f0 DAB2     		uxtb	r2, r3
 5608 01f2 FB69     		ldr	r3, [r7, #28]
 5609 01f4 0B44     		add	r3, r3, r1
 5610 01f6 1A71     		strb	r2, [r3, #4]
1415:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Translat
 5611              		.loc 1 1415 0 discriminator 3
 5612 01f8 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 5613 01fc 0133     		adds	r3, r3, #1
 5614 01fe 87F82530 		strb	r3, [r7, #37]
 5615              	.L200:
1415:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (ptr[7 - buffndx] & 0x0F)); //Translat
 5616              		.loc 1 1415 0 is_stmt 0 discriminator 1
 5617 0202 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 5618 0206 072B     		cmp	r3, #7
 5619 0208 DDD9     		bls	.L201
 5620              	.L196:
 5621              	.LBE39:
1417:.\AdvantageImpl.c ****             }
1418:.\AdvantageImpl.c ****             ppump->_presetdone = true;
 5622              		.loc 1 1418 0 is_stmt 1
 5623 020a 3B6A     		ldr	r3, [r7, #32]
 5624 020c 0122     		movs	r2, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 125


 5625 020e 1A72     		strb	r2, [r3, #8]
1419:.\AdvantageImpl.c **** 
1420:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = 0xFB; //LRC next
 5626              		.loc 1 1420 0
 5627 0210 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5628 0214 5A1C     		adds	r2, r3, #1
 5629 0216 87F82720 		strb	r2, [r7, #39]
 5630 021a 1A46     		mov	r2, r3
 5631 021c FB69     		ldr	r3, [r7, #28]
 5632 021e 1344     		add	r3, r3, r2
 5633 0220 FB22     		movs	r2, #251
 5634 0222 1A71     		strb	r2, [r3, #4]
1421:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = GetLRC(puartdisp->_messagetx);
 5635              		.loc 1 1421 0
 5636 0224 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5637 0228 5A1C     		adds	r2, r3, #1
 5638 022a 87F82720 		strb	r2, [r7, #39]
 5639 022e 1C46     		mov	r4, r3
 5640 0230 FB69     		ldr	r3, [r7, #28]
 5641 0232 0433     		adds	r3, r3, #4
 5642 0234 1846     		mov	r0, r3
 5643 0236 FFF7FEFF 		bl	GetLRC
 5644 023a 0346     		mov	r3, r0
 5645 023c 1A46     		mov	r2, r3
 5646 023e FB69     		ldr	r3, [r7, #28]
 5647 0240 2344     		add	r3, r3, r4
 5648 0242 1A71     		strb	r2, [r3, #4]
1422:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = EOM;
 5649              		.loc 1 1422 0
 5650 0244 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5651 0248 5A1C     		adds	r2, r3, #1
 5652 024a 87F82720 		strb	r2, [r7, #39]
 5653 024e 1A46     		mov	r2, r3
 5654 0250 FB69     		ldr	r3, [r7, #28]
 5655 0252 1344     		add	r3, r3, r2
 5656 0254 F022     		movs	r2, #240
 5657 0256 1A71     		strb	r2, [r3, #4]
1423:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
1424:.\AdvantageImpl.c ****             
1425:.\AdvantageImpl.c ****             puartdisp->_messagelength = index;
 5658              		.loc 1 1425 0
 5659 0258 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 5660 025c 9AB2     		uxth	r2, r3
 5661 025e FB69     		ldr	r3, [r7, #28]
 5662 0260 5A80     		strh	r2, [r3, #2]	@ movhi
1426:.\AdvantageImpl.c ****             puartdisp->_messagestate = PENDING;
 5663              		.loc 1 1426 0
 5664 0262 FB69     		ldr	r3, [r7, #28]
 5665 0264 C222     		movs	r2, #194
 5666 0266 1A70     		strb	r2, [r3]
 5667              	.L188:
 5668              	.LBE37:
1427:.\AdvantageImpl.c ****         }
1428:.\AdvantageImpl.c ****     }
1429:.\AdvantageImpl.c ****     
1430:.\AdvantageImpl.c **** }
 5669              		.loc 1 1430 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 126


 5670 0268 2C37     		adds	r7, r7, #44
 5671              		.cfi_def_cfa_offset 12
 5672 026a BD46     		mov	sp, r7
 5673              		.cfi_def_cfa_register 13
 5674              		@ sp needed
 5675 026c 90BD     		pop	{r4, r7, pc}
 5676              	.L203:
 5677 026e 00BF     		.align	2
 5678              	.L202:
 5679 0270 00000000 		.word	_g_dispenserlayoutinfo
 5680              		.cfi_endproc
 5681              	.LFE84:
 5682              		.size	PumpFullPresetNoHose, .-PumpFullPresetNoHose
 5683              		.section	.text.PumpPpuChange,"ax",%progbits
 5684              		.align	2
 5685              		.global	PumpPpuChange
 5686              		.thumb
 5687              		.thumb_func
 5688              		.type	PumpPpuChange, %function
 5689              	PumpPpuChange:
 5690              	.LFB85:
1431:.\AdvantageImpl.c **** 
1432:.\AdvantageImpl.c **** //@Created By: HIJH
1433:.\AdvantageImpl.c **** //@Septembre de 2016
1434:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
1435:.\AdvantageImpl.c **** //PPU value will be placed within the SinkMessage's buffer. This is a convention that applies to 
1436:.\AdvantageImpl.c **** //all of the available transactions. The pump function must deal with this while it is assembling t
1437:.\AdvantageImpl.c **** //For this message the data comes as follows:
1438:.\AdvantageImpl.c **** // - First byte is the Hose (A:0, B:1, C:2, D:3)
1439:.\AdvantageImpl.c **** // - Block of 6 bytes for the PPU value
1440:.\AdvantageImpl.c **** //This block of data (6 bytes) must be moved to another position within the same buffer (even posit
1441:.\AdvantageImpl.c **** void PumpPpuChange(void *pparam)
1442:.\AdvantageImpl.c **** {
 5691              		.loc 1 1442 0
 5692              		.cfi_startproc
 5693              		@ args = 0, pretend = 0, frame = 32
 5694              		@ frame_needed = 1, uses_anonymous_args = 0
 5695 0000 B0B5     		push	{r4, r5, r7, lr}
 5696              		.cfi_def_cfa_offset 16
 5697              		.cfi_offset 4, -16
 5698              		.cfi_offset 5, -12
 5699              		.cfi_offset 7, -8
 5700              		.cfi_offset 14, -4
 5701 0002 88B0     		sub	sp, sp, #32
 5702              		.cfi_def_cfa_offset 48
 5703 0004 00AF     		add	r7, sp, #0
 5704              		.cfi_def_cfa_register 7
 5705 0006 7860     		str	r0, [r7, #4]
1443:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 5706              		.loc 1 1443 0
 5707 0008 7B68     		ldr	r3, [r7, #4]
 5708 000a BB61     		str	r3, [r7, #24]
1444:.\AdvantageImpl.c ****     if(ppump)
 5709              		.loc 1 1444 0
 5710 000c BB69     		ldr	r3, [r7, #24]
 5711 000e 002B     		cmp	r3, #0
 5712 0010 00F05281 		beq	.L204
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 127


 5713              	.LBB40:
1445:.\AdvantageImpl.c ****     {
1446:.\AdvantageImpl.c ****         uint8_t index = 0;  
 5714              		.loc 1 1446 0
 5715 0014 0023     		movs	r3, #0
 5716 0016 FB77     		strb	r3, [r7, #31]
1447:.\AdvantageImpl.c ****         memset(ppump->_rxbuffer, 0x00, _PUMP_RX_BUFFER_SIZE_);
 5717              		.loc 1 1447 0
 5718 0018 BB69     		ldr	r3, [r7, #24]
 5719 001a 03F5D073 		add	r3, r3, #416
 5720 001e 1846     		mov	r0, r3
 5721 0020 0021     		movs	r1, #0
 5722 0022 4FF4C072 		mov	r2, #384
 5723 0026 FFF7FEFF 		bl	memset
1448:.\AdvantageImpl.c ****         PUARTMESSAGEPTR puartdisp = GetUARTMessageSlot(UART_DISPENSER);
 5724              		.loc 1 1448 0
 5725 002a A220     		movs	r0, #162
 5726 002c FFF7FEFF 		bl	GetUARTMessageSlot
 5727 0030 7861     		str	r0, [r7, #20]
1449:.\AdvantageImpl.c ****         if(puartdisp)
 5728              		.loc 1 1449 0
 5729 0032 7B69     		ldr	r3, [r7, #20]
 5730 0034 002B     		cmp	r3, #0
 5731 0036 00F03F81 		beq	.L204
 5732              	.LBB41:
1450:.\AdvantageImpl.c ****         {
1451:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
1452:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = SOM;
 5733              		.loc 1 1452 0
 5734 003a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5735 003c 5A1C     		adds	r2, r3, #1
 5736 003e FA77     		strb	r2, [r7, #31]
 5737 0040 1A46     		mov	r2, r3
 5738 0042 7B69     		ldr	r3, [r7, #20]
 5739 0044 1344     		add	r3, r3, r2
 5740 0046 FF22     		movs	r2, #255
 5741 0048 1A71     		strb	r2, [r3, #4]
1453:.\AdvantageImpl.c ****             if(_g_dispenserlayoutinfo._displaydigitsmode == 0x06)
 5742              		.loc 1 1453 0
 5743 004a 9D4B     		ldr	r3, .L220
 5744 004c 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 5745 004e 062B     		cmp	r3, #6
 5746 0050 08D1     		bne	.L206
1454:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xE5;//Standard Price Data
 5747              		.loc 1 1454 0
 5748 0052 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5749 0054 5A1C     		adds	r2, r3, #1
 5750 0056 FA77     		strb	r2, [r7, #31]
 5751 0058 1A46     		mov	r2, r3
 5752 005a 7B69     		ldr	r3, [r7, #20]
 5753 005c 1344     		add	r3, r3, r2
 5754 005e E522     		movs	r2, #229
 5755 0060 1A71     		strb	r2, [r3, #4]
 5756 0062 07E0     		b	.L207
 5757              	.L206:
1455:.\AdvantageImpl.c ****             else
1456:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xE3;//Long Price Data - Extended Two-Wire Mode
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 128


 5758              		.loc 1 1456 0
 5759 0064 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5760 0066 5A1C     		adds	r2, r3, #1
 5761 0068 FA77     		strb	r2, [r7, #31]
 5762 006a 1A46     		mov	r2, r3
 5763 006c 7B69     		ldr	r3, [r7, #20]
 5764 006e 1344     		add	r3, r3, r2
 5765 0070 E322     		movs	r2, #227
 5766 0072 1A71     		strb	r2, [r3, #4]
 5767              	.L207:
1457:.\AdvantageImpl.c ****                 
1458:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = 0xF4;
 5768              		.loc 1 1458 0
 5769 0074 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5770 0076 5A1C     		adds	r2, r3, #1
 5771 0078 FA77     		strb	r2, [r7, #31]
 5772 007a 1A46     		mov	r2, r3
 5773 007c 7B69     		ldr	r3, [r7, #20]
 5774 007e 1344     		add	r3, r3, r2
 5775 0080 F422     		movs	r2, #244
 5776 0082 1A71     		strb	r2, [r3, #4]
1459:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = 0xF6; //Hose Data next
 5777              		.loc 1 1459 0
 5778 0084 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5779 0086 5A1C     		adds	r2, r3, #1
 5780 0088 FA77     		strb	r2, [r7, #31]
 5781 008a 1A46     		mov	r2, r3
 5782 008c 7B69     		ldr	r3, [r7, #20]
 5783 008e 1344     		add	r3, r3, r2
 5784 0090 F622     		movs	r2, #246
 5785 0092 1A71     		strb	r2, [r3, #4]
1460:.\AdvantageImpl.c ****             ///THIS IS AN APPLIED CONVENTION ===>> 0x0006 INDEX POSITION WITHIN THE PUMP'S BUFFER P
1461:.\AdvantageImpl.c ****             ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1462:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ppump->_currenthose));
 5786              		.loc 1 1462 0
 5787 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5788 0096 5A1C     		adds	r2, r3, #1
 5789 0098 FA77     		strb	r2, [r7, #31]
 5790 009a 1946     		mov	r1, r3
 5791 009c BB69     		ldr	r3, [r7, #24]
 5792 009e DB78     		ldrb	r3, [r3, #3]
 5793 00a0 DBB2     		uxtb	r3, r3
 5794 00a2 03F00F03 		and	r3, r3, #15
 5795 00a6 DBB2     		uxtb	r3, r3
 5796 00a8 63F01F03 		orn	r3, r3, #31
 5797 00ac DAB2     		uxtb	r2, r3
 5798 00ae 7B69     		ldr	r3, [r7, #20]
 5799 00b0 0B44     		add	r3, r3, r1
 5800 00b2 1A71     		strb	r2, [r3, #4]
1463:.\AdvantageImpl.c ****             
1464:.\AdvantageImpl.c ****             I2CBusLock();
 5801              		.loc 1 1464 0
 5802 00b4 FFF7FEFF 		bl	I2CBusLock
1465:.\AdvantageImpl.c ****             ClearEepromBuffer();
 5803              		.loc 1 1465 0
 5804 00b8 FFF7FEFF 		bl	ClearEepromBuffer
1466:.\AdvantageImpl.c ****             uint16 eeprompage = DispenserGetEepromPPUPageFromPumpID(ppump->_pumpid);
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 129


 5805              		.loc 1 1466 0
 5806 00bc BB69     		ldr	r3, [r7, #24]
 5807 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5808 00c0 1846     		mov	r0, r3
 5809 00c2 FFF7FEFF 		bl	DispenserGetEepromPPUPageFromPumpID
 5810 00c6 0346     		mov	r3, r0
 5811 00c8 7B82     		strh	r3, [r7, #18]	@ movhi
1467:.\AdvantageImpl.c ****             LoadEepromPage(eeprompage);
 5812              		.loc 1 1467 0
 5813 00ca 7B8A     		ldrh	r3, [r7, #18]
 5814 00cc 1846     		mov	r0, r3
 5815 00ce FFF7FEFF 		bl	LoadEepromPage
1468:.\AdvantageImpl.c ****             switch(ppump->_currenthose)
 5816              		.loc 1 1468 0
 5817 00d2 BB69     		ldr	r3, [r7, #24]
 5818 00d4 DB78     		ldrb	r3, [r3, #3]
 5819 00d6 DBB2     		uxtb	r3, r3
 5820 00d8 032B     		cmp	r3, #3
 5821 00da 61D8     		bhi	.L208
 5822 00dc 01A2     		adr	r2, .L210
 5823 00de 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5824 00e2 00BF     		.p2align 2
 5825              	.L210:
 5826 00e4 F5000000 		.word	.L209+1
 5827 00e8 1D010000 		.word	.L211+1
 5828 00ec 49010000 		.word	.L212+1
 5829 00f0 75010000 		.word	.L213+1
 5830              		.p2align 1
 5831              	.L209:
1469:.\AdvantageImpl.c ****             {
1470:.\AdvantageImpl.c ****                 case 0x00:
1471:.\AdvantageImpl.c ****                 //Six bytes only since the PPU is constrained to this length
1472:.\AdvantageImpl.c ****                 memcpy(PBYTECAST(&ppump->_trasactionbuffer[GetBufferIndexFromDisplayID(DISPLAY_PREC
 5832              		.loc 1 1472 0
 5833 00f4 6520     		movs	r0, #101
 5834 00f6 FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 5835 00fa 0346     		mov	r3, r0
 5836 00fc 2033     		adds	r3, r3, #32
 5837 00fe BA69     		ldr	r2, [r7, #24]
 5838 0100 D418     		adds	r4, r2, r3
 5839 0102 FFF7FEFF 		bl	GetEepromBuffer
 5840 0106 0546     		mov	r5, r0
 5841 0108 6520     		movs	r0, #101
 5842 010a FFF7FEFF 		bl	GetBufferLengthFromDisplayID
 5843 010e 0346     		mov	r3, r0
 5844 0110 2046     		mov	r0, r4
 5845 0112 2946     		mov	r1, r5
 5846 0114 1A46     		mov	r2, r3
 5847 0116 FFF7FEFF 		bl	memcpy
1473:.\AdvantageImpl.c ****                 break;
 5848              		.loc 1 1473 0
 5849 011a 41E0     		b	.L208
 5850              	.L211:
1474:.\AdvantageImpl.c ****                 case 0x01:
1475:.\AdvantageImpl.c ****                 //Six bytes only since the PPU is constrained to this length
1476:.\AdvantageImpl.c ****                 memcpy(PBYTECAST(&ppump->_trasactionbuffer[GetBufferIndexFromDisplayID(DISPLAY_PREC
 5851              		.loc 1 1476 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 130


 5852 011c 6520     		movs	r0, #101
 5853 011e FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 5854 0122 0346     		mov	r3, r0
 5855 0124 2033     		adds	r3, r3, #32
 5856 0126 BA69     		ldr	r2, [r7, #24]
 5857 0128 D518     		adds	r5, r2, r3
 5858 012a FFF7FEFF 		bl	GetEepromBuffer
 5859 012e 0346     		mov	r3, r0
 5860 0130 03F11004 		add	r4, r3, #16
 5861 0134 6520     		movs	r0, #101
 5862 0136 FFF7FEFF 		bl	GetBufferLengthFromDisplayID
 5863 013a 0346     		mov	r3, r0
 5864 013c 2846     		mov	r0, r5
 5865 013e 2146     		mov	r1, r4
 5866 0140 1A46     		mov	r2, r3
 5867 0142 FFF7FEFF 		bl	memcpy
1477:.\AdvantageImpl.c ****                 break;
 5868              		.loc 1 1477 0
 5869 0146 2BE0     		b	.L208
 5870              	.L212:
1478:.\AdvantageImpl.c ****                 case 0x02:
1479:.\AdvantageImpl.c ****                 //Six bytes only since the PPU is constrained to this length
1480:.\AdvantageImpl.c ****                 memcpy(PBYTECAST(&ppump->_trasactionbuffer[GetBufferIndexFromDisplayID(DISPLAY_PREC
 5871              		.loc 1 1480 0
 5872 0148 6520     		movs	r0, #101
 5873 014a FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 5874 014e 0346     		mov	r3, r0
 5875 0150 2033     		adds	r3, r3, #32
 5876 0152 BA69     		ldr	r2, [r7, #24]
 5877 0154 D518     		adds	r5, r2, r3
 5878 0156 FFF7FEFF 		bl	GetEepromBuffer
 5879 015a 0346     		mov	r3, r0
 5880 015c 03F12004 		add	r4, r3, #32
 5881 0160 6520     		movs	r0, #101
 5882 0162 FFF7FEFF 		bl	GetBufferLengthFromDisplayID
 5883 0166 0346     		mov	r3, r0
 5884 0168 2846     		mov	r0, r5
 5885 016a 2146     		mov	r1, r4
 5886 016c 1A46     		mov	r2, r3
 5887 016e FFF7FEFF 		bl	memcpy
1481:.\AdvantageImpl.c ****                 break;
 5888              		.loc 1 1481 0
 5889 0172 15E0     		b	.L208
 5890              	.L213:
1482:.\AdvantageImpl.c ****                 case 0x03:
1483:.\AdvantageImpl.c ****                 //Six bytes only since the PPU is constrained to this length
1484:.\AdvantageImpl.c ****                 memcpy(PBYTECAST(&ppump->_trasactionbuffer[GetBufferIndexFromDisplayID(DISPLAY_PREC
 5891              		.loc 1 1484 0
 5892 0174 6520     		movs	r0, #101
 5893 0176 FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 5894 017a 0346     		mov	r3, r0
 5895 017c 2033     		adds	r3, r3, #32
 5896 017e BA69     		ldr	r2, [r7, #24]
 5897 0180 D518     		adds	r5, r2, r3
 5898 0182 FFF7FEFF 		bl	GetEepromBuffer
 5899 0186 0346     		mov	r3, r0
 5900 0188 03F13004 		add	r4, r3, #48
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 131


 5901 018c 6520     		movs	r0, #101
 5902 018e FFF7FEFF 		bl	GetBufferLengthFromDisplayID
 5903 0192 0346     		mov	r3, r0
 5904 0194 2846     		mov	r0, r5
 5905 0196 2146     		mov	r1, r4
 5906 0198 1A46     		mov	r2, r3
 5907 019a FFF7FEFF 		bl	memcpy
1485:.\AdvantageImpl.c ****                 break;
 5908              		.loc 1 1485 0
 5909 019e 00BF     		nop
 5910              	.L208:
1486:.\AdvantageImpl.c ****             }
1487:.\AdvantageImpl.c ****             I2CBusUnlock();
 5911              		.loc 1 1487 0
 5912 01a0 FFF7FEFF 		bl	I2CBusUnlock
1488:.\AdvantageImpl.c **** 
1489:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = 0xF7; //PPU Data next            
 5913              		.loc 1 1489 0
 5914 01a4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5915 01a6 5A1C     		adds	r2, r3, #1
 5916 01a8 FA77     		strb	r2, [r7, #31]
 5917 01aa 1A46     		mov	r2, r3
 5918 01ac 7B69     		ldr	r3, [r7, #20]
 5919 01ae 1344     		add	r3, r3, r2
 5920 01b0 F722     		movs	r2, #247
 5921 01b2 1A71     		strb	r2, [r3, #4]
1490:.\AdvantageImpl.c ****             //Here we copy the remaining 6 bytes for the preset value
1491:.\AdvantageImpl.c ****             ///THIS IS AN APPLIED CONVENTION ===>> 0x0008 INDEX POSITION WITHIN THE PUMP'S BUFFER P
1492:.\AdvantageImpl.c ****             ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1493:.\AdvantageImpl.c ****             uint8 bufferlength = GetBufferLengthFromDisplayID(DISPLAY_PRECIO_POR_UNIDAD);
 5922              		.loc 1 1493 0
 5923 01b4 6520     		movs	r0, #101
 5924 01b6 FFF7FEFF 		bl	GetBufferLengthFromDisplayID
 5925 01ba 0346     		mov	r3, r0
 5926 01bc 7B74     		strb	r3, [r7, #17]
1494:.\AdvantageImpl.c ****             char8 *ptr = &ppump->_trasactionbuffer[GetBufferIndexFromDisplayID(DISPLAY_PRECIO_POR_U
 5927              		.loc 1 1494 0
 5928 01be 6520     		movs	r0, #101
 5929 01c0 FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 5930 01c4 0346     		mov	r3, r0
 5931 01c6 2033     		adds	r3, r3, #32
 5932 01c8 BA69     		ldr	r2, [r7, #24]
 5933 01ca 1344     		add	r3, r3, r2
 5934 01cc FB60     		str	r3, [r7, #12]
1495:.\AdvantageImpl.c ****             
1496:.\AdvantageImpl.c ****             if(_g_dispenserlayoutinfo._displaydigitsmode == 0x06)
 5935              		.loc 1 1496 0
 5936 01ce 3C4B     		ldr	r3, .L220
 5937 01d0 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 5938 01d2 062B     		cmp	r3, #6
 5939 01d4 1AD1     		bne	.L214
 5940              	.LBB42:
1497:.\AdvantageImpl.c ****             {
1498:.\AdvantageImpl.c ****                 FOR(uint8 buffndx = 0, buffndx < 4, buffndx++)//Standard Price Data
 5941              		.loc 1 1498 0
 5942 01d6 0023     		movs	r3, #0
 5943 01d8 BB77     		strb	r3, [r7, #30]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 132


 5944 01da 13E0     		b	.L215
 5945              	.L216:
1499:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ptr[buffndx])); //Translate fr
 5946              		.loc 1 1499 0 discriminator 3
 5947 01dc FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5948 01de 5A1C     		adds	r2, r3, #1
 5949 01e0 FA77     		strb	r2, [r7, #31]
 5950 01e2 1946     		mov	r1, r3
 5951 01e4 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 5952 01e6 FA68     		ldr	r2, [r7, #12]
 5953 01e8 1344     		add	r3, r3, r2
 5954 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5955 01ec 03F00F03 		and	r3, r3, #15
 5956 01f0 DBB2     		uxtb	r3, r3
 5957 01f2 63F01F03 		orn	r3, r3, #31
 5958 01f6 DAB2     		uxtb	r2, r3
 5959 01f8 7B69     		ldr	r3, [r7, #20]
 5960 01fa 0B44     		add	r3, r3, r1
 5961 01fc 1A71     		strb	r2, [r3, #4]
1498:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ptr[buffndx])); //Translate fr
 5962              		.loc 1 1498 0 discriminator 3
 5963 01fe BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 5964 0200 0133     		adds	r3, r3, #1
 5965 0202 BB77     		strb	r3, [r7, #30]
 5966              	.L215:
1498:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ptr[buffndx])); //Translate fr
 5967              		.loc 1 1498 0 is_stmt 0 discriminator 1
 5968 0204 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 5969 0206 032B     		cmp	r3, #3
 5970 0208 E8D9     		bls	.L216
 5971              	.LBE42:
 5972 020a 19E0     		b	.L217
 5973              	.L214:
 5974              	.LBB43:
1500:.\AdvantageImpl.c ****             }
1501:.\AdvantageImpl.c ****             else
1502:.\AdvantageImpl.c ****             {
1503:.\AdvantageImpl.c ****                 FOR(uint8 buffndx = 0, buffndx < 6, buffndx++)//Long Price Data - Extended Two-Wire
 5975              		.loc 1 1503 0 is_stmt 1
 5976 020c 0023     		movs	r3, #0
 5977 020e 7B77     		strb	r3, [r7, #29]
 5978 0210 13E0     		b	.L218
 5979              	.L219:
1504:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ptr[buffndx])); //Translate fr
 5980              		.loc 1 1504 0 discriminator 3
 5981 0212 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 5982 0214 5A1C     		adds	r2, r3, #1
 5983 0216 FA77     		strb	r2, [r7, #31]
 5984 0218 1946     		mov	r1, r3
 5985 021a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 5986 021c FA68     		ldr	r2, [r7, #12]
 5987 021e 1344     		add	r3, r3, r2
 5988 0220 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5989 0222 03F00F03 		and	r3, r3, #15
 5990 0226 DBB2     		uxtb	r3, r3
 5991 0228 63F01F03 		orn	r3, r3, #31
 5992 022c DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 133


 5993 022e 7B69     		ldr	r3, [r7, #20]
 5994 0230 0B44     		add	r3, r3, r1
 5995 0232 1A71     		strb	r2, [r3, #4]
1503:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ptr[buffndx])); //Translate fr
 5996              		.loc 1 1503 0 discriminator 3
 5997 0234 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 5998 0236 0133     		adds	r3, r3, #1
 5999 0238 7B77     		strb	r3, [r7, #29]
 6000              	.L218:
1503:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ptr[buffndx])); //Translate fr
 6001              		.loc 1 1503 0 is_stmt 0 discriminator 1
 6002 023a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 6003 023c 052B     		cmp	r3, #5
 6004 023e E8D9     		bls	.L219
 6005              	.L217:
 6006              	.LBE43:
1505:.\AdvantageImpl.c ****             }
1506:.\AdvantageImpl.c **** 
1507:.\AdvantageImpl.c ****             memset(&ppump->_trasactionbuffer[GetBufferIndexFromDisplayID(DISPLAY_PRECIO_POR_UNIDAD)
 6007              		.loc 1 1507 0 is_stmt 1
 6008 0240 6520     		movs	r0, #101
 6009 0242 FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 6010 0246 0346     		mov	r3, r0
 6011 0248 2033     		adds	r3, r3, #32
 6012 024a BA69     		ldr	r2, [r7, #24]
 6013 024c D418     		adds	r4, r2, r3
 6014 024e 6520     		movs	r0, #101
 6015 0250 FFF7FEFF 		bl	GetBufferLengthFromDisplayID
 6016 0254 0346     		mov	r3, r0
 6017 0256 2046     		mov	r0, r4
 6018 0258 0021     		movs	r1, #0
 6019 025a 1A46     		mov	r2, r3
 6020 025c FFF7FEFF 		bl	memset
1508:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = 0xFB; //LRC next
 6021              		.loc 1 1508 0
 6022 0260 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 6023 0262 5A1C     		adds	r2, r3, #1
 6024 0264 FA77     		strb	r2, [r7, #31]
 6025 0266 1A46     		mov	r2, r3
 6026 0268 7B69     		ldr	r3, [r7, #20]
 6027 026a 1344     		add	r3, r3, r2
 6028 026c FB22     		movs	r2, #251
 6029 026e 1A71     		strb	r2, [r3, #4]
1509:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = GetLRC(puartdisp->_messagetx);
 6030              		.loc 1 1509 0
 6031 0270 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 6032 0272 5A1C     		adds	r2, r3, #1
 6033 0274 FA77     		strb	r2, [r7, #31]
 6034 0276 1C46     		mov	r4, r3
 6035 0278 7B69     		ldr	r3, [r7, #20]
 6036 027a 0433     		adds	r3, r3, #4
 6037 027c 1846     		mov	r0, r3
 6038 027e FFF7FEFF 		bl	GetLRC
 6039 0282 0346     		mov	r3, r0
 6040 0284 1A46     		mov	r2, r3
 6041 0286 7B69     		ldr	r3, [r7, #20]
 6042 0288 2344     		add	r3, r3, r4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 134


 6043 028a 1A71     		strb	r2, [r3, #4]
1510:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = EOM;
 6044              		.loc 1 1510 0
 6045 028c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 6046 028e 5A1C     		adds	r2, r3, #1
 6047 0290 FA77     		strb	r2, [r7, #31]
 6048 0292 1A46     		mov	r2, r3
 6049 0294 7B69     		ldr	r3, [r7, #20]
 6050 0296 1344     		add	r3, r3, r2
 6051 0298 F022     		movs	r2, #240
 6052 029a 1A71     		strb	r2, [r3, #4]
1511:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
1512:.\AdvantageImpl.c ****             
1513:.\AdvantageImpl.c ****             puartdisp->_messagelength = index;
 6053              		.loc 1 1513 0
 6054 029c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 6055 029e 9AB2     		uxth	r2, r3
 6056 02a0 7B69     		ldr	r3, [r7, #20]
 6057 02a2 5A80     		strh	r2, [r3, #2]	@ movhi
1514:.\AdvantageImpl.c ****             puartdisp->_messagestate = PENDING;
 6058              		.loc 1 1514 0
 6059 02a4 7B69     		ldr	r3, [r7, #20]
 6060 02a6 C222     		movs	r2, #194
 6061 02a8 1A70     		strb	r2, [r3]
1515:.\AdvantageImpl.c ****             
1516:.\AdvantageImpl.c ****             ppump->_currenthose++;
 6062              		.loc 1 1516 0
 6063 02aa BB69     		ldr	r3, [r7, #24]
 6064 02ac DB78     		ldrb	r3, [r3, #3]
 6065 02ae DBB2     		uxtb	r3, r3
 6066 02b0 0133     		adds	r3, r3, #1
 6067 02b2 DAB2     		uxtb	r2, r3
 6068 02b4 BB69     		ldr	r3, [r7, #24]
 6069 02b6 DA70     		strb	r2, [r3, #3]
 6070              	.L204:
 6071              	.LBE41:
 6072              	.LBE40:
1517:.\AdvantageImpl.c ****         }
1518:.\AdvantageImpl.c ****     }    
1519:.\AdvantageImpl.c **** }
 6073              		.loc 1 1519 0
 6074 02b8 2037     		adds	r7, r7, #32
 6075              		.cfi_def_cfa_offset 16
 6076 02ba BD46     		mov	sp, r7
 6077              		.cfi_def_cfa_register 13
 6078              		@ sp needed
 6079 02bc B0BD     		pop	{r4, r5, r7, pc}
 6080              	.L221:
 6081 02be 00BF     		.align	2
 6082              	.L220:
 6083 02c0 00000000 		.word	_g_dispenserlayoutinfo
 6084              		.cfi_endproc
 6085              	.LFE85:
 6086              		.size	PumpPpuChange, .-PumpPpuChange
 6087              		.section	.text.PumpDefault2CreditPpuChange,"ax",%progbits
 6088              		.align	2
 6089              		.global	PumpDefault2CreditPpuChange
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 135


 6090              		.thumb
 6091              		.thumb_func
 6092              		.type	PumpDefault2CreditPpuChange, %function
 6093              	PumpDefault2CreditPpuChange:
 6094              	.LFB86:
1520:.\AdvantageImpl.c **** 
1521:.\AdvantageImpl.c **** void PumpDefault2CreditPpuChange(void *pparam)
1522:.\AdvantageImpl.c **** {
 6095              		.loc 1 1522 0
 6096              		.cfi_startproc
 6097              		@ args = 0, pretend = 0, frame = 24
 6098              		@ frame_needed = 1, uses_anonymous_args = 0
 6099 0000 90B5     		push	{r4, r7, lr}
 6100              		.cfi_def_cfa_offset 12
 6101              		.cfi_offset 4, -12
 6102              		.cfi_offset 7, -8
 6103              		.cfi_offset 14, -4
 6104 0002 87B0     		sub	sp, sp, #28
 6105              		.cfi_def_cfa_offset 40
 6106 0004 00AF     		add	r7, sp, #0
 6107              		.cfi_def_cfa_register 7
 6108 0006 7860     		str	r0, [r7, #4]
1523:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 6109              		.loc 1 1523 0
 6110 0008 7B68     		ldr	r3, [r7, #4]
 6111 000a 3B61     		str	r3, [r7, #16]
1524:.\AdvantageImpl.c ****     if(ppump)
 6112              		.loc 1 1524 0
 6113 000c 3B69     		ldr	r3, [r7, #16]
 6114 000e 002B     		cmp	r3, #0
 6115 0010 00F0C980 		beq	.L222
 6116              	.LBB44:
1525:.\AdvantageImpl.c ****     {
1526:.\AdvantageImpl.c ****         uint8_t index = 0;  
 6117              		.loc 1 1526 0
 6118 0014 0023     		movs	r3, #0
 6119 0016 FB75     		strb	r3, [r7, #23]
1527:.\AdvantageImpl.c ****         memset(ppump->_rxbuffer, 0x00, _PUMP_RX_BUFFER_SIZE_);
 6120              		.loc 1 1527 0
 6121 0018 3B69     		ldr	r3, [r7, #16]
 6122 001a 03F5D073 		add	r3, r3, #416
 6123 001e 1846     		mov	r0, r3
 6124 0020 0021     		movs	r1, #0
 6125 0022 4FF4C072 		mov	r2, #384
 6126 0026 FFF7FEFF 		bl	memset
1528:.\AdvantageImpl.c ****         PUARTMESSAGEPTR puartdisp = GetUARTMessageSlot(UART_DISPENSER);
 6127              		.loc 1 1528 0
 6128 002a A220     		movs	r0, #162
 6129 002c FFF7FEFF 		bl	GetUARTMessageSlot
 6130 0030 F860     		str	r0, [r7, #12]
1529:.\AdvantageImpl.c ****         if(puartdisp)
 6131              		.loc 1 1529 0
 6132 0032 FB68     		ldr	r3, [r7, #12]
 6133 0034 002B     		cmp	r3, #0
 6134 0036 00F0B680 		beq	.L222
 6135              	.LBB45:
1530:.\AdvantageImpl.c ****         {
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 136


1531:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
1532:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = SOM;
 6136              		.loc 1 1532 0
 6137 003a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6138 003c 5A1C     		adds	r2, r3, #1
 6139 003e FA75     		strb	r2, [r7, #23]
 6140 0040 1A46     		mov	r2, r3
 6141 0042 FB68     		ldr	r3, [r7, #12]
 6142 0044 1344     		add	r3, r3, r2
 6143 0046 FF22     		movs	r2, #255
 6144 0048 1A71     		strb	r2, [r3, #4]
1533:.\AdvantageImpl.c ****             if(_g_dispenserlayoutinfo._displaydigitsmode == 0x06)
 6145              		.loc 1 1533 0
 6146 004a 584B     		ldr	r3, .L232
 6147 004c 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 6148 004e 062B     		cmp	r3, #6
 6149 0050 08D1     		bne	.L224
1534:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xE5;//Standard Price Data
 6150              		.loc 1 1534 0
 6151 0052 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6152 0054 5A1C     		adds	r2, r3, #1
 6153 0056 FA75     		strb	r2, [r7, #23]
 6154 0058 1A46     		mov	r2, r3
 6155 005a FB68     		ldr	r3, [r7, #12]
 6156 005c 1344     		add	r3, r3, r2
 6157 005e E522     		movs	r2, #229
 6158 0060 1A71     		strb	r2, [r3, #4]
 6159 0062 07E0     		b	.L225
 6160              	.L224:
1535:.\AdvantageImpl.c ****             else
1536:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xE3;//Long Price Data - Extended Two-Wire Mode
 6161              		.loc 1 1536 0
 6162 0064 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6163 0066 5A1C     		adds	r2, r3, #1
 6164 0068 FA75     		strb	r2, [r7, #23]
 6165 006a 1A46     		mov	r2, r3
 6166 006c FB68     		ldr	r3, [r7, #12]
 6167 006e 1344     		add	r3, r3, r2
 6168 0070 E322     		movs	r2, #227
 6169 0072 1A71     		strb	r2, [r3, #4]
 6170              	.L225:
1537:.\AdvantageImpl.c ****             
1538:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = 0xF4;
 6171              		.loc 1 1538 0
 6172 0074 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6173 0076 5A1C     		adds	r2, r3, #1
 6174 0078 FA75     		strb	r2, [r7, #23]
 6175 007a 1A46     		mov	r2, r3
 6176 007c FB68     		ldr	r3, [r7, #12]
 6177 007e 1344     		add	r3, r3, r2
 6178 0080 F422     		movs	r2, #244
 6179 0082 1A71     		strb	r2, [r3, #4]
1539:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = 0xF6; //Hose Data next
 6180              		.loc 1 1539 0
 6181 0084 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6182 0086 5A1C     		adds	r2, r3, #1
 6183 0088 FA75     		strb	r2, [r7, #23]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 137


 6184 008a 1A46     		mov	r2, r3
 6185 008c FB68     		ldr	r3, [r7, #12]
 6186 008e 1344     		add	r3, r3, r2
 6187 0090 F622     		movs	r2, #246
 6188 0092 1A71     		strb	r2, [r3, #4]
1540:.\AdvantageImpl.c ****             ///THIS IS AN APPLIED CONVENTION ===>> 0x0006 INDEX POSITION WITHIN THE PUMP'S BUFFER P
1541:.\AdvantageImpl.c ****             ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1542:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = (0xE0 | ppump->_authorizationinfo._hoseid);
 6189              		.loc 1 1542 0
 6190 0094 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6191 0096 5A1C     		adds	r2, r3, #1
 6192 0098 FA75     		strb	r2, [r7, #23]
 6193 009a 1946     		mov	r1, r3
 6194 009c 3B69     		ldr	r3, [r7, #16]
 6195 009e 93F8AA3B 		ldrb	r3, [r3, #2986]
 6196 00a2 DBB2     		uxtb	r3, r3
 6197 00a4 63F01F03 		orn	r3, r3, #31
 6198 00a8 DAB2     		uxtb	r2, r3
 6199 00aa FB68     		ldr	r3, [r7, #12]
 6200 00ac 0B44     		add	r3, r3, r1
 6201 00ae 1A71     		strb	r2, [r3, #4]
1543:.\AdvantageImpl.c ****             
1544:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = 0xF7; //PPU Data next            
 6202              		.loc 1 1544 0
 6203 00b0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6204 00b2 5A1C     		adds	r2, r3, #1
 6205 00b4 FA75     		strb	r2, [r7, #23]
 6206 00b6 1A46     		mov	r2, r3
 6207 00b8 FB68     		ldr	r3, [r7, #12]
 6208 00ba 1344     		add	r3, r3, r2
 6209 00bc F722     		movs	r2, #247
 6210 00be 1A71     		strb	r2, [r3, #4]
1545:.\AdvantageImpl.c ****             //Here we copy the remaining 6 bytes for the preset value
1546:.\AdvantageImpl.c ****             ///THIS IS AN APPLIED CONVENTION ===>> 0x0008 INDEX POSITION WITHIN THE PUMP'S BUFFER P
1547:.\AdvantageImpl.c ****             ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1548:.\AdvantageImpl.c ****             B78AD90CF552D9B30A(ppump->_authorizationinfo._price, PBYTECAST(&ppump->_trasactionbuffe
 6211              		.loc 1 1548 0
 6212 00c0 3B69     		ldr	r3, [r7, #16]
 6213 00c2 B3F8AC3B 		ldrh	r3, [r3, #2988]	@ movhi
 6214 00c6 9BB2     		uxth	r3, r3
 6215 00c8 9AB2     		uxth	r2, r3
 6216 00ca 4FF00003 		mov	r3, #0
 6217 00ce 3969     		ldr	r1, [r7, #16]
 6218 00d0 01F12804 		add	r4, r1, #40
 6219 00d4 1046     		mov	r0, r2
 6220 00d6 1946     		mov	r1, r3
 6221 00d8 2246     		mov	r2, r4
 6222 00da FFF7FEFF 		bl	B78AD90CF552D9B30A
1549:.\AdvantageImpl.c ****             char8 *ptr = &ppump->_trasactionbuffer[0x0008];
 6223              		.loc 1 1549 0
 6224 00de 3B69     		ldr	r3, [r7, #16]
 6225 00e0 2833     		adds	r3, r3, #40
 6226 00e2 BB60     		str	r3, [r7, #8]
1550:.\AdvantageImpl.c ****             
1551:.\AdvantageImpl.c ****             if(_g_dispenserlayoutinfo._displaydigitsmode == 0x06)
 6227              		.loc 1 1551 0
 6228 00e4 314B     		ldr	r3, .L232
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 138


 6229 00e6 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 6230 00e8 062B     		cmp	r3, #6
 6231 00ea 1AD1     		bne	.L226
 6232              	.LBB46:
1552:.\AdvantageImpl.c ****             {
1553:.\AdvantageImpl.c ****                 FOR(uint8 buffndx = 0, buffndx < 4, buffndx++)//Standard Price Data
 6233              		.loc 1 1553 0
 6234 00ec 0023     		movs	r3, #0
 6235 00ee BB75     		strb	r3, [r7, #22]
 6236 00f0 13E0     		b	.L227
 6237              	.L228:
1554:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ptr[buffndx])); //Translate fr
 6238              		.loc 1 1554 0 discriminator 3
 6239 00f2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6240 00f4 5A1C     		adds	r2, r3, #1
 6241 00f6 FA75     		strb	r2, [r7, #23]
 6242 00f8 1946     		mov	r1, r3
 6243 00fa BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 6244 00fc BA68     		ldr	r2, [r7, #8]
 6245 00fe 1344     		add	r3, r3, r2
 6246 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6247 0102 03F00F03 		and	r3, r3, #15
 6248 0106 DBB2     		uxtb	r3, r3
 6249 0108 63F01F03 		orn	r3, r3, #31
 6250 010c DAB2     		uxtb	r2, r3
 6251 010e FB68     		ldr	r3, [r7, #12]
 6252 0110 0B44     		add	r3, r3, r1
 6253 0112 1A71     		strb	r2, [r3, #4]
1553:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ptr[buffndx])); //Translate fr
 6254              		.loc 1 1553 0 discriminator 3
 6255 0114 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 6256 0116 0133     		adds	r3, r3, #1
 6257 0118 BB75     		strb	r3, [r7, #22]
 6258              	.L227:
1553:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ptr[buffndx])); //Translate fr
 6259              		.loc 1 1553 0 is_stmt 0 discriminator 1
 6260 011a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 6261 011c 032B     		cmp	r3, #3
 6262 011e E8D9     		bls	.L228
 6263              	.LBE46:
 6264 0120 19E0     		b	.L229
 6265              	.L226:
 6266              	.LBB47:
1555:.\AdvantageImpl.c ****             }
1556:.\AdvantageImpl.c ****             else
1557:.\AdvantageImpl.c ****             {
1558:.\AdvantageImpl.c ****                 FOR(uint8 buffndx = 0, buffndx < 6, buffndx++)//Long Price Data - Extended Two-Wire
 6267              		.loc 1 1558 0 is_stmt 1
 6268 0122 0023     		movs	r3, #0
 6269 0124 7B75     		strb	r3, [r7, #21]
 6270 0126 13E0     		b	.L230
 6271              	.L231:
1559:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ptr[buffndx])); //Translate fr
 6272              		.loc 1 1559 0 discriminator 3
 6273 0128 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6274 012a 5A1C     		adds	r2, r3, #1
 6275 012c FA75     		strb	r2, [r7, #23]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 139


 6276 012e 1946     		mov	r1, r3
 6277 0130 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 6278 0132 BA68     		ldr	r2, [r7, #8]
 6279 0134 1344     		add	r3, r3, r2
 6280 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6281 0138 03F00F03 		and	r3, r3, #15
 6282 013c DBB2     		uxtb	r3, r3
 6283 013e 63F01F03 		orn	r3, r3, #31
 6284 0142 DAB2     		uxtb	r2, r3
 6285 0144 FB68     		ldr	r3, [r7, #12]
 6286 0146 0B44     		add	r3, r3, r1
 6287 0148 1A71     		strb	r2, [r3, #4]
1558:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ptr[buffndx])); //Translate fr
 6288              		.loc 1 1558 0 discriminator 3
 6289 014a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 6290 014c 0133     		adds	r3, r3, #1
 6291 014e 7B75     		strb	r3, [r7, #21]
 6292              	.L230:
1558:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ptr[buffndx])); //Translate fr
 6293              		.loc 1 1558 0 is_stmt 0 discriminator 1
 6294 0150 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 6295 0152 052B     		cmp	r3, #5
 6296 0154 E8D9     		bls	.L231
 6297              	.L229:
 6298              	.LBE47:
1560:.\AdvantageImpl.c ****             }
1561:.\AdvantageImpl.c ****             
1562:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = 0xFB; //LRC next
 6299              		.loc 1 1562 0 is_stmt 1
 6300 0156 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6301 0158 5A1C     		adds	r2, r3, #1
 6302 015a FA75     		strb	r2, [r7, #23]
 6303 015c 1A46     		mov	r2, r3
 6304 015e FB68     		ldr	r3, [r7, #12]
 6305 0160 1344     		add	r3, r3, r2
 6306 0162 FB22     		movs	r2, #251
 6307 0164 1A71     		strb	r2, [r3, #4]
1563:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = GetLRC(puartdisp->_messagetx);
 6308              		.loc 1 1563 0
 6309 0166 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6310 0168 5A1C     		adds	r2, r3, #1
 6311 016a FA75     		strb	r2, [r7, #23]
 6312 016c 1C46     		mov	r4, r3
 6313 016e FB68     		ldr	r3, [r7, #12]
 6314 0170 0433     		adds	r3, r3, #4
 6315 0172 1846     		mov	r0, r3
 6316 0174 FFF7FEFF 		bl	GetLRC
 6317 0178 0346     		mov	r3, r0
 6318 017a 1A46     		mov	r2, r3
 6319 017c FB68     		ldr	r3, [r7, #12]
 6320 017e 2344     		add	r3, r3, r4
 6321 0180 1A71     		strb	r2, [r3, #4]
1564:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = EOM;
 6322              		.loc 1 1564 0
 6323 0182 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6324 0184 5A1C     		adds	r2, r3, #1
 6325 0186 FA75     		strb	r2, [r7, #23]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 140


 6326 0188 1A46     		mov	r2, r3
 6327 018a FB68     		ldr	r3, [r7, #12]
 6328 018c 1344     		add	r3, r3, r2
 6329 018e F022     		movs	r2, #240
 6330 0190 1A71     		strb	r2, [r3, #4]
1565:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
1566:.\AdvantageImpl.c ****             
1567:.\AdvantageImpl.c ****             puartdisp->_messagelength = index;
 6331              		.loc 1 1567 0
 6332 0192 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 6333 0194 9AB2     		uxth	r2, r3
 6334 0196 FB68     		ldr	r3, [r7, #12]
 6335 0198 5A80     		strh	r2, [r3, #2]	@ movhi
1568:.\AdvantageImpl.c ****             puartdisp->_messagestate = PENDING;
 6336              		.loc 1 1568 0
 6337 019a FB68     		ldr	r3, [r7, #12]
 6338 019c C222     		movs	r2, #194
 6339 019e 1A70     		strb	r2, [r3]
1569:.\AdvantageImpl.c ****             
1570:.\AdvantageImpl.c ****             //This marker flag is set to notify the transactional engine about the price restore re
1571:.\AdvantageImpl.c ****             ppump->_restoreprice = true;
 6340              		.loc 1 1571 0
 6341 01a0 3B69     		ldr	r3, [r7, #16]
 6342 01a2 0122     		movs	r2, #1
 6343 01a4 DA71     		strb	r2, [r3, #7]
 6344              	.L222:
 6345              	.LBE45:
 6346              	.LBE44:
1572:.\AdvantageImpl.c ****         }
1573:.\AdvantageImpl.c ****     }    
1574:.\AdvantageImpl.c **** }
 6347              		.loc 1 1574 0
 6348 01a6 1C37     		adds	r7, r7, #28
 6349              		.cfi_def_cfa_offset 12
 6350 01a8 BD46     		mov	sp, r7
 6351              		.cfi_def_cfa_register 13
 6352              		@ sp needed
 6353 01aa 90BD     		pop	{r4, r7, pc}
 6354              	.L233:
 6355              		.align	2
 6356              	.L232:
 6357 01ac 00000000 		.word	_g_dispenserlayoutinfo
 6358              		.cfi_endproc
 6359              	.LFE86:
 6360              		.size	PumpDefault2CreditPpuChange, .-PumpDefault2CreditPpuChange
 6361              		.section	.text.PumpCredit2DefaultPpuChange,"ax",%progbits
 6362              		.align	2
 6363              		.global	PumpCredit2DefaultPpuChange
 6364              		.thumb
 6365              		.thumb_func
 6366              		.type	PumpCredit2DefaultPpuChange, %function
 6367              	PumpCredit2DefaultPpuChange:
 6368              	.LFB87:
1575:.\AdvantageImpl.c **** 
1576:.\AdvantageImpl.c **** void PumpCredit2DefaultPpuChange(void *pparam)
1577:.\AdvantageImpl.c **** {
 6369              		.loc 1 1577 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 141


 6370              		.cfi_startproc
 6371              		@ args = 0, pretend = 0, frame = 32
 6372              		@ frame_needed = 1, uses_anonymous_args = 0
 6373 0000 90B5     		push	{r4, r7, lr}
 6374              		.cfi_def_cfa_offset 12
 6375              		.cfi_offset 4, -12
 6376              		.cfi_offset 7, -8
 6377              		.cfi_offset 14, -4
 6378 0002 89B0     		sub	sp, sp, #36
 6379              		.cfi_def_cfa_offset 48
 6380 0004 00AF     		add	r7, sp, #0
 6381              		.cfi_def_cfa_register 7
 6382 0006 7860     		str	r0, [r7, #4]
1578:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 6383              		.loc 1 1578 0
 6384 0008 7B68     		ldr	r3, [r7, #4]
 6385 000a BB61     		str	r3, [r7, #24]
1579:.\AdvantageImpl.c ****     if(ppump)
 6386              		.loc 1 1579 0
 6387 000c BB69     		ldr	r3, [r7, #24]
 6388 000e 002B     		cmp	r3, #0
 6389 0010 00F00F81 		beq	.L234
 6390              	.LBB48:
1580:.\AdvantageImpl.c ****     {
1581:.\AdvantageImpl.c ****         uint8_t index = 0;  
 6391              		.loc 1 1581 0
 6392 0014 0023     		movs	r3, #0
 6393 0016 FB77     		strb	r3, [r7, #31]
1582:.\AdvantageImpl.c ****         memset(ppump->_rxbuffer, 0x00, _PUMP_RX_BUFFER_SIZE_);
 6394              		.loc 1 1582 0
 6395 0018 BB69     		ldr	r3, [r7, #24]
 6396 001a 03F5D073 		add	r3, r3, #416
 6397 001e 1846     		mov	r0, r3
 6398 0020 0021     		movs	r1, #0
 6399 0022 4FF4C072 		mov	r2, #384
 6400 0026 FFF7FEFF 		bl	memset
1583:.\AdvantageImpl.c ****         PUARTMESSAGEPTR puartdisp = GetUARTMessageSlot(UART_DISPENSER);
 6401              		.loc 1 1583 0
 6402 002a A220     		movs	r0, #162
 6403 002c FFF7FEFF 		bl	GetUARTMessageSlot
 6404 0030 7861     		str	r0, [r7, #20]
1584:.\AdvantageImpl.c ****         if(puartdisp)
 6405              		.loc 1 1584 0
 6406 0032 7B69     		ldr	r3, [r7, #20]
 6407 0034 002B     		cmp	r3, #0
 6408 0036 00F0F980 		beq	.L236
 6409              	.LBB49:
1585:.\AdvantageImpl.c ****         {
1586:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
1587:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = SOM;
 6410              		.loc 1 1587 0
 6411 003a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 6412 003c 5A1C     		adds	r2, r3, #1
 6413 003e FA77     		strb	r2, [r7, #31]
 6414 0040 1A46     		mov	r2, r3
 6415 0042 7B69     		ldr	r3, [r7, #20]
 6416 0044 1344     		add	r3, r3, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 142


 6417 0046 FF22     		movs	r2, #255
 6418 0048 1A71     		strb	r2, [r3, #4]
1588:.\AdvantageImpl.c ****             if(_g_dispenserlayoutinfo._displaydigitsmode == 0x06)
 6419              		.loc 1 1588 0
 6420 004a 7B4B     		ldr	r3, .L251
 6421 004c 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 6422 004e 062B     		cmp	r3, #6
 6423 0050 08D1     		bne	.L237
1589:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xE5;//Standard Price Data
 6424              		.loc 1 1589 0
 6425 0052 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 6426 0054 5A1C     		adds	r2, r3, #1
 6427 0056 FA77     		strb	r2, [r7, #31]
 6428 0058 1A46     		mov	r2, r3
 6429 005a 7B69     		ldr	r3, [r7, #20]
 6430 005c 1344     		add	r3, r3, r2
 6431 005e E522     		movs	r2, #229
 6432 0060 1A71     		strb	r2, [r3, #4]
 6433 0062 07E0     		b	.L238
 6434              	.L237:
1590:.\AdvantageImpl.c ****             else
1591:.\AdvantageImpl.c ****                 puartdisp->_messagetx[index++] = 0xE3;//Long Price Data - Extended Two-Wire Mode
 6435              		.loc 1 1591 0
 6436 0064 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 6437 0066 5A1C     		adds	r2, r3, #1
 6438 0068 FA77     		strb	r2, [r7, #31]
 6439 006a 1A46     		mov	r2, r3
 6440 006c 7B69     		ldr	r3, [r7, #20]
 6441 006e 1344     		add	r3, r3, r2
 6442 0070 E322     		movs	r2, #227
 6443 0072 1A71     		strb	r2, [r3, #4]
 6444              	.L238:
1592:.\AdvantageImpl.c ****             
1593:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = 0xF4;
 6445              		.loc 1 1593 0
 6446 0074 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 6447 0076 5A1C     		adds	r2, r3, #1
 6448 0078 FA77     		strb	r2, [r7, #31]
 6449 007a 1A46     		mov	r2, r3
 6450 007c 7B69     		ldr	r3, [r7, #20]
 6451 007e 1344     		add	r3, r3, r2
 6452 0080 F422     		movs	r2, #244
 6453 0082 1A71     		strb	r2, [r3, #4]
1594:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = 0xF6; //Hose Data next
 6454              		.loc 1 1594 0
 6455 0084 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 6456 0086 5A1C     		adds	r2, r3, #1
 6457 0088 FA77     		strb	r2, [r7, #31]
 6458 008a 1A46     		mov	r2, r3
 6459 008c 7B69     		ldr	r3, [r7, #20]
 6460 008e 1344     		add	r3, r3, r2
 6461 0090 F622     		movs	r2, #246
 6462 0092 1A71     		strb	r2, [r3, #4]
1595:.\AdvantageImpl.c ****             ///THIS IS AN APPLIED CONVENTION ===>> 0x0006 INDEX POSITION WITHIN THE PUMP'S BUFFER P
1596:.\AdvantageImpl.c ****             ///THESE CODES MUST BE MATCHED OTHERWISE THE LOGIC WILL BREAKUP THE CODE!
1597:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = (0xE0 | ppump->_authorizationinfo._hoseid);
 6463              		.loc 1 1597 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 143


 6464 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 6465 0096 5A1C     		adds	r2, r3, #1
 6466 0098 FA77     		strb	r2, [r7, #31]
 6467 009a 1946     		mov	r1, r3
 6468 009c BB69     		ldr	r3, [r7, #24]
 6469 009e 93F8AA3B 		ldrb	r3, [r3, #2986]
 6470 00a2 DBB2     		uxtb	r3, r3
 6471 00a4 63F01F03 		orn	r3, r3, #31
 6472 00a8 DAB2     		uxtb	r2, r3
 6473 00aa 7B69     		ldr	r3, [r7, #20]
 6474 00ac 0B44     		add	r3, r3, r1
 6475 00ae 1A71     		strb	r2, [r3, #4]
1598:.\AdvantageImpl.c **** 
1599:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = 0xF7; //PPU Data next
 6476              		.loc 1 1599 0
 6477 00b0 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 6478 00b2 5A1C     		adds	r2, r3, #1
 6479 00b4 FA77     		strb	r2, [r7, #31]
 6480 00b6 1A46     		mov	r2, r3
 6481 00b8 7B69     		ldr	r3, [r7, #20]
 6482 00ba 1344     		add	r3, r3, r2
 6483 00bc F722     		movs	r2, #247
 6484 00be 1A71     		strb	r2, [r3, #4]
1600:.\AdvantageImpl.c ****             
1601:.\AdvantageImpl.c ****             I2CBusLock();
 6485              		.loc 1 1601 0
 6486 00c0 FFF7FEFF 		bl	I2CBusLock
1602:.\AdvantageImpl.c ****             ClearEepromBuffer();
 6487              		.loc 1 1602 0
 6488 00c4 FFF7FEFF 		bl	ClearEepromBuffer
1603:.\AdvantageImpl.c ****             uint16 eeprompage = DispenserGetEepromPPUPageFromPumpID(ppump->_pumpid);
 6489              		.loc 1 1603 0
 6490 00c8 BB69     		ldr	r3, [r7, #24]
 6491 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6492 00cc 1846     		mov	r0, r3
 6493 00ce FFF7FEFF 		bl	DispenserGetEepromPPUPageFromPumpID
 6494 00d2 0346     		mov	r3, r0
 6495 00d4 7B82     		strh	r3, [r7, #18]	@ movhi
1604:.\AdvantageImpl.c ****             LoadEepromPage(eeprompage);
 6496              		.loc 1 1604 0
 6497 00d6 7B8A     		ldrh	r3, [r7, #18]
 6498 00d8 1846     		mov	r0, r3
 6499 00da FFF7FEFF 		bl	LoadEepromPage
1605:.\AdvantageImpl.c ****             switch(ppump->_authorizationinfo._hoseid)
 6500              		.loc 1 1605 0
 6501 00de BB69     		ldr	r3, [r7, #24]
 6502 00e0 93F8AA3B 		ldrb	r3, [r3, #2986]
 6503 00e4 DBB2     		uxtb	r3, r3
 6504 00e6 032B     		cmp	r3, #3
 6505 00e8 3DD8     		bhi	.L239
 6506 00ea 01A2     		adr	r2, .L241
 6507 00ec 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6508              		.p2align 2
 6509              	.L241:
 6510 00f0 01010000 		.word	.L240+1
 6511 00f4 19010000 		.word	.L242+1
 6512 00f8 33010000 		.word	.L243+1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 144


 6513 00fc 4D010000 		.word	.L244+1
 6514              		.p2align 1
 6515              	.L240:
1606:.\AdvantageImpl.c ****             {
1607:.\AdvantageImpl.c ****                 case 0x00:
1608:.\AdvantageImpl.c ****                 //Six bytes only since the PPU is constrained to this length
1609:.\AdvantageImpl.c ****                 memcpy(PBYTECAST(&ppump->_trasactionbuffer[0x0008]), &GetEepromBuffer()[_EEPROM_PAG
 6516              		.loc 1 1609 0
 6517 0100 BB69     		ldr	r3, [r7, #24]
 6518 0102 03F12804 		add	r4, r3, #40
 6519 0106 FFF7FEFF 		bl	GetEepromBuffer
 6520 010a 0346     		mov	r3, r0
 6521 010c 2046     		mov	r0, r4
 6522 010e 1946     		mov	r1, r3
 6523 0110 0622     		movs	r2, #6
 6524 0112 FFF7FEFF 		bl	memcpy
1610:.\AdvantageImpl.c ****                 break;
 6525              		.loc 1 1610 0
 6526 0116 26E0     		b	.L239
 6527              	.L242:
1611:.\AdvantageImpl.c ****                 case 0x01:
1612:.\AdvantageImpl.c ****                 //Six bytes only since the PPU is constrained to this length
1613:.\AdvantageImpl.c ****                 memcpy(PBYTECAST(&ppump->_trasactionbuffer[0x0008]), &GetEepromBuffer()[_EEPROM_PAG
 6528              		.loc 1 1613 0
 6529 0118 BB69     		ldr	r3, [r7, #24]
 6530 011a 03F12804 		add	r4, r3, #40
 6531 011e FFF7FEFF 		bl	GetEepromBuffer
 6532 0122 0346     		mov	r3, r0
 6533 0124 1033     		adds	r3, r3, #16
 6534 0126 2046     		mov	r0, r4
 6535 0128 1946     		mov	r1, r3
 6536 012a 0622     		movs	r2, #6
 6537 012c FFF7FEFF 		bl	memcpy
1614:.\AdvantageImpl.c ****                 break;
 6538              		.loc 1 1614 0
 6539 0130 19E0     		b	.L239
 6540              	.L243:
1615:.\AdvantageImpl.c ****                 case 0x02:
1616:.\AdvantageImpl.c ****                 //Six bytes only since the PPU is constrained to this length
1617:.\AdvantageImpl.c ****                 memcpy(PBYTECAST(&ppump->_trasactionbuffer[0x0008]), &GetEepromBuffer()[_EEPROM_PAG
 6541              		.loc 1 1617 0
 6542 0132 BB69     		ldr	r3, [r7, #24]
 6543 0134 03F12804 		add	r4, r3, #40
 6544 0138 FFF7FEFF 		bl	GetEepromBuffer
 6545 013c 0346     		mov	r3, r0
 6546 013e 2033     		adds	r3, r3, #32
 6547 0140 2046     		mov	r0, r4
 6548 0142 1946     		mov	r1, r3
 6549 0144 0622     		movs	r2, #6
 6550 0146 FFF7FEFF 		bl	memcpy
1618:.\AdvantageImpl.c ****                 break;
 6551              		.loc 1 1618 0
 6552 014a 0CE0     		b	.L239
 6553              	.L244:
1619:.\AdvantageImpl.c ****                 case 0x03:
1620:.\AdvantageImpl.c ****                 //Six bytes only since the PPU is constrained to this length
1621:.\AdvantageImpl.c ****                 memcpy(PBYTECAST(&ppump->_trasactionbuffer[0x0008]), &GetEepromBuffer()[_EEPROM_PAG
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 145


 6554              		.loc 1 1621 0
 6555 014c BB69     		ldr	r3, [r7, #24]
 6556 014e 03F12804 		add	r4, r3, #40
 6557 0152 FFF7FEFF 		bl	GetEepromBuffer
 6558 0156 0346     		mov	r3, r0
 6559 0158 3033     		adds	r3, r3, #48
 6560 015a 2046     		mov	r0, r4
 6561 015c 1946     		mov	r1, r3
 6562 015e 0622     		movs	r2, #6
 6563 0160 FFF7FEFF 		bl	memcpy
1622:.\AdvantageImpl.c ****                 break;
 6564              		.loc 1 1622 0
 6565 0164 00BF     		nop
 6566              	.L239:
1623:.\AdvantageImpl.c ****             }
1624:.\AdvantageImpl.c ****             I2CBusUnlock();
 6567              		.loc 1 1624 0
 6568 0166 FFF7FEFF 		bl	I2CBusUnlock
1625:.\AdvantageImpl.c **** 
1626:.\AdvantageImpl.c ****             char8 *ptr = &ppump->_trasactionbuffer[0x0008];
 6569              		.loc 1 1626 0
 6570 016a BB69     		ldr	r3, [r7, #24]
 6571 016c 2833     		adds	r3, r3, #40
 6572 016e FB60     		str	r3, [r7, #12]
1627:.\AdvantageImpl.c ****             
1628:.\AdvantageImpl.c ****             if(_g_dispenserlayoutinfo._displaydigitsmode == 0x06)
 6573              		.loc 1 1628 0
 6574 0170 314B     		ldr	r3, .L251
 6575 0172 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 6576 0174 062B     		cmp	r3, #6
 6577 0176 1AD1     		bne	.L245
 6578              	.LBB50:
1629:.\AdvantageImpl.c ****             {
1630:.\AdvantageImpl.c ****                 FOR(uint8 buffndx = 0, buffndx < 4, buffndx++)//Standard Price Data
 6579              		.loc 1 1630 0
 6580 0178 0023     		movs	r3, #0
 6581 017a BB77     		strb	r3, [r7, #30]
 6582 017c 13E0     		b	.L246
 6583              	.L247:
1631:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ptr[buffndx])); //Translate fr
 6584              		.loc 1 1631 0 discriminator 3
 6585 017e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 6586 0180 5A1C     		adds	r2, r3, #1
 6587 0182 FA77     		strb	r2, [r7, #31]
 6588 0184 1946     		mov	r1, r3
 6589 0186 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 6590 0188 FA68     		ldr	r2, [r7, #12]
 6591 018a 1344     		add	r3, r3, r2
 6592 018c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6593 018e 03F00F03 		and	r3, r3, #15
 6594 0192 DBB2     		uxtb	r3, r3
 6595 0194 63F01F03 		orn	r3, r3, #31
 6596 0198 DAB2     		uxtb	r2, r3
 6597 019a 7B69     		ldr	r3, [r7, #20]
 6598 019c 0B44     		add	r3, r3, r1
 6599 019e 1A71     		strb	r2, [r3, #4]
1630:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ptr[buffndx])); //Translate fr
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 146


 6600              		.loc 1 1630 0 discriminator 3
 6601 01a0 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 6602 01a2 0133     		adds	r3, r3, #1
 6603 01a4 BB77     		strb	r3, [r7, #30]
 6604              	.L246:
1630:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ptr[buffndx])); //Translate fr
 6605              		.loc 1 1630 0 is_stmt 0 discriminator 1
 6606 01a6 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 6607 01a8 032B     		cmp	r3, #3
 6608 01aa E8D9     		bls	.L247
 6609              	.LBE50:
 6610 01ac 19E0     		b	.L248
 6611              	.L245:
 6612              	.LBB51:
1632:.\AdvantageImpl.c ****             }
1633:.\AdvantageImpl.c ****             else
1634:.\AdvantageImpl.c ****             {
1635:.\AdvantageImpl.c ****                 FOR(uint8 buffndx = 0, buffndx < 6, buffndx++)//Long Price Data - Extended Two-Wire
 6613              		.loc 1 1635 0 is_stmt 1
 6614 01ae 0023     		movs	r3, #0
 6615 01b0 7B77     		strb	r3, [r7, #29]
 6616 01b2 13E0     		b	.L249
 6617              	.L250:
1636:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ptr[buffndx])); //Translate fr
 6618              		.loc 1 1636 0 discriminator 3
 6619 01b4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 6620 01b6 5A1C     		adds	r2, r3, #1
 6621 01b8 FA77     		strb	r2, [r7, #31]
 6622 01ba 1946     		mov	r1, r3
 6623 01bc 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 6624 01be FA68     		ldr	r2, [r7, #12]
 6625 01c0 1344     		add	r3, r3, r2
 6626 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6627 01c4 03F00F03 		and	r3, r3, #15
 6628 01c8 DBB2     		uxtb	r3, r3
 6629 01ca 63F01F03 		orn	r3, r3, #31
 6630 01ce DAB2     		uxtb	r2, r3
 6631 01d0 7B69     		ldr	r3, [r7, #20]
 6632 01d2 0B44     		add	r3, r3, r1
 6633 01d4 1A71     		strb	r2, [r3, #4]
1635:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ptr[buffndx])); //Translate fr
 6634              		.loc 1 1635 0 discriminator 3
 6635 01d6 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 6636 01d8 0133     		adds	r3, r3, #1
 6637 01da 7B77     		strb	r3, [r7, #29]
 6638              	.L249:
1635:.\AdvantageImpl.c ****                     puartdisp->_messagetx[index++] = (0xE0 | (0x0F & ptr[buffndx])); //Translate fr
 6639              		.loc 1 1635 0 is_stmt 0 discriminator 1
 6640 01dc 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 6641 01de 052B     		cmp	r3, #5
 6642 01e0 E8D9     		bls	.L250
 6643              	.L248:
 6644              	.LBE51:
1637:.\AdvantageImpl.c ****             }
1638:.\AdvantageImpl.c ****             
1639:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = 0xFB; //LRC next
 6645              		.loc 1 1639 0 is_stmt 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 147


 6646 01e2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 6647 01e4 5A1C     		adds	r2, r3, #1
 6648 01e6 FA77     		strb	r2, [r7, #31]
 6649 01e8 1A46     		mov	r2, r3
 6650 01ea 7B69     		ldr	r3, [r7, #20]
 6651 01ec 1344     		add	r3, r3, r2
 6652 01ee FB22     		movs	r2, #251
 6653 01f0 1A71     		strb	r2, [r3, #4]
1640:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = GetLRC(puartdisp->_messagetx);
 6654              		.loc 1 1640 0
 6655 01f2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 6656 01f4 5A1C     		adds	r2, r3, #1
 6657 01f6 FA77     		strb	r2, [r7, #31]
 6658 01f8 1C46     		mov	r4, r3
 6659 01fa 7B69     		ldr	r3, [r7, #20]
 6660 01fc 0433     		adds	r3, r3, #4
 6661 01fe 1846     		mov	r0, r3
 6662 0200 FFF7FEFF 		bl	GetLRC
 6663 0204 0346     		mov	r3, r0
 6664 0206 1A46     		mov	r2, r3
 6665 0208 7B69     		ldr	r3, [r7, #20]
 6666 020a 2344     		add	r3, r3, r4
 6667 020c 1A71     		strb	r2, [r3, #4]
1641:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = EOM;
 6668              		.loc 1 1641 0
 6669 020e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 6670 0210 5A1C     		adds	r2, r3, #1
 6671 0212 FA77     		strb	r2, [r7, #31]
 6672 0214 1A46     		mov	r2, r3
 6673 0216 7B69     		ldr	r3, [r7, #20]
 6674 0218 1344     		add	r3, r3, r2
 6675 021a F022     		movs	r2, #240
 6676 021c 1A71     		strb	r2, [r3, #4]
1642:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
1643:.\AdvantageImpl.c ****             
1644:.\AdvantageImpl.c ****             puartdisp->_messagelength = index;
 6677              		.loc 1 1644 0
 6678 021e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 6679 0220 9AB2     		uxth	r2, r3
 6680 0222 7B69     		ldr	r3, [r7, #20]
 6681 0224 5A80     		strh	r2, [r3, #2]	@ movhi
1645:.\AdvantageImpl.c ****             puartdisp->_messagestate = PENDING;
 6682              		.loc 1 1645 0
 6683 0226 7B69     		ldr	r3, [r7, #20]
 6684 0228 C222     		movs	r2, #194
 6685 022a 1A70     		strb	r2, [r3]
 6686              	.L236:
 6687              	.LBE49:
1646:.\AdvantageImpl.c ****         }
1647:.\AdvantageImpl.c ****         ppump->_restoreprice = false;
 6688              		.loc 1 1647 0
 6689 022c BB69     		ldr	r3, [r7, #24]
 6690 022e 0022     		movs	r2, #0
 6691 0230 DA71     		strb	r2, [r3, #7]
 6692              	.L234:
 6693              	.LBE48:
1648:.\AdvantageImpl.c ****         //This lock is to force the operator to activate/deactivate the hose once the credit transa
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 148


1649:.\AdvantageImpl.c ****         #ifdef CREDIT_SALE_PUMP_LOCK
1650:.\AdvantageImpl.c ****         ppump->_pumplocked = true;
1651:.\AdvantageImpl.c ****         #endif
1652:.\AdvantageImpl.c ****     }    
1653:.\AdvantageImpl.c **** }
 6694              		.loc 1 1653 0
 6695 0232 2437     		adds	r7, r7, #36
 6696              		.cfi_def_cfa_offset 12
 6697 0234 BD46     		mov	sp, r7
 6698              		.cfi_def_cfa_register 13
 6699              		@ sp needed
 6700 0236 90BD     		pop	{r4, r7, pc}
 6701              	.L252:
 6702              		.align	2
 6703              	.L251:
 6704 0238 00000000 		.word	_g_dispenserlayoutinfo
 6705              		.cfi_endproc
 6706              	.LFE87:
 6707              		.size	PumpCredit2DefaultPpuChange, .-PumpCredit2DefaultPpuChange
 6708              		.section	.text.PumpStopRequest,"ax",%progbits
 6709              		.align	2
 6710              		.global	PumpStopRequest
 6711              		.thumb
 6712              		.thumb_func
 6713              		.type	PumpStopRequest, %function
 6714              	PumpStopRequest:
 6715              	.LFB88:
1654:.\AdvantageImpl.c **** 
1655:.\AdvantageImpl.c **** //@Created By: HIJH
1656:.\AdvantageImpl.c **** //@Septembre de 2016
1657:.\AdvantageImpl.c **** void PumpStopRequest(void *pparam)
1658:.\AdvantageImpl.c **** {
 6716              		.loc 1 1658 0
 6717              		.cfi_startproc
 6718              		@ args = 0, pretend = 0, frame = 24
 6719              		@ frame_needed = 1, uses_anonymous_args = 0
 6720 0000 80B5     		push	{r7, lr}
 6721              		.cfi_def_cfa_offset 8
 6722              		.cfi_offset 7, -8
 6723              		.cfi_offset 14, -4
 6724 0002 86B0     		sub	sp, sp, #24
 6725              		.cfi_def_cfa_offset 32
 6726 0004 00AF     		add	r7, sp, #0
 6727              		.cfi_def_cfa_register 7
 6728 0006 7860     		str	r0, [r7, #4]
1659:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 6729              		.loc 1 1659 0
 6730 0008 7B68     		ldr	r3, [r7, #4]
 6731 000a 7B61     		str	r3, [r7, #20]
1660:.\AdvantageImpl.c ****     if(ppump)
 6732              		.loc 1 1660 0
 6733 000c 7B69     		ldr	r3, [r7, #20]
 6734 000e 002B     		cmp	r3, #0
 6735 0010 28D0     		beq	.L253
 6736              	.LBB52:
1661:.\AdvantageImpl.c ****     {                
1662:.\AdvantageImpl.c ****         uint8_t index = 0;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 149


 6737              		.loc 1 1662 0
 6738 0012 0023     		movs	r3, #0
 6739 0014 FB74     		strb	r3, [r7, #19]
1663:.\AdvantageImpl.c ****         memset(ppump->_rxbuffer, 0x00, _PUMP_RX_BUFFER_SIZE_);
 6740              		.loc 1 1663 0
 6741 0016 7B69     		ldr	r3, [r7, #20]
 6742 0018 03F5D073 		add	r3, r3, #416
 6743 001c 1846     		mov	r0, r3
 6744 001e 0021     		movs	r1, #0
 6745 0020 4FF4C072 		mov	r2, #384
 6746 0024 FFF7FEFF 		bl	memset
1664:.\AdvantageImpl.c ****         PUARTMESSAGEPTR puartdisp = GetUARTMessageSlot(UART_DISPENSER);
 6747              		.loc 1 1664 0
 6748 0028 A220     		movs	r0, #162
 6749 002a FFF7FEFF 		bl	GetUARTMessageSlot
 6750 002e F860     		str	r0, [r7, #12]
1665:.\AdvantageImpl.c ****         if(puartdisp)
 6751              		.loc 1 1665 0
 6752 0030 FB68     		ldr	r3, [r7, #12]
 6753 0032 002B     		cmp	r3, #0
 6754 0034 16D0     		beq	.L253
1666:.\AdvantageImpl.c ****         {
1667:.\AdvantageImpl.c ****             //Just one byte for the response
1668:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = PUMP_COMMAND(PUMP_PUMP_STOP, ppump->_pumpid);
 6755              		.loc 1 1668 0
 6756 0036 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6757 0038 5A1C     		adds	r2, r3, #1
 6758 003a FA74     		strb	r2, [r7, #19]
 6759 003c 1946     		mov	r1, r3
 6760 003e 7B69     		ldr	r3, [r7, #20]
 6761 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6762 0042 DBB2     		uxtb	r3, r3
 6763 0044 03F00F03 		and	r3, r3, #15
 6764 0048 DBB2     		uxtb	r3, r3
 6765 004a 43F03003 		orr	r3, r3, #48
 6766 004e DBB2     		uxtb	r3, r3
 6767 0050 DAB2     		uxtb	r2, r3
 6768 0052 FB68     		ldr	r3, [r7, #12]
 6769 0054 0B44     		add	r3, r3, r1
 6770 0056 1A71     		strb	r2, [r3, #4]
1669:.\AdvantageImpl.c ****             puartdisp->_messagelength = 1;//One byte
 6771              		.loc 1 1669 0
 6772 0058 FB68     		ldr	r3, [r7, #12]
 6773 005a 0122     		movs	r2, #1
 6774 005c 5A80     		strh	r2, [r3, #2]	@ movhi
1670:.\AdvantageImpl.c ****             puartdisp->_messagestate = PENDING;
 6775              		.loc 1 1670 0
 6776 005e FB68     		ldr	r3, [r7, #12]
 6777 0060 C222     		movs	r2, #194
 6778 0062 1A70     		strb	r2, [r3]
 6779              	.L253:
 6780              	.LBE52:
1671:.\AdvantageImpl.c ****         }        
1672:.\AdvantageImpl.c ****     }
1673:.\AdvantageImpl.c **** }
 6781              		.loc 1 1673 0
 6782 0064 1837     		adds	r7, r7, #24
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 150


 6783              		.cfi_def_cfa_offset 8
 6784 0066 BD46     		mov	sp, r7
 6785              		.cfi_def_cfa_register 13
 6786              		@ sp needed
 6787 0068 80BD     		pop	{r7, pc}
 6788              		.cfi_endproc
 6789              	.LFE88:
 6790              		.size	PumpStopRequest, .-PumpStopRequest
 6791 006a 00BF     		.section	.text.PumpStopAllRequest,"ax",%progbits
 6792              		.align	2
 6793              		.global	PumpStopAllRequest
 6794              		.thumb
 6795              		.thumb_func
 6796              		.type	PumpStopAllRequest, %function
 6797              	PumpStopAllRequest:
 6798              	.LFB89:
1674:.\AdvantageImpl.c **** 
1675:.\AdvantageImpl.c **** //@Created By: HIJH
1676:.\AdvantageImpl.c **** //@Septembre de 2016
1677:.\AdvantageImpl.c **** void PumpStopAllRequest(void *pparam)
1678:.\AdvantageImpl.c **** {
 6799              		.loc 1 1678 0
 6800              		.cfi_startproc
 6801              		@ args = 0, pretend = 0, frame = 24
 6802              		@ frame_needed = 1, uses_anonymous_args = 0
 6803 0000 80B5     		push	{r7, lr}
 6804              		.cfi_def_cfa_offset 8
 6805              		.cfi_offset 7, -8
 6806              		.cfi_offset 14, -4
 6807 0002 86B0     		sub	sp, sp, #24
 6808              		.cfi_def_cfa_offset 32
 6809 0004 00AF     		add	r7, sp, #0
 6810              		.cfi_def_cfa_register 7
 6811 0006 7860     		str	r0, [r7, #4]
1679:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 6812              		.loc 1 1679 0
 6813 0008 7B68     		ldr	r3, [r7, #4]
 6814 000a 7B61     		str	r3, [r7, #20]
1680:.\AdvantageImpl.c ****     if(ppump)
 6815              		.loc 1 1680 0
 6816 000c 7B69     		ldr	r3, [r7, #20]
 6817 000e 002B     		cmp	r3, #0
 6818 0010 23D0     		beq	.L255
 6819              	.LBB53:
1681:.\AdvantageImpl.c ****     {                
1682:.\AdvantageImpl.c ****         uint8_t index = 0;
 6820              		.loc 1 1682 0
 6821 0012 0023     		movs	r3, #0
 6822 0014 FB74     		strb	r3, [r7, #19]
1683:.\AdvantageImpl.c ****         memset(ppump->_rxbuffer, 0x00, _PUMP_RX_BUFFER_SIZE_);
 6823              		.loc 1 1683 0
 6824 0016 7B69     		ldr	r3, [r7, #20]
 6825 0018 03F5D073 		add	r3, r3, #416
 6826 001c 1846     		mov	r0, r3
 6827 001e 0021     		movs	r1, #0
 6828 0020 4FF4C072 		mov	r2, #384
 6829 0024 FFF7FEFF 		bl	memset
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 151


1684:.\AdvantageImpl.c ****         PUARTMESSAGEPTR puartdisp = GetUARTMessageSlot(UART_DISPENSER);
 6830              		.loc 1 1684 0
 6831 0028 A220     		movs	r0, #162
 6832 002a FFF7FEFF 		bl	GetUARTMessageSlot
 6833 002e F860     		str	r0, [r7, #12]
1685:.\AdvantageImpl.c ****         if(puartdisp)
 6834              		.loc 1 1685 0
 6835 0030 FB68     		ldr	r3, [r7, #12]
 6836 0032 002B     		cmp	r3, #0
 6837 0034 11D0     		beq	.L255
1686:.\AdvantageImpl.c ****         {
1687:.\AdvantageImpl.c ****             //Just one byte for the response
1688:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = PUMP_COMMAND(PUMP_ALL_PUMPS_STOP, ppump->_pumpid);
 6838              		.loc 1 1688 0
 6839 0036 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6840 0038 5A1C     		adds	r2, r3, #1
 6841 003a FA74     		strb	r2, [r7, #19]
 6842 003c 1946     		mov	r1, r3
 6843 003e 7B69     		ldr	r3, [r7, #20]
 6844 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6845 0042 63F00F03 		orn	r3, r3, #15
 6846 0046 DAB2     		uxtb	r2, r3
 6847 0048 FB68     		ldr	r3, [r7, #12]
 6848 004a 0B44     		add	r3, r3, r1
 6849 004c 1A71     		strb	r2, [r3, #4]
1689:.\AdvantageImpl.c ****             puartdisp->_messagelength = 1;//One byte
 6850              		.loc 1 1689 0
 6851 004e FB68     		ldr	r3, [r7, #12]
 6852 0050 0122     		movs	r2, #1
 6853 0052 5A80     		strh	r2, [r3, #2]	@ movhi
1690:.\AdvantageImpl.c ****             puartdisp->_messagestate = PENDING;
 6854              		.loc 1 1690 0
 6855 0054 FB68     		ldr	r3, [r7, #12]
 6856 0056 C222     		movs	r2, #194
 6857 0058 1A70     		strb	r2, [r3]
 6858              	.L255:
 6859              	.LBE53:
1691:.\AdvantageImpl.c ****         }        
1692:.\AdvantageImpl.c ****     }
1693:.\AdvantageImpl.c **** }
 6860              		.loc 1 1693 0
 6861 005a 1837     		adds	r7, r7, #24
 6862              		.cfi_def_cfa_offset 8
 6863 005c BD46     		mov	sp, r7
 6864              		.cfi_def_cfa_register 13
 6865              		@ sp needed
 6866 005e 80BD     		pop	{r7, pc}
 6867              		.cfi_endproc
 6868              	.LFE89:
 6869              		.size	PumpStopAllRequest, .-PumpStopAllRequest
 6870              		.section	.text.PumpCompleteConfiguration,"ax",%progbits
 6871              		.align	2
 6872              		.global	PumpCompleteConfiguration
 6873              		.thumb
 6874              		.thumb_func
 6875              		.type	PumpCompleteConfiguration, %function
 6876              	PumpCompleteConfiguration:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 152


 6877              	.LFB90:
1694:.\AdvantageImpl.c **** 
1695:.\AdvantageImpl.c **** //@Created By: HIJH
1696:.\AdvantageImpl.c **** //@Septembre de 2016
1697:.\AdvantageImpl.c **** void PumpCompleteConfiguration(LPVOID pparam)
1698:.\AdvantageImpl.c **** {
 6878              		.loc 1 1698 0
 6879              		.cfi_startproc
 6880              		@ args = 0, pretend = 0, frame = 24
 6881              		@ frame_needed = 1, uses_anonymous_args = 0
 6882 0000 90B5     		push	{r4, r7, lr}
 6883              		.cfi_def_cfa_offset 12
 6884              		.cfi_offset 4, -12
 6885              		.cfi_offset 7, -8
 6886              		.cfi_offset 14, -4
 6887 0002 87B0     		sub	sp, sp, #28
 6888              		.cfi_def_cfa_offset 40
 6889 0004 00AF     		add	r7, sp, #0
 6890              		.cfi_def_cfa_register 7
 6891 0006 7860     		str	r0, [r7, #4]
1699:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 6892              		.loc 1 1699 0
 6893 0008 7B68     		ldr	r3, [r7, #4]
 6894 000a 7B61     		str	r3, [r7, #20]
1700:.\AdvantageImpl.c ****     if(ppump)
 6895              		.loc 1 1700 0
 6896 000c 7B69     		ldr	r3, [r7, #20]
 6897 000e 002B     		cmp	r3, #0
 6898 0010 66D0     		beq	.L257
 6899              	.LBB54:
1701:.\AdvantageImpl.c ****     {
1702:.\AdvantageImpl.c ****         uint8_t index = 0;  
 6900              		.loc 1 1702 0
 6901 0012 0023     		movs	r3, #0
 6902 0014 FB74     		strb	r3, [r7, #19]
1703:.\AdvantageImpl.c ****         memset(ppump->_rxbuffer, 0x00, _PUMP_RX_BUFFER_SIZE_);
 6903              		.loc 1 1703 0
 6904 0016 7B69     		ldr	r3, [r7, #20]
 6905 0018 03F5D073 		add	r3, r3, #416
 6906 001c 1846     		mov	r0, r3
 6907 001e 0021     		movs	r1, #0
 6908 0020 4FF4C072 		mov	r2, #384
 6909 0024 FFF7FEFF 		bl	memset
1704:.\AdvantageImpl.c ****         PUARTMESSAGEPTR puartdisp = GetUARTMessageSlot(UART_DISPENSER);
 6910              		.loc 1 1704 0
 6911 0028 A220     		movs	r0, #162
 6912 002a FFF7FEFF 		bl	GetUARTMessageSlot
 6913 002e F860     		str	r0, [r7, #12]
1705:.\AdvantageImpl.c ****         if(puartdisp)
 6914              		.loc 1 1705 0
 6915 0030 FB68     		ldr	r3, [r7, #12]
 6916 0032 002B     		cmp	r3, #0
 6917 0034 54D0     		beq	.L257
1706:.\AdvantageImpl.c ****         {
1707:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
1708:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = SOM;//Start Of Message
 6918              		.loc 1 1708 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 153


 6919 0036 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6920 0038 5A1C     		adds	r2, r3, #1
 6921 003a FA74     		strb	r2, [r7, #19]
 6922 003c 1A46     		mov	r2, r3
 6923 003e FB68     		ldr	r3, [r7, #12]
 6924 0040 1344     		add	r3, r3, r2
 6925 0042 FF22     		movs	r2, #255
 6926 0044 1A71     		strb	r2, [r3, #4]
1709:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = 0xE9;//Data Length
 6927              		.loc 1 1709 0
 6928 0046 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6929 0048 5A1C     		adds	r2, r3, #1
 6930 004a FA74     		strb	r2, [r7, #19]
 6931 004c 1A46     		mov	r2, r3
 6932 004e FB68     		ldr	r3, [r7, #12]
 6933 0050 1344     		add	r3, r3, r2
 6934 0052 E922     		movs	r2, #233
 6935 0054 1A71     		strb	r2, [r3, #4]
1710:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = 0xFE;//Special Functions Next (0xB0 0xB0 0xBE)
 6936              		.loc 1 1710 0
 6937 0056 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6938 0058 5A1C     		adds	r2, r3, #1
 6939 005a FA74     		strb	r2, [r7, #19]
 6940 005c 1A46     		mov	r2, r3
 6941 005e FB68     		ldr	r3, [r7, #12]
 6942 0060 1344     		add	r3, r3, r2
 6943 0062 FE22     		movs	r2, #254
 6944 0064 1A71     		strb	r2, [r3, #4]
1711:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = 0xEE;//Complete Pump Configuration Request (sf1)
 6945              		.loc 1 1711 0
 6946 0066 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6947 0068 5A1C     		adds	r2, r3, #1
 6948 006a FA74     		strb	r2, [r7, #19]
 6949 006c 1A46     		mov	r2, r3
 6950 006e FB68     		ldr	r3, [r7, #12]
 6951 0070 1344     		add	r3, r3, r2
 6952 0072 EE22     		movs	r2, #238
 6953 0074 1A71     		strb	r2, [r3, #4]
1712:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = 0xE0;//Complete Pump Configuration Request (sf2)
 6954              		.loc 1 1712 0
 6955 0076 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6956 0078 5A1C     		adds	r2, r3, #1
 6957 007a FA74     		strb	r2, [r7, #19]
 6958 007c 1A46     		mov	r2, r3
 6959 007e FB68     		ldr	r3, [r7, #12]
 6960 0080 1344     		add	r3, r3, r2
 6961 0082 E022     		movs	r2, #224
 6962 0084 1A71     		strb	r2, [r3, #4]
1713:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = 0xE0;//Complete Pump Configuration Request (sf3)
 6963              		.loc 1 1713 0
 6964 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6965 0088 5A1C     		adds	r2, r3, #1
 6966 008a FA74     		strb	r2, [r7, #19]
 6967 008c 1A46     		mov	r2, r3
 6968 008e FB68     		ldr	r3, [r7, #12]
 6969 0090 1344     		add	r3, r3, r2
 6970 0092 E022     		movs	r2, #224
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 154


 6971 0094 1A71     		strb	r2, [r3, #4]
1714:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = 0xFB;
 6972              		.loc 1 1714 0
 6973 0096 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6974 0098 5A1C     		adds	r2, r3, #1
 6975 009a FA74     		strb	r2, [r7, #19]
 6976 009c 1A46     		mov	r2, r3
 6977 009e FB68     		ldr	r3, [r7, #12]
 6978 00a0 1344     		add	r3, r3, r2
 6979 00a2 FB22     		movs	r2, #251
 6980 00a4 1A71     		strb	r2, [r3, #4]
1715:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = GetLRC(puartdisp->_messagetx);
 6981              		.loc 1 1715 0
 6982 00a6 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6983 00a8 5A1C     		adds	r2, r3, #1
 6984 00aa FA74     		strb	r2, [r7, #19]
 6985 00ac 1C46     		mov	r4, r3
 6986 00ae FB68     		ldr	r3, [r7, #12]
 6987 00b0 0433     		adds	r3, r3, #4
 6988 00b2 1846     		mov	r0, r3
 6989 00b4 FFF7FEFF 		bl	GetLRC
 6990 00b8 0346     		mov	r3, r0
 6991 00ba 1A46     		mov	r2, r3
 6992 00bc FB68     		ldr	r3, [r7, #12]
 6993 00be 2344     		add	r3, r3, r4
 6994 00c0 1A71     		strb	r2, [r3, #4]
1716:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = EOM;
 6995              		.loc 1 1716 0
 6996 00c2 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6997 00c4 5A1C     		adds	r2, r3, #1
 6998 00c6 FA74     		strb	r2, [r7, #19]
 6999 00c8 1A46     		mov	r2, r3
 7000 00ca FB68     		ldr	r3, [r7, #12]
 7001 00cc 1344     		add	r3, r3, r2
 7002 00ce F022     		movs	r2, #240
 7003 00d0 1A71     		strb	r2, [r3, #4]
1717:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
1718:.\AdvantageImpl.c ****             
1719:.\AdvantageImpl.c ****             puartdisp->_messagelength = index;
 7004              		.loc 1 1719 0
 7005 00d2 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 7006 00d4 9AB2     		uxth	r2, r3
 7007 00d6 FB68     		ldr	r3, [r7, #12]
 7008 00d8 5A80     		strh	r2, [r3, #2]	@ movhi
1720:.\AdvantageImpl.c ****             puartdisp->_messagestate = PENDING;
 7009              		.loc 1 1720 0
 7010 00da FB68     		ldr	r3, [r7, #12]
 7011 00dc C222     		movs	r2, #194
 7012 00de 1A70     		strb	r2, [r3]
 7013              	.L257:
 7014              	.LBE54:
1721:.\AdvantageImpl.c ****         }
1722:.\AdvantageImpl.c ****     }
1723:.\AdvantageImpl.c **** }
 7015              		.loc 1 1723 0
 7016 00e0 1C37     		adds	r7, r7, #28
 7017              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 155


 7018 00e2 BD46     		mov	sp, r7
 7019              		.cfi_def_cfa_register 13
 7020              		@ sp needed
 7021 00e4 90BD     		pop	{r4, r7, pc}
 7022              		.cfi_endproc
 7023              	.LFE90:
 7024              		.size	PumpCompleteConfiguration, .-PumpCompleteConfiguration
 7025 00e6 00BF     		.section	.text.AcquirePumpCompleteConfiguration,"ax",%progbits
 7026              		.align	2
 7027              		.global	AcquirePumpCompleteConfiguration
 7028              		.thumb
 7029              		.thumb_func
 7030              		.type	AcquirePumpCompleteConfiguration, %function
 7031              	AcquirePumpCompleteConfiguration:
 7032              	.LFB91:
1724:.\AdvantageImpl.c **** 
1725:.\AdvantageImpl.c **** //@Created By: HIJH
1726:.\AdvantageImpl.c **** //@Date: Septembre de 2016
1727:.\AdvantageImpl.c **** //Receives the complete pump configuration information
1728:.\AdvantageImpl.c **** void AcquirePumpCompleteConfiguration(void *pparam)
1729:.\AdvantageImpl.c **** {
 7033              		.loc 1 1729 0
 7034              		.cfi_startproc
 7035              		@ args = 0, pretend = 0, frame = 32
 7036              		@ frame_needed = 1, uses_anonymous_args = 0
 7037 0000 90B5     		push	{r4, r7, lr}
 7038              		.cfi_def_cfa_offset 12
 7039              		.cfi_offset 4, -12
 7040              		.cfi_offset 7, -8
 7041              		.cfi_offset 14, -4
 7042 0002 89B0     		sub	sp, sp, #36
 7043              		.cfi_def_cfa_offset 48
 7044 0004 00AF     		add	r7, sp, #0
 7045              		.cfi_def_cfa_register 7
 7046 0006 7860     		str	r0, [r7, #4]
1730:.\AdvantageImpl.c ****     PPUMPTRANSACTIONJOBCONTEXTPTR pjob = (PPUMPTRANSACTIONJOBCONTEXTPTR)pparam;
 7047              		.loc 1 1730 0
 7048 0008 7B68     		ldr	r3, [r7, #4]
 7049 000a BB61     		str	r3, [r7, #24]
1731:.\AdvantageImpl.c ****     if(pjob)    
 7050              		.loc 1 1731 0
 7051 000c BB69     		ldr	r3, [r7, #24]
 7052 000e 002B     		cmp	r3, #0
 7053 0010 00F01A82 		beq	.L259
 7054              	.LBB55:
1732:.\AdvantageImpl.c ****     {
1733:.\AdvantageImpl.c ****         uint8 index = 0;
 7055              		.loc 1 1733 0
 7056 0014 0023     		movs	r3, #0
 7057 0016 FB75     		strb	r3, [r7, #23]
1734:.\AdvantageImpl.c ****         //NOT USED!! JUST FOR DEBUGGING PURPOSES!
1735:.\AdvantageImpl.c ****         //The "index" variable has been kept in some lines of code just for reference.
1736:.\AdvantageImpl.c ****         uint8 remblocks = (TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[7 + 45*index]) << 0
 7058              		.loc 1 1736 0
 7059 0018 BB69     		ldr	r3, [r7, #24]
 7060 001a D969     		ldr	r1, [r3, #28]
 7061 001c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 156


 7062 001e 1346     		mov	r3, r2
 7063 0020 5B00     		lsls	r3, r3, #1
 7064 0022 1344     		add	r3, r3, r2
 7065 0024 1A01     		lsls	r2, r3, #4
 7066 0026 D31A     		subs	r3, r2, r3
 7067 0028 0733     		adds	r3, r3, #7
 7068 002a 0B44     		add	r3, r3, r1
 7069 002c 93F8A031 		ldrb	r3, [r3, #416]	@ zero_extendqisi2
 7070 0030 1846     		mov	r0, r3
 7071 0032 FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7072 0036 0346     		mov	r3, r0
 7073 0038 1B01     		lsls	r3, r3, #4
 7074 003a DCB2     		uxtb	r4, r3
 7075 003c BB69     		ldr	r3, [r7, #24]
 7076 003e D969     		ldr	r1, [r3, #28]
 7077 0040 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 7078 0042 1346     		mov	r3, r2
 7079 0044 5B00     		lsls	r3, r3, #1
 7080 0046 1344     		add	r3, r3, r2
 7081 0048 1A01     		lsls	r2, r3, #4
 7082 004a D31A     		subs	r3, r2, r3
 7083 004c 0833     		adds	r3, r3, #8
 7084 004e 0B44     		add	r3, r3, r1
 7085 0050 93F8A031 		ldrb	r3, [r3, #416]	@ zero_extendqisi2
 7086 0054 1846     		mov	r0, r3
 7087 0056 FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7088 005a 0346     		mov	r3, r0
 7089 005c DBB2     		uxtb	r3, r3
 7090 005e 2246     		mov	r2, r4
 7091 0060 1343     		orrs	r3, r3, r2
 7092 0062 DBB2     		uxtb	r3, r3
 7093 0064 BB75     		strb	r3, [r7, #22]
1737:.\AdvantageImpl.c ****         //HERE WE ACQUIRE THE MISCELLANEOUS PUMP CONFIGURATION INFORMATION AND STORE IT INTO
1738:.\AdvantageImpl.c ****         //THE PERSISTENT FILE SYSTEM (EEPROM)        
1739:.\AdvantageImpl.c ****         if(pjob->_ppump->_rxbuffer[0x00] == 0xBA)
 7094              		.loc 1 1739 0
 7095 0066 BB69     		ldr	r3, [r7, #24]
 7096 0068 DB69     		ldr	r3, [r3, #28]
 7097 006a 93F8A031 		ldrb	r3, [r3, #416]	@ zero_extendqisi2
 7098 006e BA2B     		cmp	r3, #186
 7099 0070 40F0EA81 		bne	.L259
 7100              	.LBB56:
1740:.\AdvantageImpl.c ****         {
1741:.\AdvantageImpl.c ****             ClearEepromBuffer();
 7101              		.loc 1 1741 0
 7102 0074 FFF7FEFF 		bl	ClearEepromBuffer
1742:.\AdvantageImpl.c ****             bool targetmemoryareafound = false;
 7103              		.loc 1 1742 0
 7104 0078 0023     		movs	r3, #0
 7105 007a FB77     		strb	r3, [r7, #31]
1743:.\AdvantageImpl.c ****             uint16 eeprompumpconfigmemorypageid = 0;
 7106              		.loc 1 1743 0
 7107 007c 0023     		movs	r3, #0
 7108 007e BB83     		strh	r3, [r7, #28]	@ movhi
1744:.\AdvantageImpl.c ****             //WE ALWAYS READ THE PAGE FROM THE EEPROM BEFORE SINCE AFTER MODIFYING ANY FIELD IT MUS
1745:.\AdvantageImpl.c ****             eeprompumpconfigmemorypageid = (uint16)EEPROM_DISPENSER_PUMP1_LAYOUT_PAGE;
 7109              		.loc 1 1745 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 157


 7110 0080 4FF40073 		mov	r3, #512
 7111 0084 BB83     		strh	r3, [r7, #28]	@ movhi
1746:.\AdvantageImpl.c ****             LoadEepromPage(eeprompumpconfigmemorypageid);
 7112              		.loc 1 1746 0
 7113 0086 BB8B     		ldrh	r3, [r7, #28]
 7114 0088 1846     		mov	r0, r3
 7115 008a FFF7FEFF 		bl	LoadEepromPage
1747:.\AdvantageImpl.c ****             if(TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x03]) != (GetEepromBuffer()[0x
 7116              		.loc 1 1747 0
 7117 008e BB69     		ldr	r3, [r7, #24]
 7118 0090 DB69     		ldr	r3, [r3, #28]
 7119 0092 93F8A331 		ldrb	r3, [r3, #419]	@ zero_extendqisi2
 7120 0096 1846     		mov	r0, r3
 7121 0098 FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7122 009c 0346     		mov	r3, r0
 7123 009e 1C46     		mov	r4, r3
 7124 00a0 FFF7FEFF 		bl	GetEepromBuffer
 7125 00a4 0346     		mov	r3, r0
 7126 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7127 00a8 03F00F03 		and	r3, r3, #15
 7128 00ac 9C42     		cmp	r4, r3
 7129 00ae 50D0     		beq	.L261
1748:.\AdvantageImpl.c ****             {
1749:.\AdvantageImpl.c ****                 eeprompumpconfigmemorypageid = (uint16)EEPROM_DISPENSER_PUMP2_LAYOUT_PAGE;
 7130              		.loc 1 1749 0
 7131 00b0 4FF41073 		mov	r3, #576
 7132 00b4 BB83     		strh	r3, [r7, #28]	@ movhi
1750:.\AdvantageImpl.c ****                 LoadEepromPage(eeprompumpconfigmemorypageid);
 7133              		.loc 1 1750 0
 7134 00b6 BB8B     		ldrh	r3, [r7, #28]
 7135 00b8 1846     		mov	r0, r3
 7136 00ba FFF7FEFF 		bl	LoadEepromPage
1751:.\AdvantageImpl.c ****                 if(TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x03]) != (GetEepromBuffer(
 7137              		.loc 1 1751 0
 7138 00be BB69     		ldr	r3, [r7, #24]
 7139 00c0 DB69     		ldr	r3, [r3, #28]
 7140 00c2 93F8A331 		ldrb	r3, [r3, #419]	@ zero_extendqisi2
 7141 00c6 1846     		mov	r0, r3
 7142 00c8 FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7143 00cc 0346     		mov	r3, r0
 7144 00ce 1C46     		mov	r4, r3
 7145 00d0 FFF7FEFF 		bl	GetEepromBuffer
 7146 00d4 0346     		mov	r3, r0
 7147 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7148 00d8 03F00F03 		and	r3, r3, #15
 7149 00dc 9C42     		cmp	r4, r3
 7150 00de 35D0     		beq	.L262
1752:.\AdvantageImpl.c ****                 {
1753:.\AdvantageImpl.c ****                     eeprompumpconfigmemorypageid = (uint16)EEPROM_DISPENSER_PUMP3_LAYOUT_PAGE;
 7151              		.loc 1 1753 0
 7152 00e0 4FF42073 		mov	r3, #640
 7153 00e4 BB83     		strh	r3, [r7, #28]	@ movhi
1754:.\AdvantageImpl.c ****                     LoadEepromPage(eeprompumpconfigmemorypageid);
 7154              		.loc 1 1754 0
 7155 00e6 BB8B     		ldrh	r3, [r7, #28]
 7156 00e8 1846     		mov	r0, r3
 7157 00ea FFF7FEFF 		bl	LoadEepromPage
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 158


1755:.\AdvantageImpl.c ****                     if(TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x03]) != (GetEepromBuf
 7158              		.loc 1 1755 0
 7159 00ee BB69     		ldr	r3, [r7, #24]
 7160 00f0 DB69     		ldr	r3, [r3, #28]
 7161 00f2 93F8A331 		ldrb	r3, [r3, #419]	@ zero_extendqisi2
 7162 00f6 1846     		mov	r0, r3
 7163 00f8 FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7164 00fc 0346     		mov	r3, r0
 7165 00fe 1C46     		mov	r4, r3
 7166 0100 FFF7FEFF 		bl	GetEepromBuffer
 7167 0104 0346     		mov	r3, r0
 7168 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7169 0108 03F00F03 		and	r3, r3, #15
 7170 010c 9C42     		cmp	r4, r3
 7171 010e 1AD0     		beq	.L263
1756:.\AdvantageImpl.c ****                     {
1757:.\AdvantageImpl.c ****                         eeprompumpconfigmemorypageid = (uint16)EEPROM_DISPENSER_PUMP4_LAYOUT_PAGE;
 7172              		.loc 1 1757 0
 7173 0110 4FF43073 		mov	r3, #704
 7174 0114 BB83     		strh	r3, [r7, #28]	@ movhi
1758:.\AdvantageImpl.c ****                         LoadEepromPage(eeprompumpconfigmemorypageid);
 7175              		.loc 1 1758 0
 7176 0116 BB8B     		ldrh	r3, [r7, #28]
 7177 0118 1846     		mov	r0, r3
 7178 011a FFF7FEFF 		bl	LoadEepromPage
1759:.\AdvantageImpl.c ****                         if(TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x03]) == (GetEepro
 7179              		.loc 1 1759 0
 7180 011e BB69     		ldr	r3, [r7, #24]
 7181 0120 DB69     		ldr	r3, [r3, #28]
 7182 0122 93F8A331 		ldrb	r3, [r3, #419]	@ zero_extendqisi2
 7183 0126 1846     		mov	r0, r3
 7184 0128 FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7185 012c 0346     		mov	r3, r0
 7186 012e 1C46     		mov	r4, r3
 7187 0130 FFF7FEFF 		bl	GetEepromBuffer
 7188 0134 0346     		mov	r3, r0
 7189 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7190 0138 03F00F03 		and	r3, r3, #15
 7191 013c 9C42     		cmp	r4, r3
 7192 013e 0AD1     		bne	.L267
1760:.\AdvantageImpl.c ****                             targetmemoryareafound = true;
 7193              		.loc 1 1760 0
 7194 0140 0123     		movs	r3, #1
 7195 0142 FB77     		strb	r3, [r7, #31]
 7196 0144 07E0     		b	.L267
 7197              	.L263:
1761:.\AdvantageImpl.c ****                             
1762:.\AdvantageImpl.c ****                     }else
1763:.\AdvantageImpl.c ****                         targetmemoryareafound = true;
 7198              		.loc 1 1763 0
 7199 0146 0123     		movs	r3, #1
 7200 0148 FB77     		strb	r3, [r7, #31]
 7201 014a 04E0     		b	.L267
 7202              	.L262:
1764:.\AdvantageImpl.c ****                 }else
1765:.\AdvantageImpl.c ****                     targetmemoryareafound = true;
 7203              		.loc 1 1765 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 159


 7204 014c 0123     		movs	r3, #1
 7205 014e FB77     		strb	r3, [r7, #31]
 7206 0150 01E0     		b	.L267
 7207              	.L261:
1766:.\AdvantageImpl.c ****             }else
1767:.\AdvantageImpl.c ****                 targetmemoryareafound = true;
 7208              		.loc 1 1767 0
 7209 0152 0123     		movs	r3, #1
 7210 0154 FB77     		strb	r3, [r7, #31]
 7211              	.L267:
1768:.\AdvantageImpl.c ****             
1769:.\AdvantageImpl.c ****             ///////////////////////////////////////////////////////////////////////////////////////
1770:.\AdvantageImpl.c ****             //JUST RETURN SINCE IT MEANS THAT THE PUMP/POSITION IDENTIFIERS HAVE NOT YET BEEN DEFIN
1771:.\AdvantageImpl.c ****             if(!targetmemoryareafound)
 7212              		.loc 1 1771 0
 7213 0156 FB7F     		ldrb	r3, [r7, #31]
 7214 0158 83F00103 		eor	r3, r3, #1
 7215 015c DBB2     		uxtb	r3, r3
 7216 015e 002B     		cmp	r3, #0
 7217 0160 00D0     		beq	.L268
1772:.\AdvantageImpl.c ****                 return;
 7218              		.loc 1 1772 0
 7219 0162 71E1     		b	.L259
 7220              	.L268:
1773:.\AdvantageImpl.c ****                 
1774:.\AdvantageImpl.c ****             //THE FIRST 16 BYTES ARE RESERVED FOR LOCAL PUMP CONFIGURATION INFORMATION
1775:.\AdvantageImpl.c ****             LPRAWPTR ptreeprom = &(GetEepromBuffer()[0x10]);
 7221              		.loc 1 1775 0
 7222 0164 FFF7FEFF 		bl	GetEepromBuffer
 7223 0168 0346     		mov	r3, r0
 7224 016a 1033     		adds	r3, r3, #16
 7225 016c 3B61     		str	r3, [r7, #16]
1776:.\AdvantageImpl.c ****             
1777:.\AdvantageImpl.c ****             uint8 blkindex = 0;
 7226              		.loc 1 1777 0
 7227 016e 0023     		movs	r3, #0
 7228 0170 FB73     		strb	r3, [r7, #15]
1778:.\AdvantageImpl.c ****             uint8 msglength = (TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x01]) << 0x04)
 7229              		.loc 1 1778 0
 7230 0172 BB69     		ldr	r3, [r7, #24]
 7231 0174 DB69     		ldr	r3, [r3, #28]
 7232 0176 93F8A131 		ldrb	r3, [r3, #417]	@ zero_extendqisi2
 7233 017a 1846     		mov	r0, r3
 7234 017c FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7235 0180 0346     		mov	r3, r0
 7236 0182 1B01     		lsls	r3, r3, #4
 7237 0184 DCB2     		uxtb	r4, r3
 7238 0186 BB69     		ldr	r3, [r7, #24]
 7239 0188 DB69     		ldr	r3, [r3, #28]
 7240 018a 93F8A231 		ldrb	r3, [r3, #418]	@ zero_extendqisi2
 7241 018e 1846     		mov	r0, r3
 7242 0190 FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7243 0194 0346     		mov	r3, r0
 7244 0196 DBB2     		uxtb	r3, r3
 7245 0198 2246     		mov	r2, r4
 7246 019a 1343     		orrs	r3, r3, r2
 7247 019c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 160


 7248 019e BB73     		strb	r3, [r7, #14]
1779:.\AdvantageImpl.c ****             
1780:.\AdvantageImpl.c ****             //0
1781:.\AdvantageImpl.c ****             //Pump Type / Unit Type Code
1782:.\AdvantageImpl.c ****             *ptreeprom = ((TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x09 + 2*blkindex])
 7249              		.loc 1 1782 0
 7250 01a0 BB69     		ldr	r3, [r7, #24]
 7251 01a2 DA69     		ldr	r2, [r3, #28]
 7252 01a4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7253 01a6 5B00     		lsls	r3, r3, #1
 7254 01a8 0933     		adds	r3, r3, #9
 7255 01aa 1344     		add	r3, r3, r2
 7256 01ac 93F8A031 		ldrb	r3, [r3, #416]	@ zero_extendqisi2
 7257 01b0 1846     		mov	r0, r3
 7258 01b2 FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7259 01b6 0346     		mov	r3, r0
 7260 01b8 1B01     		lsls	r3, r3, #4
 7261 01ba DCB2     		uxtb	r4, r3
1783:.\AdvantageImpl.c ****                             (TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x09 + (2*blkinde
 7262              		.loc 1 1783 0
 7263 01bc BB69     		ldr	r3, [r7, #24]
 7264 01be DA69     		ldr	r2, [r3, #28]
 7265 01c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7266 01c2 0533     		adds	r3, r3, #5
 7267 01c4 5B00     		lsls	r3, r3, #1
 7268 01c6 1344     		add	r3, r3, r2
 7269 01c8 93F8A031 		ldrb	r3, [r3, #416]	@ zero_extendqisi2
 7270 01cc 1846     		mov	r0, r3
 7271 01ce FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7272 01d2 0346     		mov	r3, r0
1782:.\AdvantageImpl.c ****                             (TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x09 + (2*blkinde
 7273              		.loc 1 1782 0
 7274 01d4 DBB2     		uxtb	r3, r3
 7275 01d6 03F00F03 		and	r3, r3, #15
 7276 01da DBB2     		uxtb	r3, r3
 7277 01dc 2246     		mov	r2, r4
 7278 01de 1343     		orrs	r3, r3, r2
 7279 01e0 DBB2     		uxtb	r3, r3
 7280 01e2 DAB2     		uxtb	r2, r3
 7281 01e4 3B69     		ldr	r3, [r7, #16]
 7282 01e6 1A70     		strb	r2, [r3]
1784:.\AdvantageImpl.c **** 
1785:.\AdvantageImpl.c ****             //1
1786:.\AdvantageImpl.c ****             ptreeprom++;
 7283              		.loc 1 1786 0
 7284 01e8 3B69     		ldr	r3, [r7, #16]
 7285 01ea 0133     		adds	r3, r3, #1
 7286 01ec 3B61     		str	r3, [r7, #16]
1787:.\AdvantageImpl.c ****             blkindex++;
 7287              		.loc 1 1787 0
 7288 01ee FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7289 01f0 0133     		adds	r3, r3, #1
 7290 01f2 FB73     		strb	r3, [r7, #15]
1788:.\AdvantageImpl.c ****             //Conversion Factor Code
1789:.\AdvantageImpl.c ****             *ptreeprom = ((TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x09 + 2*blkindex])
 7291              		.loc 1 1789 0
 7292 01f4 BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 161


 7293 01f6 DA69     		ldr	r2, [r3, #28]
 7294 01f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7295 01fa 5B00     		lsls	r3, r3, #1
 7296 01fc 0933     		adds	r3, r3, #9
 7297 01fe 1344     		add	r3, r3, r2
 7298 0200 93F8A031 		ldrb	r3, [r3, #416]	@ zero_extendqisi2
 7299 0204 1846     		mov	r0, r3
 7300 0206 FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7301 020a 0346     		mov	r3, r0
 7302 020c 1B01     		lsls	r3, r3, #4
 7303 020e DCB2     		uxtb	r4, r3
1790:.\AdvantageImpl.c ****                             (TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x09 + (2*blkinde
 7304              		.loc 1 1790 0
 7305 0210 BB69     		ldr	r3, [r7, #24]
 7306 0212 DA69     		ldr	r2, [r3, #28]
 7307 0214 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7308 0216 0533     		adds	r3, r3, #5
 7309 0218 5B00     		lsls	r3, r3, #1
 7310 021a 1344     		add	r3, r3, r2
 7311 021c 93F8A031 		ldrb	r3, [r3, #416]	@ zero_extendqisi2
 7312 0220 1846     		mov	r0, r3
 7313 0222 FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7314 0226 0346     		mov	r3, r0
1789:.\AdvantageImpl.c ****                             (TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x09 + (2*blkinde
 7315              		.loc 1 1789 0
 7316 0228 DBB2     		uxtb	r3, r3
 7317 022a 03F00F03 		and	r3, r3, #15
 7318 022e DBB2     		uxtb	r3, r3
 7319 0230 2246     		mov	r2, r4
 7320 0232 1343     		orrs	r3, r3, r2
 7321 0234 DBB2     		uxtb	r3, r3
 7322 0236 DAB2     		uxtb	r2, r3
 7323 0238 3B69     		ldr	r3, [r7, #16]
 7324 023a 1A70     		strb	r2, [r3]
1791:.\AdvantageImpl.c **** 
1792:.\AdvantageImpl.c ****             //2
1793:.\AdvantageImpl.c ****             ptreeprom++;
 7325              		.loc 1 1793 0
 7326 023c 3B69     		ldr	r3, [r7, #16]
 7327 023e 0133     		adds	r3, r3, #1
 7328 0240 3B61     		str	r3, [r7, #16]
1794:.\AdvantageImpl.c ****             blkindex++;
 7329              		.loc 1 1794 0
 7330 0242 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7331 0244 0133     		adds	r3, r3, #1
 7332 0246 FB73     		strb	r3, [r7, #15]
1795:.\AdvantageImpl.c ****             //Money Decimal Point Code
1796:.\AdvantageImpl.c ****             *ptreeprom = ((TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x09 + 2*blkindex])
 7333              		.loc 1 1796 0
 7334 0248 BB69     		ldr	r3, [r7, #24]
 7335 024a DA69     		ldr	r2, [r3, #28]
 7336 024c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7337 024e 5B00     		lsls	r3, r3, #1
 7338 0250 0933     		adds	r3, r3, #9
 7339 0252 1344     		add	r3, r3, r2
 7340 0254 93F8A031 		ldrb	r3, [r3, #416]	@ zero_extendqisi2
 7341 0258 1846     		mov	r0, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 162


 7342 025a FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7343 025e 0346     		mov	r3, r0
 7344 0260 1B01     		lsls	r3, r3, #4
 7345 0262 DCB2     		uxtb	r4, r3
1797:.\AdvantageImpl.c ****                             (TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x09 + (2*blkinde
 7346              		.loc 1 1797 0
 7347 0264 BB69     		ldr	r3, [r7, #24]
 7348 0266 DA69     		ldr	r2, [r3, #28]
 7349 0268 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7350 026a 0533     		adds	r3, r3, #5
 7351 026c 5B00     		lsls	r3, r3, #1
 7352 026e 1344     		add	r3, r3, r2
 7353 0270 93F8A031 		ldrb	r3, [r3, #416]	@ zero_extendqisi2
 7354 0274 1846     		mov	r0, r3
 7355 0276 FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7356 027a 0346     		mov	r3, r0
1796:.\AdvantageImpl.c ****                             (TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x09 + (2*blkinde
 7357              		.loc 1 1796 0
 7358 027c DBB2     		uxtb	r3, r3
 7359 027e 03F00F03 		and	r3, r3, #15
 7360 0282 DBB2     		uxtb	r3, r3
 7361 0284 2246     		mov	r2, r4
 7362 0286 1343     		orrs	r3, r3, r2
 7363 0288 DBB2     		uxtb	r3, r3
 7364 028a DAB2     		uxtb	r2, r3
 7365 028c 3B69     		ldr	r3, [r7, #16]
 7366 028e 1A70     		strb	r2, [r3]
1798:.\AdvantageImpl.c ****                             
1799:.\AdvantageImpl.c ****             //3
1800:.\AdvantageImpl.c ****             ptreeprom++;
 7367              		.loc 1 1800 0
 7368 0290 3B69     		ldr	r3, [r7, #16]
 7369 0292 0133     		adds	r3, r3, #1
 7370 0294 3B61     		str	r3, [r7, #16]
1801:.\AdvantageImpl.c ****             blkindex++;
 7371              		.loc 1 1801 0
 7372 0296 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7373 0298 0133     		adds	r3, r3, #1
 7374 029a FB73     		strb	r3, [r7, #15]
1802:.\AdvantageImpl.c ****             //Volume Decimal Point Code
1803:.\AdvantageImpl.c ****             *ptreeprom = ((TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x09 + 2*blkindex])
 7375              		.loc 1 1803 0
 7376 029c BB69     		ldr	r3, [r7, #24]
 7377 029e DA69     		ldr	r2, [r3, #28]
 7378 02a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7379 02a2 5B00     		lsls	r3, r3, #1
 7380 02a4 0933     		adds	r3, r3, #9
 7381 02a6 1344     		add	r3, r3, r2
 7382 02a8 93F8A031 		ldrb	r3, [r3, #416]	@ zero_extendqisi2
 7383 02ac 1846     		mov	r0, r3
 7384 02ae FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7385 02b2 0346     		mov	r3, r0
 7386 02b4 1B01     		lsls	r3, r3, #4
 7387 02b6 DCB2     		uxtb	r4, r3
1804:.\AdvantageImpl.c ****                             (TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x09 + (2*blkinde
 7388              		.loc 1 1804 0
 7389 02b8 BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 163


 7390 02ba DA69     		ldr	r2, [r3, #28]
 7391 02bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7392 02be 0533     		adds	r3, r3, #5
 7393 02c0 5B00     		lsls	r3, r3, #1
 7394 02c2 1344     		add	r3, r3, r2
 7395 02c4 93F8A031 		ldrb	r3, [r3, #416]	@ zero_extendqisi2
 7396 02c8 1846     		mov	r0, r3
 7397 02ca FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7398 02ce 0346     		mov	r3, r0
1803:.\AdvantageImpl.c ****                             (TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x09 + (2*blkinde
 7399              		.loc 1 1803 0
 7400 02d0 DBB2     		uxtb	r3, r3
 7401 02d2 03F00F03 		and	r3, r3, #15
 7402 02d6 DBB2     		uxtb	r3, r3
 7403 02d8 2246     		mov	r2, r4
 7404 02da 1343     		orrs	r3, r3, r2
 7405 02dc DBB2     		uxtb	r3, r3
 7406 02de DAB2     		uxtb	r2, r3
 7407 02e0 3B69     		ldr	r3, [r7, #16]
 7408 02e2 1A70     		strb	r2, [r3]
1805:.\AdvantageImpl.c ****             
1806:.\AdvantageImpl.c ****             //4
1807:.\AdvantageImpl.c ****             ptreeprom++;
 7409              		.loc 1 1807 0
 7410 02e4 3B69     		ldr	r3, [r7, #16]
 7411 02e6 0133     		adds	r3, r3, #1
 7412 02e8 3B61     		str	r3, [r7, #16]
1808:.\AdvantageImpl.c ****             blkindex++;
 7413              		.loc 1 1808 0
 7414 02ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7415 02ec 0133     		adds	r3, r3, #1
 7416 02ee FB73     		strb	r3, [r7, #15]
1809:.\AdvantageImpl.c ****             //PPU Decimal Point Code
1810:.\AdvantageImpl.c ****             *ptreeprom = ((TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x09 + 2*blkindex])
 7417              		.loc 1 1810 0
 7418 02f0 BB69     		ldr	r3, [r7, #24]
 7419 02f2 DA69     		ldr	r2, [r3, #28]
 7420 02f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7421 02f6 5B00     		lsls	r3, r3, #1
 7422 02f8 0933     		adds	r3, r3, #9
 7423 02fa 1344     		add	r3, r3, r2
 7424 02fc 93F8A031 		ldrb	r3, [r3, #416]	@ zero_extendqisi2
 7425 0300 1846     		mov	r0, r3
 7426 0302 FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7427 0306 0346     		mov	r3, r0
 7428 0308 1B01     		lsls	r3, r3, #4
 7429 030a DCB2     		uxtb	r4, r3
1811:.\AdvantageImpl.c ****                             (TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x09 + (2*blkinde
 7430              		.loc 1 1811 0
 7431 030c BB69     		ldr	r3, [r7, #24]
 7432 030e DA69     		ldr	r2, [r3, #28]
 7433 0310 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7434 0312 0533     		adds	r3, r3, #5
 7435 0314 5B00     		lsls	r3, r3, #1
 7436 0316 1344     		add	r3, r3, r2
 7437 0318 93F8A031 		ldrb	r3, [r3, #416]	@ zero_extendqisi2
 7438 031c 1846     		mov	r0, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 164


 7439 031e FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7440 0322 0346     		mov	r3, r0
1810:.\AdvantageImpl.c ****                             (TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x09 + (2*blkinde
 7441              		.loc 1 1810 0
 7442 0324 DBB2     		uxtb	r3, r3
 7443 0326 03F00F03 		and	r3, r3, #15
 7444 032a DBB2     		uxtb	r3, r3
 7445 032c 2246     		mov	r2, r4
 7446 032e 1343     		orrs	r3, r3, r2
 7447 0330 DBB2     		uxtb	r3, r3
 7448 0332 DAB2     		uxtb	r2, r3
 7449 0334 3B69     		ldr	r3, [r7, #16]
 7450 0336 1A70     		strb	r2, [r3]
1812:.\AdvantageImpl.c **** 
1813:.\AdvantageImpl.c ****             //5
1814:.\AdvantageImpl.c ****             ptreeprom++;
 7451              		.loc 1 1814 0
 7452 0338 3B69     		ldr	r3, [r7, #16]
 7453 033a 0133     		adds	r3, r3, #1
 7454 033c 3B61     		str	r3, [r7, #16]
1815:.\AdvantageImpl.c ****             blkindex++;
 7455              		.loc 1 1815 0
 7456 033e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7457 0340 0133     		adds	r3, r3, #1
 7458 0342 FB73     		strb	r3, [r7, #15]
1816:.\AdvantageImpl.c ****             //5/6/7/8 Digit Money Mode
1817:.\AdvantageImpl.c ****             *ptreeprom = ((TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x09 + 2*blkindex])
 7459              		.loc 1 1817 0
 7460 0344 BB69     		ldr	r3, [r7, #24]
 7461 0346 DA69     		ldr	r2, [r3, #28]
 7462 0348 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7463 034a 5B00     		lsls	r3, r3, #1
 7464 034c 0933     		adds	r3, r3, #9
 7465 034e 1344     		add	r3, r3, r2
 7466 0350 93F8A031 		ldrb	r3, [r3, #416]	@ zero_extendqisi2
 7467 0354 1846     		mov	r0, r3
 7468 0356 FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7469 035a 0346     		mov	r3, r0
 7470 035c 1B01     		lsls	r3, r3, #4
 7471 035e DCB2     		uxtb	r4, r3
1818:.\AdvantageImpl.c ****                             (TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x09 + (2*blkinde
 7472              		.loc 1 1818 0
 7473 0360 BB69     		ldr	r3, [r7, #24]
 7474 0362 DA69     		ldr	r2, [r3, #28]
 7475 0364 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7476 0366 0533     		adds	r3, r3, #5
 7477 0368 5B00     		lsls	r3, r3, #1
 7478 036a 1344     		add	r3, r3, r2
 7479 036c 93F8A031 		ldrb	r3, [r3, #416]	@ zero_extendqisi2
 7480 0370 1846     		mov	r0, r3
 7481 0372 FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7482 0376 0346     		mov	r3, r0
1817:.\AdvantageImpl.c ****                             (TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x09 + (2*blkinde
 7483              		.loc 1 1817 0
 7484 0378 DBB2     		uxtb	r3, r3
 7485 037a 03F00F03 		and	r3, r3, #15
 7486 037e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 165


 7487 0380 2246     		mov	r2, r4
 7488 0382 1343     		orrs	r3, r3, r2
 7489 0384 DBB2     		uxtb	r3, r3
 7490 0386 DAB2     		uxtb	r2, r3
 7491 0388 3B69     		ldr	r3, [r7, #16]
 7492 038a 1A70     		strb	r2, [r3]
1819:.\AdvantageImpl.c **** 
1820:.\AdvantageImpl.c ****             //6
1821:.\AdvantageImpl.c ****             ptreeprom++;
 7493              		.loc 1 1821 0
 7494 038c 3B69     		ldr	r3, [r7, #16]
 7495 038e 0133     		adds	r3, r3, #1
 7496 0390 3B61     		str	r3, [r7, #16]
1822:.\AdvantageImpl.c ****             blkindex++;
 7497              		.loc 1 1822 0
 7498 0392 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7499 0394 0133     		adds	r3, r3, #1
 7500 0396 FB73     		strb	r3, [r7, #15]
1823:.\AdvantageImpl.c ****             //Auto On/Push to Start Mode
1824:.\AdvantageImpl.c ****             *ptreeprom = ((TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x09 + 2*blkindex])
 7501              		.loc 1 1824 0
 7502 0398 BB69     		ldr	r3, [r7, #24]
 7503 039a DA69     		ldr	r2, [r3, #28]
 7504 039c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7505 039e 5B00     		lsls	r3, r3, #1
 7506 03a0 0933     		adds	r3, r3, #9
 7507 03a2 1344     		add	r3, r3, r2
 7508 03a4 93F8A031 		ldrb	r3, [r3, #416]	@ zero_extendqisi2
 7509 03a8 1846     		mov	r0, r3
 7510 03aa FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7511 03ae 0346     		mov	r3, r0
 7512 03b0 1B01     		lsls	r3, r3, #4
 7513 03b2 DCB2     		uxtb	r4, r3
1825:.\AdvantageImpl.c ****                             (TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x09 + (2*blkinde
 7514              		.loc 1 1825 0
 7515 03b4 BB69     		ldr	r3, [r7, #24]
 7516 03b6 DA69     		ldr	r2, [r3, #28]
 7517 03b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 7518 03ba 0533     		adds	r3, r3, #5
 7519 03bc 5B00     		lsls	r3, r3, #1
 7520 03be 1344     		add	r3, r3, r2
 7521 03c0 93F8A031 		ldrb	r3, [r3, #416]	@ zero_extendqisi2
 7522 03c4 1846     		mov	r0, r3
 7523 03c6 FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 7524 03ca 0346     		mov	r3, r0
1824:.\AdvantageImpl.c ****                             (TranslateSpecialFuncionDigit(pjob->_ppump->_rxbuffer[0x09 + (2*blkinde
 7525              		.loc 1 1824 0
 7526 03cc DBB2     		uxtb	r3, r3
 7527 03ce 03F00F03 		and	r3, r3, #15
 7528 03d2 DBB2     		uxtb	r3, r3
 7529 03d4 2246     		mov	r2, r4
 7530 03d6 1343     		orrs	r3, r3, r2
 7531 03d8 DBB2     		uxtb	r3, r3
 7532 03da DAB2     		uxtb	r2, r3
 7533 03dc 3B69     		ldr	r3, [r7, #16]
 7534 03de 1A70     		strb	r2, [r3]
1826:.\AdvantageImpl.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 166


1827:.\AdvantageImpl.c **** 
1828:.\AdvantageImpl.c ****             //STORING BACK THE EEPROM PAGE
1829:.\AdvantageImpl.c ****             StoreEepromPage(eeprompumpconfigmemorypageid);
 7535              		.loc 1 1829 0
 7536 03e0 BB8B     		ldrh	r3, [r7, #28]
 7537 03e2 1846     		mov	r0, r3
 7538 03e4 FFF7FEFF 		bl	StoreEepromPage
1830:.\AdvantageImpl.c ****             AcquireDispenserLayoutInformation(&GetEepromBuffer()[0x10]);
 7539              		.loc 1 1830 0
 7540 03e8 FFF7FEFF 		bl	GetEepromBuffer
 7541 03ec 0346     		mov	r3, r0
 7542 03ee 1033     		adds	r3, r3, #16
 7543 03f0 1846     		mov	r0, r3
 7544 03f2 FFF7FEFF 		bl	AcquireDispenserLayoutInformation
1831:.\AdvantageImpl.c ****          
1832:.\AdvantageImpl.c ****             _g_dispenserlayoutinfo._inconfiguration = false;
 7545              		.loc 1 1832 0
 7546 03f6 164B     		ldr	r3, .L270
 7547 03f8 0022     		movs	r2, #0
 7548 03fa 1A70     		strb	r2, [r3]
1833:.\AdvantageImpl.c ****             _ALLOCATE_SINKMESSAGE_SLOT(psinkmsg);
 7549              		.loc 1 1833 0
 7550 03fc FFF7FEFF 		bl	AllocateMessageSlot
 7551 0400 B860     		str	r0, [r7, #8]
1834:.\AdvantageImpl.c ****             if(psinkmsg)
 7552              		.loc 1 1834 0
 7553 0402 BB68     		ldr	r3, [r7, #8]
 7554 0404 002B     		cmp	r3, #0
 7555 0406 0CD0     		beq	.L269
1835:.\AdvantageImpl.c ****             {
1836:.\AdvantageImpl.c ****                 psinkmsg->_messageid = DISPENSER_LOAD_EEPROM_SETTINGS;
 7556              		.loc 1 1836 0
 7557 0408 BB68     		ldr	r3, [r7, #8]
 7558 040a 0D22     		movs	r2, #13
 7559 040c 5A70     		strb	r2, [r3, #1]
1837:.\AdvantageImpl.c ****                 psinkmsg->_messagedelay = _SINK_TIMEOUT_1S_;
 7560              		.loc 1 1837 0
 7561 040e BB68     		ldr	r3, [r7, #8]
 7562 0410 4FF47A72 		mov	r2, #1000
 7563 0414 9A80     		strh	r2, [r3, #4]	@ movhi
1838:.\AdvantageImpl.c ****                 psinkmsg->_messagetype = FIRSTFOUND;
 7564              		.loc 1 1838 0
 7565 0416 BB68     		ldr	r3, [r7, #8]
 7566 0418 0322     		movs	r2, #3
 7567 041a 9A70     		strb	r2, [r3, #2]
1839:.\AdvantageImpl.c ****                 psinkmsg->_messagestate = SINK_BUSY;
 7568              		.loc 1 1839 0
 7569 041c BB68     		ldr	r3, [r7, #8]
 7570 041e 0322     		movs	r2, #3
 7571 0420 DA70     		strb	r2, [r3, #3]
 7572              	.L269:
1840:.\AdvantageImpl.c ****             }
1841:.\AdvantageImpl.c ****             
1842:.\AdvantageImpl.c ****             _REALLOCATE_SINKMESSAGE_SLOT(psinkmsg);
 7573              		.loc 1 1842 0
 7574 0422 FFF7FEFF 		bl	AllocateMessageSlot
 7575 0426 B860     		str	r0, [r7, #8]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 167


1843:.\AdvantageImpl.c ****             if(psinkmsg)
 7576              		.loc 1 1843 0
 7577 0428 BB68     		ldr	r3, [r7, #8]
 7578 042a 002B     		cmp	r3, #0
 7579 042c 0CD0     		beq	.L259
1844:.\AdvantageImpl.c ****             {
1845:.\AdvantageImpl.c ****                 psinkmsg->_messageid = DISPENSER_CONFIGURE_PRICES;
 7580              		.loc 1 1845 0
 7581 042e BB68     		ldr	r3, [r7, #8]
 7582 0430 1022     		movs	r2, #16
 7583 0432 5A70     		strb	r2, [r3, #1]
1846:.\AdvantageImpl.c ****                 psinkmsg->_messagedelay = _SINK_TIMEOUT_2S_;
 7584              		.loc 1 1846 0
 7585 0434 BB68     		ldr	r3, [r7, #8]
 7586 0436 4FF4FA62 		mov	r2, #2000
 7587 043a 9A80     		strh	r2, [r3, #4]	@ movhi
1847:.\AdvantageImpl.c ****                 psinkmsg->_messagetype = FIRSTFOUND;
 7588              		.loc 1 1847 0
 7589 043c BB68     		ldr	r3, [r7, #8]
 7590 043e 0322     		movs	r2, #3
 7591 0440 9A70     		strb	r2, [r3, #2]
1848:.\AdvantageImpl.c ****                 psinkmsg->_messagestate = SINK_BUSY;
 7592              		.loc 1 1848 0
 7593 0442 BB68     		ldr	r3, [r7, #8]
 7594 0444 0322     		movs	r2, #3
 7595 0446 DA70     		strb	r2, [r3, #3]
 7596              	.L259:
 7597              	.LBE56:
 7598              	.LBE55:
1849:.\AdvantageImpl.c ****             }
1850:.\AdvantageImpl.c ****         }
1851:.\AdvantageImpl.c ****     }
1852:.\AdvantageImpl.c **** }
 7599              		.loc 1 1852 0
 7600 0448 2437     		adds	r7, r7, #36
 7601              		.cfi_def_cfa_offset 12
 7602 044a BD46     		mov	sp, r7
 7603              		.cfi_def_cfa_register 13
 7604              		@ sp needed
 7605 044c 90BD     		pop	{r4, r7, pc}
 7606              	.L271:
 7607 044e 00BF     		.align	2
 7608              	.L270:
 7609 0450 00000000 		.word	_g_dispenserlayoutinfo
 7610              		.cfi_endproc
 7611              	.LFE91:
 7612              		.size	AcquirePumpCompleteConfiguration, .-AcquirePumpCompleteConfiguration
 7613              		.section	.text.AcquireDispenserLayoutInformation,"ax",%progbits
 7614              		.align	2
 7615              		.global	AcquireDispenserLayoutInformation
 7616              		.thumb
 7617              		.thumb_func
 7618              		.type	AcquireDispenserLayoutInformation, %function
 7619              	AcquireDispenserLayoutInformation:
 7620              	.LFB92:
1853:.\AdvantageImpl.c **** 
1854:.\AdvantageImpl.c **** //@Created By: HIJH
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 168


1855:.\AdvantageImpl.c **** //@Septembre de 2016
1856:.\AdvantageImpl.c **** void AcquireDispenserLayoutInformation(LPVOID pparam)
1857:.\AdvantageImpl.c **** {
 7621              		.loc 1 1857 0
 7622              		.cfi_startproc
 7623              		@ args = 0, pretend = 0, frame = 16
 7624              		@ frame_needed = 1, uses_anonymous_args = 0
 7625              		@ link register save eliminated.
 7626 0000 80B4     		push	{r7}
 7627              		.cfi_def_cfa_offset 4
 7628              		.cfi_offset 7, -4
 7629 0002 85B0     		sub	sp, sp, #20
 7630              		.cfi_def_cfa_offset 24
 7631 0004 00AF     		add	r7, sp, #0
 7632              		.cfi_def_cfa_register 7
 7633 0006 7860     		str	r0, [r7, #4]
1858:.\AdvantageImpl.c ****     LPRAWPTR ptrbuff = (LPRAWPTR)pparam;
 7634              		.loc 1 1858 0
 7635 0008 7B68     		ldr	r3, [r7, #4]
 7636 000a FB60     		str	r3, [r7, #12]
1859:.\AdvantageImpl.c ****     
1860:.\AdvantageImpl.c ****     _g_dispenserlayoutinfo._hosesposition3 = 0x00;
 7637              		.loc 1 1860 0
 7638 000c C04B     		ldr	r3, .L334
 7639 000e 0022     		movs	r2, #0
 7640 0010 5A71     		strb	r2, [r3, #5]
1861:.\AdvantageImpl.c ****     _g_dispenserlayoutinfo._hosesposition4 = 0x00;
 7641              		.loc 1 1861 0
 7642 0012 BF4B     		ldr	r3, .L334
 7643 0014 0022     		movs	r2, #0
 7644 0016 9A71     		strb	r2, [r3, #6]
1862:.\AdvantageImpl.c ****     if(_g_dispenserlayoutinfo._numpositions == 0x02)
 7645              		.loc 1 1862 0
 7646 0018 BD4B     		ldr	r3, .L334
 7647 001a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 7648 001c 022B     		cmp	r3, #2
 7649 001e 40F09C80 		bne	.L273
1863:.\AdvantageImpl.c ****     {
1864:.\AdvantageImpl.c ****         //PLEASE CHECK THE DOCUMENTATION TO UNDERSTAND THE COMPARISON VALUES
1865:.\AdvantageImpl.c ****         switch(ptrbuff[0x00])
 7650              		.loc 1 1865 0
 7651 0022 FB68     		ldr	r3, [r7, #12]
 7652 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7653 0026 103B     		subs	r3, r3, #16
 7654 0028 172B     		cmp	r3, #23
 7655 002a 00F28D81 		bhi	.L290
 7656 002e 01A2     		adr	r2, .L276
 7657 0030 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7658              		.p2align 2
 7659              	.L276:
 7660 0034 95000000 		.word	.L275+1
 7661 0038 A3000000 		.word	.L277+1
 7662 003c B1000000 		.word	.L278+1
 7663 0040 BF000000 		.word	.L279+1
 7664 0044 CD000000 		.word	.L280+1
 7665 0048 DB000000 		.word	.L281+1
 7666 004c 49030000 		.word	.L290+1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 169


 7667 0050 49030000 		.word	.L290+1
 7668 0054 49030000 		.word	.L290+1
 7669 0058 49030000 		.word	.L290+1
 7670 005c 49030000 		.word	.L290+1
 7671 0060 49030000 		.word	.L290+1
 7672 0064 49030000 		.word	.L290+1
 7673 0068 49030000 		.word	.L290+1
 7674 006c 49030000 		.word	.L290+1
 7675 0070 49030000 		.word	.L290+1
 7676 0074 E9000000 		.word	.L282+1
 7677 0078 F7000000 		.word	.L283+1
 7678 007c 05010000 		.word	.L284+1
 7679 0080 13010000 		.word	.L285+1
 7680 0084 21010000 		.word	.L286+1
 7681 0088 2F010000 		.word	.L287+1
 7682 008c 3D010000 		.word	.L288+1
 7683 0090 4B010000 		.word	.L289+1
 7684              		.p2align 1
 7685              	.L275:
1866:.\AdvantageImpl.c ****         {
1867:.\AdvantageImpl.c ****             //Multi-Product Dispenser
1868:.\AdvantageImpl.c ****             case 0x10://MPD with 1 grade/hose per side
1869:.\AdvantageImpl.c ****             {
1870:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x01;
 7686              		.loc 1 1870 0
 7687 0094 9E4B     		ldr	r3, .L334
 7688 0096 0122     		movs	r2, #1
 7689 0098 DA70     		strb	r2, [r3, #3]
1871:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x01;
 7690              		.loc 1 1871 0
 7691 009a 9D4B     		ldr	r3, .L334
 7692 009c 0122     		movs	r2, #1
 7693 009e 1A71     		strb	r2, [r3, #4]
1872:.\AdvantageImpl.c ****                 break;
 7694              		.loc 1 1872 0
 7695 00a0 5AE0     		b	.L274
 7696              	.L277:
1873:.\AdvantageImpl.c ****             }
1874:.\AdvantageImpl.c ****             case 0x11://MPD with 2 grades/hoses per side
1875:.\AdvantageImpl.c ****             {
1876:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x02;
 7697              		.loc 1 1876 0
 7698 00a2 9B4B     		ldr	r3, .L334
 7699 00a4 0222     		movs	r2, #2
 7700 00a6 DA70     		strb	r2, [r3, #3]
1877:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x02;
 7701              		.loc 1 1877 0
 7702 00a8 994B     		ldr	r3, .L334
 7703 00aa 0222     		movs	r2, #2
 7704 00ac 1A71     		strb	r2, [r3, #4]
1878:.\AdvantageImpl.c ****                 break;
 7705              		.loc 1 1878 0
 7706 00ae 53E0     		b	.L274
 7707              	.L278:
1879:.\AdvantageImpl.c ****             }
1880:.\AdvantageImpl.c ****             case 0x12://MPD with 3 grades/hoses per side
1881:.\AdvantageImpl.c ****             {
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 170


1882:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x03;
 7708              		.loc 1 1882 0
 7709 00b0 974B     		ldr	r3, .L334
 7710 00b2 0322     		movs	r2, #3
 7711 00b4 DA70     		strb	r2, [r3, #3]
1883:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x03;
 7712              		.loc 1 1883 0
 7713 00b6 964B     		ldr	r3, .L334
 7714 00b8 0322     		movs	r2, #3
 7715 00ba 1A71     		strb	r2, [r3, #4]
1884:.\AdvantageImpl.c ****                 break;
 7716              		.loc 1 1884 0
 7717 00bc 4CE0     		b	.L274
 7718              	.L279:
1885:.\AdvantageImpl.c ****             }
1886:.\AdvantageImpl.c ****             case 0x13://MPD with 4 grades/hoses per side
1887:.\AdvantageImpl.c ****             {
1888:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x04;
 7719              		.loc 1 1888 0
 7720 00be 944B     		ldr	r3, .L334
 7721 00c0 0422     		movs	r2, #4
 7722 00c2 DA70     		strb	r2, [r3, #3]
1889:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x04;
 7723              		.loc 1 1889 0
 7724 00c4 924B     		ldr	r3, .L334
 7725 00c6 0422     		movs	r2, #4
 7726 00c8 1A71     		strb	r2, [r3, #4]
1890:.\AdvantageImpl.c ****                 break;
 7727              		.loc 1 1890 0
 7728 00ca 45E0     		b	.L274
 7729              	.L280:
1891:.\AdvantageImpl.c ****             }
1892:.\AdvantageImpl.c ****             case 0x14://MPD with 5 grades/hoses per side
1893:.\AdvantageImpl.c ****             {
1894:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x05;
 7730              		.loc 1 1894 0
 7731 00cc 904B     		ldr	r3, .L334
 7732 00ce 0522     		movs	r2, #5
 7733 00d0 DA70     		strb	r2, [r3, #3]
1895:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x05;
 7734              		.loc 1 1895 0
 7735 00d2 8F4B     		ldr	r3, .L334
 7736 00d4 0522     		movs	r2, #5
 7737 00d6 1A71     		strb	r2, [r3, #4]
1896:.\AdvantageImpl.c ****                 break;
 7738              		.loc 1 1896 0
 7739 00d8 3EE0     		b	.L274
 7740              	.L281:
1897:.\AdvantageImpl.c ****             }
1898:.\AdvantageImpl.c ****             case 0x15://MPD with 6 grades/hoses per side
1899:.\AdvantageImpl.c ****             {
1900:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x05;
 7741              		.loc 1 1900 0
 7742 00da 8D4B     		ldr	r3, .L334
 7743 00dc 0522     		movs	r2, #5
 7744 00de DA70     		strb	r2, [r3, #3]
1901:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x05;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 171


 7745              		.loc 1 1901 0
 7746 00e0 8B4B     		ldr	r3, .L334
 7747 00e2 0522     		movs	r2, #5
 7748 00e4 1A71     		strb	r2, [r3, #4]
1902:.\AdvantageImpl.c ****                 break;
 7749              		.loc 1 1902 0
 7750 00e6 37E0     		b	.L274
 7751              	.L282:
1903:.\AdvantageImpl.c ****             }
1904:.\AdvantageImpl.c ****             //Single-Hose Multi-Product Dispenser
1905:.\AdvantageImpl.c ****             case 0x20://SHMPD 2+0 (2 grades, 1 hose/side)
1906:.\AdvantageImpl.c ****             {
1907:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x01;
 7752              		.loc 1 1907 0
 7753 00e8 894B     		ldr	r3, .L334
 7754 00ea 0122     		movs	r2, #1
 7755 00ec DA70     		strb	r2, [r3, #3]
1908:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x01;
 7756              		.loc 1 1908 0
 7757 00ee 884B     		ldr	r3, .L334
 7758 00f0 0122     		movs	r2, #1
 7759 00f2 1A71     		strb	r2, [r3, #4]
1909:.\AdvantageImpl.c ****                 break;
 7760              		.loc 1 1909 0
 7761 00f4 30E0     		b	.L274
 7762              	.L283:
1910:.\AdvantageImpl.c ****             }
1911:.\AdvantageImpl.c ****             case 0x21://SHMPD 2+1 (3 grades, 2 hoses/side)
1912:.\AdvantageImpl.c ****             {
1913:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x02;
 7763              		.loc 1 1913 0
 7764 00f6 864B     		ldr	r3, .L334
 7765 00f8 0222     		movs	r2, #2
 7766 00fa DA70     		strb	r2, [r3, #3]
1914:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x02;
 7767              		.loc 1 1914 0
 7768 00fc 844B     		ldr	r3, .L334
 7769 00fe 0222     		movs	r2, #2
 7770 0100 1A71     		strb	r2, [r3, #4]
1915:.\AdvantageImpl.c ****                 break;
 7771              		.loc 1 1915 0
 7772 0102 29E0     		b	.L274
 7773              	.L284:
1916:.\AdvantageImpl.c ****             }
1917:.\AdvantageImpl.c ****             case 0x22://SHMPD 3+0 (3 grades, 1 hose/side)
1918:.\AdvantageImpl.c ****             {
1919:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x01;
 7774              		.loc 1 1919 0
 7775 0104 824B     		ldr	r3, .L334
 7776 0106 0122     		movs	r2, #1
 7777 0108 DA70     		strb	r2, [r3, #3]
1920:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x01;
 7778              		.loc 1 1920 0
 7779 010a 814B     		ldr	r3, .L334
 7780 010c 0122     		movs	r2, #1
 7781 010e 1A71     		strb	r2, [r3, #4]
1921:.\AdvantageImpl.c ****                 break;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 172


 7782              		.loc 1 1921 0
 7783 0110 22E0     		b	.L274
 7784              	.L285:
1922:.\AdvantageImpl.c ****             }
1923:.\AdvantageImpl.c ****             case 0x23://SHMPD 3+1 (4 grades, 2 hoses/side)
1924:.\AdvantageImpl.c ****             {
1925:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x02;
 7785              		.loc 1 1925 0
 7786 0112 7F4B     		ldr	r3, .L334
 7787 0114 0222     		movs	r2, #2
 7788 0116 DA70     		strb	r2, [r3, #3]
1926:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x02;
 7789              		.loc 1 1926 0
 7790 0118 7D4B     		ldr	r3, .L334
 7791 011a 0222     		movs	r2, #2
 7792 011c 1A71     		strb	r2, [r3, #4]
1927:.\AdvantageImpl.c ****                 break;
 7793              		.loc 1 1927 0
 7794 011e 1BE0     		b	.L274
 7795              	.L286:
1928:.\AdvantageImpl.c ****             }
1929:.\AdvantageImpl.c ****             case 0x24://SHMPD 4+0 (4 grades, 1 hose/side)
1930:.\AdvantageImpl.c ****             {
1931:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x01;
 7796              		.loc 1 1931 0
 7797 0120 7B4B     		ldr	r3, .L334
 7798 0122 0122     		movs	r2, #1
 7799 0124 DA70     		strb	r2, [r3, #3]
1932:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x01;
 7800              		.loc 1 1932 0
 7801 0126 7A4B     		ldr	r3, .L334
 7802 0128 0122     		movs	r2, #1
 7803 012a 1A71     		strb	r2, [r3, #4]
1933:.\AdvantageImpl.c ****                 break;
 7804              		.loc 1 1933 0
 7805 012c 14E0     		b	.L274
 7806              	.L287:
1934:.\AdvantageImpl.c ****             }
1935:.\AdvantageImpl.c ****             case 0x25://SHMPD 4+1 (5 grades, 2 hoses/side)
1936:.\AdvantageImpl.c ****             {
1937:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x02;
 7807              		.loc 1 1937 0
 7808 012e 784B     		ldr	r3, .L334
 7809 0130 0222     		movs	r2, #2
 7810 0132 DA70     		strb	r2, [r3, #3]
1938:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x02;
 7811              		.loc 1 1938 0
 7812 0134 764B     		ldr	r3, .L334
 7813 0136 0222     		movs	r2, #2
 7814 0138 1A71     		strb	r2, [r3, #4]
1939:.\AdvantageImpl.c ****                 break;
 7815              		.loc 1 1939 0
 7816 013a 0DE0     		b	.L274
 7817              	.L288:
1940:.\AdvantageImpl.c ****             }
1941:.\AdvantageImpl.c ****             case 0x26://SHMPD 5+0 (5 grades, 1 hose/side)
1942:.\AdvantageImpl.c ****             {
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 173


1943:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x01;
 7818              		.loc 1 1943 0
 7819 013c 744B     		ldr	r3, .L334
 7820 013e 0122     		movs	r2, #1
 7821 0140 DA70     		strb	r2, [r3, #3]
1944:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x01;
 7822              		.loc 1 1944 0
 7823 0142 734B     		ldr	r3, .L334
 7824 0144 0122     		movs	r2, #1
 7825 0146 1A71     		strb	r2, [r3, #4]
1945:.\AdvantageImpl.c ****                 break;
 7826              		.loc 1 1945 0
 7827 0148 06E0     		b	.L274
 7828              	.L289:
1946:.\AdvantageImpl.c ****             }
1947:.\AdvantageImpl.c ****             case 0x27://SHMPD 5+1 (6 grades, 2 hoses/side)
1948:.\AdvantageImpl.c ****             {
1949:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x02;
 7829              		.loc 1 1949 0
 7830 014a 714B     		ldr	r3, .L334
 7831 014c 0222     		movs	r2, #2
 7832 014e DA70     		strb	r2, [r3, #3]
1950:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x02;
 7833              		.loc 1 1950 0
 7834 0150 6F4B     		ldr	r3, .L334
 7835 0152 0222     		movs	r2, #2
 7836 0154 1A71     		strb	r2, [r3, #4]
1951:.\AdvantageImpl.c ****                 break;
 7837              		.loc 1 1951 0
 7838 0156 00BF     		nop
 7839              	.L274:
 7840 0158 F6E0     		b	.L290
 7841              	.L273:
1952:.\AdvantageImpl.c ****             }
1953:.\AdvantageImpl.c ****             //MISSING (NOT NEEDED) ...
1954:.\AdvantageImpl.c ****             //0x28 ~ 0x29
1955:.\AdvantageImpl.c ****             //0x3X Multi-Hose Blender
1956:.\AdvantageImpl.c ****             //0x4X Single-Hose Blender
1957:.\AdvantageImpl.c ****             //0x50 MH Hybrid Blender
1958:.\AdvantageImpl.c ****         }
1959:.\AdvantageImpl.c ****     }
1960:.\AdvantageImpl.c ****     else if(_g_dispenserlayoutinfo._numpositions == 0x04)
 7842              		.loc 1 1960 0
 7843 015a 6D4B     		ldr	r3, .L334
 7844 015c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 7845 015e 042B     		cmp	r3, #4
 7846 0160 40F0F280 		bne	.L290
1961:.\AdvantageImpl.c ****     {
1962:.\AdvantageImpl.c ****         //PLEASE CHECK THE DOCUMENTATION TO UNDERSTAND THE COMPARISON VALUES
1963:.\AdvantageImpl.c ****         switch(ptrbuff[0x00])
 7847              		.loc 1 1963 0
 7848 0164 FB68     		ldr	r3, [r7, #12]
 7849 0166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7850 0168 103B     		subs	r3, r3, #16
 7851 016a 172B     		cmp	r3, #23
 7852 016c 00F2EC80 		bhi	.L290
 7853 0170 01A2     		adr	r2, .L292
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 174


 7854 0172 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7855 0176 00BF     		.p2align 2
 7856              	.L292:
 7857 0178 D9010000 		.word	.L291+1
 7858 017c F3010000 		.word	.L293+1
 7859 0180 0D020000 		.word	.L294+1
 7860 0184 27020000 		.word	.L295+1
 7861 0188 41020000 		.word	.L296+1
 7862 018c 5B020000 		.word	.L297+1
 7863 0190 49030000 		.word	.L290+1
 7864 0194 49030000 		.word	.L290+1
 7865 0198 49030000 		.word	.L290+1
 7866 019c 49030000 		.word	.L290+1
 7867 01a0 49030000 		.word	.L290+1
 7868 01a4 49030000 		.word	.L290+1
 7869 01a8 49030000 		.word	.L290+1
 7870 01ac 49030000 		.word	.L290+1
 7871 01b0 49030000 		.word	.L290+1
 7872 01b4 49030000 		.word	.L290+1
 7873 01b8 75020000 		.word	.L298+1
 7874 01bc 8F020000 		.word	.L299+1
 7875 01c0 A9020000 		.word	.L300+1
 7876 01c4 C3020000 		.word	.L301+1
 7877 01c8 DD020000 		.word	.L302+1
 7878 01cc F7020000 		.word	.L303+1
 7879 01d0 15030000 		.word	.L304+1
 7880 01d4 2F030000 		.word	.L305+1
 7881              		.p2align 1
 7882              	.L291:
1964:.\AdvantageImpl.c ****         {
1965:.\AdvantageImpl.c ****             //Multi-Product Dispenser
1966:.\AdvantageImpl.c ****             case 0x10://MPD with 1 grade/hose per side
1967:.\AdvantageImpl.c ****             {
1968:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x01;
 7883              		.loc 1 1968 0
 7884 01d8 4D4B     		ldr	r3, .L334
 7885 01da 0122     		movs	r2, #1
 7886 01dc DA70     		strb	r2, [r3, #3]
1969:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x01;
 7887              		.loc 1 1969 0
 7888 01de 4C4B     		ldr	r3, .L334
 7889 01e0 0122     		movs	r2, #1
 7890 01e2 1A71     		strb	r2, [r3, #4]
1970:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition3 = 0x01;
 7891              		.loc 1 1970 0
 7892 01e4 4A4B     		ldr	r3, .L334
 7893 01e6 0122     		movs	r2, #1
 7894 01e8 5A71     		strb	r2, [r3, #5]
1971:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition4 = 0x01;
 7895              		.loc 1 1971 0
 7896 01ea 494B     		ldr	r3, .L334
 7897 01ec 0122     		movs	r2, #1
 7898 01ee 9A71     		strb	r2, [r3, #6]
1972:.\AdvantageImpl.c ****                 break;
 7899              		.loc 1 1972 0
 7900 01f0 AAE0     		b	.L290
 7901              	.L293:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 175


1973:.\AdvantageImpl.c ****             }
1974:.\AdvantageImpl.c ****             case 0x11://MPD with 2 grades/hoses per side
1975:.\AdvantageImpl.c ****             {
1976:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x02;
 7902              		.loc 1 1976 0
 7903 01f2 474B     		ldr	r3, .L334
 7904 01f4 0222     		movs	r2, #2
 7905 01f6 DA70     		strb	r2, [r3, #3]
1977:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x02;
 7906              		.loc 1 1977 0
 7907 01f8 454B     		ldr	r3, .L334
 7908 01fa 0222     		movs	r2, #2
 7909 01fc 1A71     		strb	r2, [r3, #4]
1978:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition3 = 0x02;
 7910              		.loc 1 1978 0
 7911 01fe 444B     		ldr	r3, .L334
 7912 0200 0222     		movs	r2, #2
 7913 0202 5A71     		strb	r2, [r3, #5]
1979:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition4 = 0x02;
 7914              		.loc 1 1979 0
 7915 0204 424B     		ldr	r3, .L334
 7916 0206 0222     		movs	r2, #2
 7917 0208 9A71     		strb	r2, [r3, #6]
1980:.\AdvantageImpl.c ****                 break;
 7918              		.loc 1 1980 0
 7919 020a 9DE0     		b	.L290
 7920              	.L294:
1981:.\AdvantageImpl.c ****             }
1982:.\AdvantageImpl.c ****             case 0x12://MPD with 3 grades/hoses per side
1983:.\AdvantageImpl.c ****             {
1984:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x03;
 7921              		.loc 1 1984 0
 7922 020c 404B     		ldr	r3, .L334
 7923 020e 0322     		movs	r2, #3
 7924 0210 DA70     		strb	r2, [r3, #3]
1985:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x03;
 7925              		.loc 1 1985 0
 7926 0212 3F4B     		ldr	r3, .L334
 7927 0214 0322     		movs	r2, #3
 7928 0216 1A71     		strb	r2, [r3, #4]
1986:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition3 = 0x03;
 7929              		.loc 1 1986 0
 7930 0218 3D4B     		ldr	r3, .L334
 7931 021a 0322     		movs	r2, #3
 7932 021c 5A71     		strb	r2, [r3, #5]
1987:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition4 = 0x03;
 7933              		.loc 1 1987 0
 7934 021e 3C4B     		ldr	r3, .L334
 7935 0220 0322     		movs	r2, #3
 7936 0222 9A71     		strb	r2, [r3, #6]
1988:.\AdvantageImpl.c ****                 break;
 7937              		.loc 1 1988 0
 7938 0224 90E0     		b	.L290
 7939              	.L295:
1989:.\AdvantageImpl.c ****             }
1990:.\AdvantageImpl.c ****             case 0x13://MPD with 4 grades/hoses per side
1991:.\AdvantageImpl.c ****             {
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 176


1992:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x04;
 7940              		.loc 1 1992 0
 7941 0226 3A4B     		ldr	r3, .L334
 7942 0228 0422     		movs	r2, #4
 7943 022a DA70     		strb	r2, [r3, #3]
1993:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x04;
 7944              		.loc 1 1993 0
 7945 022c 384B     		ldr	r3, .L334
 7946 022e 0422     		movs	r2, #4
 7947 0230 1A71     		strb	r2, [r3, #4]
1994:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition3 = 0x04;
 7948              		.loc 1 1994 0
 7949 0232 374B     		ldr	r3, .L334
 7950 0234 0422     		movs	r2, #4
 7951 0236 5A71     		strb	r2, [r3, #5]
1995:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition4 = 0x04;
 7952              		.loc 1 1995 0
 7953 0238 354B     		ldr	r3, .L334
 7954 023a 0422     		movs	r2, #4
 7955 023c 9A71     		strb	r2, [r3, #6]
1996:.\AdvantageImpl.c ****                 break;
 7956              		.loc 1 1996 0
 7957 023e 83E0     		b	.L290
 7958              	.L296:
1997:.\AdvantageImpl.c ****             }
1998:.\AdvantageImpl.c ****             case 0x14://MPD with 5 grades/hoses per side
1999:.\AdvantageImpl.c ****             {
2000:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x05;
 7959              		.loc 1 2000 0
 7960 0240 334B     		ldr	r3, .L334
 7961 0242 0522     		movs	r2, #5
 7962 0244 DA70     		strb	r2, [r3, #3]
2001:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x05;
 7963              		.loc 1 2001 0
 7964 0246 324B     		ldr	r3, .L334
 7965 0248 0522     		movs	r2, #5
 7966 024a 1A71     		strb	r2, [r3, #4]
2002:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition3 = 0x05;
 7967              		.loc 1 2002 0
 7968 024c 304B     		ldr	r3, .L334
 7969 024e 0522     		movs	r2, #5
 7970 0250 5A71     		strb	r2, [r3, #5]
2003:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition4 = 0x05;
 7971              		.loc 1 2003 0
 7972 0252 2F4B     		ldr	r3, .L334
 7973 0254 0522     		movs	r2, #5
 7974 0256 9A71     		strb	r2, [r3, #6]
2004:.\AdvantageImpl.c ****                 break;
 7975              		.loc 1 2004 0
 7976 0258 76E0     		b	.L290
 7977              	.L297:
2005:.\AdvantageImpl.c ****             }
2006:.\AdvantageImpl.c ****             case 0x15://MPD with 6 grades/hoses per side
2007:.\AdvantageImpl.c ****             {
2008:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x05;
 7978              		.loc 1 2008 0
 7979 025a 2D4B     		ldr	r3, .L334
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 177


 7980 025c 0522     		movs	r2, #5
 7981 025e DA70     		strb	r2, [r3, #3]
2009:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x05;
 7982              		.loc 1 2009 0
 7983 0260 2B4B     		ldr	r3, .L334
 7984 0262 0522     		movs	r2, #5
 7985 0264 1A71     		strb	r2, [r3, #4]
2010:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition3 = 0x05;
 7986              		.loc 1 2010 0
 7987 0266 2A4B     		ldr	r3, .L334
 7988 0268 0522     		movs	r2, #5
 7989 026a 5A71     		strb	r2, [r3, #5]
2011:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition4 = 0x05;
 7990              		.loc 1 2011 0
 7991 026c 284B     		ldr	r3, .L334
 7992 026e 0522     		movs	r2, #5
 7993 0270 9A71     		strb	r2, [r3, #6]
2012:.\AdvantageImpl.c ****                 break;
 7994              		.loc 1 2012 0
 7995 0272 69E0     		b	.L290
 7996              	.L298:
2013:.\AdvantageImpl.c ****             }
2014:.\AdvantageImpl.c ****             //Single-Hose Multi-Product Dispenser
2015:.\AdvantageImpl.c ****             case 0x20://SHMPD 2+0 (2 grades, 1 hose/side)
2016:.\AdvantageImpl.c ****             {
2017:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x01;
 7997              		.loc 1 2017 0
 7998 0274 264B     		ldr	r3, .L334
 7999 0276 0122     		movs	r2, #1
 8000 0278 DA70     		strb	r2, [r3, #3]
2018:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x01;
 8001              		.loc 1 2018 0
 8002 027a 254B     		ldr	r3, .L334
 8003 027c 0122     		movs	r2, #1
 8004 027e 1A71     		strb	r2, [r3, #4]
2019:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition3 = 0x01;
 8005              		.loc 1 2019 0
 8006 0280 234B     		ldr	r3, .L334
 8007 0282 0122     		movs	r2, #1
 8008 0284 5A71     		strb	r2, [r3, #5]
2020:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition4 = 0x01;
 8009              		.loc 1 2020 0
 8010 0286 224B     		ldr	r3, .L334
 8011 0288 0122     		movs	r2, #1
 8012 028a 9A71     		strb	r2, [r3, #6]
2021:.\AdvantageImpl.c ****                 break;
 8013              		.loc 1 2021 0
 8014 028c 5CE0     		b	.L290
 8015              	.L299:
2022:.\AdvantageImpl.c ****             }
2023:.\AdvantageImpl.c ****             case 0x21://SHMPD 2+1 (3 grades, 2 hoses/side)
2024:.\AdvantageImpl.c ****             {
2025:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x02;
 8016              		.loc 1 2025 0
 8017 028e 204B     		ldr	r3, .L334
 8018 0290 0222     		movs	r2, #2
 8019 0292 DA70     		strb	r2, [r3, #3]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 178


2026:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x02;
 8020              		.loc 1 2026 0
 8021 0294 1E4B     		ldr	r3, .L334
 8022 0296 0222     		movs	r2, #2
 8023 0298 1A71     		strb	r2, [r3, #4]
2027:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition3 = 0x02;
 8024              		.loc 1 2027 0
 8025 029a 1D4B     		ldr	r3, .L334
 8026 029c 0222     		movs	r2, #2
 8027 029e 5A71     		strb	r2, [r3, #5]
2028:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition4 = 0x02;
 8028              		.loc 1 2028 0
 8029 02a0 1B4B     		ldr	r3, .L334
 8030 02a2 0222     		movs	r2, #2
 8031 02a4 9A71     		strb	r2, [r3, #6]
2029:.\AdvantageImpl.c ****                 break;
 8032              		.loc 1 2029 0
 8033 02a6 4FE0     		b	.L290
 8034              	.L300:
2030:.\AdvantageImpl.c ****             }
2031:.\AdvantageImpl.c ****             case 0x22://SHMPD 3+0 (3 grades, 1 hose/side)
2032:.\AdvantageImpl.c ****             {
2033:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x01;
 8035              		.loc 1 2033 0
 8036 02a8 194B     		ldr	r3, .L334
 8037 02aa 0122     		movs	r2, #1
 8038 02ac DA70     		strb	r2, [r3, #3]
2034:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x01;
 8039              		.loc 1 2034 0
 8040 02ae 184B     		ldr	r3, .L334
 8041 02b0 0122     		movs	r2, #1
 8042 02b2 1A71     		strb	r2, [r3, #4]
2035:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition3 = 0x01;
 8043              		.loc 1 2035 0
 8044 02b4 164B     		ldr	r3, .L334
 8045 02b6 0122     		movs	r2, #1
 8046 02b8 5A71     		strb	r2, [r3, #5]
2036:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition4 = 0x01;
 8047              		.loc 1 2036 0
 8048 02ba 154B     		ldr	r3, .L334
 8049 02bc 0122     		movs	r2, #1
 8050 02be 9A71     		strb	r2, [r3, #6]
2037:.\AdvantageImpl.c ****                 break;
 8051              		.loc 1 2037 0
 8052 02c0 42E0     		b	.L290
 8053              	.L301:
2038:.\AdvantageImpl.c ****             }
2039:.\AdvantageImpl.c ****             case 0x23://SHMPD 3+1 (4 grades, 2 hoses/side)
2040:.\AdvantageImpl.c ****             {
2041:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x02;
 8054              		.loc 1 2041 0
 8055 02c2 134B     		ldr	r3, .L334
 8056 02c4 0222     		movs	r2, #2
 8057 02c6 DA70     		strb	r2, [r3, #3]
2042:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x02;
 8058              		.loc 1 2042 0
 8059 02c8 114B     		ldr	r3, .L334
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 179


 8060 02ca 0222     		movs	r2, #2
 8061 02cc 1A71     		strb	r2, [r3, #4]
2043:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition3 = 0x02;
 8062              		.loc 1 2043 0
 8063 02ce 104B     		ldr	r3, .L334
 8064 02d0 0222     		movs	r2, #2
 8065 02d2 5A71     		strb	r2, [r3, #5]
2044:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition4 = 0x02;
 8066              		.loc 1 2044 0
 8067 02d4 0E4B     		ldr	r3, .L334
 8068 02d6 0222     		movs	r2, #2
 8069 02d8 9A71     		strb	r2, [r3, #6]
2045:.\AdvantageImpl.c ****                 break;
 8070              		.loc 1 2045 0
 8071 02da 35E0     		b	.L290
 8072              	.L302:
2046:.\AdvantageImpl.c ****             }
2047:.\AdvantageImpl.c ****             case 0x24://SHMPD 4+0 (4 grades, 1 hose/side)
2048:.\AdvantageImpl.c ****             {
2049:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x01;
 8073              		.loc 1 2049 0
 8074 02dc 0C4B     		ldr	r3, .L334
 8075 02de 0122     		movs	r2, #1
 8076 02e0 DA70     		strb	r2, [r3, #3]
2050:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x01;
 8077              		.loc 1 2050 0
 8078 02e2 0B4B     		ldr	r3, .L334
 8079 02e4 0122     		movs	r2, #1
 8080 02e6 1A71     		strb	r2, [r3, #4]
2051:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition3 = 0x01;
 8081              		.loc 1 2051 0
 8082 02e8 094B     		ldr	r3, .L334
 8083 02ea 0122     		movs	r2, #1
 8084 02ec 5A71     		strb	r2, [r3, #5]
2052:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition4 = 0x01;
 8085              		.loc 1 2052 0
 8086 02ee 084B     		ldr	r3, .L334
 8087 02f0 0122     		movs	r2, #1
 8088 02f2 9A71     		strb	r2, [r3, #6]
2053:.\AdvantageImpl.c ****                 break;
 8089              		.loc 1 2053 0
 8090 02f4 28E0     		b	.L290
 8091              	.L303:
2054:.\AdvantageImpl.c ****             }
2055:.\AdvantageImpl.c ****             case 0x25://SHMPD 4+1 (5 grades, 2 hoses/side)
2056:.\AdvantageImpl.c ****             {
2057:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x02;
 8092              		.loc 1 2057 0
 8093 02f6 064B     		ldr	r3, .L334
 8094 02f8 0222     		movs	r2, #2
 8095 02fa DA70     		strb	r2, [r3, #3]
2058:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x02;
 8096              		.loc 1 2058 0
 8097 02fc 044B     		ldr	r3, .L334
 8098 02fe 0222     		movs	r2, #2
 8099 0300 1A71     		strb	r2, [r3, #4]
2059:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition3 = 0x02;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 180


 8100              		.loc 1 2059 0
 8101 0302 034B     		ldr	r3, .L334
 8102 0304 0222     		movs	r2, #2
 8103 0306 5A71     		strb	r2, [r3, #5]
2060:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition4 = 0x02;
 8104              		.loc 1 2060 0
 8105 0308 014B     		ldr	r3, .L334
 8106 030a 0222     		movs	r2, #2
 8107 030c 9A71     		strb	r2, [r3, #6]
2061:.\AdvantageImpl.c ****                 break;
 8108              		.loc 1 2061 0
 8109 030e 1BE0     		b	.L290
 8110              	.L335:
 8111              		.align	2
 8112              	.L334:
 8113 0310 00000000 		.word	_g_dispenserlayoutinfo
 8114              	.L304:
2062:.\AdvantageImpl.c ****             }
2063:.\AdvantageImpl.c ****             case 0x26://SHMPD 5+0 (5 grades, 1 hose/side)
2064:.\AdvantageImpl.c ****             {
2065:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x01;
 8115              		.loc 1 2065 0
 8116 0314 6B4B     		ldr	r3, .L336
 8117 0316 0122     		movs	r2, #1
 8118 0318 DA70     		strb	r2, [r3, #3]
2066:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x01;
 8119              		.loc 1 2066 0
 8120 031a 6A4B     		ldr	r3, .L336
 8121 031c 0122     		movs	r2, #1
 8122 031e 1A71     		strb	r2, [r3, #4]
2067:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition3 = 0x01;
 8123              		.loc 1 2067 0
 8124 0320 684B     		ldr	r3, .L336
 8125 0322 0122     		movs	r2, #1
 8126 0324 5A71     		strb	r2, [r3, #5]
2068:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition4 = 0x01;
 8127              		.loc 1 2068 0
 8128 0326 674B     		ldr	r3, .L336
 8129 0328 0122     		movs	r2, #1
 8130 032a 9A71     		strb	r2, [r3, #6]
2069:.\AdvantageImpl.c ****                 break;
 8131              		.loc 1 2069 0
 8132 032c 0CE0     		b	.L290
 8133              	.L305:
2070:.\AdvantageImpl.c ****             }
2071:.\AdvantageImpl.c ****             case 0x27://SHMPD 5+1 (6 grades, 2 hoses/side)
2072:.\AdvantageImpl.c ****             {
2073:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition1 = 0x02;
 8134              		.loc 1 2073 0
 8135 032e 654B     		ldr	r3, .L336
 8136 0330 0222     		movs	r2, #2
 8137 0332 DA70     		strb	r2, [r3, #3]
2074:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition2 = 0x02;
 8138              		.loc 1 2074 0
 8139 0334 634B     		ldr	r3, .L336
 8140 0336 0222     		movs	r2, #2
 8141 0338 1A71     		strb	r2, [r3, #4]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 181


2075:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition3 = 0x02;
 8142              		.loc 1 2075 0
 8143 033a 624B     		ldr	r3, .L336
 8144 033c 0222     		movs	r2, #2
 8145 033e 5A71     		strb	r2, [r3, #5]
2076:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._hosesposition4 = 0x02;
 8146              		.loc 1 2076 0
 8147 0340 604B     		ldr	r3, .L336
 8148 0342 0222     		movs	r2, #2
 8149 0344 9A71     		strb	r2, [r3, #6]
2077:.\AdvantageImpl.c ****                 break;
 8150              		.loc 1 2077 0
 8151 0346 00BF     		nop
 8152              	.L290:
2078:.\AdvantageImpl.c ****             }
2079:.\AdvantageImpl.c ****             //MISSING (NOT NEEDED) ...
2080:.\AdvantageImpl.c ****             //0x28 ~ 0x29
2081:.\AdvantageImpl.c ****             //0x3X Multi-Hose Blender
2082:.\AdvantageImpl.c ****             //0x4X Single-Hose Blender
2083:.\AdvantageImpl.c ****             //0x50 MH Hybrid Blender
2084:.\AdvantageImpl.c ****         }
2085:.\AdvantageImpl.c ****     }
2086:.\AdvantageImpl.c **** 
2087:.\AdvantageImpl.c **** 
2088:.\AdvantageImpl.c ****     //0x01 => U.S. Gallons
2089:.\AdvantageImpl.c ****     //0x02 => Imperial Gallons / UK Gallons
2090:.\AdvantageImpl.c ****     //0x03 => Liters
2091:.\AdvantageImpl.c ****     //0x04 => 1012 pulses/gallon (Hawaii, N/A for ECAL)
2092:.\AdvantageImpl.c ****     _g_dispenserlayoutinfo._volumeunit = ptrbuff[0x01];
 8153              		.loc 1 2092 0
 8154 0348 FB68     		ldr	r3, [r7, #12]
 8155 034a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 8156 034c 5D4B     		ldr	r3, .L336
 8157 034e 9A72     		strb	r2, [r3, #10]
2093:.\AdvantageImpl.c ****     
2094:.\AdvantageImpl.c ****     
2095:.\AdvantageImpl.c ****     //Money Decimal Points
2096:.\AdvantageImpl.c ****     switch(ptrbuff[0x02])
 8158              		.loc 1 2096 0
 8159 0350 FB68     		ldr	r3, [r7, #12]
 8160 0352 0233     		adds	r3, r3, #2
 8161 0354 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8162 0356 013B     		subs	r3, r3, #1
 8163 0358 032B     		cmp	r3, #3
 8164 035a 1BD8     		bhi	.L306
 8165 035c 01A2     		adr	r2, .L308
 8166 035e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8167 0362 00BF     		.p2align 2
 8168              	.L308:
 8169 0364 75030000 		.word	.L307+1
 8170 0368 7D030000 		.word	.L309+1
 8171 036c 85030000 		.word	.L310+1
 8172 0370 8D030000 		.word	.L311+1
 8173              		.p2align 1
 8174              	.L307:
2097:.\AdvantageImpl.c ****     {
2098:.\AdvantageImpl.c ****         case 0x01:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 182


2099:.\AdvantageImpl.c ****         _g_dispenserlayoutinfo._moneydecimals = 0;
 8175              		.loc 1 2099 0
 8176 0374 534B     		ldr	r3, .L336
 8177 0376 0022     		movs	r2, #0
 8178 0378 DA71     		strb	r2, [r3, #7]
2100:.\AdvantageImpl.c ****         break;
 8179              		.loc 1 2100 0
 8180 037a 0BE0     		b	.L306
 8181              	.L309:
2101:.\AdvantageImpl.c ****         case 0x02:
2102:.\AdvantageImpl.c ****         _g_dispenserlayoutinfo._moneydecimals = 1;
 8182              		.loc 1 2102 0
 8183 037c 514B     		ldr	r3, .L336
 8184 037e 0122     		movs	r2, #1
 8185 0380 DA71     		strb	r2, [r3, #7]
2103:.\AdvantageImpl.c ****         break;
 8186              		.loc 1 2103 0
 8187 0382 07E0     		b	.L306
 8188              	.L310:
2104:.\AdvantageImpl.c ****         case 0x03:
2105:.\AdvantageImpl.c ****         _g_dispenserlayoutinfo._moneydecimals = 2;
 8189              		.loc 1 2105 0
 8190 0384 4F4B     		ldr	r3, .L336
 8191 0386 0222     		movs	r2, #2
 8192 0388 DA71     		strb	r2, [r3, #7]
2106:.\AdvantageImpl.c ****         break;
 8193              		.loc 1 2106 0
 8194 038a 03E0     		b	.L306
 8195              	.L311:
2107:.\AdvantageImpl.c ****         case 0x04:
2108:.\AdvantageImpl.c ****         _g_dispenserlayoutinfo._moneydecimals = 3;
 8196              		.loc 1 2108 0
 8197 038c 4D4B     		ldr	r3, .L336
 8198 038e 0322     		movs	r2, #3
 8199 0390 DA71     		strb	r2, [r3, #7]
2109:.\AdvantageImpl.c ****         break;
 8200              		.loc 1 2109 0
 8201 0392 00BF     		nop
 8202              	.L306:
2110:.\AdvantageImpl.c ****     }
2111:.\AdvantageImpl.c ****     
2112:.\AdvantageImpl.c ****     //Volume Decimal Points
2113:.\AdvantageImpl.c ****     switch(ptrbuff[0x03])
 8203              		.loc 1 2113 0
 8204 0394 FB68     		ldr	r3, [r7, #12]
 8205 0396 0333     		adds	r3, r3, #3
 8206 0398 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8207 039a 013B     		subs	r3, r3, #1
 8208 039c 102B     		cmp	r3, #16
 8209 039e 45D8     		bhi	.L312
 8210 03a0 01A2     		adr	r2, .L314
 8211 03a2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8212 03a6 00BF     		.p2align 2
 8213              	.L314:
 8214 03a8 ED030000 		.word	.L313+1
 8215 03ac F5030000 		.word	.L315+1
 8216 03b0 FD030000 		.word	.L316+1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 183


 8217 03b4 05040000 		.word	.L317+1
 8218 03b8 0D040000 		.word	.L318+1
 8219 03bc 15040000 		.word	.L319+1
 8220 03c0 1D040000 		.word	.L320+1
 8221 03c4 2D040000 		.word	.L312+1
 8222 03c8 2D040000 		.word	.L312+1
 8223 03cc 2D040000 		.word	.L312+1
 8224 03d0 2D040000 		.word	.L312+1
 8225 03d4 2D040000 		.word	.L312+1
 8226 03d8 2D040000 		.word	.L312+1
 8227 03dc 2D040000 		.word	.L312+1
 8228 03e0 2D040000 		.word	.L312+1
 8229 03e4 2D040000 		.word	.L312+1
 8230 03e8 25040000 		.word	.L321+1
 8231              		.p2align 1
 8232              	.L313:
2114:.\AdvantageImpl.c ****     {
2115:.\AdvantageImpl.c ****         case 0x01:
2116:.\AdvantageImpl.c ****         _g_dispenserlayoutinfo._volumedecimals = 3;
 8233              		.loc 1 2116 0
 8234 03ec 354B     		ldr	r3, .L336
 8235 03ee 0322     		movs	r2, #3
 8236 03f0 5A72     		strb	r2, [r3, #9]
2117:.\AdvantageImpl.c ****         break;
 8237              		.loc 1 2117 0
 8238 03f2 1BE0     		b	.L312
 8239              	.L315:
2118:.\AdvantageImpl.c ****         case 0x02:
2119:.\AdvantageImpl.c ****         _g_dispenserlayoutinfo._volumedecimals = 1;
 8240              		.loc 1 2119 0
 8241 03f4 334B     		ldr	r3, .L336
 8242 03f6 0122     		movs	r2, #1
 8243 03f8 5A72     		strb	r2, [r3, #9]
2120:.\AdvantageImpl.c ****         break;
 8244              		.loc 1 2120 0
 8245 03fa 17E0     		b	.L312
 8246              	.L316:
2121:.\AdvantageImpl.c ****         case 0x03:
2122:.\AdvantageImpl.c ****         _g_dispenserlayoutinfo._volumedecimals = 2;
 8247              		.loc 1 2122 0
 8248 03fc 314B     		ldr	r3, .L336
 8249 03fe 0222     		movs	r2, #2
 8250 0400 5A72     		strb	r2, [r3, #9]
2123:.\AdvantageImpl.c ****         break;
 8251              		.loc 1 2123 0
 8252 0402 13E0     		b	.L312
 8253              	.L317:
2124:.\AdvantageImpl.c ****         case 0x04:
2125:.\AdvantageImpl.c ****         _g_dispenserlayoutinfo._volumedecimals = 3;
 8254              		.loc 1 2125 0
 8255 0404 2F4B     		ldr	r3, .L336
 8256 0406 0322     		movs	r2, #3
 8257 0408 5A72     		strb	r2, [r3, #9]
2126:.\AdvantageImpl.c ****         break;
 8258              		.loc 1 2126 0
 8259 040a 0FE0     		b	.L312
 8260              	.L318:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 184


2127:.\AdvantageImpl.c ****         case 0x05:
2128:.\AdvantageImpl.c ****         _g_dispenserlayoutinfo._volumedecimals = 4;
 8261              		.loc 1 2128 0
 8262 040c 2D4B     		ldr	r3, .L336
 8263 040e 0422     		movs	r2, #4
 8264 0410 5A72     		strb	r2, [r3, #9]
2129:.\AdvantageImpl.c ****         break;
 8265              		.loc 1 2129 0
 8266 0412 0BE0     		b	.L312
 8267              	.L319:
2130:.\AdvantageImpl.c ****         case 0x06:
2131:.\AdvantageImpl.c ****         _g_dispenserlayoutinfo._volumedecimals = 5;
 8268              		.loc 1 2131 0
 8269 0414 2B4B     		ldr	r3, .L336
 8270 0416 0522     		movs	r2, #5
 8271 0418 5A72     		strb	r2, [r3, #9]
2132:.\AdvantageImpl.c ****         break;
 8272              		.loc 1 2132 0
 8273 041a 07E0     		b	.L312
 8274              	.L320:
2133:.\AdvantageImpl.c ****         case 0x07:
2134:.\AdvantageImpl.c ****         _g_dispenserlayoutinfo._volumedecimals = 6;
 8275              		.loc 1 2134 0
 8276 041c 294B     		ldr	r3, .L336
 8277 041e 0622     		movs	r2, #6
 8278 0420 5A72     		strb	r2, [r3, #9]
2135:.\AdvantageImpl.c ****         break;
 8279              		.loc 1 2135 0
 8280 0422 03E0     		b	.L312
 8281              	.L321:
2136:.\AdvantageImpl.c ****         case 0x11:
2137:.\AdvantageImpl.c ****         _g_dispenserlayoutinfo._volumedecimals = 0;
 8282              		.loc 1 2137 0
 8283 0424 274B     		ldr	r3, .L336
 8284 0426 0022     		movs	r2, #0
 8285 0428 5A72     		strb	r2, [r3, #9]
2138:.\AdvantageImpl.c ****         break;
 8286              		.loc 1 2138 0
 8287 042a 00BF     		nop
 8288              	.L312:
2139:.\AdvantageImpl.c ****     }
2140:.\AdvantageImpl.c ****     
2141:.\AdvantageImpl.c ****     //PPU Decimal Points
2142:.\AdvantageImpl.c ****     switch(ptrbuff[0x04])
 8289              		.loc 1 2142 0
 8290 042c FB68     		ldr	r3, [r7, #12]
 8291 042e 0433     		adds	r3, r3, #4
 8292 0430 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8293 0432 013B     		subs	r3, r3, #1
 8294 0434 032B     		cmp	r3, #3
 8295 0436 1BD8     		bhi	.L322
 8296 0438 01A2     		adr	r2, .L324
 8297 043a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8298 043e 00BF     		.p2align 2
 8299              	.L324:
 8300 0440 51040000 		.word	.L323+1
 8301 0444 59040000 		.word	.L325+1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 185


 8302 0448 61040000 		.word	.L326+1
 8303 044c 69040000 		.word	.L327+1
 8304              		.p2align 1
 8305              	.L323:
2143:.\AdvantageImpl.c ****     {
2144:.\AdvantageImpl.c ****         case 0x01:
2145:.\AdvantageImpl.c ****         _g_dispenserlayoutinfo._ppudecimals = 0;
 8306              		.loc 1 2145 0
 8307 0450 1C4B     		ldr	r3, .L336
 8308 0452 0022     		movs	r2, #0
 8309 0454 1A72     		strb	r2, [r3, #8]
2146:.\AdvantageImpl.c ****         break;
 8310              		.loc 1 2146 0
 8311 0456 0BE0     		b	.L322
 8312              	.L325:
2147:.\AdvantageImpl.c ****         case 0x02:
2148:.\AdvantageImpl.c ****         _g_dispenserlayoutinfo._ppudecimals = 1;
 8313              		.loc 1 2148 0
 8314 0458 1A4B     		ldr	r3, .L336
 8315 045a 0122     		movs	r2, #1
 8316 045c 1A72     		strb	r2, [r3, #8]
2149:.\AdvantageImpl.c ****         break;
 8317              		.loc 1 2149 0
 8318 045e 07E0     		b	.L322
 8319              	.L326:
2150:.\AdvantageImpl.c ****         case 0x03:
2151:.\AdvantageImpl.c ****         _g_dispenserlayoutinfo._ppudecimals = 2;
 8320              		.loc 1 2151 0
 8321 0460 184B     		ldr	r3, .L336
 8322 0462 0222     		movs	r2, #2
 8323 0464 1A72     		strb	r2, [r3, #8]
2152:.\AdvantageImpl.c ****         break;
 8324              		.loc 1 2152 0
 8325 0466 03E0     		b	.L322
 8326              	.L327:
2153:.\AdvantageImpl.c ****         case 0x04:
2154:.\AdvantageImpl.c ****         _g_dispenserlayoutinfo._ppudecimals = 3;
 8327              		.loc 1 2154 0
 8328 0468 164B     		ldr	r3, .L336
 8329 046a 0322     		movs	r2, #3
 8330 046c 1A72     		strb	r2, [r3, #8]
2155:.\AdvantageImpl.c ****         break;
 8331              		.loc 1 2155 0
 8332 046e 00BF     		nop
 8333              	.L322:
2156:.\AdvantageImpl.c ****     }
2157:.\AdvantageImpl.c ****     
2158:.\AdvantageImpl.c ****     switch(ptrbuff[0x05])
 8334              		.loc 1 2158 0
 8335 0470 FB68     		ldr	r3, [r7, #12]
 8336 0472 0533     		adds	r3, r3, #5
 8337 0474 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8338 0476 032B     		cmp	r3, #3
 8339 0478 1AD8     		bhi	.L328
 8340 047a 01A2     		adr	r2, .L330
 8341 047c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8342              		.p2align 2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 186


 8343              	.L330:
 8344 0480 91040000 		.word	.L329+1
 8345 0484 99040000 		.word	.L331+1
 8346 0488 A1040000 		.word	.L332+1
 8347 048c A9040000 		.word	.L333+1
 8348              		.p2align 1
 8349              	.L329:
2159:.\AdvantageImpl.c ****     {
2160:.\AdvantageImpl.c ****         case 0x00:
2161:.\AdvantageImpl.c ****             _g_dispenserlayoutinfo._displaydigitsmode = 0x05; //5 money digits
 8350              		.loc 1 2161 0
 8351 0490 0C4B     		ldr	r3, .L336
 8352 0492 0522     		movs	r2, #5
 8353 0494 1A74     		strb	r2, [r3, #16]
2162:.\AdvantageImpl.c ****             break;
 8354              		.loc 1 2162 0
 8355 0496 0BE0     		b	.L328
 8356              	.L331:
2163:.\AdvantageImpl.c ****         case 0x01:
2164:.\AdvantageImpl.c ****             _g_dispenserlayoutinfo._displaydigitsmode = 0x06; //6 money digits
 8357              		.loc 1 2164 0
 8358 0498 0A4B     		ldr	r3, .L336
 8359 049a 0622     		movs	r2, #6
 8360 049c 1A74     		strb	r2, [r3, #16]
2165:.\AdvantageImpl.c ****             break;
 8361              		.loc 1 2165 0
 8362 049e 07E0     		b	.L328
 8363              	.L332:
2166:.\AdvantageImpl.c ****         case 0x02:
2167:.\AdvantageImpl.c ****             _g_dispenserlayoutinfo._displaydigitsmode = 0x07; //7 money digits
 8364              		.loc 1 2167 0
 8365 04a0 084B     		ldr	r3, .L336
 8366 04a2 0722     		movs	r2, #7
 8367 04a4 1A74     		strb	r2, [r3, #16]
2168:.\AdvantageImpl.c ****             break;
 8368              		.loc 1 2168 0
 8369 04a6 03E0     		b	.L328
 8370              	.L333:
2169:.\AdvantageImpl.c ****         case 0x03:
2170:.\AdvantageImpl.c ****             _g_dispenserlayoutinfo._displaydigitsmode = 0x08; //8 money digits
 8371              		.loc 1 2170 0
 8372 04a8 064B     		ldr	r3, .L336
 8373 04aa 0822     		movs	r2, #8
 8374 04ac 1A74     		strb	r2, [r3, #16]
2171:.\AdvantageImpl.c ****             break;
 8375              		.loc 1 2171 0
 8376 04ae 00BF     		nop
 8377              	.L328:
2172:.\AdvantageImpl.c ****     }
2173:.\AdvantageImpl.c ****     
2174:.\AdvantageImpl.c ****     //_g_dispenserlayoutinfo._pointcommadecimalmode = _POINT_AS_DECIMAL_SEPARATOR_;
2175:.\AdvantageImpl.c ****     _g_dispenserlayoutinfo._pointcommadecimalmode = _COMMA_AS_DECIMAL_SEPARATOR_;
 8378              		.loc 1 2175 0
 8379 04b0 044A     		ldr	r2, .L336
 8380 04b2 D37C     		ldrb	r3, [r2, #19]
 8381 04b4 43F00103 		orr	r3, r3, #1
 8382 04b8 D374     		strb	r3, [r2, #19]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 187


2176:.\AdvantageImpl.c **** }
 8383              		.loc 1 2176 0
 8384 04ba 1437     		adds	r7, r7, #20
 8385              		.cfi_def_cfa_offset 4
 8386 04bc BD46     		mov	sp, r7
 8387              		.cfi_def_cfa_register 13
 8388              		@ sp needed
 8389 04be 5DF8047B 		ldr	r7, [sp], #4
 8390              		.cfi_restore 7
 8391              		.cfi_def_cfa_offset 0
 8392 04c2 7047     		bx	lr
 8393              	.L337:
 8394              		.align	2
 8395              	.L336:
 8396 04c4 00000000 		.word	_g_dispenserlayoutinfo
 8397              		.cfi_endproc
 8398              	.LFE92:
 8399              		.size	AcquireDispenserLayoutInformation, .-AcquireDispenserLayoutInformation
 8400              		.section	.text.AcquirePumpSpecialFunctionResponseResolver,"ax",%progbits
 8401              		.align	2
 8402              		.global	AcquirePumpSpecialFunctionResponseResolver
 8403              		.thumb
 8404              		.thumb_func
 8405              		.type	AcquirePumpSpecialFunctionResponseResolver, %function
 8406              	AcquirePumpSpecialFunctionResponseResolver:
 8407              	.LFB93:
2177:.\AdvantageImpl.c **** 
2178:.\AdvantageImpl.c **** //@Created By: HIJH
2179:.\AdvantageImpl.c **** //@Date: Septembre de 2016
2180:.\AdvantageImpl.c **** //Resolves the completeness for the arriving data after the SFs invocation
2181:.\AdvantageImpl.c **** bool AcquirePumpSpecialFunctionResponseResolver(void *pparam, void *pbuffer, uint16 buffersize)
2182:.\AdvantageImpl.c **** {
 8408              		.loc 1 2182 0
 8409              		.cfi_startproc
 8410              		@ args = 0, pretend = 0, frame = 32
 8411              		@ frame_needed = 1, uses_anonymous_args = 0
 8412 0000 90B5     		push	{r4, r7, lr}
 8413              		.cfi_def_cfa_offset 12
 8414              		.cfi_offset 4, -12
 8415              		.cfi_offset 7, -8
 8416              		.cfi_offset 14, -4
 8417 0002 89B0     		sub	sp, sp, #36
 8418              		.cfi_def_cfa_offset 48
 8419 0004 00AF     		add	r7, sp, #0
 8420              		.cfi_def_cfa_register 7
 8421 0006 F860     		str	r0, [r7, #12]
 8422 0008 B960     		str	r1, [r7, #8]
 8423 000a 1346     		mov	r3, r2
 8424 000c FB80     		strh	r3, [r7, #6]	@ movhi
2183:.\AdvantageImpl.c ****     bool retval = false;
 8425              		.loc 1 2183 0
 8426 000e 0023     		movs	r3, #0
 8427 0010 FB77     		strb	r3, [r7, #31]
2184:.\AdvantageImpl.c ****     static uint8 index = 0;
2185:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 8428              		.loc 1 2185 0
 8429 0012 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 188


 8430 0014 BB61     		str	r3, [r7, #24]
2186:.\AdvantageImpl.c ****     //Since after the third byte we can start inquiry for the message length in words (this is acco
2187:.\AdvantageImpl.c ****     //that is  the reason for the number "3"
2188:.\AdvantageImpl.c ****     if((PSTRCAST(pbuffer)[0 + 45*index] == 0xBA) && buffersize >= 3)
 8431              		.loc 1 2188 0
 8432 0016 434B     		ldr	r3, .L342
 8433 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8434 001a 1A46     		mov	r2, r3
 8435 001c 1346     		mov	r3, r2
 8436 001e 5B00     		lsls	r3, r3, #1
 8437 0020 1344     		add	r3, r3, r2
 8438 0022 1A01     		lsls	r2, r3, #4
 8439 0024 D31A     		subs	r3, r2, r3
 8440 0026 1A46     		mov	r2, r3
 8441 0028 BB68     		ldr	r3, [r7, #8]
 8442 002a 1344     		add	r3, r3, r2
 8443 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8444 002e BA2B     		cmp	r3, #186
 8445 0030 73D1     		bne	.L339
 8446              		.loc 1 2188 0 is_stmt 0 discriminator 1
 8447 0032 FB88     		ldrh	r3, [r7, #6]
 8448 0034 022B     		cmp	r3, #2
 8449 0036 70D9     		bls	.L339
 8450              	.LBB57:
2189:.\AdvantageImpl.c ****     {
2190:.\AdvantageImpl.c ****         //char8 buff[24];
2191:.\AdvantageImpl.c ****         //memcpy(buff, PSTRCAST(pbuffer), buffersize);
2192:.\AdvantageImpl.c ****         uint8 msglength = (TranslateSpecialFuncionDigit(PSTRCAST(pbuffer)[1 + 45*index]) << 0x04) |
 8451              		.loc 1 2192 0 is_stmt 1
 8452 0038 3A4B     		ldr	r3, .L342
 8453 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8454 003c 1A46     		mov	r2, r3
 8455 003e 1346     		mov	r3, r2
 8456 0040 5B00     		lsls	r3, r3, #1
 8457 0042 1344     		add	r3, r3, r2
 8458 0044 1A01     		lsls	r2, r3, #4
 8459 0046 D31A     		subs	r3, r2, r3
 8460 0048 0133     		adds	r3, r3, #1
 8461 004a 1A46     		mov	r2, r3
 8462 004c BB68     		ldr	r3, [r7, #8]
 8463 004e 1344     		add	r3, r3, r2
 8464 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8465 0052 1846     		mov	r0, r3
 8466 0054 FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 8467 0058 0346     		mov	r3, r0
 8468 005a 1B01     		lsls	r3, r3, #4
 8469 005c DCB2     		uxtb	r4, r3
 8470 005e 314B     		ldr	r3, .L342
 8471 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8472 0062 1A46     		mov	r2, r3
 8473 0064 1346     		mov	r3, r2
 8474 0066 5B00     		lsls	r3, r3, #1
 8475 0068 1344     		add	r3, r3, r2
 8476 006a 1A01     		lsls	r2, r3, #4
 8477 006c D31A     		subs	r3, r2, r3
 8478 006e 0233     		adds	r3, r3, #2
 8479 0070 1A46     		mov	r2, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 189


 8480 0072 BB68     		ldr	r3, [r7, #8]
 8481 0074 1344     		add	r3, r3, r2
 8482 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8483 0078 1846     		mov	r0, r3
 8484 007a FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 8485 007e 0346     		mov	r3, r0
 8486 0080 DBB2     		uxtb	r3, r3
 8487 0082 2246     		mov	r2, r4
 8488 0084 1343     		orrs	r3, r3, r2
 8489 0086 DBB2     		uxtb	r3, r3
 8490 0088 FB75     		strb	r3, [r7, #23]
2193:.\AdvantageImpl.c ****         //plus 13 since there are some fixed bytes in the frame that sum that value
2194:.\AdvantageImpl.c ****         //msglength must be multiplied by 2 since this length is in words instead
2195:.\AdvantageImpl.c ****         //If more than 1 block is coming then the first blocks come full which means that they carr
2196:.\AdvantageImpl.c ****         //the maximum frame size which is 45 bytes (13 fixed bytes + 32 bytes for the message)
2197:.\AdvantageImpl.c ****         if(buffersize >= ((2*msglength + 13) + 45*index))
 8491              		.loc 1 2197 0
 8492 008a FA88     		ldrh	r2, [r7, #6]
 8493 008c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8494 008e 5B00     		lsls	r3, r3, #1
 8495 0090 03F10D01 		add	r1, r3, #13
 8496 0094 234B     		ldr	r3, .L342
 8497 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8498 0098 1846     		mov	r0, r3
 8499 009a 0346     		mov	r3, r0
 8500 009c 5B00     		lsls	r3, r3, #1
 8501 009e 0344     		add	r3, r3, r0
 8502 00a0 1801     		lsls	r0, r3, #4
 8503 00a2 C31A     		subs	r3, r0, r3
 8504 00a4 0B44     		add	r3, r3, r1
 8505 00a6 9A42     		cmp	r2, r3
 8506 00a8 37DB     		blt	.L339
 8507              	.LBB58:
2198:.\AdvantageImpl.c ****         {
2199:.\AdvantageImpl.c ****             uint8 remblocks = (TranslateSpecialFuncionDigit(PSTRCAST(pbuffer)[7 + 45*index]) << 0x0
 8508              		.loc 1 2199 0
 8509 00aa 1E4B     		ldr	r3, .L342
 8510 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8511 00ae 1A46     		mov	r2, r3
 8512 00b0 1346     		mov	r3, r2
 8513 00b2 5B00     		lsls	r3, r3, #1
 8514 00b4 1344     		add	r3, r3, r2
 8515 00b6 1A01     		lsls	r2, r3, #4
 8516 00b8 D31A     		subs	r3, r2, r3
 8517 00ba 0733     		adds	r3, r3, #7
 8518 00bc 1A46     		mov	r2, r3
 8519 00be BB68     		ldr	r3, [r7, #8]
 8520 00c0 1344     		add	r3, r3, r2
 8521 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8522 00c4 1846     		mov	r0, r3
 8523 00c6 FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 8524 00ca 0346     		mov	r3, r0
 8525 00cc 1B01     		lsls	r3, r3, #4
 8526 00ce DCB2     		uxtb	r4, r3
 8527 00d0 144B     		ldr	r3, .L342
 8528 00d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8529 00d4 1A46     		mov	r2, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 190


 8530 00d6 1346     		mov	r3, r2
 8531 00d8 5B00     		lsls	r3, r3, #1
 8532 00da 1344     		add	r3, r3, r2
 8533 00dc 1A01     		lsls	r2, r3, #4
 8534 00de D31A     		subs	r3, r2, r3
 8535 00e0 0833     		adds	r3, r3, #8
 8536 00e2 1A46     		mov	r2, r3
 8537 00e4 BB68     		ldr	r3, [r7, #8]
 8538 00e6 1344     		add	r3, r3, r2
 8539 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8540 00ea 1846     		mov	r0, r3
 8541 00ec FFF7FEFF 		bl	TranslateSpecialFuncionDigit
 8542 00f0 0346     		mov	r3, r0
 8543 00f2 DBB2     		uxtb	r3, r3
 8544 00f4 2246     		mov	r2, r4
 8545 00f6 1343     		orrs	r3, r3, r2
 8546 00f8 DBB2     		uxtb	r3, r3
 8547 00fa BB75     		strb	r3, [r7, #22]
2200:.\AdvantageImpl.c ****             if(remblocks == 0)
 8548              		.loc 1 2200 0
 8549 00fc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8550 00fe 002B     		cmp	r3, #0
 8551 0100 05D1     		bne	.L340
2201:.\AdvantageImpl.c ****             {
2202:.\AdvantageImpl.c ****                 index = 0;
 8552              		.loc 1 2202 0
 8553 0102 084B     		ldr	r3, .L342
 8554 0104 0022     		movs	r2, #0
 8555 0106 1A70     		strb	r2, [r3]
2203:.\AdvantageImpl.c ****                 retval = true;
 8556              		.loc 1 2203 0
 8557 0108 0123     		movs	r3, #1
 8558 010a FB77     		strb	r3, [r7, #31]
 8559 010c 05E0     		b	.L339
 8560              	.L340:
2204:.\AdvantageImpl.c ****             }else{
2205:.\AdvantageImpl.c ****                 index++;
 8561              		.loc 1 2205 0
 8562 010e 054B     		ldr	r3, .L342
 8563 0110 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8564 0112 0133     		adds	r3, r3, #1
 8565 0114 DAB2     		uxtb	r2, r3
 8566 0116 034B     		ldr	r3, .L342
 8567 0118 1A70     		strb	r2, [r3]
 8568              	.L339:
 8569              	.LBE58:
 8570              	.LBE57:
2206:.\AdvantageImpl.c ****             }
2207:.\AdvantageImpl.c ****         }
2208:.\AdvantageImpl.c ****     }
2209:.\AdvantageImpl.c ****     return retval;
 8571              		.loc 1 2209 0
 8572 011a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
2210:.\AdvantageImpl.c **** }
 8573              		.loc 1 2210 0
 8574 011c 1846     		mov	r0, r3
 8575 011e 2437     		adds	r7, r7, #36
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 191


 8576              		.cfi_def_cfa_offset 12
 8577 0120 BD46     		mov	sp, r7
 8578              		.cfi_def_cfa_register 13
 8579              		@ sp needed
 8580 0122 90BD     		pop	{r4, r7, pc}
 8581              	.L343:
 8582              		.align	2
 8583              	.L342:
 8584 0124 00000000 		.word	index.9614
 8585              		.cfi_endproc
 8586              	.LFE93:
 8587              		.size	AcquirePumpSpecialFunctionResponseResolver, .-AcquirePumpSpecialFunctionResponseResolver
 8588              		.section	.text.PumpEnumeratorRequest,"ax",%progbits
 8589              		.align	2
 8590              		.global	PumpEnumeratorRequest
 8591              		.thumb
 8592              		.thumb_func
 8593              		.type	PumpEnumeratorRequest, %function
 8594              	PumpEnumeratorRequest:
 8595              	.LFB94:
2211:.\AdvantageImpl.c **** 
2212:.\AdvantageImpl.c **** //@Created By: HIJH
2213:.\AdvantageImpl.c **** //@Septembre de 2016
2214:.\AdvantageImpl.c **** void PumpEnumeratorRequest(LPVOID pparam)
2215:.\AdvantageImpl.c **** {
 8596              		.loc 1 2215 0
 8597              		.cfi_startproc
 8598              		@ args = 0, pretend = 0, frame = 24
 8599              		@ frame_needed = 1, uses_anonymous_args = 0
 8600 0000 80B5     		push	{r7, lr}
 8601              		.cfi_def_cfa_offset 8
 8602              		.cfi_offset 7, -8
 8603              		.cfi_offset 14, -4
 8604 0002 86B0     		sub	sp, sp, #24
 8605              		.cfi_def_cfa_offset 32
 8606 0004 00AF     		add	r7, sp, #0
 8607              		.cfi_def_cfa_register 7
 8608 0006 7860     		str	r0, [r7, #4]
2216:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 8609              		.loc 1 2216 0
 8610 0008 7B68     		ldr	r3, [r7, #4]
 8611 000a 7B61     		str	r3, [r7, #20]
2217:.\AdvantageImpl.c ****     if(ppump)
 8612              		.loc 1 2217 0
 8613 000c 7B69     		ldr	r3, [r7, #20]
 8614 000e 002B     		cmp	r3, #0
 8615 0010 23D0     		beq	.L344
 8616              	.LBB59:
2218:.\AdvantageImpl.c ****     {
2219:.\AdvantageImpl.c ****         uint8_t index = 0;
 8617              		.loc 1 2219 0
 8618 0012 0023     		movs	r3, #0
 8619 0014 FB74     		strb	r3, [r7, #19]
2220:.\AdvantageImpl.c ****         memset(ppump->_rxbuffer, 0x00, _PUMP_RX_BUFFER_SIZE_);
 8620              		.loc 1 2220 0
 8621 0016 7B69     		ldr	r3, [r7, #20]
 8622 0018 03F5D073 		add	r3, r3, #416
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 192


 8623 001c 1846     		mov	r0, r3
 8624 001e 0021     		movs	r1, #0
 8625 0020 4FF4C072 		mov	r2, #384
 8626 0024 FFF7FEFF 		bl	memset
2221:.\AdvantageImpl.c ****         PUARTMESSAGEPTR puartdisp = GetUARTMessageSlot(UART_DISPENSER);
 8627              		.loc 1 2221 0
 8628 0028 A220     		movs	r0, #162
 8629 002a FFF7FEFF 		bl	GetUARTMessageSlot
 8630 002e F860     		str	r0, [r7, #12]
2222:.\AdvantageImpl.c ****         if(puartdisp)
 8631              		.loc 1 2222 0
 8632 0030 FB68     		ldr	r3, [r7, #12]
 8633 0032 002B     		cmp	r3, #0
 8634 0034 11D0     		beq	.L344
2223:.\AdvantageImpl.c ****         {
2224:.\AdvantageImpl.c ****             puartdisp->_messagetx[index++] = PUMP_COMMAND(PUMP_STATE_REQUEST, ppump->_pumpid);
 8635              		.loc 1 2224 0
 8636 0036 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 8637 0038 5A1C     		adds	r2, r3, #1
 8638 003a FA74     		strb	r2, [r7, #19]
 8639 003c 1946     		mov	r1, r3
 8640 003e 7B69     		ldr	r3, [r7, #20]
 8641 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8642 0042 03F00F03 		and	r3, r3, #15
 8643 0046 DAB2     		uxtb	r2, r3
 8644 0048 FB68     		ldr	r3, [r7, #12]
 8645 004a 0B44     		add	r3, r3, r1
 8646 004c 1A71     		strb	r2, [r3, #4]
2225:.\AdvantageImpl.c ****             puartdisp->_messagelength = 1;//One byte
 8647              		.loc 1 2225 0
 8648 004e FB68     		ldr	r3, [r7, #12]
 8649 0050 0122     		movs	r2, #1
 8650 0052 5A80     		strh	r2, [r3, #2]	@ movhi
2226:.\AdvantageImpl.c ****             puartdisp->_messagestate = PENDING;
 8651              		.loc 1 2226 0
 8652 0054 FB68     		ldr	r3, [r7, #12]
 8653 0056 C222     		movs	r2, #194
 8654 0058 1A70     		strb	r2, [r3]
 8655              	.L344:
 8656              	.LBE59:
2227:.\AdvantageImpl.c ****         }
2228:.\AdvantageImpl.c ****     }
2229:.\AdvantageImpl.c **** }
 8657              		.loc 1 2229 0
 8658 005a 1837     		adds	r7, r7, #24
 8659              		.cfi_def_cfa_offset 8
 8660 005c BD46     		mov	sp, r7
 8661              		.cfi_def_cfa_register 13
 8662              		@ sp needed
 8663 005e 80BD     		pop	{r7, pc}
 8664              		.cfi_endproc
 8665              	.LFE94:
 8666              		.size	PumpEnumeratorRequest, .-PumpEnumeratorRequest
 8667              		.section	.text.AcquirePumpEnumeratorResponse,"ax",%progbits
 8668              		.align	2
 8669              		.global	AcquirePumpEnumeratorResponse
 8670              		.thumb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 193


 8671              		.thumb_func
 8672              		.type	AcquirePumpEnumeratorResponse, %function
 8673              	AcquirePumpEnumeratorResponse:
 8674              	.LFB95:
2230:.\AdvantageImpl.c **** 
2231:.\AdvantageImpl.c **** //@Created By: HIJH
2232:.\AdvantageImpl.c **** //@Septembre de 2016
2233:.\AdvantageImpl.c **** void AcquirePumpEnumeratorResponse(LPVOID pparam)
2234:.\AdvantageImpl.c **** {
 8675              		.loc 1 2234 0
 8676              		.cfi_startproc
 8677              		@ args = 0, pretend = 0, frame = 24
 8678              		@ frame_needed = 1, uses_anonymous_args = 0
 8679 0000 80B5     		push	{r7, lr}
 8680              		.cfi_def_cfa_offset 8
 8681              		.cfi_offset 7, -8
 8682              		.cfi_offset 14, -4
 8683 0002 86B0     		sub	sp, sp, #24
 8684              		.cfi_def_cfa_offset 32
 8685 0004 00AF     		add	r7, sp, #0
 8686              		.cfi_def_cfa_register 7
 8687 0006 7860     		str	r0, [r7, #4]
2235:.\AdvantageImpl.c ****     AcquirePumpStateResponse(pparam);
 8688              		.loc 1 2235 0
 8689 0008 7868     		ldr	r0, [r7, #4]
 8690 000a FFF7FEFF 		bl	AcquirePumpStateResponse
2236:.\AdvantageImpl.c ****     PPUMPTRANSACTIONJOBCONTEXTPTR pjob = (PPUMPTRANSACTIONJOBCONTEXTPTR)pparam;
 8691              		.loc 1 2236 0
 8692 000e 7B68     		ldr	r3, [r7, #4]
 8693 0010 7B61     		str	r3, [r7, #20]
2237:.\AdvantageImpl.c ****     if(pjob->_ppump->_datacontainer._var0 < 0xF)
 8694              		.loc 1 2237 0
 8695 0012 7B69     		ldr	r3, [r7, #20]
 8696 0014 DB69     		ldr	r3, [r3, #28]
 8697 0016 93F8683B 		ldrb	r3, [r3, #2920]
 8698 001a DBB2     		uxtb	r3, r3
 8699 001c 0E2B     		cmp	r3, #14
 8700 001e 00F2FA80 		bhi	.L347
2238:.\AdvantageImpl.c ****     {
2239:.\AdvantageImpl.c ****         switch(pjob->_ppump->_datacontainer._var1)
 8701              		.loc 1 2239 0
 8702 0022 7B69     		ldr	r3, [r7, #20]
 8703 0024 DB69     		ldr	r3, [r3, #28]
 8704 0026 93F8693B 		ldrb	r3, [r3, #2921]
 8705 002a DBB2     		uxtb	r3, r3
 8706 002c 032B     		cmp	r3, #3
 8707 002e 00F2C580 		bhi	.L348
 8708 0032 01A2     		adr	r2, .L350
 8709 0034 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8710              		.p2align 2
 8711              	.L350:
 8712 0038 49000000 		.word	.L349+1
 8713 003c B5000000 		.word	.L351+1
 8714 0040 21010000 		.word	.L352+1
 8715 0044 8D010000 		.word	.L353+1
 8716              		.p2align 1
 8717              	.L349:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 194


 8718              	.LBB60:
2240:.\AdvantageImpl.c ****         {
2241:.\AdvantageImpl.c ****             case 0:
2242:.\AdvantageImpl.c ****             {
2243:.\AdvantageImpl.c ****                 
2244:.\AdvantageImpl.c ****                 ClearEepromBuffer();
 8719              		.loc 1 2244 0
 8720 0048 FFF7FEFF 		bl	ClearEepromBuffer
2245:.\AdvantageImpl.c ****                 //Cleanup of the pump identifier in order to start the enumeration procedure
2246:.\AdvantageImpl.c ****                 LoadEepromPage(EEPROM_DISPENSER_PUMP1_LAYOUT_PAGE);
 8721              		.loc 1 2246 0
 8722 004c 4FF40070 		mov	r0, #512
 8723 0050 FFF7FEFF 		bl	LoadEepromPage
2247:.\AdvantageImpl.c ****                 GetEepromBuffer()[0] = pjob->_ppump->_pumpid;
 8724              		.loc 1 2247 0
 8725 0054 FFF7FEFF 		bl	GetEepromBuffer
 8726 0058 0246     		mov	r2, r0
 8727 005a 7B69     		ldr	r3, [r7, #20]
 8728 005c DB69     		ldr	r3, [r3, #28]
 8729 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8730 0060 1370     		strb	r3, [r2]
2248:.\AdvantageImpl.c ****                 StoreEepromPage(EEPROM_DISPENSER_PUMP1_LAYOUT_PAGE);
 8731              		.loc 1 2248 0
 8732 0062 4FF40070 		mov	r0, #512
 8733 0066 FFF7FEFF 		bl	StoreEepromPage
2249:.\AdvantageImpl.c **** 
2250:.\AdvantageImpl.c ****                 uint8 var0 = pjob->_ppump->_datacontainer._var0;
 8734              		.loc 1 2250 0
 8735 006a 7B69     		ldr	r3, [r7, #20]
 8736 006c DB69     		ldr	r3, [r3, #28]
 8737 006e 93F8683B 		ldrb	r3, [r3, #2920]
 8738 0072 FB74     		strb	r3, [r7, #19]
2251:.\AdvantageImpl.c ****                 uint8 var1 = pjob->_ppump->_datacontainer._var1;
 8739              		.loc 1 2251 0
 8740 0074 7B69     		ldr	r3, [r7, #20]
 8741 0076 DB69     		ldr	r3, [r3, #28]
 8742 0078 93F8693B 		ldrb	r3, [r3, #2921]
 8743 007c BB74     		strb	r3, [r7, #18]
2252:.\AdvantageImpl.c ****                 pjob->_ppump = &_g_pumps[var1 + 1];
 8744              		.loc 1 2252 0
 8745 007e BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 8746 0080 0133     		adds	r3, r3, #1
 8747 0082 40F6C832 		movw	r2, #3016
 8748 0086 02FB03F3 		mul	r3, r2, r3
 8749 008a 694A     		ldr	r2, .L357
 8750 008c 1A44     		add	r2, r2, r3
 8751 008e 7B69     		ldr	r3, [r7, #20]
 8752 0090 DA61     		str	r2, [r3, #28]
2253:.\AdvantageImpl.c ****                 pjob->_ppump->_datacontainer._var1 = var1;
 8753              		.loc 1 2253 0
 8754 0092 7B69     		ldr	r3, [r7, #20]
 8755 0094 DB69     		ldr	r3, [r3, #28]
 8756 0096 BA7C     		ldrb	r2, [r7, #18]
 8757 0098 83F8692B 		strb	r2, [r3, #2921]
2254:.\AdvantageImpl.c ****                 pjob->_ppump->_datacontainer._var0 = var0;
 8758              		.loc 1 2254 0
 8759 009c 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 195


 8760 009e DB69     		ldr	r3, [r3, #28]
 8761 00a0 FA7C     		ldrb	r2, [r7, #19]
 8762 00a2 83F8682B 		strb	r2, [r3, #2920]
2255:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._numpositions++;
 8763              		.loc 1 2255 0
 8764 00a6 634B     		ldr	r3, .L357+4
 8765 00a8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 8766 00aa 0133     		adds	r3, r3, #1
 8767 00ac DAB2     		uxtb	r2, r3
 8768 00ae 614B     		ldr	r3, .L357+4
 8769 00b0 9A70     		strb	r2, [r3, #2]
2256:.\AdvantageImpl.c ****                 
2257:.\AdvantageImpl.c ****                 break;
 8770              		.loc 1 2257 0
 8771 00b2 83E0     		b	.L348
 8772              	.L351:
 8773              	.LBE60:
 8774              	.LBB61:
2258:.\AdvantageImpl.c ****             }
2259:.\AdvantageImpl.c ****             case 1:
2260:.\AdvantageImpl.c ****             {
2261:.\AdvantageImpl.c ****                 
2262:.\AdvantageImpl.c ****                 ClearEepromBuffer();
 8775              		.loc 1 2262 0
 8776 00b4 FFF7FEFF 		bl	ClearEepromBuffer
2263:.\AdvantageImpl.c ****                 //Cleanup of the pump identifier in order to start the enumeration procedure
2264:.\AdvantageImpl.c ****                 LoadEepromPage(EEPROM_DISPENSER_PUMP2_LAYOUT_PAGE);
 8777              		.loc 1 2264 0
 8778 00b8 4FF41070 		mov	r0, #576
 8779 00bc FFF7FEFF 		bl	LoadEepromPage
2265:.\AdvantageImpl.c ****                 GetEepromBuffer()[0] = pjob->_ppump->_pumpid;
 8780              		.loc 1 2265 0
 8781 00c0 FFF7FEFF 		bl	GetEepromBuffer
 8782 00c4 0246     		mov	r2, r0
 8783 00c6 7B69     		ldr	r3, [r7, #20]
 8784 00c8 DB69     		ldr	r3, [r3, #28]
 8785 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8786 00cc 1370     		strb	r3, [r2]
2266:.\AdvantageImpl.c ****                 StoreEepromPage(EEPROM_DISPENSER_PUMP2_LAYOUT_PAGE);
 8787              		.loc 1 2266 0
 8788 00ce 4FF41070 		mov	r0, #576
 8789 00d2 FFF7FEFF 		bl	StoreEepromPage
2267:.\AdvantageImpl.c ****                 
2268:.\AdvantageImpl.c ****                 uint8 var0 = pjob->_ppump->_datacontainer._var0;
 8790              		.loc 1 2268 0
 8791 00d6 7B69     		ldr	r3, [r7, #20]
 8792 00d8 DB69     		ldr	r3, [r3, #28]
 8793 00da 93F8683B 		ldrb	r3, [r3, #2920]
 8794 00de 7B74     		strb	r3, [r7, #17]
2269:.\AdvantageImpl.c ****                 uint8 var1 = pjob->_ppump->_datacontainer._var1;
 8795              		.loc 1 2269 0
 8796 00e0 7B69     		ldr	r3, [r7, #20]
 8797 00e2 DB69     		ldr	r3, [r3, #28]
 8798 00e4 93F8693B 		ldrb	r3, [r3, #2921]
 8799 00e8 3B74     		strb	r3, [r7, #16]
2270:.\AdvantageImpl.c ****                 pjob->_ppump = &_g_pumps[var1 + 1];
 8800              		.loc 1 2270 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 196


 8801 00ea 3B7C     		ldrb	r3, [r7, #16]	@ zero_extendqisi2
 8802 00ec 0133     		adds	r3, r3, #1
 8803 00ee 40F6C832 		movw	r2, #3016
 8804 00f2 02FB03F3 		mul	r3, r2, r3
 8805 00f6 4E4A     		ldr	r2, .L357
 8806 00f8 1A44     		add	r2, r2, r3
 8807 00fa 7B69     		ldr	r3, [r7, #20]
 8808 00fc DA61     		str	r2, [r3, #28]
2271:.\AdvantageImpl.c ****                 pjob->_ppump->_datacontainer._var1 = var1;
 8809              		.loc 1 2271 0
 8810 00fe 7B69     		ldr	r3, [r7, #20]
 8811 0100 DB69     		ldr	r3, [r3, #28]
 8812 0102 3A7C     		ldrb	r2, [r7, #16]
 8813 0104 83F8692B 		strb	r2, [r3, #2921]
2272:.\AdvantageImpl.c ****                 pjob->_ppump->_datacontainer._var0 = var0;
 8814              		.loc 1 2272 0
 8815 0108 7B69     		ldr	r3, [r7, #20]
 8816 010a DB69     		ldr	r3, [r3, #28]
 8817 010c 7A7C     		ldrb	r2, [r7, #17]
 8818 010e 83F8682B 		strb	r2, [r3, #2920]
2273:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._numpositions++;
 8819              		.loc 1 2273 0
 8820 0112 484B     		ldr	r3, .L357+4
 8821 0114 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 8822 0116 0133     		adds	r3, r3, #1
 8823 0118 DAB2     		uxtb	r2, r3
 8824 011a 464B     		ldr	r3, .L357+4
 8825 011c 9A70     		strb	r2, [r3, #2]
2274:.\AdvantageImpl.c ****                 
2275:.\AdvantageImpl.c ****                 break;
 8826              		.loc 1 2275 0
 8827 011e 4DE0     		b	.L348
 8828              	.L352:
 8829              	.LBE61:
 8830              	.LBB62:
2276:.\AdvantageImpl.c ****             }
2277:.\AdvantageImpl.c ****             case 2:
2278:.\AdvantageImpl.c ****             {
2279:.\AdvantageImpl.c ****                 
2280:.\AdvantageImpl.c ****                 ClearEepromBuffer();
 8831              		.loc 1 2280 0
 8832 0120 FFF7FEFF 		bl	ClearEepromBuffer
2281:.\AdvantageImpl.c ****                 //Cleanup of the pump identifier in order to start the enumeration procedure
2282:.\AdvantageImpl.c ****                 LoadEepromPage(EEPROM_DISPENSER_PUMP3_LAYOUT_PAGE);
 8833              		.loc 1 2282 0
 8834 0124 4FF42070 		mov	r0, #640
 8835 0128 FFF7FEFF 		bl	LoadEepromPage
2283:.\AdvantageImpl.c ****                 GetEepromBuffer()[0] = pjob->_ppump->_pumpid;
 8836              		.loc 1 2283 0
 8837 012c FFF7FEFF 		bl	GetEepromBuffer
 8838 0130 0246     		mov	r2, r0
 8839 0132 7B69     		ldr	r3, [r7, #20]
 8840 0134 DB69     		ldr	r3, [r3, #28]
 8841 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8842 0138 1370     		strb	r3, [r2]
2284:.\AdvantageImpl.c ****                 StoreEepromPage(EEPROM_DISPENSER_PUMP3_LAYOUT_PAGE);
 8843              		.loc 1 2284 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 197


 8844 013a 4FF42070 		mov	r0, #640
 8845 013e FFF7FEFF 		bl	StoreEepromPage
2285:.\AdvantageImpl.c ****                 
2286:.\AdvantageImpl.c ****                 uint8 var0 = pjob->_ppump->_datacontainer._var0;
 8846              		.loc 1 2286 0
 8847 0142 7B69     		ldr	r3, [r7, #20]
 8848 0144 DB69     		ldr	r3, [r3, #28]
 8849 0146 93F8683B 		ldrb	r3, [r3, #2920]
 8850 014a FB73     		strb	r3, [r7, #15]
2287:.\AdvantageImpl.c ****                 uint8 var1 = pjob->_ppump->_datacontainer._var1;
 8851              		.loc 1 2287 0
 8852 014c 7B69     		ldr	r3, [r7, #20]
 8853 014e DB69     		ldr	r3, [r3, #28]
 8854 0150 93F8693B 		ldrb	r3, [r3, #2921]
 8855 0154 BB73     		strb	r3, [r7, #14]
2288:.\AdvantageImpl.c ****                 pjob->_ppump = &_g_pumps[var1 + 1];
 8856              		.loc 1 2288 0
 8857 0156 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 8858 0158 0133     		adds	r3, r3, #1
 8859 015a 40F6C832 		movw	r2, #3016
 8860 015e 02FB03F3 		mul	r3, r2, r3
 8861 0162 334A     		ldr	r2, .L357
 8862 0164 1A44     		add	r2, r2, r3
 8863 0166 7B69     		ldr	r3, [r7, #20]
 8864 0168 DA61     		str	r2, [r3, #28]
2289:.\AdvantageImpl.c ****                 pjob->_ppump->_datacontainer._var1 = var1;
 8865              		.loc 1 2289 0
 8866 016a 7B69     		ldr	r3, [r7, #20]
 8867 016c DB69     		ldr	r3, [r3, #28]
 8868 016e BA7B     		ldrb	r2, [r7, #14]
 8869 0170 83F8692B 		strb	r2, [r3, #2921]
2290:.\AdvantageImpl.c ****                 pjob->_ppump->_datacontainer._var0 = var0;
 8870              		.loc 1 2290 0
 8871 0174 7B69     		ldr	r3, [r7, #20]
 8872 0176 DB69     		ldr	r3, [r3, #28]
 8873 0178 FA7B     		ldrb	r2, [r7, #15]
 8874 017a 83F8682B 		strb	r2, [r3, #2920]
2291:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._numpositions++;
 8875              		.loc 1 2291 0
 8876 017e 2D4B     		ldr	r3, .L357+4
 8877 0180 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 8878 0182 0133     		adds	r3, r3, #1
 8879 0184 DAB2     		uxtb	r2, r3
 8880 0186 2B4B     		ldr	r3, .L357+4
 8881 0188 9A70     		strb	r2, [r3, #2]
2292:.\AdvantageImpl.c ****                 
2293:.\AdvantageImpl.c ****                 break;
 8882              		.loc 1 2293 0
 8883 018a 17E0     		b	.L348
 8884              	.L353:
 8885              	.LBE62:
2294:.\AdvantageImpl.c ****             }
2295:.\AdvantageImpl.c ****             case 3:
2296:.\AdvantageImpl.c ****             {
2297:.\AdvantageImpl.c ****                 
2298:.\AdvantageImpl.c ****                 ClearEepromBuffer();
 8886              		.loc 1 2298 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 198


 8887 018c FFF7FEFF 		bl	ClearEepromBuffer
2299:.\AdvantageImpl.c ****                 //Cleanup of the pump identifier in order to start the enumeration procedure
2300:.\AdvantageImpl.c ****                 LoadEepromPage(EEPROM_DISPENSER_PUMP4_LAYOUT_PAGE);
 8888              		.loc 1 2300 0
 8889 0190 4FF43070 		mov	r0, #704
 8890 0194 FFF7FEFF 		bl	LoadEepromPage
2301:.\AdvantageImpl.c ****                 GetEepromBuffer()[0] = pjob->_ppump->_pumpid;                
 8891              		.loc 1 2301 0
 8892 0198 FFF7FEFF 		bl	GetEepromBuffer
 8893 019c 0246     		mov	r2, r0
 8894 019e 7B69     		ldr	r3, [r7, #20]
 8895 01a0 DB69     		ldr	r3, [r3, #28]
 8896 01a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8897 01a4 1370     		strb	r3, [r2]
2302:.\AdvantageImpl.c ****                 StoreEepromPage(EEPROM_DISPENSER_PUMP4_LAYOUT_PAGE);
 8898              		.loc 1 2302 0
 8899 01a6 4FF43070 		mov	r0, #704
 8900 01aa FFF7FEFF 		bl	StoreEepromPage
2303:.\AdvantageImpl.c ****                 _g_dispenserlayoutinfo._numpositions++;
 8901              		.loc 1 2303 0
 8902 01ae 214B     		ldr	r3, .L357+4
 8903 01b0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 8904 01b2 0133     		adds	r3, r3, #1
 8905 01b4 DAB2     		uxtb	r2, r3
 8906 01b6 1F4B     		ldr	r3, .L357+4
 8907 01b8 9A70     		strb	r2, [r3, #2]
2304:.\AdvantageImpl.c ****                 
2305:.\AdvantageImpl.c ****                 break;
 8908              		.loc 1 2305 0
 8909 01ba 00BF     		nop
 8910              	.L348:
2306:.\AdvantageImpl.c ****             }
2307:.\AdvantageImpl.c ****         }
2308:.\AdvantageImpl.c ****         pjob->_ppump->_datacontainer._var1++;
 8911              		.loc 1 2308 0
 8912 01bc 7B69     		ldr	r3, [r7, #20]
 8913 01be DB69     		ldr	r3, [r3, #28]
 8914 01c0 93F8692B 		ldrb	r2, [r3, #2921]
 8915 01c4 D2B2     		uxtb	r2, r2
 8916 01c6 0132     		adds	r2, r2, #1
 8917 01c8 D2B2     		uxtb	r2, r2
 8918 01ca 83F8692B 		strb	r2, [r3, #2921]
2309:.\AdvantageImpl.c ****         if(pjob->_ppump->_datacontainer._var1 < _MAX_NUMBER_OF_PUMPS_)
 8919              		.loc 1 2309 0
 8920 01ce 7B69     		ldr	r3, [r7, #20]
 8921 01d0 DB69     		ldr	r3, [r3, #28]
 8922 01d2 93F8693B 		ldrb	r3, [r3, #2921]
 8923 01d6 DBB2     		uxtb	r3, r3
 8924 01d8 032B     		cmp	r3, #3
 8925 01da 11D8     		bhi	.L354
2310:.\AdvantageImpl.c ****         {
2311:.\AdvantageImpl.c ****             pjob->_ppump->_datacontainer._var0++;
 8926              		.loc 1 2311 0
 8927 01dc 7B69     		ldr	r3, [r7, #20]
 8928 01de DB69     		ldr	r3, [r3, #28]
 8929 01e0 93F8682B 		ldrb	r2, [r3, #2920]
 8930 01e4 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 199


 8931 01e6 0132     		adds	r2, r2, #1
 8932 01e8 D2B2     		uxtb	r2, r2
 8933 01ea 83F8682B 		strb	r2, [r3, #2920]
2312:.\AdvantageImpl.c ****             pjob->_ppump->_pumpid = pjob->_ppump->_datacontainer._var0;
 8934              		.loc 1 2312 0
 8935 01ee 7B69     		ldr	r3, [r7, #20]
 8936 01f0 DB69     		ldr	r3, [r3, #28]
 8937 01f2 7A69     		ldr	r2, [r7, #20]
 8938 01f4 D269     		ldr	r2, [r2, #28]
 8939 01f6 92F8682B 		ldrb	r2, [r2, #2920]
 8940 01fa D2B2     		uxtb	r2, r2
 8941 01fc 1A70     		strb	r2, [r3]
 8942 01fe 14E0     		b	.L346
 8943              	.L354:
2313:.\AdvantageImpl.c ****         }else{//This is the end of the enumeration procedure
2314:.\AdvantageImpl.c ****             pjob->_reenqueue = false;
 8944              		.loc 1 2314 0
 8945 0200 7B69     		ldr	r3, [r7, #20]
 8946 0202 0022     		movs	r2, #0
 8947 0204 1A70     		strb	r2, [r3]
2315:.\AdvantageImpl.c ****             
2316:.\AdvantageImpl.c ****             //Chance for any extra initialization
2317:.\AdvantageImpl.c ****             if(_g_ptractprogramming == PNEAR_NULLPTR)
 8948              		.loc 1 2317 0
 8949 0206 0C4B     		ldr	r3, .L357+8
 8950 0208 1B68     		ldr	r3, [r3]
 8951 020a 002B     		cmp	r3, #0
 8952 020c 0DD1     		bne	.L346
2318:.\AdvantageImpl.c ****                 _g_ptractprogramming = AdvantageActivateProgramming;
 8953              		.loc 1 2318 0
 8954 020e 0A4B     		ldr	r3, .L357+8
 8955 0210 0A4A     		ldr	r2, .L357+12
 8956 0212 1A60     		str	r2, [r3]
 8957 0214 09E0     		b	.L346
 8958              	.L347:
2319:.\AdvantageImpl.c ****         }
2320:.\AdvantageImpl.c ****         
2321:.\AdvantageImpl.c ****     }else{//This is the end of the enumeration procedure
2322:.\AdvantageImpl.c ****         pjob->_reenqueue = false;
 8959              		.loc 1 2322 0
 8960 0216 7B69     		ldr	r3, [r7, #20]
 8961 0218 0022     		movs	r2, #0
 8962 021a 1A70     		strb	r2, [r3]
2323:.\AdvantageImpl.c ****         
2324:.\AdvantageImpl.c ****         //Chance for any extra initialization
2325:.\AdvantageImpl.c ****         if(_g_ptractprogramming == PNEAR_NULLPTR)
 8963              		.loc 1 2325 0
 8964 021c 064B     		ldr	r3, .L357+8
 8965 021e 1B68     		ldr	r3, [r3]
 8966 0220 002B     		cmp	r3, #0
 8967 0222 02D1     		bne	.L346
2326:.\AdvantageImpl.c ****             _g_ptractprogramming = AdvantageActivateProgramming;
 8968              		.loc 1 2326 0
 8969 0224 044B     		ldr	r3, .L357+8
 8970 0226 054A     		ldr	r2, .L357+12
 8971 0228 1A60     		str	r2, [r3]
 8972              	.L346:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 200


2327:.\AdvantageImpl.c ****     }
2328:.\AdvantageImpl.c **** }
 8973              		.loc 1 2328 0
 8974 022a 1837     		adds	r7, r7, #24
 8975              		.cfi_def_cfa_offset 8
 8976 022c BD46     		mov	sp, r7
 8977              		.cfi_def_cfa_register 13
 8978              		@ sp needed
 8979 022e 80BD     		pop	{r7, pc}
 8980              	.L358:
 8981              		.align	2
 8982              	.L357:
 8983 0230 00000000 		.word	_g_pumps
 8984 0234 00000000 		.word	_g_dispenserlayoutinfo
 8985 0238 00000000 		.word	_g_ptractprogramming
 8986 023c 00000000 		.word	AdvantageActivateProgramming
 8987              		.cfi_endproc
 8988              	.LFE95:
 8989              		.size	AcquirePumpEnumeratorResponse, .-AcquirePumpEnumeratorResponse
 8990              		.section	.text.PumpEnumeratorTimeout,"ax",%progbits
 8991              		.align	2
 8992              		.global	PumpEnumeratorTimeout
 8993              		.thumb
 8994              		.thumb_func
 8995              		.type	PumpEnumeratorTimeout, %function
 8996              	PumpEnumeratorTimeout:
 8997              	.LFB96:
2329:.\AdvantageImpl.c **** 
2330:.\AdvantageImpl.c **** //@Created By: HIJH
2331:.\AdvantageImpl.c **** //@Septembre de 2016
2332:.\AdvantageImpl.c **** void PumpEnumeratorTimeout(void *pparam)
2333:.\AdvantageImpl.c **** {
 8998              		.loc 1 2333 0
 8999              		.cfi_startproc
 9000              		@ args = 0, pretend = 0, frame = 16
 9001              		@ frame_needed = 1, uses_anonymous_args = 0
 9002              		@ link register save eliminated.
 9003 0000 80B4     		push	{r7}
 9004              		.cfi_def_cfa_offset 4
 9005              		.cfi_offset 7, -4
 9006 0002 85B0     		sub	sp, sp, #20
 9007              		.cfi_def_cfa_offset 24
 9008 0004 00AF     		add	r7, sp, #0
 9009              		.cfi_def_cfa_register 7
 9010 0006 7860     		str	r0, [r7, #4]
2334:.\AdvantageImpl.c ****     PPUMPTRANSACTIONJOBCONTEXTPTR pjob = (PPUMPTRANSACTIONJOBCONTEXTPTR)pparam;
 9011              		.loc 1 2334 0
 9012 0008 7B68     		ldr	r3, [r7, #4]
 9013 000a FB60     		str	r3, [r7, #12]
2335:.\AdvantageImpl.c ****     //_var0 holds the iterator index that goes from 0x0:pump16 to 0xF:pump15
2336:.\AdvantageImpl.c ****     if(pjob->_ppump->_datacontainer._var0 < 0x10)
 9014              		.loc 1 2336 0
 9015 000c FB68     		ldr	r3, [r7, #12]
 9016 000e DB69     		ldr	r3, [r3, #28]
 9017 0010 93F8683B 		ldrb	r3, [r3, #2920]
 9018 0014 DBB2     		uxtb	r3, r3
 9019 0016 0F2B     		cmp	r3, #15
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 201


 9020 0018 14D8     		bhi	.L360
2337:.\AdvantageImpl.c ****     {
2338:.\AdvantageImpl.c ****         pjob->_retriescounter = 0;
 9021              		.loc 1 2338 0
 9022 001a FB68     		ldr	r3, [r7, #12]
 9023 001c 0022     		movs	r2, #0
 9024 001e DA81     		strh	r2, [r3, #14]	@ movhi
2339:.\AdvantageImpl.c ****         pjob->_ppump->_datacontainer._var0++;
 9025              		.loc 1 2339 0
 9026 0020 FB68     		ldr	r3, [r7, #12]
 9027 0022 DB69     		ldr	r3, [r3, #28]
 9028 0024 93F8682B 		ldrb	r2, [r3, #2920]
 9029 0028 D2B2     		uxtb	r2, r2
 9030 002a 0132     		adds	r2, r2, #1
 9031 002c D2B2     		uxtb	r2, r2
 9032 002e 83F8682B 		strb	r2, [r3, #2920]
2340:.\AdvantageImpl.c ****         pjob->_ppump->_pumpid = pjob->_ppump->_datacontainer._var0;
 9033              		.loc 1 2340 0
 9034 0032 FB68     		ldr	r3, [r7, #12]
 9035 0034 DB69     		ldr	r3, [r3, #28]
 9036 0036 FA68     		ldr	r2, [r7, #12]
 9037 0038 D269     		ldr	r2, [r2, #28]
 9038 003a 92F8682B 		ldrb	r2, [r2, #2920]
 9039 003e D2B2     		uxtb	r2, r2
 9040 0040 1A70     		strb	r2, [r3]
 9041 0042 09E0     		b	.L359
 9042              	.L360:
2341:.\AdvantageImpl.c ****     }else{
2342:.\AdvantageImpl.c ****         pjob->_reenqueue = false;
 9043              		.loc 1 2342 0
 9044 0044 FB68     		ldr	r3, [r7, #12]
 9045 0046 0022     		movs	r2, #0
 9046 0048 1A70     		strb	r2, [r3]
2343:.\AdvantageImpl.c ****         
2344:.\AdvantageImpl.c ****         if(_g_ptractprogramming == PNEAR_NULLPTR)
 9047              		.loc 1 2344 0
 9048 004a 064B     		ldr	r3, .L362
 9049 004c 1B68     		ldr	r3, [r3]
 9050 004e 002B     		cmp	r3, #0
 9051 0050 02D1     		bne	.L359
2345:.\AdvantageImpl.c ****             _g_ptractprogramming = AdvantageActivateProgramming;
 9052              		.loc 1 2345 0
 9053 0052 044B     		ldr	r3, .L362
 9054 0054 044A     		ldr	r2, .L362+4
 9055 0056 1A60     		str	r2, [r3]
 9056              	.L359:
2346:.\AdvantageImpl.c ****     }
2347:.\AdvantageImpl.c **** }
 9057              		.loc 1 2347 0
 9058 0058 1437     		adds	r7, r7, #20
 9059              		.cfi_def_cfa_offset 4
 9060 005a BD46     		mov	sp, r7
 9061              		.cfi_def_cfa_register 13
 9062              		@ sp needed
 9063 005c 5DF8047B 		ldr	r7, [sp], #4
 9064              		.cfi_restore 7
 9065              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 202


 9066 0060 7047     		bx	lr
 9067              	.L363:
 9068 0062 00BF     		.align	2
 9069              	.L362:
 9070 0064 00000000 		.word	_g_ptractprogramming
 9071 0068 00000000 		.word	AdvantageActivateProgramming
 9072              		.cfi_endproc
 9073              	.LFE96:
 9074              		.size	PumpEnumeratorTimeout, .-PumpEnumeratorTimeout
 9075              		.section	.text.AcquirePumpTotalsResponseResolver,"ax",%progbits
 9076              		.align	2
 9077              		.global	AcquirePumpTotalsResponseResolver
 9078              		.thumb
 9079              		.thumb_func
 9080              		.type	AcquirePumpTotalsResponseResolver, %function
 9081              	AcquirePumpTotalsResponseResolver:
 9082              	.LFB97:
2348:.\AdvantageImpl.c **** 
2349:.\AdvantageImpl.c **** //@Created By: HIJH
2350:.\AdvantageImpl.c **** //@Septembre de 2016
2351:.\AdvantageImpl.c **** bool AcquirePumpTotalsResponseResolver(void *pparam, void *pbuffer, uint16 buffersize)
2352:.\AdvantageImpl.c **** {
 9083              		.loc 1 2352 0
 9084              		.cfi_startproc
 9085              		@ args = 0, pretend = 0, frame = 24
 9086              		@ frame_needed = 1, uses_anonymous_args = 0
 9087              		@ link register save eliminated.
 9088 0000 80B4     		push	{r7}
 9089              		.cfi_def_cfa_offset 4
 9090              		.cfi_offset 7, -4
 9091 0002 87B0     		sub	sp, sp, #28
 9092              		.cfi_def_cfa_offset 32
 9093 0004 00AF     		add	r7, sp, #0
 9094              		.cfi_def_cfa_register 7
 9095 0006 F860     		str	r0, [r7, #12]
 9096 0008 B960     		str	r1, [r7, #8]
 9097 000a 1346     		mov	r3, r2
 9098 000c FB80     		strh	r3, [r7, #6]	@ movhi
2353:.\AdvantageImpl.c ****     bool retval = false;
 9099              		.loc 1 2353 0
 9100 000e 0023     		movs	r3, #0
 9101 0010 FB75     		strb	r3, [r7, #23]
2354:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 9102              		.loc 1 2354 0
 9103 0012 FB68     		ldr	r3, [r7, #12]
 9104 0014 3B61     		str	r3, [r7, #16]
2355:.\AdvantageImpl.c ****     
2356:.\AdvantageImpl.c ****     if(_g_dispenserlayoutinfo._displaydigitsmode == 0x06)
 9105              		.loc 1 2356 0
 9106 0016 504B     		ldr	r3, .L379
 9107 0018 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 9108 001a 062B     		cmp	r3, #6
 9109 001c 4DD1     		bne	.L365
2357:.\AdvantageImpl.c ****     {            
2358:.\AdvantageImpl.c ****         switch(ppump->_pumpindex)
 9110              		.loc 1 2358 0
 9111 001e 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 203


 9112 0020 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 9113 0022 032B     		cmp	r3, #3
 9114 0024 00F29080 		bhi	.L372
 9115 0028 01A2     		adr	r2, .L368
 9116 002a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 9117 002e 00BF     		.p2align 2
 9118              	.L368:
 9119 0030 41000000 		.word	.L367+1
 9120 0034 5F000000 		.word	.L369+1
 9121 0038 7D000000 		.word	.L370+1
 9122 003c 9B000000 		.word	.L371+1
 9123              		.p2align 1
 9124              	.L367:
2359:.\AdvantageImpl.c ****         {
2360:.\AdvantageImpl.c ****             case 0x00:
2361:.\AdvantageImpl.c ****                 retval = (buffersize >= (_g_dispenserlayoutinfo._hosesposition1*_PUMP_TOTALS_BUFFER
 9125              		.loc 1 2361 0
 9126 0040 FA88     		ldrh	r2, [r7, #6]
 9127 0042 454B     		ldr	r3, .L379
 9128 0044 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9129 0046 1946     		mov	r1, r3
 9130 0048 0B46     		mov	r3, r1
 9131 004a 1B01     		lsls	r3, r3, #4
 9132 004c 5B1A     		subs	r3, r3, r1
 9133 004e 5B00     		lsls	r3, r3, #1
 9134 0050 0433     		adds	r3, r3, #4
 9135 0052 9A42     		cmp	r2, r3
 9136 0054 ACBF     		ite	ge
 9137 0056 0123     		movge	r3, #1
 9138 0058 0023     		movlt	r3, #0
 9139 005a FB75     		strb	r3, [r7, #23]
2362:.\AdvantageImpl.c ****             break;
 9140              		.loc 1 2362 0
 9141 005c 2CE0     		b	.L366
 9142              	.L369:
2363:.\AdvantageImpl.c ****             case 0x01:
2364:.\AdvantageImpl.c ****                 retval = (buffersize >= (_g_dispenserlayoutinfo._hosesposition2*_PUMP_TOTALS_BUFFER
 9143              		.loc 1 2364 0
 9144 005e FA88     		ldrh	r2, [r7, #6]
 9145 0060 3D4B     		ldr	r3, .L379
 9146 0062 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9147 0064 1946     		mov	r1, r3
 9148 0066 0B46     		mov	r3, r1
 9149 0068 1B01     		lsls	r3, r3, #4
 9150 006a 5B1A     		subs	r3, r3, r1
 9151 006c 5B00     		lsls	r3, r3, #1
 9152 006e 0433     		adds	r3, r3, #4
 9153 0070 9A42     		cmp	r2, r3
 9154 0072 ACBF     		ite	ge
 9155 0074 0123     		movge	r3, #1
 9156 0076 0023     		movlt	r3, #0
 9157 0078 FB75     		strb	r3, [r7, #23]
2365:.\AdvantageImpl.c ****             break;
 9158              		.loc 1 2365 0
 9159 007a 1DE0     		b	.L366
 9160              	.L370:
2366:.\AdvantageImpl.c ****             case 0x02:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 204


2367:.\AdvantageImpl.c ****                 retval = (buffersize >= (_g_dispenserlayoutinfo._hosesposition3*_PUMP_TOTALS_BUFFER
 9161              		.loc 1 2367 0
 9162 007c FA88     		ldrh	r2, [r7, #6]
 9163 007e 364B     		ldr	r3, .L379
 9164 0080 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9165 0082 1946     		mov	r1, r3
 9166 0084 0B46     		mov	r3, r1
 9167 0086 1B01     		lsls	r3, r3, #4
 9168 0088 5B1A     		subs	r3, r3, r1
 9169 008a 5B00     		lsls	r3, r3, #1
 9170 008c 0433     		adds	r3, r3, #4
 9171 008e 9A42     		cmp	r2, r3
 9172 0090 ACBF     		ite	ge
 9173 0092 0123     		movge	r3, #1
 9174 0094 0023     		movlt	r3, #0
 9175 0096 FB75     		strb	r3, [r7, #23]
2368:.\AdvantageImpl.c ****             break;
 9176              		.loc 1 2368 0
 9177 0098 0EE0     		b	.L366
 9178              	.L371:
2369:.\AdvantageImpl.c ****             case 0x03:
2370:.\AdvantageImpl.c ****                 retval = (buffersize >= (_g_dispenserlayoutinfo._hosesposition4*_PUMP_TOTALS_BUFFER
 9179              		.loc 1 2370 0
 9180 009a FA88     		ldrh	r2, [r7, #6]
 9181 009c 2E4B     		ldr	r3, .L379
 9182 009e 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 9183 00a0 1946     		mov	r1, r3
 9184 00a2 0B46     		mov	r3, r1
 9185 00a4 1B01     		lsls	r3, r3, #4
 9186 00a6 5B1A     		subs	r3, r3, r1
 9187 00a8 5B00     		lsls	r3, r3, #1
 9188 00aa 0433     		adds	r3, r3, #4
 9189 00ac 9A42     		cmp	r2, r3
 9190 00ae ACBF     		ite	ge
 9191 00b0 0123     		movge	r3, #1
 9192 00b2 0023     		movlt	r3, #0
 9193 00b4 FB75     		strb	r3, [r7, #23]
2371:.\AdvantageImpl.c ****             break;
 9194              		.loc 1 2371 0
 9195 00b6 00BF     		nop
 9196              	.L366:
 9197 00b8 46E0     		b	.L372
 9198              	.L365:
2372:.\AdvantageImpl.c ****         }
2373:.\AdvantageImpl.c ****     }
2374:.\AdvantageImpl.c ****     else
2375:.\AdvantageImpl.c ****     {            
2376:.\AdvantageImpl.c ****         switch(ppump->_pumpindex)
 9199              		.loc 1 2376 0
 9200 00ba 3B69     		ldr	r3, [r7, #16]
 9201 00bc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 9202 00be 032B     		cmp	r3, #3
 9203 00c0 42D8     		bhi	.L372
 9204 00c2 01A2     		adr	r2, .L374
 9205 00c4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 9206              		.p2align 2
 9207              	.L374:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 205


 9208 00c8 D9000000 		.word	.L373+1
 9209 00cc F5000000 		.word	.L375+1
 9210 00d0 11010000 		.word	.L376+1
 9211 00d4 2D010000 		.word	.L377+1
 9212              		.p2align 1
 9213              	.L373:
2377:.\AdvantageImpl.c ****         {
2378:.\AdvantageImpl.c ****             case 0x00:
2379:.\AdvantageImpl.c ****                 retval = (buffersize >= (_g_dispenserlayoutinfo._hosesposition1*_PUMP_TOTALS_BUFFER
 9214              		.loc 1 2379 0
 9215 00d8 FA88     		ldrh	r2, [r7, #6]
 9216 00da 1F4B     		ldr	r3, .L379
 9217 00dc DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9218 00de 1946     		mov	r1, r3
 9219 00e0 2A23     		movs	r3, #42
 9220 00e2 03FB01F3 		mul	r3, r3, r1
 9221 00e6 0433     		adds	r3, r3, #4
 9222 00e8 9A42     		cmp	r2, r3
 9223 00ea ACBF     		ite	ge
 9224 00ec 0123     		movge	r3, #1
 9225 00ee 0023     		movlt	r3, #0
 9226 00f0 FB75     		strb	r3, [r7, #23]
2380:.\AdvantageImpl.c ****             break;
 9227              		.loc 1 2380 0
 9228 00f2 29E0     		b	.L372
 9229              	.L375:
2381:.\AdvantageImpl.c ****             case 0x01:
2382:.\AdvantageImpl.c ****                 retval = (buffersize >= (_g_dispenserlayoutinfo._hosesposition2*_PUMP_TOTALS_BUFFER
 9230              		.loc 1 2382 0
 9231 00f4 FA88     		ldrh	r2, [r7, #6]
 9232 00f6 184B     		ldr	r3, .L379
 9233 00f8 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9234 00fa 1946     		mov	r1, r3
 9235 00fc 2A23     		movs	r3, #42
 9236 00fe 03FB01F3 		mul	r3, r3, r1
 9237 0102 0433     		adds	r3, r3, #4
 9238 0104 9A42     		cmp	r2, r3
 9239 0106 ACBF     		ite	ge
 9240 0108 0123     		movge	r3, #1
 9241 010a 0023     		movlt	r3, #0
 9242 010c FB75     		strb	r3, [r7, #23]
2383:.\AdvantageImpl.c ****             break;
 9243              		.loc 1 2383 0
 9244 010e 1BE0     		b	.L372
 9245              	.L376:
2384:.\AdvantageImpl.c ****             case 0x02:
2385:.\AdvantageImpl.c ****                 retval = (buffersize >= (_g_dispenserlayoutinfo._hosesposition3*_PUMP_TOTALS_BUFFER
 9246              		.loc 1 2385 0
 9247 0110 FA88     		ldrh	r2, [r7, #6]
 9248 0112 114B     		ldr	r3, .L379
 9249 0114 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9250 0116 1946     		mov	r1, r3
 9251 0118 2A23     		movs	r3, #42
 9252 011a 03FB01F3 		mul	r3, r3, r1
 9253 011e 0433     		adds	r3, r3, #4
 9254 0120 9A42     		cmp	r2, r3
 9255 0122 ACBF     		ite	ge
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 206


 9256 0124 0123     		movge	r3, #1
 9257 0126 0023     		movlt	r3, #0
 9258 0128 FB75     		strb	r3, [r7, #23]
2386:.\AdvantageImpl.c ****             break;
 9259              		.loc 1 2386 0
 9260 012a 0DE0     		b	.L372
 9261              	.L377:
2387:.\AdvantageImpl.c ****             case 0x03:
2388:.\AdvantageImpl.c ****                 retval = (buffersize >= (_g_dispenserlayoutinfo._hosesposition4*_PUMP_TOTALS_BUFFER
 9262              		.loc 1 2388 0
 9263 012c FA88     		ldrh	r2, [r7, #6]
 9264 012e 0A4B     		ldr	r3, .L379
 9265 0130 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 9266 0132 1946     		mov	r1, r3
 9267 0134 2A23     		movs	r3, #42
 9268 0136 03FB01F3 		mul	r3, r3, r1
 9269 013a 0433     		adds	r3, r3, #4
 9270 013c 9A42     		cmp	r2, r3
 9271 013e ACBF     		ite	ge
 9272 0140 0123     		movge	r3, #1
 9273 0142 0023     		movlt	r3, #0
 9274 0144 FB75     		strb	r3, [r7, #23]
2389:.\AdvantageImpl.c ****             break;
 9275              		.loc 1 2389 0
 9276 0146 00BF     		nop
 9277              	.L372:
2390:.\AdvantageImpl.c ****         }
2391:.\AdvantageImpl.c ****     }
2392:.\AdvantageImpl.c ****     
2393:.\AdvantageImpl.c ****     return retval;
 9278              		.loc 1 2393 0
 9279 0148 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
2394:.\AdvantageImpl.c **** }
 9280              		.loc 1 2394 0
 9281 014a 1846     		mov	r0, r3
 9282 014c 1C37     		adds	r7, r7, #28
 9283              		.cfi_def_cfa_offset 4
 9284 014e BD46     		mov	sp, r7
 9285              		.cfi_def_cfa_register 13
 9286              		@ sp needed
 9287 0150 5DF8047B 		ldr	r7, [sp], #4
 9288              		.cfi_restore 7
 9289              		.cfi_def_cfa_offset 0
 9290 0154 7047     		bx	lr
 9291              	.L380:
 9292 0156 00BF     		.align	2
 9293              	.L379:
 9294 0158 00000000 		.word	_g_dispenserlayoutinfo
 9295              		.cfi_endproc
 9296              	.LFE97:
 9297              		.size	AcquirePumpTotalsResponseResolver, .-AcquirePumpTotalsResponseResolver
 9298              		.section	.text.AcquirePumpTransactionDataResponseResolver,"ax",%progbits
 9299              		.align	2
 9300              		.global	AcquirePumpTransactionDataResponseResolver
 9301              		.thumb
 9302              		.thumb_func
 9303              		.type	AcquirePumpTransactionDataResponseResolver, %function
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 207


 9304              	AcquirePumpTransactionDataResponseResolver:
 9305              	.LFB98:
2395:.\AdvantageImpl.c **** 
2396:.\AdvantageImpl.c **** //@Created By: HIJH
2397:.\AdvantageImpl.c **** //@Septembre de 2016
2398:.\AdvantageImpl.c **** bool AcquirePumpTransactionDataResponseResolver(void *pparam, void *pbuffer, uint16 buffersize)
2399:.\AdvantageImpl.c **** {
 9306              		.loc 1 2399 0
 9307              		.cfi_startproc
 9308              		@ args = 0, pretend = 0, frame = 24
 9309              		@ frame_needed = 1, uses_anonymous_args = 0
 9310              		@ link register save eliminated.
 9311 0000 80B4     		push	{r7}
 9312              		.cfi_def_cfa_offset 4
 9313              		.cfi_offset 7, -4
 9314 0002 87B0     		sub	sp, sp, #28
 9315              		.cfi_def_cfa_offset 32
 9316 0004 00AF     		add	r7, sp, #0
 9317              		.cfi_def_cfa_register 7
 9318 0006 F860     		str	r0, [r7, #12]
 9319 0008 B960     		str	r1, [r7, #8]
 9320 000a 1346     		mov	r3, r2
 9321 000c FB80     		strh	r3, [r7, #6]	@ movhi
2400:.\AdvantageImpl.c ****     bool retval = false;
 9322              		.loc 1 2400 0
 9323 000e 0023     		movs	r3, #0
 9324 0010 FB75     		strb	r3, [r7, #23]
2401:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = (PNEAR_PUMPPTR)pparam;
 9325              		.loc 1 2401 0
 9326 0012 FB68     		ldr	r3, [r7, #12]
 9327 0014 3B61     		str	r3, [r7, #16]
2402:.\AdvantageImpl.c ****     
2403:.\AdvantageImpl.c ****     if(_g_dispenserlayoutinfo._displaydigitsmode == 0x06)
 9328              		.loc 1 2403 0
 9329 0016 0C4B     		ldr	r3, .L385
 9330 0018 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 9331 001a 062B     		cmp	r3, #6
 9332 001c 06D1     		bne	.L382
2404:.\AdvantageImpl.c ****     {            
2405:.\AdvantageImpl.c ****         retval = (buffersize >= PUMP_TRANSACTION_DATA_REQUEST_RESPONSE_SIZE_4DIGITS);
 9333              		.loc 1 2405 0
 9334 001e FB88     		ldrh	r3, [r7, #6]
 9335 0020 202B     		cmp	r3, #32
 9336 0022 8CBF     		ite	hi
 9337 0024 0123     		movhi	r3, #1
 9338 0026 0023     		movls	r3, #0
 9339 0028 FB75     		strb	r3, [r7, #23]
 9340 002a 05E0     		b	.L383
 9341              	.L382:
2406:.\AdvantageImpl.c ****     }
2407:.\AdvantageImpl.c ****     else
2408:.\AdvantageImpl.c ****     {
2409:.\AdvantageImpl.c ****         retval = (buffersize >= PUMP_TRANSACTION_DATA_REQUEST_RESPONSE_SIZE);
 9342              		.loc 1 2409 0
 9343 002c FB88     		ldrh	r3, [r7, #6]
 9344 002e 262B     		cmp	r3, #38
 9345 0030 8CBF     		ite	hi
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 208


 9346 0032 0123     		movhi	r3, #1
 9347 0034 0023     		movls	r3, #0
 9348 0036 FB75     		strb	r3, [r7, #23]
 9349              	.L383:
2410:.\AdvantageImpl.c ****     }
2411:.\AdvantageImpl.c ****     
2412:.\AdvantageImpl.c ****     return retval;
 9350              		.loc 1 2412 0
 9351 0038 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
2413:.\AdvantageImpl.c **** }
 9352              		.loc 1 2413 0
 9353 003a 1846     		mov	r0, r3
 9354 003c 1C37     		adds	r7, r7, #28
 9355              		.cfi_def_cfa_offset 4
 9356 003e BD46     		mov	sp, r7
 9357              		.cfi_def_cfa_register 13
 9358              		@ sp needed
 9359 0040 5DF8047B 		ldr	r7, [sp], #4
 9360              		.cfi_restore 7
 9361              		.cfi_def_cfa_offset 0
 9362 0044 7047     		bx	lr
 9363              	.L386:
 9364 0046 00BF     		.align	2
 9365              	.L385:
 9366 0048 00000000 		.word	_g_dispenserlayoutinfo
 9367              		.cfi_endproc
 9368              	.LFE98:
 9369              		.size	AcquirePumpTransactionDataResponseResolver, .-AcquirePumpTransactionDataResponseResolver
 9370              		.section	.text.AcquirePpuChangeResponse,"ax",%progbits
 9371              		.align	2
 9372              		.global	AcquirePpuChangeResponse
 9373              		.thumb
 9374              		.thumb_func
 9375              		.type	AcquirePpuChangeResponse, %function
 9376              	AcquirePpuChangeResponse:
 9377              	.LFB99:
2414:.\AdvantageImpl.c **** 
2415:.\AdvantageImpl.c **** void AcquirePpuChangeResponse(void *pparam)
2416:.\AdvantageImpl.c **** {
 9378              		.loc 1 2416 0
 9379              		.cfi_startproc
 9380              		@ args = 0, pretend = 0, frame = 16
 9381              		@ frame_needed = 1, uses_anonymous_args = 0
 9382              		@ link register save eliminated.
 9383 0000 80B4     		push	{r7}
 9384              		.cfi_def_cfa_offset 4
 9385              		.cfi_offset 7, -4
 9386 0002 85B0     		sub	sp, sp, #20
 9387              		.cfi_def_cfa_offset 24
 9388 0004 00AF     		add	r7, sp, #0
 9389              		.cfi_def_cfa_register 7
 9390 0006 7860     		str	r0, [r7, #4]
2417:.\AdvantageImpl.c ****     PPUMPTRANSACTIONJOBCONTEXTPTR pjob = (PPUMPTRANSACTIONJOBCONTEXTPTR)pparam;
 9391              		.loc 1 2417 0
 9392 0008 7B68     		ldr	r3, [r7, #4]
 9393 000a FB60     		str	r3, [r7, #12]
2418:.\AdvantageImpl.c ****     if(pjob)
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 209


 9394              		.loc 1 2418 0
 9395 000c FB68     		ldr	r3, [r7, #12]
 9396 000e 002B     		cmp	r3, #0
 9397 0010 3AD0     		beq	.L387
2419:.\AdvantageImpl.c ****     {
2420:.\AdvantageImpl.c ****         pjob->_ppump->_pumpstate = ((pjob->_ppump->_rxbuffer[0x00] & 0xF0) >> 4);
 9398              		.loc 1 2420 0
 9399 0012 FB68     		ldr	r3, [r7, #12]
 9400 0014 DB69     		ldr	r3, [r3, #28]
 9401 0016 FA68     		ldr	r2, [r7, #12]
 9402 0018 D269     		ldr	r2, [r2, #28]
 9403 001a 92F8A021 		ldrb	r2, [r2, #416]	@ zero_extendqisi2
 9404 001e 1209     		lsrs	r2, r2, #4
 9405 0020 D2B2     		uxtb	r2, r2
 9406 0022 9A70     		strb	r2, [r3, #2]
2421:.\AdvantageImpl.c ****         
2422:.\AdvantageImpl.c ****         switch(_g_dispenserlayoutinfo._numpositions)
 9407              		.loc 1 2422 0
 9408 0024 1B4B     		ldr	r3, .L393
 9409 0026 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 9410 0028 022B     		cmp	r3, #2
 9411 002a 02D0     		beq	.L389
 9412 002c 042B     		cmp	r3, #4
 9413 002e 16D0     		beq	.L390
 9414 0030 2AE0     		b	.L387
 9415              	.L389:
2423:.\AdvantageImpl.c ****         {
2424:.\AdvantageImpl.c ****             case 0x02:
2425:.\AdvantageImpl.c ****             {
2426:.\AdvantageImpl.c ****                 if(pjob->_ppump->_pumpindex == (_g_dispenserlayoutinfo._numpositions - 1) && (pjob-
 9416              		.loc 1 2426 0
 9417 0032 FB68     		ldr	r3, [r7, #12]
 9418 0034 DB69     		ldr	r3, [r3, #28]
 9419 0036 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 9420 0038 1A46     		mov	r2, r3
 9421 003a 164B     		ldr	r3, .L393
 9422 003c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 9423 003e 013B     		subs	r3, r3, #1
 9424 0040 9A42     		cmp	r2, r3
 9425 0042 0BD1     		bne	.L391
 9426              		.loc 1 2426 0 is_stmt 0 discriminator 1
 9427 0044 FB68     		ldr	r3, [r7, #12]
 9428 0046 DB69     		ldr	r3, [r3, #28]
 9429 0048 DB78     		ldrb	r3, [r3, #3]
 9430 004a DAB2     		uxtb	r2, r3
 9431 004c 114B     		ldr	r3, .L393
 9432 004e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9433 0050 9A42     		cmp	r2, r3
 9434 0052 03D1     		bne	.L391
2427:.\AdvantageImpl.c ****                     _g_dispenserlayoutinfo._inconfiguration = false;
 9435              		.loc 1 2427 0 is_stmt 1
 9436 0054 0F4B     		ldr	r3, .L393
 9437 0056 0022     		movs	r2, #0
 9438 0058 1A70     		strb	r2, [r3]
2428:.\AdvantageImpl.c ****                 
2429:.\AdvantageImpl.c ****                 break;
 9439              		.loc 1 2429 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 210


 9440 005a 15E0     		b	.L387
 9441              	.L391:
 9442 005c 14E0     		b	.L387
 9443              	.L390:
2430:.\AdvantageImpl.c ****             }
2431:.\AdvantageImpl.c ****             case 0x04:
2432:.\AdvantageImpl.c ****             {
2433:.\AdvantageImpl.c ****                 if(pjob->_ppump->_pumpindex == (_g_dispenserlayoutinfo._numpositions - 1) && (pjob-
 9444              		.loc 1 2433 0
 9445 005e FB68     		ldr	r3, [r7, #12]
 9446 0060 DB69     		ldr	r3, [r3, #28]
 9447 0062 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 9448 0064 1A46     		mov	r2, r3
 9449 0066 0B4B     		ldr	r3, .L393
 9450 0068 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 9451 006a 013B     		subs	r3, r3, #1
 9452 006c 9A42     		cmp	r2, r3
 9453 006e 0AD1     		bne	.L392
 9454              		.loc 1 2433 0 is_stmt 0 discriminator 1
 9455 0070 FB68     		ldr	r3, [r7, #12]
 9456 0072 DB69     		ldr	r3, [r3, #28]
 9457 0074 DB78     		ldrb	r3, [r3, #3]
 9458 0076 DAB2     		uxtb	r2, r3
 9459 0078 064B     		ldr	r3, .L393
 9460 007a 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 9461 007c 9A42     		cmp	r2, r3
 9462 007e 02D1     		bne	.L392
2434:.\AdvantageImpl.c ****                     _g_dispenserlayoutinfo._inconfiguration = false;
 9463              		.loc 1 2434 0 is_stmt 1
 9464 0080 044B     		ldr	r3, .L393
 9465 0082 0022     		movs	r2, #0
 9466 0084 1A70     		strb	r2, [r3]
 9467              	.L392:
2435:.\AdvantageImpl.c ****                 
2436:.\AdvantageImpl.c ****                 break;
 9468              		.loc 1 2436 0
 9469 0086 00BF     		nop
 9470              	.L387:
2437:.\AdvantageImpl.c ****             }
2438:.\AdvantageImpl.c ****         }
2439:.\AdvantageImpl.c ****     }
2440:.\AdvantageImpl.c **** }
 9471              		.loc 1 2440 0
 9472 0088 1437     		adds	r7, r7, #20
 9473              		.cfi_def_cfa_offset 4
 9474 008a BD46     		mov	sp, r7
 9475              		.cfi_def_cfa_register 13
 9476              		@ sp needed
 9477 008c 5DF8047B 		ldr	r7, [sp], #4
 9478              		.cfi_restore 7
 9479              		.cfi_def_cfa_offset 0
 9480 0090 7047     		bx	lr
 9481              	.L394:
 9482 0092 00BF     		.align	2
 9483              	.L393:
 9484 0094 00000000 		.word	_g_dispenserlayoutinfo
 9485              		.cfi_endproc
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 211


 9486              	.LFE99:
 9487              		.size	AcquirePpuChangeResponse, .-AcquirePpuChangeResponse
 9488              		.section	.text.AdvantageActivateProgramming,"ax",%progbits
 9489              		.align	2
 9490              		.global	AdvantageActivateProgramming
 9491              		.thumb
 9492              		.thumb_func
 9493              		.type	AdvantageActivateProgramming, %function
 9494              	AdvantageActivateProgramming:
 9495              	.LFB100:
2441:.\AdvantageImpl.c **** 
2442:.\AdvantageImpl.c **** //@Created By: HIJH
2443:.\AdvantageImpl.c **** //@Novembre de 2016
2444:.\AdvantageImpl.c **** void AdvantageActivateProgramming(LPVOID pparam)
2445:.\AdvantageImpl.c **** {
 9496              		.loc 1 2445 0
 9497              		.cfi_startproc
 9498              		@ args = 0, pretend = 0, frame = 24
 9499              		@ frame_needed = 1, uses_anonymous_args = 0
 9500 0000 80B5     		push	{r7, lr}
 9501              		.cfi_def_cfa_offset 8
 9502              		.cfi_offset 7, -8
 9503              		.cfi_offset 14, -4
 9504 0002 86B0     		sub	sp, sp, #24
 9505              		.cfi_def_cfa_offset 32
 9506 0004 00AF     		add	r7, sp, #0
 9507              		.cfi_def_cfa_register 7
 9508 0006 7860     		str	r0, [r7, #4]
2446:.\AdvantageImpl.c ****     PNEAR_PUMPPTR ppump = &_g_pumps[0x00];
 9509              		.loc 1 2446 0
 9510 0008 264B     		ldr	r3, .L400
 9511 000a 3B61     		str	r3, [r7, #16]
2447:.\AdvantageImpl.c ****     PSINKMESSAGEPTR pmsg = (PSINKMESSAGEPTR)pparam;
 9512              		.loc 1 2447 0
 9513 000c 7B68     		ldr	r3, [r7, #4]
 9514 000e FB60     		str	r3, [r7, #12]
2448:.\AdvantageImpl.c ****     if(ppump)
 9515              		.loc 1 2448 0
 9516 0010 3B69     		ldr	r3, [r7, #16]
 9517 0012 002B     		cmp	r3, #0
 9518 0014 42D0     		beq	.L395
 9519              	.LBB63:
2449:.\AdvantageImpl.c ****     {
2450:.\AdvantageImpl.c ****         ppump->_acquiringstate = true;
 9520              		.loc 1 2450 0
 9521 0016 3B69     		ldr	r3, [r7, #16]
 9522 0018 0122     		movs	r2, #1
 9523 001a 5A71     		strb	r2, [r3, #5]
2451:.\AdvantageImpl.c ****         ppump->_pcurrtransaction = GetTransactionByName(_PUMP_PROGRAM_MODE_);
 9524              		.loc 1 2451 0
 9525 001c 4F20     		movs	r0, #79
 9526 001e FFF7FEFF 		bl	GetTransactionByName
 9527 0022 0246     		mov	r2, r0
 9528 0024 3B69     		ldr	r3, [r7, #16]
 9529 0026 DA61     		str	r2, [r3, #28]
2452:.\AdvantageImpl.c ****         PumpTransactionJob *ptrjob = &((PumpTransaction*)ppump->_pcurrtransaction)->_jobs[0];
 9530              		.loc 1 2452 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 212


 9531 0028 3B69     		ldr	r3, [r7, #16]
 9532 002a DB69     		ldr	r3, [r3, #28]
 9533 002c 0433     		adds	r3, r3, #4
 9534 002e 7B61     		str	r3, [r7, #20]
2453:.\AdvantageImpl.c ****         if(ptrjob)
 9535              		.loc 1 2453 0
 9536 0030 7B69     		ldr	r3, [r7, #20]
 9537 0032 002B     		cmp	r3, #0
 9538 0034 32D0     		beq	.L395
2454:.\AdvantageImpl.c ****         {
2455:.\AdvantageImpl.c ****             while(ptrjob->Request != NULL)
 9539              		.loc 1 2455 0
 9540 0036 2DE0     		b	.L397
 9541              	.L399:
 9542              	.LBB64:
2456:.\AdvantageImpl.c ****             {
2457:.\AdvantageImpl.c ****                 PPUMPTRANSACTIONJOBCONTEXTPTR pjobcntr = _g_pumpjobqueue.Allocate(&_g_pumpjobqueue)
 9543              		.loc 1 2457 0
 9544 0038 1B4B     		ldr	r3, .L400+4
 9545 003a D3F84838 		ldr	r3, [r3, #2120]
 9546 003e 1A48     		ldr	r0, .L400+4
 9547 0040 9847     		blx	r3
 9548 0042 B860     		str	r0, [r7, #8]
2458:.\AdvantageImpl.c ****                 if(pjobcntr)
 9549              		.loc 1 2458 0
 9550 0044 BB68     		ldr	r3, [r7, #8]
 9551 0046 002B     		cmp	r3, #0
 9552 0048 21D0     		beq	.L398
2459:.\AdvantageImpl.c ****                 {
2460:.\AdvantageImpl.c ****                     pjobcntr->_reenqueue = false;
 9553              		.loc 1 2460 0
 9554 004a BB68     		ldr	r3, [r7, #8]
 9555 004c 0022     		movs	r2, #0
 9556 004e 1A70     		strb	r2, [r3]
2461:.\AdvantageImpl.c ****                     pjobcntr->_prequest = ptrjob;
 9557              		.loc 1 2461 0
 9558 0050 BB68     		ldr	r3, [r7, #8]
 9559 0052 7A69     		ldr	r2, [r7, #20]
 9560 0054 5A61     		str	r2, [r3, #20]
2462:.\AdvantageImpl.c ****                     pjobcntr->_presponse = NULL;
 9561              		.loc 1 2462 0
 9562 0056 BB68     		ldr	r3, [r7, #8]
 9563 0058 0022     		movs	r2, #0
 9564 005a 9A61     		str	r2, [r3, #24]
2463:.\AdvantageImpl.c ****                     pjobcntr->_ppump = ppump;
 9565              		.loc 1 2463 0
 9566 005c BB68     		ldr	r3, [r7, #8]
 9567 005e 3A69     		ldr	r2, [r7, #16]
 9568 0060 DA61     		str	r2, [r3, #28]
2464:.\AdvantageImpl.c ****                     pjobcntr->_ppump->CleanUp(pjobcntr->_ppump);
 9569              		.loc 1 2464 0
 9570 0062 BB68     		ldr	r3, [r7, #8]
 9571 0064 DB69     		ldr	r3, [r3, #28]
 9572 0066 D3F8C03B 		ldr	r3, [r3, #3008]
 9573 006a BA68     		ldr	r2, [r7, #8]
 9574 006c D269     		ldr	r2, [r2, #28]
 9575 006e 1046     		mov	r0, r2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 213


 9576 0070 9847     		blx	r3
2465:.\AdvantageImpl.c ****                     //This callback will be invoked upon response (if exists)
2466:.\AdvantageImpl.c ****                     pjobcntr->Callback = pmsg->Callback;
 9577              		.loc 1 2466 0
 9578 0072 FB68     		ldr	r3, [r7, #12]
 9579 0074 D3F89421 		ldr	r2, [r3, #404]
 9580 0078 BB68     		ldr	r3, [r7, #8]
 9581 007a 1A62     		str	r2, [r3, #32]
2467:.\AdvantageImpl.c ****                     pjobcntr->_pdata = pmsg;
 9582              		.loc 1 2467 0
 9583 007c BB68     		ldr	r3, [r7, #8]
 9584 007e FA68     		ldr	r2, [r7, #12]
 9585 0080 5A62     		str	r2, [r3, #36]
2468:.\AdvantageImpl.c ****                     
2469:.\AdvantageImpl.c ****                     _g_pumpjobqueue.Enqueue(&_g_pumpjobqueue, pjobcntr);
 9586              		.loc 1 2469 0
 9587 0082 094B     		ldr	r3, .L400+4
 9588 0084 D3F84C38 		ldr	r3, [r3, #2124]
 9589 0088 0748     		ldr	r0, .L400+4
 9590 008a B968     		ldr	r1, [r7, #8]
 9591 008c 9847     		blx	r3
 9592              	.L398:
2470:.\AdvantageImpl.c ****                 }
2471:.\AdvantageImpl.c ****                 ptrjob++;
 9593              		.loc 1 2471 0
 9594 008e 7B69     		ldr	r3, [r7, #20]
 9595 0090 3433     		adds	r3, r3, #52
 9596 0092 7B61     		str	r3, [r7, #20]
 9597              	.L397:
 9598              	.LBE64:
2455:.\AdvantageImpl.c ****             {
 9599              		.loc 1 2455 0
 9600 0094 7B69     		ldr	r3, [r7, #20]
 9601 0096 1B68     		ldr	r3, [r3]
 9602 0098 002B     		cmp	r3, #0
 9603 009a CDD1     		bne	.L399
 9604              	.L395:
 9605              	.LBE63:
2472:.\AdvantageImpl.c ****             }
2473:.\AdvantageImpl.c ****         }
2474:.\AdvantageImpl.c ****     }
2475:.\AdvantageImpl.c **** }
 9606              		.loc 1 2475 0
 9607 009c 1837     		adds	r7, r7, #24
 9608              		.cfi_def_cfa_offset 8
 9609 009e BD46     		mov	sp, r7
 9610              		.cfi_def_cfa_register 13
 9611              		@ sp needed
 9612 00a0 80BD     		pop	{r7, pc}
 9613              	.L401:
 9614 00a2 00BF     		.align	2
 9615              	.L400:
 9616 00a4 00000000 		.word	_g_pumps
 9617 00a8 00000000 		.word	_g_pumpjobqueue
 9618              		.cfi_endproc
 9619              	.LFE100:
 9620              		.size	AdvantageActivateProgramming, .-AdvantageActivateProgramming
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 214


 9621              		.section	.text.GetLRC,"ax",%progbits
 9622              		.align	2
 9623              		.global	GetLRC
 9624              		.thumb
 9625              		.thumb_func
 9626              		.type	GetLRC, %function
 9627              	GetLRC:
 9628              	.LFB101:
2476:.\AdvantageImpl.c **** 
2477:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
2478:.\AdvantageImpl.c **** //THESE ARE SUPPORT METHODS THAT WILL BE USED IN THE TRANSACTIONAL MACHINE
2479:.\AdvantageImpl.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
2480:.\AdvantageImpl.c **** //Calculation of the LRC according to the documentation
2481:.\AdvantageImpl.c **** uint8_t GetLRC(char8 *_pbuffer)
2482:.\AdvantageImpl.c **** {
 9629              		.loc 1 2482 0
 9630              		.cfi_startproc
 9631              		@ args = 0, pretend = 0, frame = 16
 9632              		@ frame_needed = 1, uses_anonymous_args = 0
 9633              		@ link register save eliminated.
 9634 0000 80B4     		push	{r7}
 9635              		.cfi_def_cfa_offset 4
 9636              		.cfi_offset 7, -4
 9637 0002 85B0     		sub	sp, sp, #20
 9638              		.cfi_def_cfa_offset 24
 9639 0004 00AF     		add	r7, sp, #0
 9640              		.cfi_def_cfa_register 7
 9641 0006 7860     		str	r0, [r7, #4]
2483:.\AdvantageImpl.c ****     uint8_t lrc = 0;
 9642              		.loc 1 2483 0
 9643 0008 0023     		movs	r3, #0
 9644 000a FB73     		strb	r3, [r7, #15]
2484:.\AdvantageImpl.c ****     while(*_pbuffer != 0xFB)
 9645              		.loc 1 2484 0
 9646 000c 0AE0     		b	.L403
 9647              	.L404:
2485:.\AdvantageImpl.c ****     {
2486:.\AdvantageImpl.c ****         lrc += (*_pbuffer & 0x0F);
 9648              		.loc 1 2486 0
 9649 000e 7B68     		ldr	r3, [r7, #4]
 9650 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9651 0012 03F00F03 		and	r3, r3, #15
 9652 0016 DAB2     		uxtb	r2, r3
 9653 0018 FB7B     		ldrb	r3, [r7, #15]
 9654 001a 1344     		add	r3, r3, r2
 9655 001c FB73     		strb	r3, [r7, #15]
2487:.\AdvantageImpl.c ****         _pbuffer++;
 9656              		.loc 1 2487 0
 9657 001e 7B68     		ldr	r3, [r7, #4]
 9658 0020 0133     		adds	r3, r3, #1
 9659 0022 7B60     		str	r3, [r7, #4]
 9660              	.L403:
2484:.\AdvantageImpl.c ****     while(*_pbuffer != 0xFB)
 9661              		.loc 1 2484 0
 9662 0024 7B68     		ldr	r3, [r7, #4]
 9663 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9664 0028 FB2B     		cmp	r3, #251
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 215


 9665 002a F0D1     		bne	.L404
2488:.\AdvantageImpl.c ****     }
2489:.\AdvantageImpl.c ****     lrc += (*_pbuffer & 0x0F);
 9666              		.loc 1 2489 0
 9667 002c 7B68     		ldr	r3, [r7, #4]
 9668 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9669 0030 03F00F03 		and	r3, r3, #15
 9670 0034 DAB2     		uxtb	r2, r3
 9671 0036 FB7B     		ldrb	r3, [r7, #15]
 9672 0038 1344     		add	r3, r3, r2
 9673 003a FB73     		strb	r3, [r7, #15]
2490:.\AdvantageImpl.c ****     return (((~lrc + 1) & 0x0F) | 0xE0);
 9674              		.loc 1 2490 0
 9675 003c FB7B     		ldrb	r3, [r7, #15]
 9676 003e 5B42     		negs	r3, r3
 9677 0040 DBB2     		uxtb	r3, r3
 9678 0042 DBB2     		uxtb	r3, r3
 9679 0044 03F00F03 		and	r3, r3, #15
 9680 0048 DBB2     		uxtb	r3, r3
 9681 004a 63F01F03 		orn	r3, r3, #31
 9682 004e DBB2     		uxtb	r3, r3
 9683 0050 DBB2     		uxtb	r3, r3
2491:.\AdvantageImpl.c **** }
 9684              		.loc 1 2491 0
 9685 0052 1846     		mov	r0, r3
 9686 0054 1437     		adds	r7, r7, #20
 9687              		.cfi_def_cfa_offset 4
 9688 0056 BD46     		mov	sp, r7
 9689              		.cfi_def_cfa_register 13
 9690              		@ sp needed
 9691 0058 5DF8047B 		ldr	r7, [sp], #4
 9692              		.cfi_restore 7
 9693              		.cfi_def_cfa_offset 0
 9694 005c 7047     		bx	lr
 9695              		.cfi_endproc
 9696              	.LFE101:
 9697              		.size	GetLRC, .-GetLRC
 9698 005e 00BF     		.section	.text.FindLRC,"ax",%progbits
 9699              		.align	2
 9700              		.global	FindLRC
 9701              		.thumb
 9702              		.thumb_func
 9703              		.type	FindLRC, %function
 9704              	FindLRC:
 9705              	.LFB102:
2492:.\AdvantageImpl.c **** 
2493:.\AdvantageImpl.c **** uint8_t FindLRC(char8 *_pbuffer)
2494:.\AdvantageImpl.c **** {
 9706              		.loc 1 2494 0
 9707              		.cfi_startproc
 9708              		@ args = 0, pretend = 0, frame = 16
 9709              		@ frame_needed = 1, uses_anonymous_args = 0
 9710              		@ link register save eliminated.
 9711 0000 80B4     		push	{r7}
 9712              		.cfi_def_cfa_offset 4
 9713              		.cfi_offset 7, -4
 9714 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 216


 9715              		.cfi_def_cfa_offset 24
 9716 0004 00AF     		add	r7, sp, #0
 9717              		.cfi_def_cfa_register 7
 9718 0006 7860     		str	r0, [r7, #4]
2495:.\AdvantageImpl.c ****     uint8_t lrc = 0;
 9719              		.loc 1 2495 0
 9720 0008 0023     		movs	r3, #0
 9721 000a FB73     		strb	r3, [r7, #15]
2496:.\AdvantageImpl.c ****     while(*_pbuffer != 0xFB)
 9722              		.loc 1 2496 0
 9723 000c 02E0     		b	.L407
 9724              	.L408:
2497:.\AdvantageImpl.c ****     {
2498:.\AdvantageImpl.c ****         _pbuffer++;
 9725              		.loc 1 2498 0
 9726 000e 7B68     		ldr	r3, [r7, #4]
 9727 0010 0133     		adds	r3, r3, #1
 9728 0012 7B60     		str	r3, [r7, #4]
 9729              	.L407:
2496:.\AdvantageImpl.c ****     while(*_pbuffer != 0xFB)
 9730              		.loc 1 2496 0
 9731 0014 7B68     		ldr	r3, [r7, #4]
 9732 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9733 0018 FB2B     		cmp	r3, #251
 9734 001a F8D1     		bne	.L408
2499:.\AdvantageImpl.c ****     }
2500:.\AdvantageImpl.c ****     return *(++_pbuffer);
 9735              		.loc 1 2500 0
 9736 001c 7B68     		ldr	r3, [r7, #4]
 9737 001e 0133     		adds	r3, r3, #1
 9738 0020 7B60     		str	r3, [r7, #4]
 9739 0022 7B68     		ldr	r3, [r7, #4]
 9740 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2501:.\AdvantageImpl.c **** }
 9741              		.loc 1 2501 0
 9742 0026 1846     		mov	r0, r3
 9743 0028 1437     		adds	r7, r7, #20
 9744              		.cfi_def_cfa_offset 4
 9745 002a BD46     		mov	sp, r7
 9746              		.cfi_def_cfa_register 13
 9747              		@ sp needed
 9748 002c 5DF8047B 		ldr	r7, [sp], #4
 9749              		.cfi_restore 7
 9750              		.cfi_def_cfa_offset 0
 9751 0030 7047     		bx	lr
 9752              		.cfi_endproc
 9753              	.LFE102:
 9754              		.size	FindLRC, .-FindLRC
 9755 0032 00BF     		.section	.text.InitiateTransaction,"ax",%progbits
 9756              		.align	2
 9757              		.global	InitiateTransaction
 9758              		.thumb
 9759              		.thumb_func
 9760              		.type	InitiateTransaction, %function
 9761              	InitiateTransaction:
 9762              	.LFB103:
2502:.\AdvantageImpl.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 217


2503:.\AdvantageImpl.c **** //@Created By: HIJH
2504:.\AdvantageImpl.c **** //@Septembre de 2016
2505:.\AdvantageImpl.c **** void InitiateTransaction(void *pparam)
2506:.\AdvantageImpl.c **** {
 9763              		.loc 1 2506 0
 9764              		.cfi_startproc
 9765              		@ args = 0, pretend = 0, frame = 16
 9766              		@ frame_needed = 1, uses_anonymous_args = 0
 9767              		@ link register save eliminated.
 9768 0000 80B4     		push	{r7}
 9769              		.cfi_def_cfa_offset 4
 9770              		.cfi_offset 7, -4
 9771 0002 85B0     		sub	sp, sp, #20
 9772              		.cfi_def_cfa_offset 24
 9773 0004 00AF     		add	r7, sp, #0
 9774              		.cfi_def_cfa_register 7
 9775 0006 7860     		str	r0, [r7, #4]
2507:.\AdvantageImpl.c ****     PumpTransactionJobContext *pjob = (PumpTransactionJobContext*)pparam;
 9776              		.loc 1 2507 0
 9777 0008 7B68     		ldr	r3, [r7, #4]
 9778 000a FB60     		str	r3, [r7, #12]
2508:.\AdvantageImpl.c ****     if(pjob)
 9779              		.loc 1 2508 0
 9780 000c FB68     		ldr	r3, [r7, #12]
 9781 000e 002B     		cmp	r3, #0
 9782 0010 07D0     		beq	.L410
2509:.\AdvantageImpl.c ****     {
2510:.\AdvantageImpl.c ****         pjob->_ppump->_transhealth = _PUMP_OK_;
 9783              		.loc 1 2510 0
 9784 0012 FB68     		ldr	r3, [r7, #12]
 9785 0014 DB69     		ldr	r3, [r3, #28]
 9786 0016 0122     		movs	r2, #1
 9787 0018 1A76     		strb	r2, [r3, #24]
2511:.\AdvantageImpl.c ****         pjob->_ppump->_transtate = _PUMP_BUSY_;
 9788              		.loc 1 2511 0
 9789 001a FB68     		ldr	r3, [r7, #12]
 9790 001c DB69     		ldr	r3, [r3, #28]
 9791 001e 0122     		movs	r2, #1
 9792 0020 5A76     		strb	r2, [r3, #25]
 9793              	.L410:
2512:.\AdvantageImpl.c ****     }
2513:.\AdvantageImpl.c **** }
 9794              		.loc 1 2513 0
 9795 0022 1437     		adds	r7, r7, #20
 9796              		.cfi_def_cfa_offset 4
 9797 0024 BD46     		mov	sp, r7
 9798              		.cfi_def_cfa_register 13
 9799              		@ sp needed
 9800 0026 5DF8047B 		ldr	r7, [sp], #4
 9801              		.cfi_restore 7
 9802              		.cfi_def_cfa_offset 0
 9803 002a 7047     		bx	lr
 9804              		.cfi_endproc
 9805              	.LFE103:
 9806              		.size	InitiateTransaction, .-InitiateTransaction
 9807              		.section	.text.TerminateTransaction,"ax",%progbits
 9808              		.align	2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 218


 9809              		.global	TerminateTransaction
 9810              		.thumb
 9811              		.thumb_func
 9812              		.type	TerminateTransaction, %function
 9813              	TerminateTransaction:
 9814              	.LFB104:
2514:.\AdvantageImpl.c **** 
2515:.\AdvantageImpl.c **** //@Created By: HIJH
2516:.\AdvantageImpl.c **** //@Septembre de 2016
2517:.\AdvantageImpl.c **** void TerminateTransaction(void *pparam)
2518:.\AdvantageImpl.c **** {
 9815              		.loc 1 2518 0
 9816              		.cfi_startproc
 9817              		@ args = 0, pretend = 0, frame = 16
 9818              		@ frame_needed = 1, uses_anonymous_args = 0
 9819              		@ link register save eliminated.
 9820 0000 80B4     		push	{r7}
 9821              		.cfi_def_cfa_offset 4
 9822              		.cfi_offset 7, -4
 9823 0002 85B0     		sub	sp, sp, #20
 9824              		.cfi_def_cfa_offset 24
 9825 0004 00AF     		add	r7, sp, #0
 9826              		.cfi_def_cfa_register 7
 9827 0006 7860     		str	r0, [r7, #4]
2519:.\AdvantageImpl.c ****     PPUMPTRANSACTIONJOBCONTEXTPTR pjob = (PPUMPTRANSACTIONJOBCONTEXTPTR)pparam;
 9828              		.loc 1 2519 0
 9829 0008 7B68     		ldr	r3, [r7, #4]
 9830 000a FB60     		str	r3, [r7, #12]
2520:.\AdvantageImpl.c ****     if(pjob)
 9831              		.loc 1 2520 0
 9832 000c FB68     		ldr	r3, [r7, #12]
 9833 000e 002B     		cmp	r3, #0
 9834 0010 07D0     		beq	.L412
2521:.\AdvantageImpl.c ****     {
2522:.\AdvantageImpl.c ****         pjob->_ppump->_transhealth = _PUMP_OK_;
 9835              		.loc 1 2522 0
 9836 0012 FB68     		ldr	r3, [r7, #12]
 9837 0014 DB69     		ldr	r3, [r3, #28]
 9838 0016 0122     		movs	r2, #1
 9839 0018 1A76     		strb	r2, [r3, #24]
2523:.\AdvantageImpl.c ****         pjob->_ppump->_transtate = _PUMP_IDLE_;
 9840              		.loc 1 2523 0
 9841 001a FB68     		ldr	r3, [r7, #12]
 9842 001c DB69     		ldr	r3, [r3, #28]
 9843 001e 0222     		movs	r2, #2
 9844 0020 5A76     		strb	r2, [r3, #25]
 9845              	.L412:
2524:.\AdvantageImpl.c ****         
2525:.\AdvantageImpl.c ****     }
2526:.\AdvantageImpl.c **** }
 9846              		.loc 1 2526 0
 9847 0022 1437     		adds	r7, r7, #20
 9848              		.cfi_def_cfa_offset 4
 9849 0024 BD46     		mov	sp, r7
 9850              		.cfi_def_cfa_register 13
 9851              		@ sp needed
 9852 0026 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 219


 9853              		.cfi_restore 7
 9854              		.cfi_def_cfa_offset 0
 9855 002a 7047     		bx	lr
 9856              		.cfi_endproc
 9857              	.LFE104:
 9858              		.size	TerminateTransaction, .-TerminateTransaction
 9859              		.section	.text.TerminateTransactionAndPrint,"ax",%progbits
 9860              		.align	2
 9861              		.global	TerminateTransactionAndPrint
 9862              		.thumb
 9863              		.thumb_func
 9864              		.type	TerminateTransactionAndPrint, %function
 9865              	TerminateTransactionAndPrint:
 9866              	.LFB105:
2527:.\AdvantageImpl.c **** 
2528:.\AdvantageImpl.c **** void TerminateTransactionAndPrint(void *pparam)
2529:.\AdvantageImpl.c **** {
 9867              		.loc 1 2529 0
 9868              		.cfi_startproc
 9869              		@ args = 0, pretend = 0, frame = 16
 9870              		@ frame_needed = 1, uses_anonymous_args = 0
 9871 0000 90B5     		push	{r4, r7, lr}
 9872              		.cfi_def_cfa_offset 12
 9873              		.cfi_offset 4, -12
 9874              		.cfi_offset 7, -8
 9875              		.cfi_offset 14, -4
 9876 0002 85B0     		sub	sp, sp, #20
 9877              		.cfi_def_cfa_offset 32
 9878 0004 00AF     		add	r7, sp, #0
 9879              		.cfi_def_cfa_register 7
 9880 0006 7860     		str	r0, [r7, #4]
2530:.\AdvantageImpl.c ****     PPUMPTRANSACTIONJOBCONTEXTPTR pjob = (PPUMPTRANSACTIONJOBCONTEXTPTR)pparam;
 9881              		.loc 1 2530 0
 9882 0008 7B68     		ldr	r3, [r7, #4]
 9883 000a FB60     		str	r3, [r7, #12]
2531:.\AdvantageImpl.c ****     if(pjob)
 9884              		.loc 1 2531 0
 9885 000c FB68     		ldr	r3, [r7, #12]
 9886 000e 002B     		cmp	r3, #0
 9887 0010 00F01181 		beq	.L414
2532:.\AdvantageImpl.c ****     {
2533:.\AdvantageImpl.c ****         pjob->_ppump->_transhealth = _PUMP_OK_;
 9888              		.loc 1 2533 0
 9889 0014 FB68     		ldr	r3, [r7, #12]
 9890 0016 DB69     		ldr	r3, [r3, #28]
 9891 0018 0122     		movs	r2, #1
 9892 001a 1A76     		strb	r2, [r3, #24]
2534:.\AdvantageImpl.c ****         pjob->_ppump->_transtate = _PUMP_IDLE_;
 9893              		.loc 1 2534 0
 9894 001c FB68     		ldr	r3, [r7, #12]
 9895 001e DB69     		ldr	r3, [r3, #28]
 9896 0020 0222     		movs	r2, #2
 9897 0022 5A76     		strb	r2, [r3, #25]
2535:.\AdvantageImpl.c ****         
2536:.\AdvantageImpl.c ****         //If printing has been selected then post the print job
2537:.\AdvantageImpl.c ****         if(pjob->_ppump->_trasactionbuffer[GetBufferIndexFromDisplayID(DISPLAY_DESEA_IMPRIMIR_RECIB
 9898              		.loc 1 2537 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 220


 9899 0024 FB68     		ldr	r3, [r7, #12]
 9900 0026 DC69     		ldr	r4, [r3, #28]
 9901 0028 0B20     		movs	r0, #11
 9902 002a FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 9903 002e 0346     		mov	r3, r0
 9904 0030 2344     		add	r3, r3, r4
 9905 0032 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 9906 0036 392B     		cmp	r3, #57
 9907 0038 40F0FD80 		bne	.L414
 9908              	.LBB65:
2538:.\AdvantageImpl.c ****         {
2539:.\AdvantageImpl.c ****             _ALLOCATE_SINKMESSAGE_SLOT(psinkmsg);
 9909              		.loc 1 2539 0
 9910 003c FFF7FEFF 		bl	AllocateMessageSlot
 9911 0040 B860     		str	r0, [r7, #8]
2540:.\AdvantageImpl.c ****             if(psinkmsg)
 9912              		.loc 1 2540 0
 9913 0042 BB68     		ldr	r3, [r7, #8]
 9914 0044 002B     		cmp	r3, #0
 9915 0046 00F0F680 		beq	.L414
2541:.\AdvantageImpl.c ****             {
2542:.\AdvantageImpl.c ****                 switch(pjob->_ppump->_trasactionbuffer[GetBufferIndexFromDisplayID(DISPLAY_SIDE_DUM
 9916              		.loc 1 2542 0
 9917 004a FB68     		ldr	r3, [r7, #12]
 9918 004c DC69     		ldr	r4, [r3, #28]
 9919 004e FA20     		movs	r0, #250
 9920 0050 FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 9921 0054 0346     		mov	r3, r0
 9922 0056 2344     		add	r3, r3, r4
 9923 0058 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 9924 005c 002B     		cmp	r3, #0
 9925 005e 02D0     		beq	.L417
 9926 0060 012B     		cmp	r3, #1
 9927 0062 05D0     		beq	.L418
 9928 0064 09E0     		b	.L416
 9929              	.L417:
2543:.\AdvantageImpl.c ****                 {
2544:.\AdvantageImpl.c ****                     case DISPLAY1:
2545:.\AdvantageImpl.c ****                     psinkmsg->_messageid = _g_printerlayout._printerportside1;
 9930              		.loc 1 2545 0
 9931 0066 754B     		ldr	r3, .L423
 9932 0068 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9933 006a BB68     		ldr	r3, [r7, #8]
 9934 006c 5A70     		strb	r2, [r3, #1]
2546:.\AdvantageImpl.c ****                     break;
 9935              		.loc 1 2546 0
 9936 006e 04E0     		b	.L416
 9937              	.L418:
2547:.\AdvantageImpl.c ****                     case DISPLAY2:
2548:.\AdvantageImpl.c ****                     psinkmsg->_messageid = _g_printerlayout._printerportside2;
 9938              		.loc 1 2548 0
 9939 0070 724B     		ldr	r3, .L423
 9940 0072 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 9941 0074 BB68     		ldr	r3, [r7, #8]
 9942 0076 5A70     		strb	r2, [r3, #1]
2549:.\AdvantageImpl.c ****                     break;
 9943              		.loc 1 2549 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 221


 9944 0078 00BF     		nop
 9945              	.L416:
2550:.\AdvantageImpl.c ****                 }
2551:.\AdvantageImpl.c ****                 psinkmsg->_messagetype = DELAYEDALLINTERESTED;
 9946              		.loc 1 2551 0
 9947 007a BB68     		ldr	r3, [r7, #8]
 9948 007c 0522     		movs	r2, #5
 9949 007e 9A70     		strb	r2, [r3, #2]
2552:.\AdvantageImpl.c ****                 //Wait for 30 seconds before sending the command to the printer!
2553:.\AdvantageImpl.c ****                 //This will give some time to allow the remote peer (NSX) to respond with the appro
2554:.\AdvantageImpl.c ****                 if(_g_rfautorun._state == RF_AUTONOMOUS)
 9950              		.loc 1 2554 0
 9951 0080 6F4B     		ldr	r3, .L423+4
 9952 0082 1B78     		ldrb	r3, [r3]
 9953 0084 DBB2     		uxtb	r3, r3
 9954 0086 012B     		cmp	r3, #1
 9955 0088 04D1     		bne	.L419
2555:.\AdvantageImpl.c ****                     psinkmsg->_messagedelay = _SINK_TIMEOUT_1S_;
 9956              		.loc 1 2555 0
 9957 008a BB68     		ldr	r3, [r7, #8]
 9958 008c 4FF47A72 		mov	r2, #1000
 9959 0090 9A80     		strh	r2, [r3, #4]	@ movhi
 9960 0092 03E0     		b	.L420
 9961              	.L419:
2556:.\AdvantageImpl.c ****                 else
2557:.\AdvantageImpl.c ****                     psinkmsg->_messagedelay = _SINK_TIMEOUT_30S_;
 9962              		.loc 1 2557 0
 9963 0094 BB68     		ldr	r3, [r7, #8]
 9964 0096 47F23052 		movw	r2, #30000
 9965 009a 9A80     		strh	r2, [r3, #4]	@ movhi
 9966              	.L420:
2558:.\AdvantageImpl.c ****                 
2559:.\AdvantageImpl.c ****                 //PUMP POSITION GOES IN THE ARRAY INDEX 0X00 (SEE THE FILE "PRINTERBLL.C")
2560:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x00] = pjob->_ppump->_pumpid;
 9967              		.loc 1 2560 0
 9968 009c FB68     		ldr	r3, [r7, #12]
 9969 009e DB69     		ldr	r3, [r3, #28]
 9970 00a0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9971 00a2 BB68     		ldr	r3, [r7, #8]
 9972 00a4 1A73     		strb	r2, [r3, #12]
2561:.\AdvantageImpl.c ****                 //PUMP HOSE TO SELECT THE PRODUCT NAME
2562:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x01] = pjob->_ppump->_authorizationinfo._hoseid;
 9973              		.loc 1 2562 0
 9974 00a6 FB68     		ldr	r3, [r7, #12]
 9975 00a8 DB69     		ldr	r3, [r3, #28]
 9976 00aa 93F8AA3B 		ldrb	r3, [r3, #2986]
 9977 00ae DAB2     		uxtb	r2, r3
 9978 00b0 BB68     		ldr	r3, [r7, #8]
 9979 00b2 5A73     		strb	r2, [r3, #13]
2563:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x02] = 0x06;//Six bytes for the price (PPU)
 9980              		.loc 1 2563 0
 9981 00b4 BB68     		ldr	r3, [r7, #8]
 9982 00b6 0622     		movs	r2, #6
 9983 00b8 9A73     		strb	r2, [r3, #14]
2564:.\AdvantageImpl.c ****                 memset(&psinkmsg->_buffer[0x03], 0x00, 0x08);
 9984              		.loc 1 2564 0
 9985 00ba BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 222


 9986 00bc 0F33     		adds	r3, r3, #15
 9987 00be 1846     		mov	r0, r3
 9988 00c0 0021     		movs	r1, #0
 9989 00c2 0822     		movs	r2, #8
 9990 00c4 FFF7FEFF 		bl	memset
2565:.\AdvantageImpl.c ****                 
2566:.\AdvantageImpl.c ****                 if(_g_dispenserlayoutinfo._moneydecimals == 0x03 && _g_dispenserlayoutinfo._ppudeci
 9991              		.loc 1 2566 0
 9992 00c8 5E4B     		ldr	r3, .L423+8
 9993 00ca DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 9994 00cc 032B     		cmp	r3, #3
 9995 00ce 19D1     		bne	.L421
 9996              		.loc 1 2566 0 is_stmt 0 discriminator 1
 9997 00d0 5C4B     		ldr	r3, .L423+8
 9998 00d2 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 9999 00d4 022B     		cmp	r3, #2
 10000 00d6 15D1     		bne	.L421
2567:.\AdvantageImpl.c ****                     B78AD90CF552D9B30A(pjob->_ppump->_authorizationinfo._price * 10, PBYTECAST(&psi
 10001              		.loc 1 2567 0 is_stmt 1
 10002 00d8 FB68     		ldr	r3, [r7, #12]
 10003 00da DB69     		ldr	r3, [r3, #28]
 10004 00dc B3F8AC3B 		ldrh	r3, [r3, #2988]	@ movhi
 10005 00e0 9BB2     		uxth	r3, r3
 10006 00e2 1A46     		mov	r2, r3
 10007 00e4 1346     		mov	r3, r2
 10008 00e6 9B00     		lsls	r3, r3, #2
 10009 00e8 1344     		add	r3, r3, r2
 10010 00ea 5B00     		lsls	r3, r3, #1
 10011 00ec 1A46     		mov	r2, r3
 10012 00ee 4FEAE273 		asr	r3, r2, #31
 10013 00f2 B968     		ldr	r1, [r7, #8]
 10014 00f4 01F10F04 		add	r4, r1, #15
 10015 00f8 1046     		mov	r0, r2
 10016 00fa 1946     		mov	r1, r3
 10017 00fc 2246     		mov	r2, r4
 10018 00fe FFF7FEFF 		bl	B78AD90CF552D9B30A
 10019 0102 0FE0     		b	.L422
 10020              	.L421:
2568:.\AdvantageImpl.c ****                 else
2569:.\AdvantageImpl.c ****                     B78AD90CF552D9B30A(pjob->_ppump->_authorizationinfo._price, PBYTECAST(&psinkmsg
 10021              		.loc 1 2569 0
 10022 0104 FB68     		ldr	r3, [r7, #12]
 10023 0106 DB69     		ldr	r3, [r3, #28]
 10024 0108 B3F8AC3B 		ldrh	r3, [r3, #2988]	@ movhi
 10025 010c 9BB2     		uxth	r3, r3
 10026 010e 9AB2     		uxth	r2, r3
 10027 0110 4FF00003 		mov	r3, #0
 10028 0114 B968     		ldr	r1, [r7, #8]
 10029 0116 01F10F04 		add	r4, r1, #15
 10030 011a 1046     		mov	r0, r2
 10031 011c 1946     		mov	r1, r3
 10032 011e 2246     		mov	r2, r4
 10033 0120 FFF7FEFF 		bl	B78AD90CF552D9B30A
 10034              	.L422:
2570:.\AdvantageImpl.c ****                     
2571:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x09] = 0x08;//Eight bytes for the Volume
 10035              		.loc 1 2571 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 223


 10036 0124 BB68     		ldr	r3, [r7, #8]
 10037 0126 0822     		movs	r2, #8
 10038 0128 5A75     		strb	r2, [r3, #21]
2572:.\AdvantageImpl.c ****                 memset(&psinkmsg->_buffer[0x0A], 0x00, 0x08);
 10039              		.loc 1 2572 0
 10040 012a BB68     		ldr	r3, [r7, #8]
 10041 012c 1633     		adds	r3, r3, #22
 10042 012e 1846     		mov	r0, r3
 10043 0130 0021     		movs	r1, #0
 10044 0132 0822     		movs	r2, #8
 10045 0134 FFF7FEFF 		bl	memset
2573:.\AdvantageImpl.c ****                 B78AD90CF552D9B30A(pjob->_ppump->_authorizationinfo._volumeamount, PBYTECAST(&psink
 10046              		.loc 1 2573 0
 10047 0138 FB68     		ldr	r3, [r7, #12]
 10048 013a DB69     		ldr	r3, [r3, #28]
 10049 013c D3F8B43B 		ldr	r3, [r3, #2996]
 10050 0140 1A46     		mov	r2, r3
 10051 0142 4FF00003 		mov	r3, #0
 10052 0146 B968     		ldr	r1, [r7, #8]
 10053 0148 01F11604 		add	r4, r1, #22
 10054 014c 1046     		mov	r0, r2
 10055 014e 1946     		mov	r1, r3
 10056 0150 2246     		mov	r2, r4
 10057 0152 FFF7FEFF 		bl	B78AD90CF552D9B30A
2574:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x12] = 0x08;//Eight bytes for the Preset
 10058              		.loc 1 2574 0
 10059 0156 BB68     		ldr	r3, [r7, #8]
 10060 0158 0822     		movs	r2, #8
 10061 015a 9A77     		strb	r2, [r3, #30]
2575:.\AdvantageImpl.c ****                 memset(&psinkmsg->_buffer[0x13], 0x00, 0x08);
 10062              		.loc 1 2575 0
 10063 015c BB68     		ldr	r3, [r7, #8]
 10064 015e 1F33     		adds	r3, r3, #31
 10065 0160 1846     		mov	r0, r3
 10066 0162 0021     		movs	r1, #0
 10067 0164 0822     		movs	r2, #8
 10068 0166 FFF7FEFF 		bl	memset
2576:.\AdvantageImpl.c ****                 B78AD90CF552D9B30A(pjob->_ppump->_authorizationinfo._presetamount, PBYTECAST(&psink
 10069              		.loc 1 2576 0
 10070 016a FB68     		ldr	r3, [r7, #12]
 10071 016c DB69     		ldr	r3, [r3, #28]
 10072 016e D3F8B03B 		ldr	r3, [r3, #2992]
 10073 0172 1A46     		mov	r2, r3
 10074 0174 4FF00003 		mov	r3, #0
 10075 0178 B968     		ldr	r1, [r7, #8]
 10076 017a 01F11F04 		add	r4, r1, #31
 10077 017e 1046     		mov	r0, r2
 10078 0180 1946     		mov	r1, r3
 10079 0182 2246     		mov	r2, r4
 10080 0184 FFF7FEFF 		bl	B78AD90CF552D9B30A
2577:.\AdvantageImpl.c ****                 
2578:.\AdvantageImpl.c ****                 //This is the transaction type (Cash: 0x0D / Credit: 0x0E). See the documentation t
2579:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x1B] = pjob->_ppump->_trasactionbuffer[GetBufferIndexFromDisplay
 10081              		.loc 1 2579 0
 10082 0188 FB68     		ldr	r3, [r7, #12]
 10083 018a DC69     		ldr	r4, [r3, #28]
 10084 018c 0420     		movs	r0, #4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 224


 10085 018e FFF7FEFF 		bl	GetBufferIndexFromDisplayID
 10086 0192 0346     		mov	r3, r0
 10087 0194 2344     		add	r3, r3, r4
 10088 0196 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
 10089 019a BB68     		ldr	r3, [r7, #8]
 10090 019c 83F82720 		strb	r2, [r3, #39]
2580:.\AdvantageImpl.c ****                 
2581:.\AdvantageImpl.c ****                 //This means "N/A". This will be printed once the timeout has expired and no invoic
2582:.\AdvantageImpl.c ****                 //has been received
2583:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x20] = 0x4E;
 10091              		.loc 1 2583 0
 10092 01a0 BB68     		ldr	r3, [r7, #8]
 10093 01a2 4E22     		movs	r2, #78
 10094 01a4 83F82C20 		strb	r2, [r3, #44]
2584:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x21] = 0x2F;
 10095              		.loc 1 2584 0
 10096 01a8 BB68     		ldr	r3, [r7, #8]
 10097 01aa 2F22     		movs	r2, #47
 10098 01ac 83F82D20 		strb	r2, [r3, #45]
2585:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x22] = 0x41;
 10099              		.loc 1 2585 0
 10100 01b0 BB68     		ldr	r3, [r7, #8]
 10101 01b2 4122     		movs	r2, #65
 10102 01b4 83F82E20 		strb	r2, [r3, #46]
2586:.\AdvantageImpl.c ****                 //Car's plate
2587:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x2A] = 0x4E;
 10103              		.loc 1 2587 0
 10104 01b8 BB68     		ldr	r3, [r7, #8]
 10105 01ba 4E22     		movs	r2, #78
 10106 01bc 83F83620 		strb	r2, [r3, #54]
2588:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x2B] = 0x2F;
 10107              		.loc 1 2588 0
 10108 01c0 BB68     		ldr	r3, [r7, #8]
 10109 01c2 2F22     		movs	r2, #47
 10110 01c4 83F83720 		strb	r2, [r3, #55]
2589:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x2C] = 0x41;
 10111              		.loc 1 2589 0
 10112 01c8 BB68     		ldr	r3, [r7, #8]
 10113 01ca 4122     		movs	r2, #65
 10114 01cc 83F83820 		strb	r2, [r3, #56]
2590:.\AdvantageImpl.c ****                 //Balance
2591:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x32] = 0x4E;
 10115              		.loc 1 2591 0
 10116 01d0 BB68     		ldr	r3, [r7, #8]
 10117 01d2 4E22     		movs	r2, #78
 10118 01d4 83F83E20 		strb	r2, [r3, #62]
2592:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x33] = 0x2F;
 10119              		.loc 1 2592 0
 10120 01d8 BB68     		ldr	r3, [r7, #8]
 10121 01da 2F22     		movs	r2, #47
 10122 01dc 83F83F20 		strb	r2, [r3, #63]
2593:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x34] = 0x41;
 10123              		.loc 1 2593 0
 10124 01e0 BB68     		ldr	r3, [r7, #8]
 10125 01e2 4122     		movs	r2, #65
 10126 01e4 83F84020 		strb	r2, [r3, #64]
2594:.\AdvantageImpl.c ****                 //Company
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 225


2595:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x3C] = 0x4E;
 10127              		.loc 1 2595 0
 10128 01e8 BB68     		ldr	r3, [r7, #8]
 10129 01ea 4E22     		movs	r2, #78
 10130 01ec 83F84820 		strb	r2, [r3, #72]
2596:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x3D] = 0x2F;
 10131              		.loc 1 2596 0
 10132 01f0 BB68     		ldr	r3, [r7, #8]
 10133 01f2 2F22     		movs	r2, #47
 10134 01f4 83F84920 		strb	r2, [r3, #73]
2597:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x3E] = 0x41;
 10135              		.loc 1 2597 0
 10136 01f8 BB68     		ldr	r3, [r7, #8]
 10137 01fa 4122     		movs	r2, #65
 10138 01fc 83F84A20 		strb	r2, [r3, #74]
2598:.\AdvantageImpl.c ****                 //Account Name
2599:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x50] = 0x4E;
 10139              		.loc 1 2599 0
 10140 0200 BB68     		ldr	r3, [r7, #8]
 10141 0202 4E22     		movs	r2, #78
 10142 0204 83F85C20 		strb	r2, [r3, #92]
2600:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x51] = 0x2F;
 10143              		.loc 1 2600 0
 10144 0208 BB68     		ldr	r3, [r7, #8]
 10145 020a 2F22     		movs	r2, #47
 10146 020c 83F85D20 		strb	r2, [r3, #93]
2601:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x52] = 0x41;
 10147              		.loc 1 2601 0
 10148 0210 BB68     		ldr	r3, [r7, #8]
 10149 0212 4122     		movs	r2, #65
 10150 0214 83F85E20 		strb	r2, [r3, #94]
2602:.\AdvantageImpl.c ****                 //Daily Visits
2603:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x64] = 0x00;
 10151              		.loc 1 2603 0
 10152 0218 BB68     		ldr	r3, [r7, #8]
 10153 021a 0022     		movs	r2, #0
 10154 021c 83F87020 		strb	r2, [r3, #112]
2604:.\AdvantageImpl.c ****                 //Weekly Visits
2605:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x65] = 0x00;
 10155              		.loc 1 2605 0
 10156 0220 BB68     		ldr	r3, [r7, #8]
 10157 0222 0022     		movs	r2, #0
 10158 0224 83F87120 		strb	r2, [r3, #113]
2606:.\AdvantageImpl.c ****                 //Monthly Visits
2607:.\AdvantageImpl.c ****                 psinkmsg->_buffer[0x66] = 0x00;
 10159              		.loc 1 2607 0
 10160 0228 BB68     		ldr	r3, [r7, #8]
 10161 022a 0022     		movs	r2, #0
 10162 022c 83F87220 		strb	r2, [r3, #114]
2608:.\AdvantageImpl.c **** 
2609:.\AdvantageImpl.c ****                 psinkmsg->_messagestate = SINK_BUSY;
 10163              		.loc 1 2609 0
 10164 0230 BB68     		ldr	r3, [r7, #8]
 10165 0232 0322     		movs	r2, #3
 10166 0234 DA70     		strb	r2, [r3, #3]
 10167              	.L414:
 10168              	.LBE65:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 226


2610:.\AdvantageImpl.c ****             }   
2611:.\AdvantageImpl.c ****             
2612:.\AdvantageImpl.c ****         }        
2613:.\AdvantageImpl.c ****     }
2614:.\AdvantageImpl.c **** }
 10169              		.loc 1 2614 0
 10170 0236 1437     		adds	r7, r7, #20
 10171              		.cfi_def_cfa_offset 12
 10172 0238 BD46     		mov	sp, r7
 10173              		.cfi_def_cfa_register 13
 10174              		@ sp needed
 10175 023a 90BD     		pop	{r4, r7, pc}
 10176              	.L424:
 10177              		.align	2
 10178              	.L423:
 10179 023c 00000000 		.word	_g_printerlayout
 10180 0240 00000000 		.word	_g_rfautorun
 10181 0244 00000000 		.word	_g_dispenserlayoutinfo
 10182              		.cfi_endproc
 10183              	.LFE105:
 10184              		.size	TerminateTransactionAndPrint, .-TerminateTransactionAndPrint
 10185              		.section	.text.CastVolumeValue,"ax",%progbits
 10186              		.align	2
 10187              		.global	CastVolumeValue
 10188              		.thumb
 10189              		.thumb_func
 10190              		.type	CastVolumeValue, %function
 10191              	CastVolumeValue:
 10192              	.LFB106:
2615:.\AdvantageImpl.c **** 
2616:.\AdvantageImpl.c **** //@Created by: HIJH
2617:.\AdvantageImpl.c **** //@Date: Septembre de 2016
2618:.\AdvantageImpl.c **** //This method arranges the PRESET buffer when this is a "Volume PRESET".
2619:.\AdvantageImpl.c **** //Volume PRESETS must be multiplied by 1000
2620:.\AdvantageImpl.c **** void CastVolumeValue(char8 *pbuffer, uint8 buffersize)
2621:.\AdvantageImpl.c **** {
 10193              		.loc 1 2621 0
 10194              		.cfi_startproc
 10195              		@ args = 0, pretend = 0, frame = 16
 10196              		@ frame_needed = 1, uses_anonymous_args = 0
 10197              		@ link register save eliminated.
 10198 0000 80B4     		push	{r7}
 10199              		.cfi_def_cfa_offset 4
 10200              		.cfi_offset 7, -4
 10201 0002 85B0     		sub	sp, sp, #20
 10202              		.cfi_def_cfa_offset 24
 10203 0004 00AF     		add	r7, sp, #0
 10204              		.cfi_def_cfa_register 7
 10205 0006 7860     		str	r0, [r7, #4]
 10206 0008 0B46     		mov	r3, r1
 10207 000a FB70     		strb	r3, [r7, #3]
2622:.\AdvantageImpl.c ****     uint8 delimiterindex = 0x00;
 10208              		.loc 1 2622 0
 10209 000c 0023     		movs	r3, #0
 10210 000e FB73     		strb	r3, [r7, #15]
2623:.\AdvantageImpl.c ****     bool shiftbydelimiter = false;
 10211              		.loc 1 2623 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 227


 10212 0010 0023     		movs	r3, #0
 10213 0012 BB73     		strb	r3, [r7, #14]
2624:.\AdvantageImpl.c ****     //If there is a "Comma" inside of the buffer, then just remove it before and count this for the
2625:.\AdvantageImpl.c ****     FOR(int8 index = (buffersize - 1), index > 0, index--)
 10214              		.loc 1 2625 0
 10215 0014 FB78     		ldrb	r3, [r7, #3]
 10216 0016 013B     		subs	r3, r3, #1
 10217 0018 DBB2     		uxtb	r3, r3
 10218 001a 7B73     		strb	r3, [r7, #13]
 10219 001c 2CE0     		b	.L426
 10220              	.L430:
2626:.\AdvantageImpl.c ****     {
2627:.\AdvantageImpl.c ****         if(pbuffer[index] == 0x2C && !shiftbydelimiter)
 10221              		.loc 1 2627 0
 10222 001e 97F90D30 		ldrsb	r3, [r7, #13]
 10223 0022 7A68     		ldr	r2, [r7, #4]
 10224 0024 1344     		add	r3, r3, r2
 10225 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10226 0028 2C2B     		cmp	r3, #44
 10227 002a 07D1     		bne	.L427
 10228              		.loc 1 2627 0 is_stmt 0 discriminator 1
 10229 002c BB7B     		ldrb	r3, [r7, #14]
 10230 002e 83F00103 		eor	r3, r3, #1
 10231 0032 DBB2     		uxtb	r3, r3
 10232 0034 002B     		cmp	r3, #0
 10233 0036 01D0     		beq	.L427
2628:.\AdvantageImpl.c ****             shiftbydelimiter = true;
 10234              		.loc 1 2628 0 is_stmt 1
 10235 0038 0123     		movs	r3, #1
 10236 003a BB73     		strb	r3, [r7, #14]
 10237              	.L427:
2629:.\AdvantageImpl.c **** 
2630:.\AdvantageImpl.c ****         if(shiftbydelimiter)
 10238              		.loc 1 2630 0
 10239 003c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 10240 003e 002B     		cmp	r3, #0
 10241 0040 12D0     		beq	.L428
2631:.\AdvantageImpl.c ****         {
2632:.\AdvantageImpl.c ****             pbuffer[index] = pbuffer[index - 1];
 10242              		.loc 1 2632 0
 10243 0042 97F90D30 		ldrsb	r3, [r7, #13]
 10244 0046 7A68     		ldr	r2, [r7, #4]
 10245 0048 1344     		add	r3, r3, r2
 10246 004a 97F90D20 		ldrsb	r2, [r7, #13]
 10247 004e 013A     		subs	r2, r2, #1
 10248 0050 7968     		ldr	r1, [r7, #4]
 10249 0052 0A44     		add	r2, r2, r1
 10250 0054 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10251 0056 1A70     		strb	r2, [r3]
2633:.\AdvantageImpl.c ****             pbuffer[index - 1] = 0x00;
 10252              		.loc 1 2633 0
 10253 0058 97F90D30 		ldrsb	r3, [r7, #13]
 10254 005c 013B     		subs	r3, r3, #1
 10255 005e 7A68     		ldr	r2, [r7, #4]
 10256 0060 1344     		add	r3, r3, r2
 10257 0062 0022     		movs	r2, #0
 10258 0064 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 228


 10259 0066 02E0     		b	.L429
 10260              	.L428:
2634:.\AdvantageImpl.c ****         }else
2635:.\AdvantageImpl.c ****             delimiterindex++;
 10261              		.loc 1 2635 0
 10262 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 10263 006a 0133     		adds	r3, r3, #1
 10264 006c FB73     		strb	r3, [r7, #15]
 10265              	.L429:
2625:.\AdvantageImpl.c ****     {
 10266              		.loc 1 2625 0 discriminator 2
 10267 006e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 10268 0070 DBB2     		uxtb	r3, r3
 10269 0072 013B     		subs	r3, r3, #1
 10270 0074 DBB2     		uxtb	r3, r3
 10271 0076 7B73     		strb	r3, [r7, #13]
 10272              	.L426:
2625:.\AdvantageImpl.c ****     {
 10273              		.loc 1 2625 0 is_stmt 0 discriminator 1
 10274 0078 97F90D30 		ldrsb	r3, [r7, #13]
 10275 007c 002B     		cmp	r3, #0
 10276 007e CEDC     		bgt	.L430
2636:.\AdvantageImpl.c ****         
2637:.\AdvantageImpl.c ****     }
2638:.\AdvantageImpl.c ****     if(!shiftbydelimiter)
 10277              		.loc 1 2638 0 is_stmt 1
 10278 0080 BB7B     		ldrb	r3, [r7, #14]
 10279 0082 83F00103 		eor	r3, r3, #1
 10280 0086 DBB2     		uxtb	r3, r3
 10281 0088 002B     		cmp	r3, #0
 10282 008a 01D0     		beq	.L431
2639:.\AdvantageImpl.c ****         delimiterindex = 0x00;
 10283              		.loc 1 2639 0
 10284 008c 0023     		movs	r3, #0
 10285 008e FB73     		strb	r3, [r7, #15]
 10286              	.L431:
2640:.\AdvantageImpl.c ****     
2641:.\AdvantageImpl.c ****     int8 shiftcount = (delimiterindex - ((_g_dispenserlayoutinfo._displaydigitsmode == 0x06)?_g_dis
 10287              		.loc 1 2641 0
 10288 0090 374B     		ldr	r3, .L444
 10289 0092 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 10290 0094 062B     		cmp	r3, #6
 10291 0096 04D1     		bne	.L432
 10292              		.loc 1 2641 0 is_stmt 0 discriminator 1
 10293 0098 354B     		ldr	r3, .L444
 10294 009a 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 10295 009c 013B     		subs	r3, r3, #1
 10296 009e DBB2     		uxtb	r3, r3
 10297 00a0 01E0     		b	.L433
 10298              	.L432:
 10299              		.loc 1 2641 0 discriminator 2
 10300 00a2 334B     		ldr	r3, .L444
 10301 00a4 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 10302              	.L433:
 10303              		.loc 1 2641 0 discriminator 4
 10304 00a6 FA7B     		ldrb	r2, [r7, #15]
 10305 00a8 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 229


 10306 00aa DBB2     		uxtb	r3, r3
 10307 00ac 3B73     		strb	r3, [r7, #12]
2642:.\AdvantageImpl.c ****     //8 is the size of the allocated buffer space for the preset values according to the protocol.
2643:.\AdvantageImpl.c ****     //The real buffer size allocated from the display side is 16 bytes. The buffer will be cast fro
2644:.\AdvantageImpl.c ****     //the end to the beginning, so the startup index has been calculated "explicitly", this is (8 -
2645:.\AdvantageImpl.c ****     //To multiply by 1000 we need to shift the entire buffer three bytes to shift the comma, so we
2646:.\AdvantageImpl.c ****     //will subtract 3 bytes to the starting position in order to make the shifting.
2647:.\AdvantageImpl.c ****     if(shiftcount > 0)
 10308              		.loc 1 2647 0 is_stmt 1 discriminator 4
 10309 00ae 97F90C30 		ldrsb	r3, [r7, #12]
 10310 00b2 002B     		cmp	r3, #0
 10311 00b4 29DD     		ble	.L434
2648:.\AdvantageImpl.c ****     {
2649:.\AdvantageImpl.c ****         while(shiftcount > 0)
 10312              		.loc 1 2649 0
 10313 00b6 23E0     		b	.L435
 10314              	.L438:
2650:.\AdvantageImpl.c ****         {
2651:.\AdvantageImpl.c ****             FOR(index = (buffersize - 1), index > 0, index--)
 10315              		.loc 1 2651 0
 10316 00b8 FB78     		ldrb	r3, [r7, #3]
 10317 00ba 013B     		subs	r3, r3, #1
 10318 00bc DBB2     		uxtb	r3, r3
 10319 00be 7B73     		strb	r3, [r7, #13]
 10320 00c0 15E0     		b	.L436
 10321              	.L437:
2652:.\AdvantageImpl.c ****             {
2653:.\AdvantageImpl.c ****                 pbuffer[index] = pbuffer[index - 1];
 10322              		.loc 1 2653 0 discriminator 3
 10323 00c2 97F90D30 		ldrsb	r3, [r7, #13]
 10324 00c6 7A68     		ldr	r2, [r7, #4]
 10325 00c8 1344     		add	r3, r3, r2
 10326 00ca 97F90D20 		ldrsb	r2, [r7, #13]
 10327 00ce 013A     		subs	r2, r2, #1
 10328 00d0 7968     		ldr	r1, [r7, #4]
 10329 00d2 0A44     		add	r2, r2, r1
 10330 00d4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10331 00d6 1A70     		strb	r2, [r3]
2654:.\AdvantageImpl.c ****                 pbuffer[index] = 0x00;
 10332              		.loc 1 2654 0 discriminator 3
 10333 00d8 97F90D30 		ldrsb	r3, [r7, #13]
 10334 00dc 7A68     		ldr	r2, [r7, #4]
 10335 00de 1344     		add	r3, r3, r2
 10336 00e0 0022     		movs	r2, #0
 10337 00e2 1A70     		strb	r2, [r3]
2651:.\AdvantageImpl.c ****             {
 10338              		.loc 1 2651 0 discriminator 3
 10339 00e4 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 10340 00e6 DBB2     		uxtb	r3, r3
 10341 00e8 013B     		subs	r3, r3, #1
 10342 00ea DBB2     		uxtb	r3, r3
 10343 00ec 7B73     		strb	r3, [r7, #13]
 10344              	.L436:
2651:.\AdvantageImpl.c ****             {
 10345              		.loc 1 2651 0 is_stmt 0 discriminator 1
 10346 00ee 97F90D30 		ldrsb	r3, [r7, #13]
 10347 00f2 002B     		cmp	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 230


 10348 00f4 E5DC     		bgt	.L437
2655:.\AdvantageImpl.c ****             }
2656:.\AdvantageImpl.c ****             shiftcount--;
 10349              		.loc 1 2656 0 is_stmt 1
 10350 00f6 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 10351 00f8 DBB2     		uxtb	r3, r3
 10352 00fa 013B     		subs	r3, r3, #1
 10353 00fc DBB2     		uxtb	r3, r3
 10354 00fe 3B73     		strb	r3, [r7, #12]
 10355              	.L435:
2649:.\AdvantageImpl.c ****         {
 10356              		.loc 1 2649 0
 10357 0100 97F90C30 		ldrsb	r3, [r7, #12]
 10358 0104 002B     		cmp	r3, #0
 10359 0106 D7DC     		bgt	.L438
 10360 0108 2DE0     		b	.L425
 10361              	.L434:
2657:.\AdvantageImpl.c ****         }
2658:.\AdvantageImpl.c ****     }
2659:.\AdvantageImpl.c ****     else if(shiftcount < 0)
 10362              		.loc 1 2659 0
 10363 010a 97F90C30 		ldrsb	r3, [r7, #12]
 10364 010e 002B     		cmp	r3, #0
 10365 0110 29DA     		bge	.L425
2660:.\AdvantageImpl.c ****     {
2661:.\AdvantageImpl.c ****         while(shiftcount < 0)
 10366              		.loc 1 2661 0
 10367 0112 24E0     		b	.L440
 10368              	.L443:
2662:.\AdvantageImpl.c ****         {
2663:.\AdvantageImpl.c ****             FOR(index = 0, index < (buffersize  - 1), index++)
 10369              		.loc 1 2663 0
 10370 0114 0023     		movs	r3, #0
 10371 0116 7B73     		strb	r3, [r7, #13]
 10372 0118 16E0     		b	.L441
 10373              	.L442:
2664:.\AdvantageImpl.c ****             {
2665:.\AdvantageImpl.c ****                 pbuffer[index] = pbuffer[index + 1];
 10374              		.loc 1 2665 0 discriminator 3
 10375 011a 97F90D30 		ldrsb	r3, [r7, #13]
 10376 011e 7A68     		ldr	r2, [r7, #4]
 10377 0120 1344     		add	r3, r3, r2
 10378 0122 97F90D20 		ldrsb	r2, [r7, #13]
 10379 0126 0132     		adds	r2, r2, #1
 10380 0128 7968     		ldr	r1, [r7, #4]
 10381 012a 0A44     		add	r2, r2, r1
 10382 012c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10383 012e 1A70     		strb	r2, [r3]
2666:.\AdvantageImpl.c ****                 pbuffer[index + 1] = 0x30;
 10384              		.loc 1 2666 0 discriminator 3
 10385 0130 97F90D30 		ldrsb	r3, [r7, #13]
 10386 0134 0133     		adds	r3, r3, #1
 10387 0136 7A68     		ldr	r2, [r7, #4]
 10388 0138 1344     		add	r3, r3, r2
 10389 013a 3022     		movs	r2, #48
 10390 013c 1A70     		strb	r2, [r3]
2663:.\AdvantageImpl.c ****             {
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 231


 10391              		.loc 1 2663 0 discriminator 3
 10392 013e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 10393 0140 DBB2     		uxtb	r3, r3
 10394 0142 0133     		adds	r3, r3, #1
 10395 0144 DBB2     		uxtb	r3, r3
 10396 0146 7B73     		strb	r3, [r7, #13]
 10397              	.L441:
2663:.\AdvantageImpl.c ****             {
 10398              		.loc 1 2663 0 is_stmt 0 discriminator 1
 10399 0148 97F90D20 		ldrsb	r2, [r7, #13]
 10400 014c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 10401 014e 013B     		subs	r3, r3, #1
 10402 0150 9A42     		cmp	r2, r3
 10403 0152 E2DB     		blt	.L442
2667:.\AdvantageImpl.c ****             }
2668:.\AdvantageImpl.c ****             shiftcount++;
 10404              		.loc 1 2668 0 is_stmt 1
 10405 0154 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 10406 0156 DBB2     		uxtb	r3, r3
 10407 0158 0133     		adds	r3, r3, #1
 10408 015a DBB2     		uxtb	r3, r3
 10409 015c 3B73     		strb	r3, [r7, #12]
 10410              	.L440:
2661:.\AdvantageImpl.c ****         {
 10411              		.loc 1 2661 0
 10412 015e 97F90C30 		ldrsb	r3, [r7, #12]
 10413 0162 002B     		cmp	r3, #0
 10414 0164 D6DB     		blt	.L443
 10415              	.L425:
2669:.\AdvantageImpl.c ****         }
2670:.\AdvantageImpl.c ****     }
2671:.\AdvantageImpl.c **** }
 10416              		.loc 1 2671 0
 10417 0166 1437     		adds	r7, r7, #20
 10418              		.cfi_def_cfa_offset 4
 10419 0168 BD46     		mov	sp, r7
 10420              		.cfi_def_cfa_register 13
 10421              		@ sp needed
 10422 016a 5DF8047B 		ldr	r7, [sp], #4
 10423              		.cfi_restore 7
 10424              		.cfi_def_cfa_offset 0
 10425 016e 7047     		bx	lr
 10426              	.L445:
 10427              		.align	2
 10428              	.L444:
 10429 0170 00000000 		.word	_g_dispenserlayoutinfo
 10430              		.cfi_endproc
 10431              	.LFE106:
 10432              		.size	CastVolumeValue, .-CastVolumeValue
 10433              		.section	.text.CastMoneyValue,"ax",%progbits
 10434              		.align	2
 10435              		.global	CastMoneyValue
 10436              		.thumb
 10437              		.thumb_func
 10438              		.type	CastMoneyValue, %function
 10439              	CastMoneyValue:
 10440              	.LFB107:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 232


2672:.\AdvantageImpl.c **** 
2673:.\AdvantageImpl.c **** //@Created by: HIJH
2674:.\AdvantageImpl.c **** //@Date: Septembre de 2016
2675:.\AdvantageImpl.c **** //This method arranges the PRESET buffer when this is a "Money PRESET".
2676:.\AdvantageImpl.c **** void CastMoneyValue(char8 *pbuffer, uint8 buffersize)
2677:.\AdvantageImpl.c **** {
 10441              		.loc 1 2677 0
 10442              		.cfi_startproc
 10443              		@ args = 0, pretend = 0, frame = 16
 10444              		@ frame_needed = 1, uses_anonymous_args = 0
 10445              		@ link register save eliminated.
 10446 0000 80B4     		push	{r7}
 10447              		.cfi_def_cfa_offset 4
 10448              		.cfi_offset 7, -4
 10449 0002 85B0     		sub	sp, sp, #20
 10450              		.cfi_def_cfa_offset 24
 10451 0004 00AF     		add	r7, sp, #0
 10452              		.cfi_def_cfa_register 7
 10453 0006 7860     		str	r0, [r7, #4]
 10454 0008 0B46     		mov	r3, r1
 10455 000a FB70     		strb	r3, [r7, #3]
2678:.\AdvantageImpl.c ****     uint8 delimiterindex = 0x00;
 10456              		.loc 1 2678 0
 10457 000c 0023     		movs	r3, #0
 10458 000e FB73     		strb	r3, [r7, #15]
2679:.\AdvantageImpl.c ****     bool shiftbydelimiter = false;
 10459              		.loc 1 2679 0
 10460 0010 0023     		movs	r3, #0
 10461 0012 BB73     		strb	r3, [r7, #14]
2680:.\AdvantageImpl.c ****     //If there is a "Comma" inside of the buffer, then just remove it before and count this for the
2681:.\AdvantageImpl.c ****     FOR(int8 index = (buffersize - 1), index > 0, index--)
 10462              		.loc 1 2681 0
 10463 0014 FB78     		ldrb	r3, [r7, #3]
 10464 0016 013B     		subs	r3, r3, #1
 10465 0018 DBB2     		uxtb	r3, r3
 10466 001a 7B73     		strb	r3, [r7, #13]
 10467 001c 2CE0     		b	.L447
 10468              	.L451:
2682:.\AdvantageImpl.c ****     {
2683:.\AdvantageImpl.c ****         if(pbuffer[index] == 0x2C && !shiftbydelimiter)
 10469              		.loc 1 2683 0
 10470 001e 97F90D30 		ldrsb	r3, [r7, #13]
 10471 0022 7A68     		ldr	r2, [r7, #4]
 10472 0024 1344     		add	r3, r3, r2
 10473 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10474 0028 2C2B     		cmp	r3, #44
 10475 002a 07D1     		bne	.L448
 10476              		.loc 1 2683 0 is_stmt 0 discriminator 1
 10477 002c BB7B     		ldrb	r3, [r7, #14]
 10478 002e 83F00103 		eor	r3, r3, #1
 10479 0032 DBB2     		uxtb	r3, r3
 10480 0034 002B     		cmp	r3, #0
 10481 0036 01D0     		beq	.L448
2684:.\AdvantageImpl.c ****             shiftbydelimiter = true;
 10482              		.loc 1 2684 0 is_stmt 1
 10483 0038 0123     		movs	r3, #1
 10484 003a BB73     		strb	r3, [r7, #14]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 233


 10485              	.L448:
2685:.\AdvantageImpl.c **** 
2686:.\AdvantageImpl.c ****         if(shiftbydelimiter)
 10486              		.loc 1 2686 0
 10487 003c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 10488 003e 002B     		cmp	r3, #0
 10489 0040 12D0     		beq	.L449
2687:.\AdvantageImpl.c ****         {
2688:.\AdvantageImpl.c ****             pbuffer[index] = pbuffer[index - 1];
 10490              		.loc 1 2688 0
 10491 0042 97F90D30 		ldrsb	r3, [r7, #13]
 10492 0046 7A68     		ldr	r2, [r7, #4]
 10493 0048 1344     		add	r3, r3, r2
 10494 004a 97F90D20 		ldrsb	r2, [r7, #13]
 10495 004e 013A     		subs	r2, r2, #1
 10496 0050 7968     		ldr	r1, [r7, #4]
 10497 0052 0A44     		add	r2, r2, r1
 10498 0054 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10499 0056 1A70     		strb	r2, [r3]
2689:.\AdvantageImpl.c ****             pbuffer[index - 1] = 0x00;
 10500              		.loc 1 2689 0
 10501 0058 97F90D30 		ldrsb	r3, [r7, #13]
 10502 005c 013B     		subs	r3, r3, #1
 10503 005e 7A68     		ldr	r2, [r7, #4]
 10504 0060 1344     		add	r3, r3, r2
 10505 0062 0022     		movs	r2, #0
 10506 0064 1A70     		strb	r2, [r3]
 10507 0066 02E0     		b	.L450
 10508              	.L449:
2690:.\AdvantageImpl.c ****         }else
2691:.\AdvantageImpl.c ****             delimiterindex++;
 10509              		.loc 1 2691 0
 10510 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 10511 006a 0133     		adds	r3, r3, #1
 10512 006c FB73     		strb	r3, [r7, #15]
 10513              	.L450:
2681:.\AdvantageImpl.c ****     {
 10514              		.loc 1 2681 0 discriminator 2
 10515 006e 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 10516 0070 DBB2     		uxtb	r3, r3
 10517 0072 013B     		subs	r3, r3, #1
 10518 0074 DBB2     		uxtb	r3, r3
 10519 0076 7B73     		strb	r3, [r7, #13]
 10520              	.L447:
2681:.\AdvantageImpl.c ****     {
 10521              		.loc 1 2681 0 is_stmt 0 discriminator 1
 10522 0078 97F90D30 		ldrsb	r3, [r7, #13]
 10523 007c 002B     		cmp	r3, #0
 10524 007e CEDC     		bgt	.L451
2692:.\AdvantageImpl.c ****         
2693:.\AdvantageImpl.c ****     }
2694:.\AdvantageImpl.c ****     if(!shiftbydelimiter)
 10525              		.loc 1 2694 0 is_stmt 1
 10526 0080 BB7B     		ldrb	r3, [r7, #14]
 10527 0082 83F00103 		eor	r3, r3, #1
 10528 0086 DBB2     		uxtb	r3, r3
 10529 0088 002B     		cmp	r3, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 234


 10530 008a 01D0     		beq	.L452
2695:.\AdvantageImpl.c ****         delimiterindex = 0x00;
 10531              		.loc 1 2695 0
 10532 008c 0023     		movs	r3, #0
 10533 008e FB73     		strb	r3, [r7, #15]
 10534              	.L452:
2696:.\AdvantageImpl.c ****     
2697:.\AdvantageImpl.c ****     int8 shiftcount = (delimiterindex - _g_dispenserlayoutinfo._moneydecimals);
 10535              		.loc 1 2697 0
 10536 0090 334B     		ldr	r3, .L463
 10537 0092 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 10538 0094 FA7B     		ldrb	r2, [r7, #15]
 10539 0096 D31A     		subs	r3, r2, r3
 10540 0098 DBB2     		uxtb	r3, r3
 10541 009a 3B73     		strb	r3, [r7, #12]
2698:.\AdvantageImpl.c ****     //8 is the size of the allocated buffer space for the preset values according to the protocol.
2699:.\AdvantageImpl.c ****     //The real buffer size allocated from the display side is 16 bytes. The buffer will be cast fro
2700:.\AdvantageImpl.c ****     //the end to the beginning, so the startup index has been calculated "explicitly", this is (8 -
2701:.\AdvantageImpl.c ****     //To multiply by 1000 we need to shift the entire buffer three bytes to shift the comma, so we
2702:.\AdvantageImpl.c ****     //will subtract 3 bytes to the starting position in order to make the shifting.
2703:.\AdvantageImpl.c ****     if(shiftcount > 0)
 10542              		.loc 1 2703 0
 10543 009c 97F90C30 		ldrsb	r3, [r7, #12]
 10544 00a0 002B     		cmp	r3, #0
 10545 00a2 29DD     		ble	.L453
2704:.\AdvantageImpl.c ****     {
2705:.\AdvantageImpl.c ****         while(shiftcount > 0)
 10546              		.loc 1 2705 0
 10547 00a4 23E0     		b	.L454
 10548              	.L457:
2706:.\AdvantageImpl.c ****         {
2707:.\AdvantageImpl.c ****             FOR(index = (buffersize - 1), index > 0, index--)
 10549              		.loc 1 2707 0
 10550 00a6 FB78     		ldrb	r3, [r7, #3]
 10551 00a8 013B     		subs	r3, r3, #1
 10552 00aa DBB2     		uxtb	r3, r3
 10553 00ac 7B73     		strb	r3, [r7, #13]
 10554 00ae 15E0     		b	.L455
 10555              	.L456:
2708:.\AdvantageImpl.c ****             {
2709:.\AdvantageImpl.c ****                 pbuffer[index] = pbuffer[index - 1];
 10556              		.loc 1 2709 0 discriminator 3
 10557 00b0 97F90D30 		ldrsb	r3, [r7, #13]
 10558 00b4 7A68     		ldr	r2, [r7, #4]
 10559 00b6 1344     		add	r3, r3, r2
 10560 00b8 97F90D20 		ldrsb	r2, [r7, #13]
 10561 00bc 013A     		subs	r2, r2, #1
 10562 00be 7968     		ldr	r1, [r7, #4]
 10563 00c0 0A44     		add	r2, r2, r1
 10564 00c2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10565 00c4 1A70     		strb	r2, [r3]
2710:.\AdvantageImpl.c ****                 pbuffer[index] = 0x00;
 10566              		.loc 1 2710 0 discriminator 3
 10567 00c6 97F90D30 		ldrsb	r3, [r7, #13]
 10568 00ca 7A68     		ldr	r2, [r7, #4]
 10569 00cc 1344     		add	r3, r3, r2
 10570 00ce 0022     		movs	r2, #0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 235


 10571 00d0 1A70     		strb	r2, [r3]
2707:.\AdvantageImpl.c ****             {
 10572              		.loc 1 2707 0 discriminator 3
 10573 00d2 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 10574 00d4 DBB2     		uxtb	r3, r3
 10575 00d6 013B     		subs	r3, r3, #1
 10576 00d8 DBB2     		uxtb	r3, r3
 10577 00da 7B73     		strb	r3, [r7, #13]
 10578              	.L455:
2707:.\AdvantageImpl.c ****             {
 10579              		.loc 1 2707 0 is_stmt 0 discriminator 1
 10580 00dc 97F90D30 		ldrsb	r3, [r7, #13]
 10581 00e0 002B     		cmp	r3, #0
 10582 00e2 E5DC     		bgt	.L456
2711:.\AdvantageImpl.c ****             }
2712:.\AdvantageImpl.c ****             shiftcount--;
 10583              		.loc 1 2712 0 is_stmt 1
 10584 00e4 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 10585 00e6 DBB2     		uxtb	r3, r3
 10586 00e8 013B     		subs	r3, r3, #1
 10587 00ea DBB2     		uxtb	r3, r3
 10588 00ec 3B73     		strb	r3, [r7, #12]
 10589              	.L454:
2705:.\AdvantageImpl.c ****         {
 10590              		.loc 1 2705 0
 10591 00ee 97F90C30 		ldrsb	r3, [r7, #12]
 10592 00f2 002B     		cmp	r3, #0
 10593 00f4 D7DC     		bgt	.L457
 10594 00f6 2DE0     		b	.L446
 10595              	.L453:
2713:.\AdvantageImpl.c ****         }
2714:.\AdvantageImpl.c ****     }
2715:.\AdvantageImpl.c ****     else if(shiftcount < 0)
 10596              		.loc 1 2715 0
 10597 00f8 97F90C30 		ldrsb	r3, [r7, #12]
 10598 00fc 002B     		cmp	r3, #0
 10599 00fe 29DA     		bge	.L446
2716:.\AdvantageImpl.c ****     {
2717:.\AdvantageImpl.c ****         while(shiftcount < 0)
 10600              		.loc 1 2717 0
 10601 0100 24E0     		b	.L459
 10602              	.L462:
2718:.\AdvantageImpl.c ****         {
2719:.\AdvantageImpl.c ****             FOR(index = 0, index < (buffersize  - 1), index++)
 10603              		.loc 1 2719 0
 10604 0102 0023     		movs	r3, #0
 10605 0104 7B73     		strb	r3, [r7, #13]
 10606 0106 16E0     		b	.L460
 10607              	.L461:
2720:.\AdvantageImpl.c ****             {
2721:.\AdvantageImpl.c ****                 pbuffer[index] = pbuffer[index + 1];
 10608              		.loc 1 2721 0 discriminator 3
 10609 0108 97F90D30 		ldrsb	r3, [r7, #13]
 10610 010c 7A68     		ldr	r2, [r7, #4]
 10611 010e 1344     		add	r3, r3, r2
 10612 0110 97F90D20 		ldrsb	r2, [r7, #13]
 10613 0114 0132     		adds	r2, r2, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 236


 10614 0116 7968     		ldr	r1, [r7, #4]
 10615 0118 0A44     		add	r2, r2, r1
 10616 011a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10617 011c 1A70     		strb	r2, [r3]
2722:.\AdvantageImpl.c ****                 pbuffer[index + 1] = 0x30;
 10618              		.loc 1 2722 0 discriminator 3
 10619 011e 97F90D30 		ldrsb	r3, [r7, #13]
 10620 0122 0133     		adds	r3, r3, #1
 10621 0124 7A68     		ldr	r2, [r7, #4]
 10622 0126 1344     		add	r3, r3, r2
 10623 0128 3022     		movs	r2, #48
 10624 012a 1A70     		strb	r2, [r3]
2719:.\AdvantageImpl.c ****             {
 10625              		.loc 1 2719 0 discriminator 3
 10626 012c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 10627 012e DBB2     		uxtb	r3, r3
 10628 0130 0133     		adds	r3, r3, #1
 10629 0132 DBB2     		uxtb	r3, r3
 10630 0134 7B73     		strb	r3, [r7, #13]
 10631              	.L460:
2719:.\AdvantageImpl.c ****             {
 10632              		.loc 1 2719 0 is_stmt 0 discriminator 1
 10633 0136 97F90D20 		ldrsb	r2, [r7, #13]
 10634 013a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 10635 013c 013B     		subs	r3, r3, #1
 10636 013e 9A42     		cmp	r2, r3
 10637 0140 E2DB     		blt	.L461
2723:.\AdvantageImpl.c ****             }
2724:.\AdvantageImpl.c ****             shiftcount++;
 10638              		.loc 1 2724 0 is_stmt 1
 10639 0142 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 10640 0144 DBB2     		uxtb	r3, r3
 10641 0146 0133     		adds	r3, r3, #1
 10642 0148 DBB2     		uxtb	r3, r3
 10643 014a 3B73     		strb	r3, [r7, #12]
 10644              	.L459:
2717:.\AdvantageImpl.c ****         {
 10645              		.loc 1 2717 0
 10646 014c 97F90C30 		ldrsb	r3, [r7, #12]
 10647 0150 002B     		cmp	r3, #0
 10648 0152 D6DB     		blt	.L462
 10649              	.L446:
2725:.\AdvantageImpl.c ****         }
2726:.\AdvantageImpl.c ****     }
2727:.\AdvantageImpl.c **** }
 10650              		.loc 1 2727 0
 10651 0154 1437     		adds	r7, r7, #20
 10652              		.cfi_def_cfa_offset 4
 10653 0156 BD46     		mov	sp, r7
 10654              		.cfi_def_cfa_register 13
 10655              		@ sp needed
 10656 0158 5DF8047B 		ldr	r7, [sp], #4
 10657              		.cfi_restore 7
 10658              		.cfi_def_cfa_offset 0
 10659 015c 7047     		bx	lr
 10660              	.L464:
 10661 015e 00BF     		.align	2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 237


 10662              	.L463:
 10663 0160 00000000 		.word	_g_dispenserlayoutinfo
 10664              		.cfi_endproc
 10665              	.LFE107:
 10666              		.size	CastMoneyValue, .-CastMoneyValue
 10667              		.global	_g_sfcharmap
 10668              		.data
 10669              		.align	2
 10670              		.type	_g_sfcharmap, %object
 10671              		.size	_g_sfcharmap, 32
 10672              	_g_sfcharmap:
 10673 0000 B1       		.byte	-79
 10674 0001 01       		.byte	1
 10675 0002 B2       		.byte	-78
 10676 0003 02       		.byte	2
 10677 0004 B3       		.byte	-77
 10678 0005 03       		.byte	3
 10679 0006 B4       		.byte	-76
 10680 0007 04       		.byte	4
 10681 0008 B5       		.byte	-75
 10682 0009 05       		.byte	5
 10683 000a B6       		.byte	-74
 10684 000b 06       		.byte	6
 10685 000c B7       		.byte	-73
 10686 000d 07       		.byte	7
 10687 000e B8       		.byte	-72
 10688 000f 08       		.byte	8
 10689 0010 B9       		.byte	-71
 10690 0011 09       		.byte	9
 10691 0012 C1       		.byte	-63
 10692 0013 0A       		.byte	10
 10693 0014 C2       		.byte	-62
 10694 0015 0B       		.byte	11
 10695 0016 C3       		.byte	-61
 10696 0017 0C       		.byte	12
 10697 0018 C4       		.byte	-60
 10698 0019 0D       		.byte	13
 10699 001a C5       		.byte	-59
 10700 001b 0E       		.byte	14
 10701 001c C6       		.byte	-58
 10702 001d 0F       		.byte	15
 10703 001e 00       		.byte	0
 10704 001f 00       		.byte	0
 10705              		.section	.text.TranslateSpecialFuncionDigit,"ax",%progbits
 10706              		.align	2
 10707              		.global	TranslateSpecialFuncionDigit
 10708              		.thumb
 10709              		.thumb_func
 10710              		.type	TranslateSpecialFuncionDigit, %function
 10711              	TranslateSpecialFuncionDigit:
 10712              	.LFB108:
2728:.\AdvantageImpl.c **** 
2729:.\AdvantageImpl.c **** //This is a char map to translate from the special functions word domain to the normal byte domain
2730:.\AdvantageImpl.c **** char8 _g_sfcharmap[][2] = 
2731:.\AdvantageImpl.c **** {
2732:.\AdvantageImpl.c ****     { 0xB1, 0x01 }, { 0xB2, 0x02 }, { 0xB3, 0x03 }, { 0xB4, 0x04 }, { 0xB5, 0x05 }, { 0xB6, 0x06 },
2733:.\AdvantageImpl.c ****     { 0xC1, 0x0A }, { 0xC2, 0x0B }, { 0xC3, 0x0C }, { 0xC4, 0x0D }, { 0xC5, 0x0E }, { 0xC6, 0x0F },
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 238


2734:.\AdvantageImpl.c **** };
2735:.\AdvantageImpl.c **** 
2736:.\AdvantageImpl.c **** //@Created By: HIJH
2737:.\AdvantageImpl.c **** //@Septembre de 2016
2738:.\AdvantageImpl.c **** char8 TranslateSpecialFuncionDigit(char8 refval)
2739:.\AdvantageImpl.c **** {
 10713              		.loc 1 2739 0
 10714              		.cfi_startproc
 10715              		@ args = 0, pretend = 0, frame = 16
 10716              		@ frame_needed = 1, uses_anonymous_args = 0
 10717              		@ link register save eliminated.
 10718 0000 80B4     		push	{r7}
 10719              		.cfi_def_cfa_offset 4
 10720              		.cfi_offset 7, -4
 10721 0002 85B0     		sub	sp, sp, #20
 10722              		.cfi_def_cfa_offset 24
 10723 0004 00AF     		add	r7, sp, #0
 10724              		.cfi_def_cfa_register 7
 10725 0006 0346     		mov	r3, r0
 10726 0008 FB71     		strb	r3, [r7, #7]
2740:.\AdvantageImpl.c ****     char8 retval = 0x00;
 10727              		.loc 1 2740 0
 10728 000a 0023     		movs	r3, #0
 10729 000c FB73     		strb	r3, [r7, #15]
2741:.\AdvantageImpl.c ****     PSTR ptrstr = (PSTR)&_g_sfcharmap[0];
 10730              		.loc 1 2741 0
 10731 000e 0D4B     		ldr	r3, .L471
 10732 0010 BB60     		str	r3, [r7, #8]
2742:.\AdvantageImpl.c ****     while(*ptrstr != 0x00)
 10733              		.loc 1 2742 0
 10734 0012 0BE0     		b	.L466
 10735              	.L469:
2743:.\AdvantageImpl.c ****     {
2744:.\AdvantageImpl.c ****         if(ptrstr[0] == refval)
 10736              		.loc 1 2744 0
 10737 0014 BB68     		ldr	r3, [r7, #8]
 10738 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10739 0018 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 10740 001a 9A42     		cmp	r2, r3
 10741 001c 03D1     		bne	.L467
2745:.\AdvantageImpl.c ****         {
2746:.\AdvantageImpl.c ****             retval = ptrstr[1];
 10742              		.loc 1 2746 0
 10743 001e BB68     		ldr	r3, [r7, #8]
 10744 0020 5B78     		ldrb	r3, [r3, #1]
 10745 0022 FB73     		strb	r3, [r7, #15]
2747:.\AdvantageImpl.c ****             break;
 10746              		.loc 1 2747 0
 10747 0024 06E0     		b	.L468
 10748              	.L467:
2748:.\AdvantageImpl.c ****         }
2749:.\AdvantageImpl.c ****         ptrstr++;
 10749              		.loc 1 2749 0
 10750 0026 BB68     		ldr	r3, [r7, #8]
 10751 0028 0133     		adds	r3, r3, #1
 10752 002a BB60     		str	r3, [r7, #8]
 10753              	.L466:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 239


2742:.\AdvantageImpl.c ****     {
 10754              		.loc 1 2742 0
 10755 002c BB68     		ldr	r3, [r7, #8]
 10756 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10757 0030 002B     		cmp	r3, #0
 10758 0032 EFD1     		bne	.L469
 10759              	.L468:
2750:.\AdvantageImpl.c ****     }    
2751:.\AdvantageImpl.c ****     return retval;
 10760              		.loc 1 2751 0
 10761 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2752:.\AdvantageImpl.c **** }
 10762              		.loc 1 2752 0
 10763 0036 1846     		mov	r0, r3
 10764 0038 1437     		adds	r7, r7, #20
 10765              		.cfi_def_cfa_offset 4
 10766 003a BD46     		mov	sp, r7
 10767              		.cfi_def_cfa_register 13
 10768              		@ sp needed
 10769 003c 5DF8047B 		ldr	r7, [sp], #4
 10770              		.cfi_restore 7
 10771              		.cfi_def_cfa_offset 0
 10772 0040 7047     		bx	lr
 10773              	.L472:
 10774 0042 00BF     		.align	2
 10775              	.L471:
 10776 0044 00000000 		.word	_g_sfcharmap
 10777              		.cfi_endproc
 10778              	.LFE108:
 10779              		.size	TranslateSpecialFuncionDigit, .-TranslateSpecialFuncionDigit
 10780              		.bss
 10781              	index.9614:
 10782 0000 00       		.space	1
 10783              		.text
 10784              	.Letext0:
 10785              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 10786              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 10787              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 10788              		.file 5 ".\\GlobalDefinitions.h"
 10789              		.file 6 ".\\SinkManager.h"
 10790              		.file 7 ".\\SinkObservables.h"
 10791              		.file 8 ".\\UARTManager.h"
 10792              		.file 9 ".\\Display.h"
 10793              		.file 10 ".\\Advantage.h"
 10794              		.file 11 ".\\Dispenser.h"
 10795              		.file 12 ".\\Eeprom.h"
 10796              		.file 13 ".\\RFLink.h"
 10797              		.file 14 ".\\Printer.h"
 10798              		.file 15 "Generated_Source\\PSoC5/core_cm3.h"
 10799              		.section	.debug_info,"",%progbits
 10800              	.Ldebug_info0:
 10801 0000 77290000 		.4byte	0x2977
 10802 0004 0400     		.2byte	0x4
 10803 0006 00000000 		.4byte	.Ldebug_abbrev0
 10804 000a 04       		.byte	0x4
 10805 000b 01       		.uleb128 0x1
 10806 000c 8D240000 		.4byte	.LASF565
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 240


 10807 0010 01       		.byte	0x1
 10808 0011 7C1A0000 		.4byte	.LASF566
 10809 0015 CB170000 		.4byte	.LASF567
 10810 0019 00000000 		.4byte	.Ldebug_ranges0+0
 10811 001d 00000000 		.4byte	0
 10812 0021 00000000 		.4byte	.Ldebug_line0
 10813 0025 02       		.uleb128 0x2
 10814 0026 01       		.byte	0x1
 10815 0027 06       		.byte	0x6
 10816 0028 D60A0000 		.4byte	.LASF0
 10817 002c 03       		.uleb128 0x3
 10818 002d E4060000 		.4byte	.LASF4
 10819 0031 02       		.byte	0x2
 10820 0032 1D       		.byte	0x1d
 10821 0033 37000000 		.4byte	0x37
 10822 0037 02       		.uleb128 0x2
 10823 0038 01       		.byte	0x1
 10824 0039 08       		.byte	0x8
 10825 003a 1C0C0000 		.4byte	.LASF1
 10826 003e 02       		.uleb128 0x2
 10827 003f 02       		.byte	0x2
 10828 0040 05       		.byte	0x5
 10829 0041 3D230000 		.4byte	.LASF2
 10830 0045 02       		.uleb128 0x2
 10831 0046 02       		.byte	0x2
 10832 0047 07       		.byte	0x7
 10833 0048 48280000 		.4byte	.LASF3
 10834 004c 03       		.uleb128 0x3
 10835 004d F5280000 		.4byte	.LASF5
 10836 0051 02       		.byte	0x2
 10837 0052 3F       		.byte	0x3f
 10838 0053 57000000 		.4byte	0x57
 10839 0057 02       		.uleb128 0x2
 10840 0058 04       		.byte	0x4
 10841 0059 05       		.byte	0x5
 10842 005a 1A080000 		.4byte	.LASF6
 10843 005e 02       		.uleb128 0x2
 10844 005f 04       		.byte	0x4
 10845 0060 07       		.byte	0x7
 10846 0061 D7130000 		.4byte	.LASF7
 10847 0065 02       		.uleb128 0x2
 10848 0066 08       		.byte	0x8
 10849 0067 05       		.byte	0x5
 10850 0068 9C160000 		.4byte	.LASF8
 10851 006c 02       		.uleb128 0x2
 10852 006d 08       		.byte	0x8
 10853 006e 07       		.byte	0x7
 10854 006f F01E0000 		.4byte	.LASF9
 10855 0073 04       		.uleb128 0x4
 10856 0074 04       		.byte	0x4
 10857 0075 05       		.byte	0x5
 10858 0076 696E7400 		.ascii	"int\000"
 10859 007a 02       		.uleb128 0x2
 10860 007b 04       		.byte	0x4
 10861 007c 07       		.byte	0x7
 10862 007d 8D190000 		.4byte	.LASF10
 10863 0081 03       		.uleb128 0x3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 241


 10864 0082 E20A0000 		.4byte	.LASF11
 10865 0086 03       		.byte	0x3
 10866 0087 15       		.byte	0x15
 10867 0088 2C000000 		.4byte	0x2c
 10868 008c 03       		.uleb128 0x3
 10869 008d 3A020000 		.4byte	.LASF12
 10870 0091 03       		.byte	0x3
 10871 0092 2C       		.byte	0x2c
 10872 0093 4C000000 		.4byte	0x4c
 10873 0097 05       		.uleb128 0x5
 10874 0098 F4220000 		.4byte	.LASF13
 10875 009c 04       		.byte	0x4
 10876 009d 3801     		.2byte	0x138
 10877 009f 37000000 		.4byte	0x37
 10878 00a3 05       		.uleb128 0x5
 10879 00a4 5A2A0000 		.4byte	.LASF14
 10880 00a8 04       		.byte	0x4
 10881 00a9 3901     		.2byte	0x139
 10882 00ab 45000000 		.4byte	0x45
 10883 00af 05       		.uleb128 0x5
 10884 00b0 D9020000 		.4byte	.LASF15
 10885 00b4 04       		.byte	0x4
 10886 00b5 3A01     		.2byte	0x13a
 10887 00b7 5E000000 		.4byte	0x5e
 10888 00bb 05       		.uleb128 0x5
 10889 00bc E7050000 		.4byte	.LASF16
 10890 00c0 04       		.byte	0x4
 10891 00c1 3B01     		.2byte	0x13b
 10892 00c3 25000000 		.4byte	0x25
 10893 00c7 02       		.uleb128 0x2
 10894 00c8 04       		.byte	0x4
 10895 00c9 04       		.byte	0x4
 10896 00ca B8180000 		.4byte	.LASF17
 10897 00ce 02       		.uleb128 0x2
 10898 00cf 08       		.byte	0x8
 10899 00d0 04       		.byte	0x4
 10900 00d1 83170000 		.4byte	.LASF18
 10901 00d5 05       		.uleb128 0x5
 10902 00d6 13080000 		.4byte	.LASF19
 10903 00da 04       		.byte	0x4
 10904 00db 4401     		.2byte	0x144
 10905 00dd 6C000000 		.4byte	0x6c
 10906 00e1 05       		.uleb128 0x5
 10907 00e2 C0040000 		.4byte	.LASF20
 10908 00e6 04       		.byte	0x4
 10909 00e7 4901     		.2byte	0x149
 10910 00e9 ED000000 		.4byte	0xed
 10911 00ed 02       		.uleb128 0x2
 10912 00ee 01       		.byte	0x1
 10913 00ef 08       		.byte	0x8
 10914 00f0 A40D0000 		.4byte	.LASF21
 10915 00f4 06       		.uleb128 0x6
 10916 00f5 97000000 		.4byte	0x97
 10917 00f9 06       		.uleb128 0x6
 10918 00fa A3000000 		.4byte	0xa3
 10919 00fe 06       		.uleb128 0x6
 10920 00ff AF000000 		.4byte	0xaf
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 242


 10921 0103 07       		.uleb128 0x7
 10922 0104 04       		.byte	0x4
 10923 0105 09010000 		.4byte	0x109
 10924 0109 08       		.uleb128 0x8
 10925 010a 02       		.uleb128 0x2
 10926 010b 04       		.byte	0x4
 10927 010c 07       		.byte	0x7
 10928 010d B7000000 		.4byte	.LASF22
 10929 0111 09       		.uleb128 0x9
 10930 0112 04       		.byte	0x4
 10931 0113 07       		.uleb128 0x7
 10932 0114 04       		.byte	0x4
 10933 0115 ED000000 		.4byte	0xed
 10934 0119 0A       		.uleb128 0xa
 10935 011a 97000000 		.4byte	0x97
 10936 011e 29010000 		.4byte	0x129
 10937 0122 0B       		.uleb128 0xb
 10938 0123 0A010000 		.4byte	0x10a
 10939 0127 03       		.byte	0x3
 10940 0128 00       		.byte	0
 10941 0129 02       		.uleb128 0x2
 10942 012a 08       		.byte	0x8
 10943 012b 04       		.byte	0x4
 10944 012c 0B1D0000 		.4byte	.LASF23
 10945 0130 03       		.uleb128 0x3
 10946 0131 DB1B0000 		.4byte	.LASF24
 10947 0135 05       		.byte	0x5
 10948 0136 29       		.byte	0x29
 10949 0137 11010000 		.4byte	0x111
 10950 013b 07       		.uleb128 0x7
 10951 013c 04       		.byte	0x4
 10952 013d E1000000 		.4byte	0xe1
 10953 0141 07       		.uleb128 0x7
 10954 0142 04       		.byte	0x4
 10955 0143 97000000 		.4byte	0x97
 10956 0147 0C       		.uleb128 0xc
 10957 0148 63270000 		.4byte	.LASF33
 10958 014c 01       		.byte	0x1
 10959 014d 06       		.byte	0x6
 10960 014e 3F       		.byte	0x3f
 10961 014f 84010000 		.4byte	0x184
 10962 0153 0D       		.uleb128 0xd
 10963 0154 DF290000 		.4byte	.LASF25
 10964 0158 01       		.sleb128 1
 10965 0159 0D       		.uleb128 0xd
 10966 015a 321A0000 		.4byte	.LASF26
 10967 015e 02       		.sleb128 2
 10968 015f 0D       		.uleb128 0xd
 10969 0160 C71B0000 		.4byte	.LASF27
 10970 0164 03       		.sleb128 3
 10971 0165 0D       		.uleb128 0xd
 10972 0166 6B220000 		.4byte	.LASF28
 10973 016a 04       		.sleb128 4
 10974 016b 0D       		.uleb128 0xd
 10975 016c 62110000 		.4byte	.LASF29
 10976 0170 05       		.sleb128 5
 10977 0171 0D       		.uleb128 0xd
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 243


 10978 0172 91250000 		.4byte	.LASF30
 10979 0176 06       		.sleb128 6
 10980 0177 0D       		.uleb128 0xd
 10981 0178 0E0E0000 		.4byte	.LASF31
 10982 017c 07       		.sleb128 7
 10983 017d 0D       		.uleb128 0xd
 10984 017e 65130000 		.4byte	.LASF32
 10985 0182 08       		.sleb128 8
 10986 0183 00       		.byte	0
 10987 0184 0C       		.uleb128 0xc
 10988 0185 C5290000 		.4byte	.LASF34
 10989 0189 01       		.byte	0x1
 10990 018a 06       		.byte	0x6
 10991 018b 4C       		.byte	0x4c
 10992 018c A3010000 		.4byte	0x1a3
 10993 0190 0D       		.uleb128 0xd
 10994 0191 D5290000 		.4byte	.LASF35
 10995 0195 01       		.sleb128 1
 10996 0196 0D       		.uleb128 0xd
 10997 0197 7A0D0000 		.4byte	.LASF36
 10998 019b 02       		.sleb128 2
 10999 019c 0D       		.uleb128 0xd
 11000 019d 73010000 		.4byte	.LASF37
 11001 01a1 03       		.sleb128 3
 11002 01a2 00       		.byte	0
 11003 01a3 0E       		.uleb128 0xe
 11004 01a4 58000000 		.4byte	.LASF96
 11005 01a8 9801     		.2byte	0x198
 11006 01aa 06       		.byte	0x6
 11007 01ab 53       		.byte	0x53
 11008 01ac 44020000 		.4byte	0x244
 11009 01b0 0F       		.uleb128 0xf
 11010 01b1 AE180000 		.4byte	.LASF38
 11011 01b5 06       		.byte	0x6
 11012 01b6 55       		.byte	0x55
 11013 01b7 44020000 		.4byte	0x244
 11014 01bb 00       		.byte	0
 11015 01bc 0F       		.uleb128 0xf
 11016 01bd CA220000 		.4byte	.LASF39
 11017 01c1 06       		.byte	0x6
 11018 01c2 56       		.byte	0x56
 11019 01c3 F4000000 		.4byte	0xf4
 11020 01c7 01       		.byte	0x1
 11021 01c8 0F       		.uleb128 0xf
 11022 01c9 69250000 		.4byte	.LASF40
 11023 01cd 06       		.byte	0x6
 11024 01ce 57       		.byte	0x57
 11025 01cf F4000000 		.4byte	0xf4
 11026 01d3 02       		.byte	0x2
 11027 01d4 0F       		.uleb128 0xf
 11028 01d5 EA260000 		.4byte	.LASF41
 11029 01d9 06       		.byte	0x6
 11030 01da 58       		.byte	0x58
 11031 01db F4000000 		.4byte	0xf4
 11032 01df 03       		.byte	0x3
 11033 01e0 0F       		.uleb128 0xf
 11034 01e1 1C0D0000 		.4byte	.LASF42
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 244


 11035 01e5 06       		.byte	0x6
 11036 01e6 5A       		.byte	0x5a
 11037 01e7 F9000000 		.4byte	0xf9
 11038 01eb 04       		.byte	0x4
 11039 01ec 0F       		.uleb128 0xf
 11040 01ed 0E100000 		.4byte	.LASF43
 11041 01f1 06       		.byte	0x6
 11042 01f2 5B       		.byte	0x5b
 11043 01f3 F9000000 		.4byte	0xf9
 11044 01f7 06       		.byte	0x6
 11045 01f8 0F       		.uleb128 0xf
 11046 01f9 77080000 		.4byte	.LASF44
 11047 01fd 06       		.byte	0x6
 11048 01fe 5C       		.byte	0x5c
 11049 01ff F9000000 		.4byte	0xf9
 11050 0203 08       		.byte	0x8
 11051 0204 0F       		.uleb128 0xf
 11052 0205 5E240000 		.4byte	.LASF45
 11053 0209 06       		.byte	0x6
 11054 020a 5D       		.byte	0x5d
 11055 020b F9000000 		.4byte	0xf9
 11056 020f 0A       		.byte	0xa
 11057 0210 0F       		.uleb128 0xf
 11058 0211 7D070000 		.4byte	.LASF46
 11059 0215 06       		.byte	0x6
 11060 0216 5E       		.byte	0x5e
 11061 0217 50020000 		.4byte	0x250
 11062 021b 0C       		.byte	0xc
 11063 021c 10       		.uleb128 0x10
 11064 021d E62A0000 		.4byte	.LASF47
 11065 0221 06       		.byte	0x6
 11066 0222 5F       		.byte	0x5f
 11067 0223 F9000000 		.4byte	0xf9
 11068 0227 8C01     		.2byte	0x18c
 11069 0229 10       		.uleb128 0x10
 11070 022a CA140000 		.4byte	.LASF48
 11071 022e 06       		.byte	0x6
 11072 022f 62       		.byte	0x62
 11073 0230 11010000 		.4byte	0x111
 11074 0234 9001     		.2byte	0x190
 11075 0236 10       		.uleb128 0x10
 11076 0237 1E150000 		.4byte	.LASF49
 11077 023b 06       		.byte	0x6
 11078 023c 63       		.byte	0x63
 11079 023d 6C020000 		.4byte	0x26c
 11080 0241 9401     		.2byte	0x194
 11081 0243 00       		.byte	0
 11082 0244 06       		.uleb128 0x6
 11083 0245 49020000 		.4byte	0x249
 11084 0249 02       		.uleb128 0x2
 11085 024a 01       		.byte	0x1
 11086 024b 02       		.byte	0x2
 11087 024c 3A0D0000 		.4byte	.LASF50
 11088 0250 0A       		.uleb128 0xa
 11089 0251 E1000000 		.4byte	0xe1
 11090 0255 61020000 		.4byte	0x261
 11091 0259 11       		.uleb128 0x11
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 245


 11092 025a 0A010000 		.4byte	0x10a
 11093 025e 7F01     		.2byte	0x17f
 11094 0260 00       		.byte	0
 11095 0261 12       		.uleb128 0x12
 11096 0262 6C020000 		.4byte	0x26c
 11097 0266 13       		.uleb128 0x13
 11098 0267 11010000 		.4byte	0x111
 11099 026b 00       		.byte	0
 11100 026c 07       		.uleb128 0x7
 11101 026d 04       		.byte	0x4
 11102 026e 61020000 		.4byte	0x261
 11103 0272 03       		.uleb128 0x3
 11104 0273 F3190000 		.4byte	.LASF51
 11105 0277 06       		.byte	0x6
 11106 0278 64       		.byte	0x64
 11107 0279 7D020000 		.4byte	0x27d
 11108 027d 07       		.uleb128 0x7
 11109 027e 04       		.byte	0x4
 11110 027f A3010000 		.4byte	0x1a3
 11111 0283 0C       		.uleb128 0xc
 11112 0284 CB070000 		.4byte	.LASF52
 11113 0288 01       		.byte	0x1
 11114 0289 07       		.byte	0x7
 11115 028a 0F       		.byte	0xf
 11116 028b 92030000 		.4byte	0x392
 11117 028f 0D       		.uleb128 0xd
 11118 0290 C21C0000 		.4byte	.LASF53
 11119 0294 01       		.sleb128 1
 11120 0295 0D       		.uleb128 0xd
 11121 0296 19210000 		.4byte	.LASF54
 11122 029a 02       		.sleb128 2
 11123 029b 0D       		.uleb128 0xd
 11124 029c 85020000 		.4byte	.LASF55
 11125 02a0 03       		.sleb128 3
 11126 02a1 0D       		.uleb128 0xd
 11127 02a2 891F0000 		.4byte	.LASF56
 11128 02a6 04       		.sleb128 4
 11129 02a7 0D       		.uleb128 0xd
 11130 02a8 1F020000 		.4byte	.LASF57
 11131 02ac 05       		.sleb128 5
 11132 02ad 0D       		.uleb128 0xd
 11133 02ae FC040000 		.4byte	.LASF58
 11134 02b2 06       		.sleb128 6
 11135 02b3 0D       		.uleb128 0xd
 11136 02b4 23170000 		.4byte	.LASF59
 11137 02b8 07       		.sleb128 7
 11138 02b9 0D       		.uleb128 0xd
 11139 02ba DE000000 		.4byte	.LASF60
 11140 02be 08       		.sleb128 8
 11141 02bf 0D       		.uleb128 0xd
 11142 02c0 27150000 		.4byte	.LASF61
 11143 02c4 09       		.sleb128 9
 11144 02c5 0D       		.uleb128 0xd
 11145 02c6 54080000 		.4byte	.LASF62
 11146 02ca 0A       		.sleb128 10
 11147 02cb 0D       		.uleb128 0xd
 11148 02cc 030A0000 		.4byte	.LASF63
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 246


 11149 02d0 0B       		.sleb128 11
 11150 02d1 0D       		.uleb128 0xd
 11151 02d2 87030000 		.4byte	.LASF64
 11152 02d6 0C       		.sleb128 12
 11153 02d7 0D       		.uleb128 0xd
 11154 02d8 FB1F0000 		.4byte	.LASF65
 11155 02dc 0D       		.sleb128 13
 11156 02dd 0D       		.uleb128 0xd
 11157 02de 14240000 		.4byte	.LASF66
 11158 02e2 0E       		.sleb128 14
 11159 02e3 0D       		.uleb128 0xd
 11160 02e4 F00C0000 		.4byte	.LASF67
 11161 02e8 0F       		.sleb128 15
 11162 02e9 0D       		.uleb128 0xd
 11163 02ea D2080000 		.4byte	.LASF68
 11164 02ee 10       		.sleb128 16
 11165 02ef 0D       		.uleb128 0xd
 11166 02f0 72270000 		.4byte	.LASF69
 11167 02f4 11       		.sleb128 17
 11168 02f5 0D       		.uleb128 0xd
 11169 02f6 98230000 		.4byte	.LASF70
 11170 02fa 12       		.sleb128 18
 11171 02fb 0D       		.uleb128 0xd
 11172 02fc E3040000 		.4byte	.LASF71
 11173 0300 13       		.sleb128 19
 11174 0301 0D       		.uleb128 0xd
 11175 0302 E21B0000 		.4byte	.LASF72
 11176 0306 14       		.sleb128 20
 11177 0307 0D       		.uleb128 0xd
 11178 0308 91080000 		.4byte	.LASF73
 11179 030c 15       		.sleb128 21
 11180 030d 0D       		.uleb128 0xd
 11181 030e 57160000 		.4byte	.LASF74
 11182 0312 16       		.sleb128 22
 11183 0313 0D       		.uleb128 0xd
 11184 0314 C90F0000 		.4byte	.LASF75
 11185 0318 17       		.sleb128 23
 11186 0319 0D       		.uleb128 0xd
 11187 031a C6050000 		.4byte	.LASF76
 11188 031e 18       		.sleb128 24
 11189 031f 0D       		.uleb128 0xd
 11190 0320 AD280000 		.4byte	.LASF77
 11191 0324 19       		.sleb128 25
 11192 0325 0D       		.uleb128 0xd
 11193 0326 D0210000 		.4byte	.LASF78
 11194 032a 1A       		.sleb128 26
 11195 032b 0D       		.uleb128 0xd
 11196 032c 280A0000 		.4byte	.LASF79
 11197 0330 1B       		.sleb128 27
 11198 0331 0D       		.uleb128 0xd
 11199 0332 0D120000 		.4byte	.LASF80
 11200 0336 1C       		.sleb128 28
 11201 0337 0D       		.uleb128 0xd
 11202 0338 CC2A0000 		.4byte	.LASF81
 11203 033c 1D       		.sleb128 29
 11204 033d 0D       		.uleb128 0xd
 11205 033e 49270000 		.4byte	.LASF82
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 247


 11206 0342 1E       		.sleb128 30
 11207 0343 0D       		.uleb128 0xd
 11208 0344 D5230000 		.4byte	.LASF83
 11209 0348 1F       		.sleb128 31
 11210 0349 0D       		.uleb128 0xd
 11211 034a 65030000 		.4byte	.LASF84
 11212 034e 20       		.sleb128 32
 11213 034f 0D       		.uleb128 0xd
 11214 0350 F00B0000 		.4byte	.LASF85
 11215 0354 21       		.sleb128 33
 11216 0355 0D       		.uleb128 0xd
 11217 0356 67070000 		.4byte	.LASF86
 11218 035a 22       		.sleb128 34
 11219 035b 0D       		.uleb128 0xd
 11220 035c 02230000 		.4byte	.LASF87
 11221 0360 23       		.sleb128 35
 11222 0361 0D       		.uleb128 0xd
 11223 0362 1F0E0000 		.4byte	.LASF88
 11224 0366 24       		.sleb128 36
 11225 0367 0D       		.uleb128 0xd
 11226 0368 DE090000 		.4byte	.LASF89
 11227 036c 25       		.sleb128 37
 11228 036d 0D       		.uleb128 0xd
 11229 036e 1F270000 		.4byte	.LASF90
 11230 0372 26       		.sleb128 38
 11231 0373 0D       		.uleb128 0xd
 11232 0374 67020000 		.4byte	.LASF91
 11233 0378 27       		.sleb128 39
 11234 0379 0D       		.uleb128 0xd
 11235 037a F8290000 		.4byte	.LASF92
 11236 037e 28       		.sleb128 40
 11237 037f 0D       		.uleb128 0xd
 11238 0380 A11B0000 		.4byte	.LASF93
 11239 0384 29       		.sleb128 41
 11240 0385 0D       		.uleb128 0xd
 11241 0386 C6040000 		.4byte	.LASF94
 11242 038a 2A       		.sleb128 42
 11243 038b 0D       		.uleb128 0xd
 11244 038c 25160000 		.4byte	.LASF95
 11245 0390 2B       		.sleb128 43
 11246 0391 00       		.byte	0
 11247 0392 14       		.uleb128 0x14
 11248 0393 3C1A0000 		.4byte	.LASF97
 11249 0397 4C       		.byte	0x4c
 11250 0398 08       		.byte	0x8
 11251 0399 2C       		.byte	0x2c
 11252 039a 83040000 		.4byte	0x483
 11253 039e 0F       		.uleb128 0xf
 11254 039f 28200000 		.4byte	.LASF98
 11255 03a3 08       		.byte	0x8
 11256 03a4 2E       		.byte	0x2e
 11257 03a5 97000000 		.4byte	0x97
 11258 03a9 00       		.byte	0
 11259 03aa 0F       		.uleb128 0xf
 11260 03ab BD100000 		.4byte	.LASF99
 11261 03af 08       		.byte	0x8
 11262 03b0 31       		.byte	0x31
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 248


 11263 03b1 6C020000 		.4byte	0x26c
 11264 03b5 04       		.byte	0x4
 11265 03b6 0F       		.uleb128 0xf
 11266 03b7 7B1D0000 		.4byte	.LASF100
 11267 03bb 08       		.byte	0x8
 11268 03bc 34       		.byte	0x34
 11269 03bd 03010000 		.4byte	0x103
 11270 03c1 08       		.byte	0x8
 11271 03c2 0F       		.uleb128 0xf
 11272 03c3 A2030000 		.4byte	.LASF101
 11273 03c7 08       		.byte	0x8
 11274 03c8 35       		.byte	0x35
 11275 03c9 03010000 		.4byte	0x103
 11276 03cd 0C       		.byte	0xc
 11277 03ce 0F       		.uleb128 0xf
 11278 03cf 9E1F0000 		.4byte	.LASF102
 11279 03d3 08       		.byte	0x8
 11280 03d4 36       		.byte	0x36
 11281 03d5 88040000 		.4byte	0x488
 11282 03d9 10       		.byte	0x10
 11283 03da 0F       		.uleb128 0xf
 11284 03db 8C1B0000 		.4byte	.LASF103
 11285 03df 08       		.byte	0x8
 11286 03e0 37       		.byte	0x37
 11287 03e1 99040000 		.4byte	0x499
 11288 03e5 14       		.byte	0x14
 11289 03e6 0F       		.uleb128 0xf
 11290 03e7 36240000 		.4byte	.LASF104
 11291 03eb 08       		.byte	0x8
 11292 03ec 39       		.byte	0x39
 11293 03ed 88040000 		.4byte	0x488
 11294 03f1 18       		.byte	0x18
 11295 03f2 0F       		.uleb128 0xf
 11296 03f3 A00E0000 		.4byte	.LASF105
 11297 03f7 08       		.byte	0x8
 11298 03f8 3A       		.byte	0x3a
 11299 03f9 88040000 		.4byte	0x488
 11300 03fd 1C       		.byte	0x1c
 11301 03fe 0F       		.uleb128 0xf
 11302 03ff 450B0000 		.4byte	.LASF106
 11303 0403 08       		.byte	0x8
 11304 0404 3B       		.byte	0x3b
 11305 0405 88040000 		.4byte	0x488
 11306 0409 20       		.byte	0x20
 11307 040a 0F       		.uleb128 0xf
 11308 040b E1200000 		.4byte	.LASF107
 11309 040f 08       		.byte	0x8
 11310 0410 3C       		.byte	0x3c
 11311 0411 A4040000 		.4byte	0x4a4
 11312 0415 24       		.byte	0x24
 11313 0416 0F       		.uleb128 0xf
 11314 0417 091C0000 		.4byte	.LASF108
 11315 041b 08       		.byte	0x8
 11316 041c 3D       		.byte	0x3d
 11317 041d A4040000 		.4byte	0x4a4
 11318 0421 28       		.byte	0x28
 11319 0422 0F       		.uleb128 0xf
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 249


 11320 0423 370B0000 		.4byte	.LASF109
 11321 0427 08       		.byte	0x8
 11322 0428 3E       		.byte	0x3e
 11323 0429 03010000 		.4byte	0x103
 11324 042d 2C       		.byte	0x2c
 11325 042e 0F       		.uleb128 0xf
 11326 042f 6E0D0000 		.4byte	.LASF110
 11327 0433 08       		.byte	0x8
 11328 0434 40       		.byte	0x40
 11329 0435 99040000 		.4byte	0x499
 11330 0439 30       		.byte	0x30
 11331 043a 0F       		.uleb128 0xf
 11332 043b 9A190000 		.4byte	.LASF111
 11333 043f 08       		.byte	0x8
 11334 0440 41       		.byte	0x41
 11335 0441 88040000 		.4byte	0x488
 11336 0445 34       		.byte	0x34
 11337 0446 0F       		.uleb128 0xf
 11338 0447 FA220000 		.4byte	.LASF112
 11339 044b 08       		.byte	0x8
 11340 044c 42       		.byte	0x42
 11341 044d 99040000 		.4byte	0x499
 11342 0451 38       		.byte	0x38
 11343 0452 0F       		.uleb128 0xf
 11344 0453 7E100000 		.4byte	.LASF113
 11345 0457 08       		.byte	0x8
 11346 0458 43       		.byte	0x43
 11347 0459 C0040000 		.4byte	0x4c0
 11348 045d 3C       		.byte	0x3c
 11349 045e 0F       		.uleb128 0xf
 11350 045f 191F0000 		.4byte	.LASF114
 11351 0463 08       		.byte	0x8
 11352 0464 44       		.byte	0x44
 11353 0465 E1040000 		.4byte	0x4e1
 11354 0469 40       		.byte	0x40
 11355 046a 0F       		.uleb128 0xf
 11356 046b 1E0F0000 		.4byte	.LASF115
 11357 046f 08       		.byte	0x8
 11358 0470 45       		.byte	0x45
 11359 0471 99040000 		.4byte	0x499
 11360 0475 44       		.byte	0x44
 11361 0476 0F       		.uleb128 0xf
 11362 0477 75170000 		.4byte	.LASF116
 11363 047b 08       		.byte	0x8
 11364 047c 46       		.byte	0x46
 11365 047d 03010000 		.4byte	0x103
 11366 0481 48       		.byte	0x48
 11367 0482 00       		.byte	0
 11368 0483 15       		.uleb128 0x15
 11369 0484 97000000 		.4byte	0x97
 11370 0488 07       		.uleb128 0x7
 11371 0489 04       		.byte	0x4
 11372 048a 83040000 		.4byte	0x483
 11373 048e 12       		.uleb128 0x12
 11374 048f 99040000 		.4byte	0x499
 11375 0493 13       		.uleb128 0x13
 11376 0494 97000000 		.4byte	0x97
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 250


 11377 0498 00       		.byte	0
 11378 0499 07       		.uleb128 0x7
 11379 049a 04       		.byte	0x4
 11380 049b 8E040000 		.4byte	0x48e
 11381 049f 15       		.uleb128 0x15
 11382 04a0 A3000000 		.4byte	0xa3
 11383 04a4 07       		.uleb128 0x7
 11384 04a5 04       		.byte	0x4
 11385 04a6 9F040000 		.4byte	0x49f
 11386 04aa 12       		.uleb128 0x12
 11387 04ab B5040000 		.4byte	0x4b5
 11388 04af 13       		.uleb128 0x13
 11389 04b0 B5040000 		.4byte	0x4b5
 11390 04b4 00       		.byte	0
 11391 04b5 07       		.uleb128 0x7
 11392 04b6 04       		.byte	0x4
 11393 04b7 BB040000 		.4byte	0x4bb
 11394 04bb 16       		.uleb128 0x16
 11395 04bc E1000000 		.4byte	0xe1
 11396 04c0 07       		.uleb128 0x7
 11397 04c1 04       		.byte	0x4
 11398 04c2 AA040000 		.4byte	0x4aa
 11399 04c6 12       		.uleb128 0x12
 11400 04c7 D6040000 		.4byte	0x4d6
 11401 04cb 13       		.uleb128 0x13
 11402 04cc D6040000 		.4byte	0x4d6
 11403 04d0 13       		.uleb128 0x13
 11404 04d1 97000000 		.4byte	0x97
 11405 04d5 00       		.byte	0
 11406 04d6 07       		.uleb128 0x7
 11407 04d7 04       		.byte	0x4
 11408 04d8 DC040000 		.4byte	0x4dc
 11409 04dc 16       		.uleb128 0x16
 11410 04dd 97000000 		.4byte	0x97
 11411 04e1 07       		.uleb128 0x7
 11412 04e2 04       		.byte	0x4
 11413 04e3 C6040000 		.4byte	0x4c6
 11414 04e7 03       		.uleb128 0x3
 11415 04e8 A7030000 		.4byte	.LASF117
 11416 04ec 08       		.byte	0x8
 11417 04ed 48       		.byte	0x48
 11418 04ee 92030000 		.4byte	0x392
 11419 04f2 0C       		.uleb128 0xc
 11420 04f3 B2060000 		.4byte	.LASF118
 11421 04f7 01       		.byte	0x1
 11422 04f8 08       		.byte	0x8
 11423 04f9 51       		.byte	0x51
 11424 04fa 14050000 		.4byte	0x514
 11425 04fe 0D       		.uleb128 0xd
 11426 04ff C00C0000 		.4byte	.LASF119
 11427 0503 C001     		.sleb128 192
 11428 0505 0D       		.uleb128 0xd
 11429 0506 EA220000 		.4byte	.LASF120
 11430 050a C101     		.sleb128 193
 11431 050c 0D       		.uleb128 0xd
 11432 050d E80B0000 		.4byte	.LASF121
 11433 0511 C201     		.sleb128 194
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 251


 11434 0513 00       		.byte	0
 11435 0514 0E       		.uleb128 0xe
 11436 0515 811D0000 		.4byte	.LASF122
 11437 0519 0C01     		.2byte	0x10c
 11438 051b 08       		.byte	0x8
 11439 051c 59       		.byte	0x59
 11440 051d 60050000 		.4byte	0x560
 11441 0521 0F       		.uleb128 0xf
 11442 0522 EA260000 		.4byte	.LASF41
 11443 0526 08       		.byte	0x8
 11444 0527 5B       		.byte	0x5b
 11445 0528 F4000000 		.4byte	0xf4
 11446 052c 00       		.byte	0
 11447 052d 0F       		.uleb128 0xf
 11448 052e FB000000 		.4byte	.LASF123
 11449 0532 08       		.byte	0x8
 11450 0533 5C       		.byte	0x5c
 11451 0534 F9000000 		.4byte	0xf9
 11452 0538 02       		.byte	0x2
 11453 0539 0F       		.uleb128 0xf
 11454 053a 75040000 		.4byte	.LASF124
 11455 053e 08       		.byte	0x8
 11456 053f 5D       		.byte	0x5d
 11457 0540 60050000 		.4byte	0x560
 11458 0544 04       		.byte	0x4
 11459 0545 10       		.uleb128 0x10
 11460 0546 84280000 		.4byte	.LASF125
 11461 054a 08       		.byte	0x8
 11462 054b 5E       		.byte	0x5e
 11463 054c 80050000 		.4byte	0x580
 11464 0550 0401     		.2byte	0x104
 11465 0552 10       		.uleb128 0x10
 11466 0553 962A0000 		.4byte	.LASF126
 11467 0557 08       		.byte	0x8
 11468 0558 60       		.byte	0x60
 11469 0559 86050000 		.4byte	0x586
 11470 055d 0801     		.2byte	0x108
 11471 055f 00       		.byte	0
 11472 0560 0A       		.uleb128 0xa
 11473 0561 E1000000 		.4byte	0xe1
 11474 0565 70050000 		.4byte	0x570
 11475 0569 0B       		.uleb128 0xb
 11476 056a 0A010000 		.4byte	0x10a
 11477 056e FF       		.byte	0xff
 11478 056f 00       		.byte	0
 11479 0570 12       		.uleb128 0x12
 11480 0571 80050000 		.4byte	0x580
 11481 0575 13       		.uleb128 0x13
 11482 0576 97000000 		.4byte	0x97
 11483 057a 13       		.uleb128 0x13
 11484 057b 3B010000 		.4byte	0x13b
 11485 057f 00       		.byte	0
 11486 0580 07       		.uleb128 0x7
 11487 0581 04       		.byte	0x4
 11488 0582 70050000 		.4byte	0x570
 11489 0586 07       		.uleb128 0x7
 11490 0587 04       		.byte	0x4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 252


 11491 0588 E7040000 		.4byte	0x4e7
 11492 058c 03       		.uleb128 0x3
 11493 058d E71D0000 		.4byte	.LASF127
 11494 0591 08       		.byte	0x8
 11495 0592 61       		.byte	0x61
 11496 0593 97050000 		.4byte	0x597
 11497 0597 07       		.uleb128 0x7
 11498 0598 04       		.byte	0x4
 11499 0599 14050000 		.4byte	0x514
 11500 059d 0C       		.uleb128 0xc
 11501 059e 73240000 		.4byte	.LASF128
 11502 05a2 01       		.byte	0x1
 11503 05a3 08       		.byte	0x8
 11504 05a4 6D       		.byte	0x6d
 11505 05a5 D4050000 		.4byte	0x5d4
 11506 05a9 0D       		.uleb128 0xd
 11507 05aa 32020000 		.4byte	.LASF129
 11508 05ae A001     		.sleb128 160
 11509 05b0 0D       		.uleb128 0xd
 11510 05b1 5A0E0000 		.4byte	.LASF130
 11511 05b5 A101     		.sleb128 161
 11512 05b7 0D       		.uleb128 0xd
 11513 05b8 94150000 		.4byte	.LASF131
 11514 05bc A201     		.sleb128 162
 11515 05be 0D       		.uleb128 0xd
 11516 05bf 4A090000 		.4byte	.LASF132
 11517 05c3 A301     		.sleb128 163
 11518 05c5 0D       		.uleb128 0xd
 11519 05c6 58090000 		.4byte	.LASF133
 11520 05ca A401     		.sleb128 164
 11521 05cc 0D       		.uleb128 0xd
 11522 05cd D81A0000 		.4byte	.LASF134
 11523 05d1 A501     		.sleb128 165
 11524 05d3 00       		.byte	0
 11525 05d4 0C       		.uleb128 0xc
 11526 05d5 3F080000 		.4byte	.LASF135
 11527 05d9 01       		.byte	0x1
 11528 05da 09       		.byte	0x9
 11529 05db 21       		.byte	0x21
 11530 05dc 47070000 		.4byte	0x747
 11531 05e0 0D       		.uleb128 0xd
 11532 05e1 32110000 		.4byte	.LASF136
 11533 05e5 01       		.sleb128 1
 11534 05e6 0D       		.uleb128 0xd
 11535 05e7 42110000 		.4byte	.LASF137
 11536 05eb 02       		.sleb128 2
 11537 05ec 0D       		.uleb128 0xd
 11538 05ed 52110000 		.4byte	.LASF138
 11539 05f1 03       		.sleb128 3
 11540 05f2 0D       		.uleb128 0xd
 11541 05f3 D01E0000 		.4byte	.LASF139
 11542 05f7 04       		.sleb128 4
 11543 05f8 0D       		.uleb128 0xd
 11544 05f9 63100000 		.4byte	.LASF140
 11545 05fd 05       		.sleb128 5
 11546 05fe 0D       		.uleb128 0xd
 11547 05ff 380C0000 		.4byte	.LASF141
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 253


 11548 0603 06       		.sleb128 6
 11549 0604 0D       		.uleb128 0xd
 11550 0605 25070000 		.4byte	.LASF142
 11551 0609 0F       		.sleb128 15
 11552 060a 0D       		.uleb128 0xd
 11553 060b 2A180000 		.4byte	.LASF143
 11554 060f FE00     		.sleb128 126
 11555 0611 0D       		.uleb128 0xd
 11556 0612 47180000 		.4byte	.LASF144
 11557 0616 8601     		.sleb128 134
 11558 0618 0D       		.uleb128 0xd
 11559 0619 44010000 		.4byte	.LASF145
 11560 061d 07       		.sleb128 7
 11561 061e 0D       		.uleb128 0xd
 11562 061f 8E210000 		.4byte	.LASF146
 11563 0623 08       		.sleb128 8
 11564 0624 0D       		.uleb128 0xd
 11565 0625 9B0F0000 		.4byte	.LASF147
 11566 0629 09       		.sleb128 9
 11567 062a 0D       		.uleb128 0xd
 11568 062b 1D1A0000 		.4byte	.LASF148
 11569 062f 0A       		.sleb128 10
 11570 0630 0D       		.uleb128 0xd
 11571 0631 D9160000 		.4byte	.LASF149
 11572 0635 0B       		.sleb128 11
 11573 0636 0D       		.uleb128 0xd
 11574 0637 6C160000 		.4byte	.LASF150
 11575 063b 25       		.sleb128 37
 11576 063c 0D       		.uleb128 0xd
 11577 063d B3170000 		.4byte	.LASF151
 11578 0641 26       		.sleb128 38
 11579 0642 0D       		.uleb128 0xd
 11580 0643 78180000 		.4byte	.LASF152
 11581 0647 27       		.sleb128 39
 11582 0648 0D       		.uleb128 0xd
 11583 0649 381E0000 		.4byte	.LASF153
 11584 064d 2F       		.sleb128 47
 11585 064e 0D       		.uleb128 0xd
 11586 064f 160B0000 		.4byte	.LASF154
 11587 0653 2C       		.sleb128 44
 11588 0654 0D       		.uleb128 0xd
 11589 0655 F7160000 		.4byte	.LASF155
 11590 0659 0C       		.sleb128 12
 11591 065a 0D       		.uleb128 0xd
 11592 065b 030B0000 		.4byte	.LASF156
 11593 065f 8501     		.sleb128 133
 11594 0661 0D       		.uleb128 0xd
 11595 0662 DA190000 		.4byte	.LASF157
 11596 0666 1C       		.sleb128 28
 11597 0667 0D       		.uleb128 0xd
 11598 0668 771E0000 		.4byte	.LASF158
 11599 066c 12       		.sleb128 18
 11600 066d 0D       		.uleb128 0xd
 11601 066e A3150000 		.4byte	.LASF159
 11602 0672 13       		.sleb128 19
 11603 0673 0D       		.uleb128 0xd
 11604 0674 34250000 		.4byte	.LASF160
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 254


 11605 0678 24       		.sleb128 36
 11606 0679 0D       		.uleb128 0xd
 11607 067a 50220000 		.4byte	.LASF161
 11608 067e 0D       		.sleb128 13
 11609 067f 0D       		.uleb128 0xd
 11610 0680 94090000 		.4byte	.LASF162
 11611 0684 0E       		.sleb128 14
 11612 0685 0D       		.uleb128 0xd
 11613 0686 AC1D0000 		.4byte	.LASF163
 11614 068a 8301     		.sleb128 131
 11615 068c 0D       		.uleb128 0xd
 11616 068d 5D040000 		.4byte	.LASF164
 11617 0691 DA00     		.sleb128 90
 11618 0693 0D       		.uleb128 0xd
 11619 0694 E7020000 		.4byte	.LASF165
 11620 0698 31       		.sleb128 49
 11621 0699 0D       		.uleb128 0xd
 11622 069a 5B140000 		.4byte	.LASF166
 11623 069e 35       		.sleb128 53
 11624 069f 0D       		.uleb128 0xd
 11625 06a0 CC0B0000 		.4byte	.LASF167
 11626 06a4 2E       		.sleb128 46
 11627 06a5 0D       		.uleb128 0xd
 11628 06a6 901D0000 		.4byte	.LASF168
 11629 06aa 8C01     		.sleb128 140
 11630 06ac 0D       		.uleb128 0xd
 11631 06ad 810C0000 		.4byte	.LASF169
 11632 06b1 9601     		.sleb128 150
 11633 06b3 0D       		.uleb128 0xd
 11634 06b4 3D0A0000 		.4byte	.LASF170
 11635 06b8 39       		.sleb128 57
 11636 06b9 0D       		.uleb128 0xd
 11637 06ba BB160000 		.4byte	.LASF171
 11638 06be 9701     		.sleb128 151
 11639 06c0 0D       		.uleb128 0xd
 11640 06c1 1B2B0000 		.4byte	.LASF172
 11641 06c5 9801     		.sleb128 152
 11642 06c7 0D       		.uleb128 0xd
 11643 06c8 861C0000 		.4byte	.LASF173
 11644 06cc 3E       		.sleb128 62
 11645 06cd 0D       		.uleb128 0xd
 11646 06ce C3210000 		.4byte	.LASF174
 11647 06d2 3F       		.sleb128 63
 11648 06d3 0D       		.uleb128 0xd
 11649 06d4 950A0000 		.4byte	.LASF175
 11650 06d8 C000     		.sleb128 64
 11651 06da 0D       		.uleb128 0xd
 11652 06db 87260000 		.4byte	.LASF176
 11653 06df 8D01     		.sleb128 141
 11654 06e1 0D       		.uleb128 0xd
 11655 06e2 15040000 		.4byte	.LASF177
 11656 06e6 23       		.sleb128 35
 11657 06e7 0D       		.uleb128 0xd
 11658 06e8 AC0B0000 		.4byte	.LASF178
 11659 06ec 2A       		.sleb128 42
 11660 06ed 0D       		.uleb128 0xd
 11661 06ee 79220000 		.4byte	.LASF179
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 255


 11662 06f2 2B       		.sleb128 43
 11663 06f3 0D       		.uleb128 0xd
 11664 06f4 950B0000 		.4byte	.LASF180
 11665 06f8 3C       		.sleb128 60
 11666 06f9 0D       		.uleb128 0xd
 11667 06fa B6110000 		.4byte	.LASF181
 11668 06fe C100     		.sleb128 65
 11669 0700 0D       		.uleb128 0xd
 11670 0701 E90D0000 		.4byte	.LASF182
 11671 0705 EB00     		.sleb128 107
 11672 0707 0D       		.uleb128 0xd
 11673 0708 36160000 		.4byte	.LASF183
 11674 070c E700     		.sleb128 103
 11675 070e 0D       		.uleb128 0xd
 11676 070f 48070000 		.4byte	.LASF184
 11677 0713 E400     		.sleb128 100
 11678 0715 0D       		.uleb128 0xd
 11679 0716 47230000 		.4byte	.LASF185
 11680 071a E500     		.sleb128 101
 11681 071c 0D       		.uleb128 0xd
 11682 071d FD130000 		.4byte	.LASF186
 11683 0721 9901     		.sleb128 153
 11684 0723 0D       		.uleb128 0xd
 11685 0724 0C140000 		.4byte	.LASF187
 11686 0728 9A01     		.sleb128 154
 11687 072a 0D       		.uleb128 0xd
 11688 072b 1B140000 		.4byte	.LASF188
 11689 072f 9B01     		.sleb128 155
 11690 0731 0D       		.uleb128 0xd
 11691 0732 2A140000 		.4byte	.LASF189
 11692 0736 9C01     		.sleb128 156
 11693 0738 0D       		.uleb128 0xd
 11694 0739 6B1C0000 		.4byte	.LASF190
 11695 073d FA01     		.sleb128 250
 11696 073f 0D       		.uleb128 0xd
 11697 0740 74230000 		.4byte	.LASF191
 11698 0744 FF01     		.sleb128 255
 11699 0746 00       		.byte	0
 11700 0747 17       		.uleb128 0x17
 11701 0748 01       		.byte	0x1
 11702 0749 09       		.byte	0x9
 11703 074a 82       		.byte	0x82
 11704 074b 5C070000 		.4byte	0x75c
 11705 074f 0D       		.uleb128 0xd
 11706 0750 46000000 		.4byte	.LASF192
 11707 0754 00       		.sleb128 0
 11708 0755 0D       		.uleb128 0xd
 11709 0756 4F000000 		.4byte	.LASF193
 11710 075a 01       		.sleb128 1
 11711 075b 00       		.byte	0
 11712 075c 07       		.uleb128 0x7
 11713 075d 04       		.byte	0x4
 11714 075e 62070000 		.4byte	0x762
 11715 0762 18       		.uleb128 0x18
 11716 0763 49020000 		.4byte	0x249
 11717 0767 71070000 		.4byte	0x771
 11718 076b 13       		.uleb128 0x13
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 256


 11719 076c 11010000 		.4byte	0x111
 11720 0770 00       		.byte	0
 11721 0771 03       		.uleb128 0x3
 11722 0772 AD0E0000 		.4byte	.LASF194
 11723 0776 0A       		.byte	0xa
 11724 0777 22       		.byte	0x22
 11725 0778 13010000 		.4byte	0x113
 11726 077c 03       		.uleb128 0x3
 11727 077d 35270000 		.4byte	.LASF195
 11728 0781 0A       		.byte	0xa
 11729 0782 23       		.byte	0x23
 11730 0783 41010000 		.4byte	0x141
 11731 0787 0C       		.uleb128 0xc
 11732 0788 EB1C0000 		.4byte	.LASF196
 11733 078c 01       		.byte	0x1
 11734 078d 0A       		.byte	0xa
 11735 078e 65       		.byte	0x65
 11736 078f A0070000 		.4byte	0x7a0
 11737 0793 0D       		.uleb128 0xd
 11738 0794 E6140000 		.4byte	.LASF197
 11739 0798 00       		.sleb128 0
 11740 0799 0D       		.uleb128 0xd
 11741 079a 8D200000 		.4byte	.LASF198
 11742 079e 01       		.sleb128 1
 11743 079f 00       		.byte	0
 11744 07a0 0C       		.uleb128 0xc
 11745 07a1 F6030000 		.4byte	.LASF199
 11746 07a5 01       		.byte	0x1
 11747 07a6 0A       		.byte	0xa
 11748 07a7 7D       		.byte	0x7d
 11749 07a8 E8070000 		.4byte	0x7e8
 11750 07ac 0D       		.uleb128 0xd
 11751 07ad 201D0000 		.4byte	.LASF200
 11752 07b1 00       		.sleb128 0
 11753 07b2 0D       		.uleb128 0xd
 11754 07b3 1D010000 		.4byte	.LASF201
 11755 07b7 10       		.sleb128 16
 11756 07b8 0D       		.uleb128 0xd
 11757 07b9 8B270000 		.4byte	.LASF202
 11758 07bd 20       		.sleb128 32
 11759 07be 0D       		.uleb128 0xd
 11760 07bf 2E230000 		.4byte	.LASF203
 11761 07c3 30       		.sleb128 48
 11762 07c4 0D       		.uleb128 0xd
 11763 07c5 12260000 		.4byte	.LASF204
 11764 07c9 C000     		.sleb128 64
 11765 07cb 0D       		.uleb128 0xd
 11766 07cc 780F0000 		.4byte	.LASF205
 11767 07d0 D000     		.sleb128 80
 11768 07d2 0D       		.uleb128 0xd
 11769 07d3 73060000 		.4byte	.LASF206
 11770 07d7 E000     		.sleb128 96
 11771 07d9 0D       		.uleb128 0xd
 11772 07da 42030000 		.4byte	.LASF207
 11773 07de F000     		.sleb128 112
 11774 07e0 0D       		.uleb128 0xd
 11775 07e1 64180000 		.4byte	.LASF208
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 257


 11776 07e5 FC01     		.sleb128 252
 11777 07e7 00       		.byte	0
 11778 07e8 0C       		.uleb128 0xc
 11779 07e9 70200000 		.4byte	.LASF209
 11780 07ed 01       		.byte	0x1
 11781 07ee 0A       		.byte	0xa
 11782 07ef 8C       		.byte	0x8c
 11783 07f0 42080000 		.4byte	0x842
 11784 07f4 19       		.uleb128 0x19
 11785 07f5 534F4D00 		.ascii	"SOM\000"
 11786 07f9 FF01     		.sleb128 255
 11787 07fb 19       		.uleb128 0x19
 11788 07fc 56505400 		.ascii	"VPT\000"
 11789 0800 F101     		.sleb128 241
 11790 0802 19       		.uleb128 0x19
 11791 0803 4D505400 		.ascii	"MPT\000"
 11792 0807 F201     		.sleb128 242
 11793 0809 19       		.uleb128 0x19
 11794 080a 48446E00 		.ascii	"HDn\000"
 11795 080e F601     		.sleb128 246
 11796 0810 0D       		.uleb128 0xd
 11797 0811 47260000 		.4byte	.LASF210
 11798 0815 F701     		.sleb128 247
 11799 0817 0D       		.uleb128 0xd
 11800 0818 300E0000 		.4byte	.LASF211
 11801 081c F801     		.sleb128 248
 11802 081e 19       		.uleb128 0x19
 11803 081f 56446E00 		.ascii	"VDn\000"
 11804 0823 F901     		.sleb128 249
 11805 0825 19       		.uleb128 0x19
 11806 0826 4D446E00 		.ascii	"MDn\000"
 11807 082a FA01     		.sleb128 250
 11808 082c 0D       		.uleb128 0xd
 11809 082d 170C0000 		.4byte	.LASF212
 11810 0831 FB01     		.sleb128 251
 11811 0833 19       		.uleb128 0x19
 11812 0834 53466E00 		.ascii	"SFn\000"
 11813 0838 FE01     		.sleb128 254
 11814 083a 19       		.uleb128 0x19
 11815 083b 454F4D00 		.ascii	"EOM\000"
 11816 083f F001     		.sleb128 240
 11817 0841 00       		.byte	0
 11818 0842 0C       		.uleb128 0xc
 11819 0843 E7280000 		.4byte	.LASF213
 11820 0847 01       		.byte	0x1
 11821 0848 0A       		.byte	0xa
 11822 0849 9B       		.byte	0x9b
 11823 084a 8C080000 		.4byte	0x88c
 11824 084e 0D       		.uleb128 0xd
 11825 084f 711D0000 		.4byte	.LASF214
 11826 0853 00       		.sleb128 0
 11827 0854 0D       		.uleb128 0xd
 11828 0855 C5250000 		.4byte	.LASF215
 11829 0859 06       		.sleb128 6
 11830 085a 0D       		.uleb128 0xd
 11831 085b BA1B0000 		.4byte	.LASF216
 11832 085f 07       		.sleb128 7
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 258


 11833 0860 0D       		.uleb128 0xd
 11834 0861 75020000 		.4byte	.LASF217
 11835 0865 08       		.sleb128 8
 11836 0866 0D       		.uleb128 0xd
 11837 0867 910F0000 		.4byte	.LASF218
 11838 086b 09       		.sleb128 9
 11839 086c 0D       		.uleb128 0xd
 11840 086d 7F1F0000 		.4byte	.LASF219
 11841 0871 0A       		.sleb128 10
 11842 0872 0D       		.uleb128 0xd
 11843 0873 C01D0000 		.4byte	.LASF220
 11844 0877 0B       		.sleb128 11
 11845 0878 0D       		.uleb128 0xd
 11846 0879 B8290000 		.4byte	.LASF221
 11847 087d 0C       		.sleb128 12
 11848 087e 0D       		.uleb128 0xd
 11849 087f A2210000 		.4byte	.LASF222
 11850 0883 0D       		.sleb128 13
 11851 0884 0D       		.uleb128 0xd
 11852 0885 35030000 		.4byte	.LASF223
 11853 0889 FF01     		.sleb128 255
 11854 088b 00       		.byte	0
 11855 088c 0C       		.uleb128 0xc
 11856 088d FA0F0000 		.4byte	.LASF224
 11857 0891 01       		.byte	0x1
 11858 0892 0A       		.byte	0xa
 11859 0893 F0       		.byte	0xf0
 11860 0894 00090000 		.4byte	0x900
 11861 0898 0D       		.uleb128 0xd
 11862 0899 D5220000 		.4byte	.LASF225
 11863 089d 0F       		.sleb128 15
 11864 089e 0D       		.uleb128 0xd
 11865 089f 331D0000 		.4byte	.LASF226
 11866 08a3 10       		.sleb128 16
 11867 08a4 0D       		.uleb128 0xd
 11868 08a5 0E270000 		.4byte	.LASF227
 11869 08a9 C300     		.sleb128 67
 11870 08ab 0D       		.uleb128 0xd
 11871 08ac D4050000 		.4byte	.LASF228
 11872 08b0 C400     		.sleb128 68
 11873 08b2 0D       		.uleb128 0xd
 11874 08b3 071F0000 		.4byte	.LASF229
 11875 08b7 C500     		.sleb128 69
 11876 08b9 0D       		.uleb128 0xd
 11877 08ba 1F220000 		.4byte	.LASF230
 11878 08be C600     		.sleb128 70
 11879 08c0 0D       		.uleb128 0xd
 11880 08c1 F1070000 		.4byte	.LASF231
 11881 08c5 C700     		.sleb128 71
 11882 08c7 0D       		.uleb128 0xd
 11883 08c8 B6130000 		.4byte	.LASF232
 11884 08cc C800     		.sleb128 72
 11885 08ce 0D       		.uleb128 0xd
 11886 08cf 3E270000 		.4byte	.LASF233
 11887 08d3 C900     		.sleb128 73
 11888 08d5 0D       		.uleb128 0xd
 11889 08d6 24060000 		.4byte	.LASF234
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 259


 11890 08da CA00     		.sleb128 74
 11891 08dc 0D       		.uleb128 0xd
 11892 08dd 66090000 		.4byte	.LASF235
 11893 08e1 CB00     		.sleb128 75
 11894 08e3 0D       		.uleb128 0xd
 11895 08e4 C41E0000 		.4byte	.LASF236
 11896 08e8 CC00     		.sleb128 76
 11897 08ea 0D       		.uleb128 0xd
 11898 08eb 6E260000 		.4byte	.LASF237
 11899 08ef CD00     		.sleb128 77
 11900 08f1 0D       		.uleb128 0xd
 11901 08f2 88100000 		.4byte	.LASF238
 11902 08f6 CE00     		.sleb128 78
 11903 08f8 0D       		.uleb128 0xd
 11904 08f9 E9130000 		.4byte	.LASF239
 11905 08fd CF00     		.sleb128 79
 11906 08ff 00       		.byte	0
 11907 0900 1A       		.uleb128 0x1a
 11908 0901 DD0E0000 		.4byte	.LASF240
 11909 0905 01       		.byte	0x1
 11910 0906 0A       		.byte	0xa
 11911 0907 0301     		.2byte	0x103
 11912 0909 20090000 		.4byte	0x920
 11913 090d 0D       		.uleb128 0xd
 11914 090e FC270000 		.4byte	.LASF241
 11915 0912 01       		.sleb128 1
 11916 0913 0D       		.uleb128 0xd
 11917 0914 F7090000 		.4byte	.LASF242
 11918 0918 02       		.sleb128 2
 11919 0919 0D       		.uleb128 0xd
 11920 091a 39140000 		.4byte	.LASF243
 11921 091e 03       		.sleb128 3
 11922 091f 00       		.byte	0
 11923 0920 1A       		.uleb128 0x1a
 11924 0921 E2030000 		.4byte	.LASF244
 11925 0925 01       		.byte	0x1
 11926 0926 0A       		.byte	0xa
 11927 0927 1001     		.2byte	0x110
 11928 0929 3A090000 		.4byte	0x93a
 11929 092d 0D       		.uleb128 0xd
 11930 092e F1180000 		.4byte	.LASF245
 11931 0932 01       		.sleb128 1
 11932 0933 0D       		.uleb128 0xd
 11933 0934 72210000 		.4byte	.LASF246
 11934 0938 02       		.sleb128 2
 11935 0939 00       		.byte	0
 11936 093a 1B       		.uleb128 0x1b
 11937 093b 0401     		.2byte	0x104
 11938 093d 0A       		.byte	0xa
 11939 093e 1D01     		.2byte	0x11d
 11940 0940 7A090000 		.4byte	0x97a
 11941 0944 1C       		.uleb128 0x1c
 11942 0945 E0020000 		.4byte	.LASF247
 11943 0949 0A       		.byte	0xa
 11944 094a 1F01     		.2byte	0x11f
 11945 094c 97000000 		.4byte	0x97
 11946 0950 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 260


 11947 0951 1C       		.uleb128 0x1c
 11948 0952 661D0000 		.4byte	.LASF248
 11949 0956 0A       		.byte	0xa
 11950 0957 2001     		.2byte	0x120
 11951 0959 97000000 		.4byte	0x97
 11952 095d 01       		.byte	0x1
 11953 095e 1C       		.uleb128 0x1c
 11954 095f 7D070000 		.4byte	.LASF46
 11955 0963 0A       		.byte	0xa
 11956 0964 2101     		.2byte	0x121
 11957 0966 7A090000 		.4byte	0x97a
 11958 096a 02       		.byte	0x2
 11959 096b 1D       		.uleb128 0x1d
 11960 096c E62A0000 		.4byte	.LASF47
 11961 0970 0A       		.byte	0xa
 11962 0971 2201     		.2byte	0x122
 11963 0973 A3000000 		.4byte	0xa3
 11964 0977 0201     		.2byte	0x102
 11965 0979 00       		.byte	0
 11966 097a 0A       		.uleb128 0xa
 11967 097b ED000000 		.4byte	0xed
 11968 097f 8A090000 		.4byte	0x98a
 11969 0983 0B       		.uleb128 0xb
 11970 0984 0A010000 		.4byte	0x10a
 11971 0988 FF       		.byte	0xff
 11972 0989 00       		.byte	0
 11973 098a 05       		.uleb128 0x5
 11974 098b 80290000 		.4byte	.LASF249
 11975 098f 0A       		.byte	0xa
 11976 0990 2401     		.2byte	0x124
 11977 0992 3A090000 		.4byte	0x93a
 11978 0996 05       		.uleb128 0x5
 11979 0997 96110000 		.4byte	.LASF250
 11980 099b 0A       		.byte	0xa
 11981 099c 2401     		.2byte	0x124
 11982 099e A2090000 		.4byte	0x9a2
 11983 09a2 07       		.uleb128 0x7
 11984 09a3 04       		.byte	0x4
 11985 09a4 3A090000 		.4byte	0x93a
 11986 09a8 1E       		.uleb128 0x1e
 11987 09a9 40       		.byte	0x40
 11988 09aa 0A       		.byte	0xa
 11989 09ab 2601     		.2byte	0x126
 11990 09ad 4E0A0000 		.4byte	0xa4e
 11991 09b1 1C       		.uleb128 0x1c
 11992 09b2 B1210000 		.4byte	.LASF251
 11993 09b6 0A       		.byte	0xa
 11994 09b7 2801     		.2byte	0x128
 11995 09b9 F4000000 		.4byte	0xf4
 11996 09bd 00       		.byte	0
 11997 09be 1C       		.uleb128 0x1c
 11998 09bf B7210000 		.4byte	.LASF252
 11999 09c3 0A       		.byte	0xa
 12000 09c4 2901     		.2byte	0x129
 12001 09c6 F4000000 		.4byte	0xf4
 12002 09ca 01       		.byte	0x1
 12003 09cb 1C       		.uleb128 0x1c
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 261


 12004 09cc BD210000 		.4byte	.LASF253
 12005 09d0 0A       		.byte	0xa
 12006 09d1 2B01     		.2byte	0x12b
 12007 09d3 F9000000 		.4byte	0xf9
 12008 09d7 02       		.byte	0x2
 12009 09d8 1C       		.uleb128 0x1c
 12010 09d9 CE1F0000 		.4byte	.LASF254
 12011 09dd 0A       		.byte	0xa
 12012 09de 2C01     		.2byte	0x12c
 12013 09e0 F9000000 		.4byte	0xf9
 12014 09e4 04       		.byte	0x4
 12015 09e5 1C       		.uleb128 0x1c
 12016 09e6 D41F0000 		.4byte	.LASF255
 12017 09ea 0A       		.byte	0xa
 12018 09eb 2E01     		.2byte	0x12e
 12019 09ed FE000000 		.4byte	0xfe
 12020 09f1 08       		.byte	0x8
 12021 09f2 1C       		.uleb128 0x1c
 12022 09f3 E5210000 		.4byte	.LASF256
 12023 09f7 0A       		.byte	0xa
 12024 09f8 2F01     		.2byte	0x12f
 12025 09fa FE000000 		.4byte	0xfe
 12026 09fe 0C       		.byte	0xc
 12027 09ff 1C       		.uleb128 0x1c
 12028 0a00 EB210000 		.4byte	.LASF257
 12029 0a04 0A       		.byte	0xa
 12030 0a05 3401     		.2byte	0x134
 12031 0a07 4E0A0000 		.4byte	0xa4e
 12032 0a0b 10       		.byte	0x10
 12033 0a0c 1C       		.uleb128 0x1c
 12034 0a0d F1210000 		.4byte	.LASF258
 12035 0a11 0A       		.byte	0xa
 12036 0a12 3501     		.2byte	0x135
 12037 0a14 4E0A0000 		.4byte	0xa4e
 12038 0a18 18       		.byte	0x18
 12039 0a19 1C       		.uleb128 0x1c
 12040 0a1a F7210000 		.4byte	.LASF259
 12041 0a1e 0A       		.byte	0xa
 12042 0a1f 3601     		.2byte	0x136
 12043 0a21 4E0A0000 		.4byte	0xa4e
 12044 0a25 20       		.byte	0x20
 12045 0a26 1C       		.uleb128 0x1c
 12046 0a27 FD210000 		.4byte	.LASF260
 12047 0a2b 0A       		.byte	0xa
 12048 0a2c 3701     		.2byte	0x137
 12049 0a2e 4E0A0000 		.4byte	0xa4e
 12050 0a32 28       		.byte	0x28
 12051 0a33 1C       		.uleb128 0x1c
 12052 0a34 34220000 		.4byte	.LASF261
 12053 0a38 0A       		.byte	0xa
 12054 0a39 3901     		.2byte	0x139
 12055 0a3b 530A0000 		.4byte	0xa53
 12056 0a3f 30       		.byte	0x30
 12057 0a40 1C       		.uleb128 0x1c
 12058 0a41 3A220000 		.4byte	.LASF262
 12059 0a45 0A       		.byte	0xa
 12060 0a46 3A01     		.2byte	0x13a
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 262


 12061 0a48 530A0000 		.4byte	0xa53
 12062 0a4c 38       		.byte	0x38
 12063 0a4d 00       		.byte	0
 12064 0a4e 06       		.uleb128 0x6
 12065 0a4f D5000000 		.4byte	0xd5
 12066 0a53 06       		.uleb128 0x6
 12067 0a54 CE000000 		.4byte	0xce
 12068 0a58 05       		.uleb128 0x5
 12069 0a59 56190000 		.4byte	.LASF263
 12070 0a5d 0A       		.byte	0xa
 12071 0a5e 3C01     		.2byte	0x13c
 12072 0a60 A8090000 		.4byte	0x9a8
 12073 0a64 1E       		.uleb128 0x1e
 12074 0a65 18       		.byte	0x18
 12075 0a66 0A       		.byte	0xa
 12076 0a67 4401     		.2byte	0x144
 12077 0a69 C90A0000 		.4byte	0xac9
 12078 0a6d 1C       		.uleb128 0x1c
 12079 0a6e FF1C0000 		.4byte	.LASF264
 12080 0a72 0A       		.byte	0xa
 12081 0a73 4701     		.2byte	0x147
 12082 0a75 44020000 		.4byte	0x244
 12083 0a79 00       		.byte	0
 12084 0a7a 1C       		.uleb128 0x1c
 12085 0a7b 81050000 		.4byte	.LASF265
 12086 0a7f 0A       		.byte	0xa
 12087 0a80 4801     		.2byte	0x148
 12088 0a82 F4000000 		.4byte	0xf4
 12089 0a86 01       		.byte	0x1
 12090 0a87 1C       		.uleb128 0x1c
 12091 0a88 AF260000 		.4byte	.LASF266
 12092 0a8c 0A       		.byte	0xa
 12093 0a8d 4901     		.2byte	0x149
 12094 0a8f F4000000 		.4byte	0xf4
 12095 0a93 02       		.byte	0x2
 12096 0a94 1C       		.uleb128 0x1c
 12097 0a95 86190000 		.4byte	.LASF267
 12098 0a99 0A       		.byte	0xa
 12099 0a9a 4A01     		.2byte	0x14a
 12100 0a9c F9000000 		.4byte	0xf9
 12101 0aa0 04       		.byte	0x4
 12102 0aa1 1C       		.uleb128 0x1c
 12103 0aa2 1A200000 		.4byte	.LASF268
 12104 0aa6 0A       		.byte	0xa
 12105 0aa7 4B01     		.2byte	0x14b
 12106 0aa9 FE000000 		.4byte	0xfe
 12107 0aad 08       		.byte	0x8
 12108 0aae 1C       		.uleb128 0x1c
 12109 0aaf 500D0000 		.4byte	.LASF269
 12110 0ab3 0A       		.byte	0xa
 12111 0ab4 4C01     		.2byte	0x14c
 12112 0ab6 FE000000 		.4byte	0xfe
 12113 0aba 0C       		.byte	0xc
 12114 0abb 1C       		.uleb128 0x1c
 12115 0abc 790C0000 		.4byte	.LASF270
 12116 0ac0 0A       		.byte	0xa
 12117 0ac1 4D01     		.2byte	0x14d
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 263


 12118 0ac3 C90A0000 		.4byte	0xac9
 12119 0ac7 10       		.byte	0x10
 12120 0ac8 00       		.byte	0
 12121 0ac9 0A       		.uleb128 0xa
 12122 0aca E1000000 		.4byte	0xe1
 12123 0ace D90A0000 		.4byte	0xad9
 12124 0ad2 0B       		.uleb128 0xb
 12125 0ad3 0A010000 		.4byte	0x10a
 12126 0ad7 07       		.byte	0x7
 12127 0ad8 00       		.byte	0
 12128 0ad9 05       		.uleb128 0x5
 12129 0ada 68120000 		.4byte	.LASF271
 12130 0ade 0A       		.byte	0xa
 12131 0adf 4F01     		.2byte	0x14f
 12132 0ae1 640A0000 		.4byte	0xa64
 12133 0ae5 1F       		.uleb128 0x1f
 12134 0ae6 F6150000 		.4byte	.LASF272
 12135 0aea C80B     		.2byte	0xbc8
 12136 0aec 0A       		.byte	0xa
 12137 0aed 5201     		.2byte	0x152
 12138 0aef CA0C0000 		.4byte	0xcca
 12139 0af3 1C       		.uleb128 0x1c
 12140 0af4 08110000 		.4byte	.LASF273
 12141 0af8 0A       		.byte	0xa
 12142 0af9 5401     		.2byte	0x154
 12143 0afb 97000000 		.4byte	0x97
 12144 0aff 00       		.byte	0
 12145 0b00 1C       		.uleb128 0x1c
 12146 0b01 90220000 		.4byte	.LASF274
 12147 0b05 0A       		.byte	0xa
 12148 0b06 5501     		.2byte	0x155
 12149 0b08 97000000 		.4byte	0x97
 12150 0b0c 01       		.byte	0x1
 12151 0b0d 1C       		.uleb128 0x1c
 12152 0b0e 34080000 		.4byte	.LASF275
 12153 0b12 0A       		.byte	0xa
 12154 0b13 5701     		.2byte	0x157
 12155 0b15 F4000000 		.4byte	0xf4
 12156 0b19 02       		.byte	0x2
 12157 0b1a 1C       		.uleb128 0x1c
 12158 0b1b 52200000 		.4byte	.LASF276
 12159 0b1f 0A       		.byte	0xa
 12160 0b20 5801     		.2byte	0x158
 12161 0b22 F4000000 		.4byte	0xf4
 12162 0b26 03       		.byte	0x3
 12163 0b27 1C       		.uleb128 0x1c
 12164 0b28 071E0000 		.4byte	.LASF277
 12165 0b2c 0A       		.byte	0xa
 12166 0b2d 5901     		.2byte	0x159
 12167 0b2f F4000000 		.4byte	0xf4
 12168 0b33 04       		.byte	0x4
 12169 0b34 1C       		.uleb128 0x1c
 12170 0b35 7E210000 		.4byte	.LASF278
 12171 0b39 0A       		.byte	0xa
 12172 0b3a 5A01     		.2byte	0x15a
 12173 0b3c 44020000 		.4byte	0x244
 12174 0b40 05       		.byte	0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 264


 12175 0b41 1C       		.uleb128 0x1c
 12176 0b42 FF1C0000 		.4byte	.LASF264
 12177 0b46 0A       		.byte	0xa
 12178 0b47 5D01     		.2byte	0x15d
 12179 0b49 44020000 		.4byte	0x244
 12180 0b4d 06       		.byte	0x6
 12181 0b4e 1C       		.uleb128 0x1c
 12182 0b4f 03150000 		.4byte	.LASF279
 12183 0b53 0A       		.byte	0xa
 12184 0b54 5E01     		.2byte	0x15e
 12185 0b56 44020000 		.4byte	0x244
 12186 0b5a 07       		.byte	0x7
 12187 0b5b 1C       		.uleb128 0x1c
 12188 0b5c AA200000 		.4byte	.LASF280
 12189 0b60 0A       		.byte	0xa
 12190 0b61 5F01     		.2byte	0x15f
 12191 0b63 44020000 		.4byte	0x244
 12192 0b67 08       		.byte	0x8
 12193 0b68 1C       		.uleb128 0x1c
 12194 0b69 BE220000 		.4byte	.LASF281
 12195 0b6d 0A       		.byte	0xa
 12196 0b6e 6001     		.2byte	0x160
 12197 0b70 44020000 		.4byte	0x244
 12198 0b74 09       		.byte	0x9
 12199 0b75 1C       		.uleb128 0x1c
 12200 0b76 23080000 		.4byte	.LASF282
 12201 0b7a 0A       		.byte	0xa
 12202 0b7b 6101     		.2byte	0x161
 12203 0b7d F4000000 		.4byte	0xf4
 12204 0b81 0A       		.byte	0xa
 12205 0b82 1C       		.uleb128 0x1c
 12206 0b83 C60E0000 		.4byte	.LASF283
 12207 0b87 0A       		.byte	0xa
 12208 0b88 6201     		.2byte	0x162
 12209 0b8a 44020000 		.4byte	0x244
 12210 0b8e 0B       		.byte	0xb
 12211 0b8f 1C       		.uleb128 0x1c
 12212 0b90 22000000 		.4byte	.LASF284
 12213 0b94 0A       		.byte	0xa
 12214 0b95 6301     		.2byte	0x163
 12215 0b97 F4000000 		.4byte	0xf4
 12216 0b9b 0C       		.byte	0xc
 12217 0b9c 1C       		.uleb128 0x1c
 12218 0b9d F5270000 		.4byte	.LASF285
 12219 0ba1 0A       		.byte	0xa
 12220 0ba2 6501     		.2byte	0x165
 12221 0ba4 44020000 		.4byte	0x244
 12222 0ba8 0D       		.byte	0xd
 12223 0ba9 1C       		.uleb128 0x1c
 12224 0baa 92180000 		.4byte	.LASF286
 12225 0bae 0A       		.byte	0xa
 12226 0baf 6701     		.2byte	0x167
 12227 0bb1 FE000000 		.4byte	0xfe
 12228 0bb5 10       		.byte	0x10
 12229 0bb6 1C       		.uleb128 0x1c
 12230 0bb7 F6120000 		.4byte	.LASF287
 12231 0bbb 0A       		.byte	0xa
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 265


 12232 0bbc 6801     		.2byte	0x168
 12233 0bbe FE000000 		.4byte	0xfe
 12234 0bc2 14       		.byte	0x14
 12235 0bc3 1C       		.uleb128 0x1c
 12236 0bc4 191C0000 		.4byte	.LASF288
 12237 0bc8 0A       		.byte	0xa
 12238 0bc9 6B01     		.2byte	0x16b
 12239 0bcb F4000000 		.4byte	0xf4
 12240 0bcf 18       		.byte	0x18
 12241 0bd0 1C       		.uleb128 0x1c
 12242 0bd1 661D0000 		.4byte	.LASF248
 12243 0bd5 0A       		.byte	0xa
 12244 0bd6 6C01     		.2byte	0x16c
 12245 0bd8 F4000000 		.4byte	0xf4
 12246 0bdc 19       		.byte	0x19
 12247 0bdd 1C       		.uleb128 0x1c
 12248 0bde 221F0000 		.4byte	.LASF289
 12249 0be2 0A       		.byte	0xa
 12250 0be3 6E01     		.2byte	0x16e
 12251 0be5 11010000 		.4byte	0x111
 12252 0be9 1C       		.byte	0x1c
 12253 0bea 1C       		.uleb128 0x1c
 12254 0beb 27120000 		.4byte	.LASF290
 12255 0bef 0A       		.byte	0xa
 12256 0bf0 6F01     		.2byte	0x16f
 12257 0bf2 50020000 		.4byte	0x250
 12258 0bf6 20       		.byte	0x20
 12259 0bf7 1D       		.uleb128 0x1d
 12260 0bf8 77110000 		.4byte	.LASF291
 12261 0bfc 0A       		.byte	0xa
 12262 0bfd 7101     		.2byte	0x171
 12263 0bff 50020000 		.4byte	0x250
 12264 0c03 A001     		.2byte	0x1a0
 12265 0c05 1D       		.uleb128 0x1d
 12266 0c06 59020000 		.4byte	.LASF292
 12267 0c0a 0A       		.byte	0xa
 12268 0c0b 7201     		.2byte	0x172
 12269 0c0d A3000000 		.4byte	0xa3
 12270 0c11 2003     		.2byte	0x320
 12271 0c13 1D       		.uleb128 0x1d
 12272 0c14 10050000 		.4byte	.LASF293
 12273 0c18 0A       		.byte	0xa
 12274 0c19 7601     		.2byte	0x176
 12275 0c1b CA0C0000 		.4byte	0xcca
 12276 0c1f 2203     		.2byte	0x322
 12277 0c21 1D       		.uleb128 0x1d
 12278 0c22 450F0000 		.4byte	.LASF294
 12279 0c26 0A       		.byte	0xa
 12280 0c27 7801     		.2byte	0x178
 12281 0c29 44020000 		.4byte	0x244
 12282 0c2d 420B     		.2byte	0xb42
 12283 0c2f 1D       		.uleb128 0x1d
 12284 0c30 61230000 		.4byte	.LASF295
 12285 0c34 0A       		.byte	0xa
 12286 0c35 7A01     		.2byte	0x17a
 12287 0c37 6C020000 		.4byte	0x26c
 12288 0c3b 440B     		.2byte	0xb44
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 266


 12289 0c3d 1D       		.uleb128 0x1d
 12290 0c3e 812A0000 		.4byte	.LASF296
 12291 0c42 0A       		.byte	0xa
 12292 0c43 7B01     		.2byte	0x17b
 12293 0c45 6C020000 		.4byte	0x26c
 12294 0c49 480B     		.2byte	0xb48
 12295 0c4b 1D       		.uleb128 0x1d
 12296 0c4c 71280000 		.4byte	.LASF297
 12297 0c50 0A       		.byte	0xa
 12298 0c51 7C01     		.2byte	0x17c
 12299 0c53 EE0C0000 		.4byte	0xcee
 12300 0c57 4C0B     		.2byte	0xb4c
 12301 0c59 1D       		.uleb128 0x1d
 12302 0c5a E8230000 		.4byte	.LASF298
 12303 0c5e 0A       		.byte	0xa
 12304 0c5f 7D01     		.2byte	0x17d
 12305 0c61 040D0000 		.4byte	0xd04
 12306 0c65 500B     		.2byte	0xb50
 12307 0c67 1D       		.uleb128 0x1d
 12308 0c68 5A060000 		.4byte	.LASF299
 12309 0c6c 0A       		.byte	0xa
 12310 0c6d 7E01     		.2byte	0x17e
 12311 0c6f 040D0000 		.4byte	0xd04
 12312 0c73 540B     		.2byte	0xb54
 12313 0c75 1D       		.uleb128 0x1d
 12314 0c76 81230000 		.4byte	.LASF300
 12315 0c7a 0A       		.byte	0xa
 12316 0c7b 7F01     		.2byte	0x17f
 12317 0c7d 190D0000 		.4byte	0xd19
 12318 0c81 580B     		.2byte	0xb58
 12319 0c83 1D       		.uleb128 0x1d
 12320 0c84 8E0D0000 		.4byte	.LASF301
 12321 0c88 0A       		.byte	0xa
 12322 0c89 8001     		.2byte	0x180
 12323 0c8b 190D0000 		.4byte	0xd19
 12324 0c8f 5C0B     		.2byte	0xb5c
 12325 0c91 1D       		.uleb128 0x1d
 12326 0c92 4C260000 		.4byte	.LASF302
 12327 0c96 0A       		.byte	0xa
 12328 0c97 8201     		.2byte	0x182
 12329 0c99 5C070000 		.4byte	0x75c
 12330 0c9d 600B     		.2byte	0xb60
 12331 0c9f 1D       		.uleb128 0x1d
 12332 0ca0 97290000 		.4byte	.LASF303
 12333 0ca4 0A       		.byte	0xa
 12334 0ca5 8401     		.2byte	0x184
 12335 0ca7 580A0000 		.4byte	0xa58
 12336 0cab 680B     		.2byte	0xb68
 12337 0cad 1D       		.uleb128 0x1d
 12338 0cae 5B260000 		.4byte	.LASF304
 12339 0cb2 0A       		.byte	0xa
 12340 0cb3 8501     		.2byte	0x185
 12341 0cb5 D90A0000 		.4byte	0xad9
 12342 0cb9 A80B     		.2byte	0xba8
 12343 0cbb 1D       		.uleb128 0x1d
 12344 0cbc 6F1E0000 		.4byte	.LASF305
 12345 0cc0 0A       		.byte	0xa
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 267


 12346 0cc1 8701     		.2byte	0x187
 12347 0cc3 6C020000 		.4byte	0x26c
 12348 0cc7 C00B     		.2byte	0xbc0
 12349 0cc9 00       		.byte	0
 12350 0cca 0A       		.uleb128 0xa
 12351 0ccb 8A090000 		.4byte	0x98a
 12352 0ccf DA0C0000 		.4byte	0xcda
 12353 0cd3 0B       		.uleb128 0xb
 12354 0cd4 0A010000 		.4byte	0x10a
 12355 0cd8 07       		.byte	0x7
 12356 0cd9 00       		.byte	0
 12357 0cda 18       		.uleb128 0x18
 12358 0cdb 49020000 		.4byte	0x249
 12359 0cdf EE0C0000 		.4byte	0xcee
 12360 0ce3 13       		.uleb128 0x13
 12361 0ce4 11010000 		.4byte	0x111
 12362 0ce8 13       		.uleb128 0x13
 12363 0ce9 97000000 		.4byte	0x97
 12364 0ced 00       		.byte	0
 12365 0cee 07       		.uleb128 0x7
 12366 0cef 04       		.byte	0x4
 12367 0cf0 DA0C0000 		.4byte	0xcda
 12368 0cf4 12       		.uleb128 0x12
 12369 0cf5 040D0000 		.4byte	0xd04
 12370 0cf9 13       		.uleb128 0x13
 12371 0cfa 11010000 		.4byte	0x111
 12372 0cfe 13       		.uleb128 0x13
 12373 0cff 96090000 		.4byte	0x996
 12374 0d03 00       		.byte	0
 12375 0d04 07       		.uleb128 0x7
 12376 0d05 04       		.byte	0x4
 12377 0d06 F40C0000 		.4byte	0xcf4
 12378 0d0a 18       		.uleb128 0x18
 12379 0d0b 96090000 		.4byte	0x996
 12380 0d0f 190D0000 		.4byte	0xd19
 12381 0d13 13       		.uleb128 0x13
 12382 0d14 11010000 		.4byte	0x111
 12383 0d18 00       		.byte	0
 12384 0d19 07       		.uleb128 0x7
 12385 0d1a 04       		.byte	0x4
 12386 0d1b 0A0D0000 		.4byte	0xd0a
 12387 0d1f 05       		.uleb128 0x5
 12388 0d20 BF1E0000 		.4byte	.LASF306
 12389 0d24 0A       		.byte	0xa
 12390 0d25 8901     		.2byte	0x189
 12391 0d27 E50A0000 		.4byte	0xae5
 12392 0d2b 05       		.uleb128 0x5
 12393 0d2c D91D0000 		.4byte	.LASF307
 12394 0d30 0A       		.byte	0xa
 12395 0d31 8901     		.2byte	0x189
 12396 0d33 370D0000 		.4byte	0xd37
 12397 0d37 07       		.uleb128 0x7
 12398 0d38 04       		.byte	0x4
 12399 0d39 E50A0000 		.4byte	0xae5
 12400 0d3d 20       		.uleb128 0x20
 12401 0d3e D41C0000 		.4byte	.LASF308
 12402 0d42 34       		.byte	0x34
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 268


 12403 0d43 0A       		.byte	0xa
 12404 0d44 8E01     		.2byte	0x18e
 12405 0d46 010E0000 		.4byte	0xe01
 12406 0d4a 1C       		.uleb128 0x1c
 12407 0d4b 9B220000 		.4byte	.LASF309
 12408 0d4f 0A       		.byte	0xa
 12409 0d50 9001     		.2byte	0x190
 12410 0d52 6C020000 		.4byte	0x26c
 12411 0d56 00       		.byte	0
 12412 0d57 1C       		.uleb128 0x1c
 12413 0d58 630B0000 		.4byte	.LASF310
 12414 0d5c 0A       		.byte	0xa
 12415 0d5d 9101     		.2byte	0x191
 12416 0d5f 6C020000 		.4byte	0x26c
 12417 0d63 04       		.byte	0x4
 12418 0d64 1C       		.uleb128 0x1c
 12419 0d65 5F1E0000 		.4byte	.LASF311
 12420 0d69 0A       		.byte	0xa
 12421 0d6a 9201     		.2byte	0x192
 12422 0d6c 6C020000 		.4byte	0x26c
 12423 0d70 08       		.byte	0x8
 12424 0d71 1C       		.uleb128 0x1c
 12425 0d72 89000000 		.4byte	.LASF312
 12426 0d76 0A       		.byte	0xa
 12427 0d77 9301     		.2byte	0x193
 12428 0d79 1A0E0000 		.4byte	0xe1a
 12429 0d7d 0C       		.byte	0xc
 12430 0d7e 1C       		.uleb128 0x1c
 12431 0d7f BD270000 		.4byte	.LASF313
 12432 0d83 0A       		.byte	0xa
 12433 0d84 9401     		.2byte	0x194
 12434 0d86 A3000000 		.4byte	0xa3
 12435 0d8a 10       		.byte	0x10
 12436 0d8b 1C       		.uleb128 0x1c
 12437 0d8c DA1F0000 		.4byte	.LASF314
 12438 0d90 0A       		.byte	0xa
 12439 0d91 9501     		.2byte	0x195
 12440 0d93 AF000000 		.4byte	0xaf
 12441 0d97 14       		.byte	0x14
 12442 0d98 1C       		.uleb128 0x1c
 12443 0d99 81110000 		.4byte	.LASF315
 12444 0d9d 0A       		.byte	0xa
 12445 0d9e 9601     		.2byte	0x196
 12446 0da0 97000000 		.4byte	0x97
 12447 0da4 18       		.byte	0x18
 12448 0da5 1C       		.uleb128 0x1c
 12449 0da6 F8260000 		.4byte	.LASF316
 12450 0daa 0A       		.byte	0xa
 12451 0dab 9801     		.2byte	0x198
 12452 0dad 49020000 		.4byte	0x249
 12453 0db1 19       		.byte	0x19
 12454 0db2 1C       		.uleb128 0x1c
 12455 0db3 440E0000 		.4byte	.LASF317
 12456 0db7 0A       		.byte	0xa
 12457 0db8 9C01     		.2byte	0x19c
 12458 0dba 200E0000 		.4byte	0xe20
 12459 0dbe 1A       		.byte	0x1a
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 269


 12460 0dbf 1C       		.uleb128 0x1c
 12461 0dc0 CA1D0000 		.4byte	.LASF318
 12462 0dc4 0A       		.byte	0xa
 12463 0dc5 9E01     		.2byte	0x19e
 12464 0dc7 19010000 		.4byte	0x119
 12465 0dcb 1E       		.byte	0x1e
 12466 0dcc 1C       		.uleb128 0x1c
 12467 0dcd C3190000 		.4byte	.LASF319
 12468 0dd1 0A       		.byte	0xa
 12469 0dd2 A201     		.2byte	0x1a2
 12470 0dd4 200E0000 		.4byte	0xe20
 12471 0dd8 22       		.byte	0x22
 12472 0dd9 1C       		.uleb128 0x1c
 12473 0dda 80040000 		.4byte	.LASF320
 12474 0dde 0A       		.byte	0xa
 12475 0ddf A401     		.2byte	0x1a4
 12476 0de1 19010000 		.4byte	0x119
 12477 0de5 26       		.byte	0x26
 12478 0de6 1C       		.uleb128 0x1c
 12479 0de7 5E050000 		.4byte	.LASF321
 12480 0deb 0A       		.byte	0xa
 12481 0dec A601     		.2byte	0x1a6
 12482 0dee 6C020000 		.4byte	0x26c
 12483 0df2 2C       		.byte	0x2c
 12484 0df3 1C       		.uleb128 0x1c
 12485 0df4 11150000 		.4byte	.LASF322
 12486 0df8 0A       		.byte	0xa
 12487 0df9 A701     		.2byte	0x1a7
 12488 0dfb 6C020000 		.4byte	0x26c
 12489 0dff 30       		.byte	0x30
 12490 0e00 00       		.byte	0
 12491 0e01 18       		.uleb128 0x18
 12492 0e02 49020000 		.4byte	0x249
 12493 0e06 1A0E0000 		.4byte	0xe1a
 12494 0e0a 13       		.uleb128 0x13
 12495 0e0b 11010000 		.4byte	0x111
 12496 0e0f 13       		.uleb128 0x13
 12497 0e10 11010000 		.4byte	0x111
 12498 0e14 13       		.uleb128 0x13
 12499 0e15 A3000000 		.4byte	0xa3
 12500 0e19 00       		.byte	0
 12501 0e1a 07       		.uleb128 0x7
 12502 0e1b 04       		.byte	0x4
 12503 0e1c 010E0000 		.4byte	0xe01
 12504 0e20 0A       		.uleb128 0xa
 12505 0e21 49020000 		.4byte	0x249
 12506 0e25 300E0000 		.4byte	0xe30
 12507 0e29 0B       		.uleb128 0xb
 12508 0e2a 0A010000 		.4byte	0x10a
 12509 0e2e 03       		.byte	0x3
 12510 0e2f 00       		.byte	0
 12511 0e30 05       		.uleb128 0x5
 12512 0e31 C30A0000 		.4byte	.LASF323
 12513 0e35 0A       		.byte	0xa
 12514 0e36 A801     		.2byte	0x1a8
 12515 0e38 3D0D0000 		.4byte	0xd3d
 12516 0e3c 1F       		.uleb128 0x1f
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 270


 12517 0e3d 0A010000 		.4byte	.LASF324
 12518 0e41 AC03     		.2byte	0x3ac
 12519 0e43 0A       		.byte	0xa
 12520 0e44 AA01     		.2byte	0x1aa
 12521 0e46 650E0000 		.4byte	0xe65
 12522 0e4a 1C       		.uleb128 0x1c
 12523 0e4b AA160000 		.4byte	.LASF325
 12524 0e4f 0A       		.byte	0xa
 12525 0e50 AC01     		.2byte	0x1ac
 12526 0e52 81000000 		.4byte	0x81
 12527 0e56 00       		.byte	0
 12528 0e57 1C       		.uleb128 0x1c
 12529 0e58 53020000 		.4byte	.LASF326
 12530 0e5c 0A       		.byte	0xa
 12531 0e5d AD01     		.2byte	0x1ad
 12532 0e5f 650E0000 		.4byte	0xe65
 12533 0e63 04       		.byte	0x4
 12534 0e64 00       		.byte	0
 12535 0e65 0A       		.uleb128 0xa
 12536 0e66 300E0000 		.4byte	0xe30
 12537 0e6a 750E0000 		.4byte	0xe75
 12538 0e6e 0B       		.uleb128 0xb
 12539 0e6f 0A010000 		.4byte	0x10a
 12540 0e73 11       		.byte	0x11
 12541 0e74 00       		.byte	0
 12542 0e75 05       		.uleb128 0x5
 12543 0e76 D50C0000 		.4byte	.LASF327
 12544 0e7a 0A       		.byte	0xa
 12545 0e7b AE01     		.2byte	0x1ae
 12546 0e7d 3C0E0000 		.4byte	0xe3c
 12547 0e81 1E       		.uleb128 0x1e
 12548 0e82 28       		.byte	0x28
 12549 0e83 0A       		.byte	0xa
 12550 0e84 B701     		.2byte	0x1b7
 12551 0e86 5B0F0000 		.4byte	0xf5b
 12552 0e8a 1C       		.uleb128 0x1c
 12553 0e8b A30A0000 		.4byte	.LASF328
 12554 0e8f 0A       		.byte	0xa
 12555 0e90 B901     		.2byte	0x1b9
 12556 0e92 44020000 		.4byte	0x244
 12557 0e96 00       		.byte	0
 12558 0e97 1C       		.uleb128 0x1c
 12559 0e98 A6290000 		.4byte	.LASF329
 12560 0e9c 0A       		.byte	0xa
 12561 0e9d BA01     		.2byte	0x1ba
 12562 0e9f F4000000 		.4byte	0xf4
 12563 0ea3 01       		.byte	0x1
 12564 0ea4 1C       		.uleb128 0x1c
 12565 0ea5 E0020000 		.4byte	.LASF247
 12566 0ea9 0A       		.byte	0xa
 12567 0eaa BD01     		.2byte	0x1bd
 12568 0eac F4000000 		.4byte	0xf4
 12569 0eb0 02       		.byte	0x2
 12570 0eb1 1C       		.uleb128 0x1c
 12571 0eb2 06130000 		.4byte	.LASF330
 12572 0eb6 0A       		.byte	0xa
 12573 0eb7 BF01     		.2byte	0x1bf
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 271


 12574 0eb9 F9000000 		.4byte	0xf9
 12575 0ebd 04       		.byte	0x4
 12576 0ebe 1C       		.uleb128 0x1c
 12577 0ebf 68190000 		.4byte	.LASF331
 12578 0ec3 0A       		.byte	0xa
 12579 0ec4 C001     		.2byte	0x1c0
 12580 0ec6 F9000000 		.4byte	0xf9
 12581 0eca 06       		.byte	0x6
 12582 0ecb 1C       		.uleb128 0x1c
 12583 0ecc 4E250000 		.4byte	.LASF332
 12584 0ed0 0A       		.byte	0xa
 12585 0ed1 C201     		.2byte	0x1c2
 12586 0ed3 F9000000 		.4byte	0xf9
 12587 0ed7 08       		.byte	0x8
 12588 0ed8 1C       		.uleb128 0x1c
 12589 0ed9 9C260000 		.4byte	.LASF333
 12590 0edd 0A       		.byte	0xa
 12591 0ede C301     		.2byte	0x1c3
 12592 0ee0 F9000000 		.4byte	0xf9
 12593 0ee4 0A       		.byte	0xa
 12594 0ee5 1C       		.uleb128 0x1c
 12595 0ee6 9E000000 		.4byte	.LASF334
 12596 0eea 0A       		.byte	0xa
 12597 0eeb C401     		.2byte	0x1c4
 12598 0eed F9000000 		.4byte	0xf9
 12599 0ef1 0C       		.byte	0xc
 12600 0ef2 1C       		.uleb128 0x1c
 12601 0ef3 F91B0000 		.4byte	.LASF335
 12602 0ef7 0A       		.byte	0xa
 12603 0ef8 C601     		.2byte	0x1c6
 12604 0efa F9000000 		.4byte	0xf9
 12605 0efe 0E       		.byte	0xe
 12606 0eff 1C       		.uleb128 0x1c
 12607 0f00 B9150000 		.4byte	.LASF336
 12608 0f04 0A       		.byte	0xa
 12609 0f05 C701     		.2byte	0x1c7
 12610 0f07 F9000000 		.4byte	0xf9
 12611 0f0b 10       		.byte	0x10
 12612 0f0c 1C       		.uleb128 0x1c
 12613 0f0d DE070000 		.4byte	.LASF337
 12614 0f11 0A       		.byte	0xa
 12615 0f12 C801     		.2byte	0x1c8
 12616 0f14 F9000000 		.4byte	0xf9
 12617 0f18 12       		.byte	0x12
 12618 0f19 1C       		.uleb128 0x1c
 12619 0f1a 69150000 		.4byte	.LASF338
 12620 0f1e 0A       		.byte	0xa
 12621 0f1f CA01     		.2byte	0x1ca
 12622 0f21 5B0F0000 		.4byte	0xf5b
 12623 0f25 14       		.byte	0x14
 12624 0f26 1C       		.uleb128 0x1c
 12625 0f27 C10B0000 		.4byte	.LASF339
 12626 0f2b 0A       		.byte	0xa
 12627 0f2c CB01     		.2byte	0x1cb
 12628 0f2e 5B0F0000 		.4byte	0xf5b
 12629 0f32 18       		.byte	0x18
 12630 0f33 1C       		.uleb128 0x1c
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 272


 12631 0f34 D60E0000 		.4byte	.LASF340
 12632 0f38 0A       		.byte	0xa
 12633 0f39 CC01     		.2byte	0x1cc
 12634 0f3b 610F0000 		.4byte	0xf61
 12635 0f3f 1C       		.byte	0x1c
 12636 0f40 1C       		.uleb128 0x1c
 12637 0f41 1E150000 		.4byte	.LASF49
 12638 0f45 0A       		.byte	0xa
 12639 0f46 CE01     		.2byte	0x1ce
 12640 0f48 6C020000 		.4byte	0x26c
 12641 0f4c 20       		.byte	0x20
 12642 0f4d 1C       		.uleb128 0x1c
 12643 0f4e CA140000 		.4byte	.LASF48
 12644 0f52 0A       		.byte	0xa
 12645 0f53 CF01     		.2byte	0x1cf
 12646 0f55 11010000 		.4byte	0x111
 12647 0f59 24       		.byte	0x24
 12648 0f5a 00       		.byte	0
 12649 0f5b 07       		.uleb128 0x7
 12650 0f5c 04       		.byte	0x4
 12651 0f5d 300E0000 		.4byte	0xe30
 12652 0f61 07       		.uleb128 0x7
 12653 0f62 04       		.byte	0x4
 12654 0f63 1F0D0000 		.4byte	0xd1f
 12655 0f67 05       		.uleb128 0x5
 12656 0f68 541F0000 		.4byte	.LASF341
 12657 0f6c 0A       		.byte	0xa
 12658 0f6d D101     		.2byte	0x1d1
 12659 0f6f 810E0000 		.4byte	0xe81
 12660 0f73 05       		.uleb128 0x5
 12661 0f74 3C1B0000 		.4byte	.LASF342
 12662 0f78 0A       		.byte	0xa
 12663 0f79 D101     		.2byte	0x1d1
 12664 0f7b 7F0F0000 		.4byte	0xf7f
 12665 0f7f 07       		.uleb128 0x7
 12666 0f80 04       		.byte	0x4
 12667 0f81 810E0000 		.4byte	0xe81
 12668 0f85 1F       		.uleb128 0x1f
 12669 0f86 42020000 		.4byte	.LASF343
 12670 0f8a 5C08     		.2byte	0x85c
 12671 0f8c 0A       		.byte	0xa
 12672 0f8d D301     		.2byte	0x1d3
 12673 0f8f 10100000 		.4byte	0x1010
 12674 0f93 1C       		.uleb128 0x1c
 12675 0f94 701A0000 		.4byte	.LASF344
 12676 0f98 0A       		.byte	0xa
 12677 0f99 D501     		.2byte	0x1d5
 12678 0f9b F9000000 		.4byte	0xf9
 12679 0f9f 00       		.byte	0
 12680 0fa0 1C       		.uleb128 0x1c
 12681 0fa1 8C1E0000 		.4byte	.LASF345
 12682 0fa5 0A       		.byte	0xa
 12683 0fa6 D701     		.2byte	0x1d7
 12684 0fa8 10100000 		.4byte	0x1010
 12685 0fac 04       		.byte	0x4
 12686 0fad 1D       		.uleb128 0x1d
 12687 0fae 80090000 		.4byte	.LASF346
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 273


 12688 0fb2 0A       		.byte	0xa
 12689 0fb3 D801     		.2byte	0x1d8
 12690 0fb5 20100000 		.4byte	0x1020
 12691 0fb9 8407     		.2byte	0x784
 12692 0fbb 1D       		.uleb128 0x1d
 12693 0fbc 8F110000 		.4byte	.LASF347
 12694 0fc0 0A       		.byte	0xa
 12695 0fc1 DA01     		.2byte	0x1da
 12696 0fc3 6C020000 		.4byte	0x26c
 12697 0fc7 4408     		.2byte	0x844
 12698 0fc9 1D       		.uleb128 0x1d
 12699 0fca 171D0000 		.4byte	.LASF348
 12700 0fce 0A       		.byte	0xa
 12701 0fcf DB01     		.2byte	0x1db
 12702 0fd1 45100000 		.4byte	0x1045
 12703 0fd5 4808     		.2byte	0x848
 12704 0fd7 1D       		.uleb128 0x1d
 12705 0fd8 4A120000 		.4byte	.LASF349
 12706 0fdc 0A       		.byte	0xa
 12707 0fdd DC01     		.2byte	0x1dc
 12708 0fdf 5B100000 		.4byte	0x105b
 12709 0fe3 4C08     		.2byte	0x84c
 12710 0fe5 1D       		.uleb128 0x1d
 12711 0fe6 890D0000 		.4byte	.LASF350
 12712 0fea 0A       		.byte	0xa
 12713 0feb DD01     		.2byte	0x1dd
 12714 0fed 45100000 		.4byte	0x1045
 12715 0ff1 5008     		.2byte	0x850
 12716 0ff3 1D       		.uleb128 0x1d
 12717 0ff4 0C240000 		.4byte	.LASF351
 12718 0ff8 0A       		.byte	0xa
 12719 0ff9 DE01     		.2byte	0x1de
 12720 0ffb 6C020000 		.4byte	0x26c
 12721 0fff 5408     		.2byte	0x854
 12722 1001 1D       		.uleb128 0x1d
 12723 1002 A6100000 		.4byte	.LASF352
 12724 1006 0A       		.byte	0xa
 12725 1007 DF01     		.2byte	0x1df
 12726 1009 6C020000 		.4byte	0x26c
 12727 100d 5808     		.2byte	0x858
 12728 100f 00       		.byte	0
 12729 1010 0A       		.uleb128 0xa
 12730 1011 670F0000 		.4byte	0xf67
 12731 1015 20100000 		.4byte	0x1020
 12732 1019 0B       		.uleb128 0xb
 12733 101a 0A010000 		.4byte	0x10a
 12734 101e 2F       		.byte	0x2f
 12735 101f 00       		.byte	0
 12736 1020 0A       		.uleb128 0xa
 12737 1021 30100000 		.4byte	0x1030
 12738 1025 30100000 		.4byte	0x1030
 12739 1029 0B       		.uleb128 0xb
 12740 102a 0A010000 		.4byte	0x10a
 12741 102e 2F       		.byte	0x2f
 12742 102f 00       		.byte	0
 12743 1030 07       		.uleb128 0x7
 12744 1031 04       		.byte	0x4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 274


 12745 1032 670F0000 		.4byte	0xf67
 12746 1036 18       		.uleb128 0x18
 12747 1037 30100000 		.4byte	0x1030
 12748 103b 45100000 		.4byte	0x1045
 12749 103f 13       		.uleb128 0x13
 12750 1040 11010000 		.4byte	0x111
 12751 1044 00       		.byte	0
 12752 1045 07       		.uleb128 0x7
 12753 1046 04       		.byte	0x4
 12754 1047 36100000 		.4byte	0x1036
 12755 104b 12       		.uleb128 0x12
 12756 104c 5B100000 		.4byte	0x105b
 12757 1050 13       		.uleb128 0x13
 12758 1051 11010000 		.4byte	0x111
 12759 1055 13       		.uleb128 0x13
 12760 1056 30100000 		.4byte	0x1030
 12761 105a 00       		.byte	0
 12762 105b 07       		.uleb128 0x7
 12763 105c 04       		.byte	0x4
 12764 105d 4B100000 		.4byte	0x104b
 12765 1061 05       		.uleb128 0x5
 12766 1062 D5030000 		.4byte	.LASF353
 12767 1066 0A       		.byte	0xa
 12768 1067 E101     		.2byte	0x1e1
 12769 1069 850F0000 		.4byte	0xf85
 12770 106d 1E       		.uleb128 0x1e
 12771 106e 14       		.byte	0x14
 12772 106f 0A       		.byte	0xa
 12773 1070 ED01     		.2byte	0x1ed
 12774 1072 57110000 		.4byte	0x1157
 12775 1076 1C       		.uleb128 0x1c
 12776 1077 A5130000 		.4byte	.LASF354
 12777 107b 0A       		.byte	0xa
 12778 107c EF01     		.2byte	0x1ef
 12779 107e 44020000 		.4byte	0x244
 12780 1082 00       		.byte	0
 12781 1083 1C       		.uleb128 0x1c
 12782 1084 6E1F0000 		.4byte	.LASF355
 12783 1088 0A       		.byte	0xa
 12784 1089 F001     		.2byte	0x1f0
 12785 108b 44020000 		.4byte	0x244
 12786 108f 01       		.byte	0x1
 12787 1090 1C       		.uleb128 0x1c
 12788 1091 2A0C0000 		.4byte	.LASF356
 12789 1095 0A       		.byte	0xa
 12790 1096 F401     		.2byte	0x1f4
 12791 1098 97000000 		.4byte	0x97
 12792 109c 02       		.byte	0x2
 12793 109d 1C       		.uleb128 0x1c
 12794 109e F71D0000 		.4byte	.LASF357
 12795 10a2 0A       		.byte	0xa
 12796 10a3 0202     		.2byte	0x202
 12797 10a5 97000000 		.4byte	0x97
 12798 10a9 03       		.byte	0x3
 12799 10aa 1C       		.uleb128 0x1c
 12800 10ab 400D0000 		.4byte	.LASF358
 12801 10af 0A       		.byte	0xa
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 275


 12802 10b0 0302     		.2byte	0x203
 12803 10b2 97000000 		.4byte	0x97
 12804 10b6 04       		.byte	0x4
 12805 10b7 1C       		.uleb128 0x1c
 12806 10b8 181E0000 		.4byte	.LASF359
 12807 10bc 0A       		.byte	0xa
 12808 10bd 0402     		.2byte	0x204
 12809 10bf 97000000 		.4byte	0x97
 12810 10c3 05       		.byte	0x5
 12811 10c4 1C       		.uleb128 0x1c
 12812 10c5 281E0000 		.4byte	.LASF360
 12813 10c9 0A       		.byte	0xa
 12814 10ca 0502     		.2byte	0x205
 12815 10cc 97000000 		.4byte	0x97
 12816 10d0 06       		.byte	0x6
 12817 10d1 1C       		.uleb128 0x1c
 12818 10d2 910E0000 		.4byte	.LASF361
 12819 10d6 0A       		.byte	0xa
 12820 10d7 0702     		.2byte	0x207
 12821 10d9 97000000 		.4byte	0x97
 12822 10dd 07       		.byte	0x7
 12823 10de 1C       		.uleb128 0x1c
 12824 10df FB100000 		.4byte	.LASF362
 12825 10e3 0A       		.byte	0xa
 12826 10e4 0802     		.2byte	0x208
 12827 10e6 97000000 		.4byte	0x97
 12828 10ea 08       		.byte	0x8
 12829 10eb 1C       		.uleb128 0x1c
 12830 10ec 2A0D0000 		.4byte	.LASF363
 12831 10f0 0A       		.byte	0xa
 12832 10f1 0902     		.2byte	0x209
 12833 10f3 97000000 		.4byte	0x97
 12834 10f7 09       		.byte	0x9
 12835 10f8 1C       		.uleb128 0x1c
 12836 10f9 3A000000 		.4byte	.LASF364
 12837 10fd 0A       		.byte	0xa
 12838 10fe 0B02     		.2byte	0x20b
 12839 1100 97000000 		.4byte	0x97
 12840 1104 0A       		.byte	0xa
 12841 1105 1C       		.uleb128 0x1c
 12842 1106 B20E0000 		.4byte	.LASF365
 12843 110a 0A       		.byte	0xa
 12844 110b 0D02     		.2byte	0x20d
 12845 110d A3000000 		.4byte	0xa3
 12846 1111 0C       		.byte	0xc
 12847 1112 1C       		.uleb128 0x1c
 12848 1113 4F1E0000 		.4byte	.LASF366
 12849 1117 0A       		.byte	0xa
 12850 1118 0E02     		.2byte	0x20e
 12851 111a A3000000 		.4byte	0xa3
 12852 111e 0E       		.byte	0xe
 12853 111f 1C       		.uleb128 0x1c
 12854 1120 472A0000 		.4byte	.LASF367
 12855 1124 0A       		.byte	0xa
 12856 1125 1002     		.2byte	0x210
 12857 1127 97000000 		.4byte	0x97
 12858 112b 10       		.byte	0x10
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 276


 12859 112c 1C       		.uleb128 0x1c
 12860 112d 090C0000 		.4byte	.LASF368
 12861 1131 0A       		.byte	0xa
 12862 1132 1202     		.2byte	0x212
 12863 1134 97000000 		.4byte	0x97
 12864 1138 11       		.byte	0x11
 12865 1139 1C       		.uleb128 0x1c
 12866 113a 12000000 		.4byte	.LASF369
 12867 113e 0A       		.byte	0xa
 12868 113f 1402     		.2byte	0x214
 12869 1141 97000000 		.4byte	0x97
 12870 1145 12       		.byte	0x12
 12871 1146 21       		.uleb128 0x21
 12872 1147 981A0000 		.4byte	.LASF568
 12873 114b 0A       		.byte	0xa
 12874 114c 1602     		.2byte	0x216
 12875 114e 97000000 		.4byte	0x97
 12876 1152 01       		.byte	0x1
 12877 1153 01       		.byte	0x1
 12878 1154 07       		.byte	0x7
 12879 1155 13       		.byte	0x13
 12880 1156 00       		.byte	0
 12881 1157 05       		.uleb128 0x5
 12882 1158 E9200000 		.4byte	.LASF370
 12883 115c 0A       		.byte	0xa
 12884 115d 1702     		.2byte	0x217
 12885 115f 6D100000 		.4byte	0x106d
 12886 1163 03       		.uleb128 0x3
 12887 1164 67000000 		.4byte	.LASF371
 12888 1168 0B       		.byte	0xb
 12889 1169 97       		.byte	0x97
 12890 116a 6C020000 		.4byte	0x26c
 12891 116e 0C       		.uleb128 0xc
 12892 116f FF070000 		.4byte	.LASF372
 12893 1173 02       		.byte	0x2
 12894 1174 0C       		.byte	0xc
 12895 1175 2A       		.byte	0x2a
 12896 1176 92120000 		.4byte	0x1292
 12897 117a 0D       		.uleb128 0xd
 12898 117b 58010000 		.4byte	.LASF373
 12899 117f 00       		.sleb128 0
 12900 1180 0D       		.uleb128 0xd
 12901 1181 29040000 		.4byte	.LASF374
 12902 1185 C000     		.sleb128 64
 12903 1187 0D       		.uleb128 0xd
 12904 1188 7D010000 		.4byte	.LASF375
 12905 118c 8001     		.sleb128 128
 12906 118e 0D       		.uleb128 0xd
 12907 118f 98010000 		.4byte	.LASF376
 12908 1193 C001     		.sleb128 192
 12909 1195 0D       		.uleb128 0xd
 12910 1196 B3010000 		.4byte	.LASF377
 12911 119a 8002     		.sleb128 256
 12912 119c 0D       		.uleb128 0xd
 12913 119d CE010000 		.4byte	.LASF378
 12914 11a1 C002     		.sleb128 320
 12915 11a3 0D       		.uleb128 0xd
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 277


 12916 11a4 E9010000 		.4byte	.LASF379
 12917 11a8 8003     		.sleb128 384
 12918 11aa 0D       		.uleb128 0xd
 12919 11ab 04020000 		.4byte	.LASF380
 12920 11af C003     		.sleb128 448
 12921 11b1 0D       		.uleb128 0xd
 12922 11b2 37060000 		.4byte	.LASF381
 12923 11b6 8004     		.sleb128 512
 12924 11b8 0D       		.uleb128 0xd
 12925 11b9 ED080000 		.4byte	.LASF382
 12926 11bd C004     		.sleb128 576
 12927 11bf 0D       		.uleb128 0xd
 12928 11c0 08280000 		.4byte	.LASF383
 12929 11c4 8005     		.sleb128 640
 12930 11c6 0D       		.uleb128 0xd
 12931 11c7 D70F0000 		.4byte	.LASF384
 12932 11cb C005     		.sleb128 704
 12933 11cd 0D       		.uleb128 0xd
 12934 11ce 26050000 		.4byte	.LASF385
 12935 11d2 8006     		.sleb128 768
 12936 11d4 0D       		.uleb128 0xd
 12937 11d5 670E0000 		.4byte	.LASF386
 12938 11d9 C006     		.sleb128 832
 12939 11db 0D       		.uleb128 0xd
 12940 11dc 56290000 		.4byte	.LASF387
 12941 11e0 8007     		.sleb128 896
 12942 11e2 0D       		.uleb128 0xd
 12943 11e3 0D130000 		.4byte	.LASF388
 12944 11e7 C007     		.sleb128 960
 12945 11e9 0D       		.uleb128 0xd
 12946 11ea 10090000 		.4byte	.LASF389
 12947 11ee 8008     		.sleb128 1024
 12948 11f0 0D       		.uleb128 0xd
 12949 11f1 9A1E0000 		.4byte	.LASF390
 12950 11f5 C008     		.sleb128 1088
 12951 11f7 0D       		.uleb128 0xd
 12952 11f8 CF250000 		.4byte	.LASF391
 12953 11fc 8009     		.sleb128 1152
 12954 11fe 0D       		.uleb128 0xd
 12955 11ff E8110000 		.4byte	.LASF392
 12956 1203 C009     		.sleb128 1216
 12957 1205 0D       		.uleb128 0xd
 12958 1206 7E120000 		.4byte	.LASF393
 12959 120a 800A     		.sleb128 1280
 12960 120c 0D       		.uleb128 0xd
 12961 120d 9C120000 		.4byte	.LASF394
 12962 1211 C00A     		.sleb128 1344
 12963 1213 0D       		.uleb128 0xd
 12964 1214 BA120000 		.4byte	.LASF395
 12965 1218 800B     		.sleb128 1408
 12966 121a 0D       		.uleb128 0xd
 12967 121b D8120000 		.4byte	.LASF396
 12968 121f C00B     		.sleb128 1472
 12969 1221 0D       		.uleb128 0xd
 12970 1222 FB180000 		.4byte	.LASF397
 12971 1226 800C     		.sleb128 1536
 12972 1228 0D       		.uleb128 0xd
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 278


 12973 1229 5A1B0000 		.4byte	.LASF398
 12974 122d C00C     		.sleb128 1600
 12975 122f 0D       		.uleb128 0xd
 12976 1230 6C0B0000 		.4byte	.LASF399
 12977 1234 800D     		.sleb128 1664
 12978 1236 0D       		.uleb128 0xd
 12979 1237 A2070000 		.4byte	.LASF400
 12980 123b C00D     		.sleb128 1728
 12981 123d 0D       		.uleb128 0xd
 12982 123e 421C0000 		.4byte	.LASF401
 12983 1242 800E     		.sleb128 1792
 12984 1244 0D       		.uleb128 0xd
 12985 1245 F22A0000 		.4byte	.LASF402
 12986 1249 C00E     		.sleb128 1856
 12987 124b 0D       		.uleb128 0xd
 12988 124c F00E0000 		.4byte	.LASF403
 12989 1250 800F     		.sleb128 1920
 12990 1252 0D       		.uleb128 0xd
 12991 1253 9D050000 		.4byte	.LASF404
 12992 1257 C00F     		.sleb128 1984
 12993 1259 0D       		.uleb128 0xd
 12994 125a AF1A0000 		.4byte	.LASF405
 12995 125e 8010     		.sleb128 2048
 12996 1260 0D       		.uleb128 0xd
 12997 1261 8A170000 		.4byte	.LASF406
 12998 1265 C010     		.sleb128 2112
 12999 1267 0D       		.uleb128 0xd
 13000 1268 EE060000 		.4byte	.LASF407
 13001 126c 8011     		.sleb128 2176
 13002 126e 0D       		.uleb128 0xd
 13003 126f 0C030000 		.4byte	.LASF408
 13004 1273 C011     		.sleb128 2240
 13005 1275 0D       		.uleb128 0xd
 13006 1276 C8180000 		.4byte	.LASF409
 13007 127a 8012     		.sleb128 2304
 13008 127c 0D       		.uleb128 0xd
 13009 127d CD150000 		.4byte	.LASF410
 13010 1281 C012     		.sleb128 2368
 13011 1283 0D       		.uleb128 0xd
 13012 1284 97040000 		.4byte	.LASF411
 13013 1288 8013     		.sleb128 2432
 13014 128a 0D       		.uleb128 0xd
 13015 128b 49210000 		.4byte	.LASF412
 13016 128f C013     		.sleb128 2496
 13017 1291 00       		.byte	0
 13018 1292 17       		.uleb128 0x17
 13019 1293 01       		.byte	0x1
 13020 1294 0D       		.byte	0xd
 13021 1295 26       		.byte	0x26
 13022 1296 AC130000 		.4byte	0x13ac
 13023 129a 0D       		.uleb128 0xd
 13024 129b 560A0000 		.4byte	.LASF413
 13025 129f A101     		.sleb128 161
 13026 12a1 0D       		.uleb128 0xd
 13027 12a2 4D0B0000 		.4byte	.LASF414
 13028 12a6 A101     		.sleb128 161
 13029 12a8 0D       		.uleb128 0xd
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 279


 13030 12a9 A0020000 		.4byte	.LASF415
 13031 12ad A201     		.sleb128 162
 13032 12af 0D       		.uleb128 0xd
 13033 12b0 26210000 		.4byte	.LASF416
 13034 12b4 A201     		.sleb128 162
 13035 12b6 0D       		.uleb128 0xd
 13036 12b7 1E100000 		.4byte	.LASF417
 13037 12bb A301     		.sleb128 163
 13038 12bd 0D       		.uleb128 0xd
 13039 12be BE260000 		.4byte	.LASF418
 13040 12c2 A301     		.sleb128 163
 13041 12c4 0D       		.uleb128 0xd
 13042 12c5 6B0A0000 		.4byte	.LASF419
 13043 12c9 AE01     		.sleb128 174
 13044 12cb 0D       		.uleb128 0xd
 13045 12cc B3090000 		.4byte	.LASF420
 13046 12d0 AE01     		.sleb128 174
 13047 12d2 0D       		.uleb128 0xd
 13048 12d3 510C0000 		.4byte	.LASF421
 13049 12d7 AA01     		.sleb128 170
 13050 12d9 0D       		.uleb128 0xd
 13051 12da 9D270000 		.4byte	.LASF422
 13052 12de AA01     		.sleb128 170
 13053 12e0 0D       		.uleb128 0xd
 13054 12e1 E21A0000 		.4byte	.LASF423
 13055 12e5 A401     		.sleb128 164
 13056 12e7 0D       		.uleb128 0xd
 13057 12e8 8F140000 		.4byte	.LASF424
 13058 12ec A401     		.sleb128 164
 13059 12ee 0D       		.uleb128 0xd
 13060 12ef B4140000 		.4byte	.LASF425
 13061 12f3 A501     		.sleb128 165
 13062 12f5 0D       		.uleb128 0xd
 13063 12f6 85160000 		.4byte	.LASF426
 13064 12fa A501     		.sleb128 165
 13065 12fc 0D       		.uleb128 0xd
 13066 12fd DE100000 		.4byte	.LASF427
 13067 1301 E801     		.sleb128 232
 13068 1303 0D       		.uleb128 0xd
 13069 1304 A41C0000 		.4byte	.LASF428
 13070 1308 E801     		.sleb128 232
 13071 130a 0D       		.uleb128 0xd
 13072 130b 03220000 		.4byte	.LASF429
 13073 130f A601     		.sleb128 166
 13074 1311 0D       		.uleb128 0xd
 13075 1312 2B280000 		.4byte	.LASF430
 13076 1316 A601     		.sleb128 166
 13077 1318 0D       		.uleb128 0xd
 13078 1319 39290000 		.4byte	.LASF431
 13079 131d A701     		.sleb128 167
 13080 131f 0D       		.uleb128 0xd
 13081 1320 A42A0000 		.4byte	.LASF432
 13082 1324 A701     		.sleb128 167
 13083 1326 0D       		.uleb128 0xd
 13084 1327 C80D0000 		.4byte	.LASF433
 13085 132b A801     		.sleb128 168
 13086 132d 0D       		.uleb128 0xd
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 280


 13087 132e 90060000 		.4byte	.LASF434
 13088 1332 A801     		.sleb128 168
 13089 1334 0D       		.uleb128 0xd
 13090 1335 4E170000 		.4byte	.LASF435
 13091 1339 A901     		.sleb128 169
 13092 133b 0D       		.uleb128 0xd
 13093 133c 341F0000 		.4byte	.LASF436
 13094 1340 A901     		.sleb128 169
 13095 1342 0D       		.uleb128 0xd
 13096 1343 37130000 		.4byte	.LASF437
 13097 1347 AC01     		.sleb128 172
 13098 1349 0D       		.uleb128 0xd
 13099 134a 062A0000 		.4byte	.LASF438
 13100 134e AC01     		.sleb128 172
 13101 1350 0D       		.uleb128 0xd
 13102 1351 34200000 		.4byte	.LASF439
 13103 1355 AD01     		.sleb128 173
 13104 1357 0D       		.uleb128 0xd
 13105 1358 A90D0000 		.4byte	.LASF440
 13106 135c AD01     		.sleb128 173
 13107 135e 0D       		.uleb128 0xd
 13108 135f BB280000 		.4byte	.LASF441
 13109 1363 E101     		.sleb128 225
 13110 1365 0D       		.uleb128 0xd
 13111 1366 F4250000 		.4byte	.LASF442
 13112 136a E101     		.sleb128 225
 13113 136c 0D       		.uleb128 0xd
 13114 136d B9230000 		.4byte	.LASF443
 13115 1371 E201     		.sleb128 226
 13116 1373 0D       		.uleb128 0xd
 13117 1374 C7060000 		.4byte	.LASF444
 13118 1378 E201     		.sleb128 226
 13119 137a 0D       		.uleb128 0xd
 13120 137b 612A0000 		.4byte	.LASF445
 13121 137f E301     		.sleb128 227
 13122 1381 0D       		.uleb128 0xd
 13123 1382 EC050000 		.4byte	.LASF446
 13124 1386 E301     		.sleb128 227
 13125 1388 0D       		.uleb128 0xd
 13126 1389 B21F0000 		.4byte	.LASF447
 13127 138d E401     		.sleb128 228
 13128 138f 0D       		.uleb128 0xd
 13129 1390 85070000 		.4byte	.LASF448
 13130 1394 E401     		.sleb128 228
 13131 1396 0D       		.uleb128 0xd
 13132 1397 6D050000 		.4byte	.LASF449
 13133 139b E601     		.sleb128 230
 13134 139d 0D       		.uleb128 0xd
 13135 139e FF280000 		.4byte	.LASF450
 13136 13a2 E601     		.sleb128 230
 13137 13a4 0D       		.uleb128 0xd
 13138 13a5 88150000 		.4byte	.LASF451
 13139 13a9 FF01     		.sleb128 255
 13140 13ab 00       		.byte	0
 13141 13ac 0C       		.uleb128 0xc
 13142 13ad B3030000 		.4byte	.LASF452
 13143 13b1 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 281


 13144 13b2 0D       		.byte	0xd
 13145 13b3 8A       		.byte	0x8a
 13146 13b4 E9130000 		.4byte	0x13e9
 13147 13b8 0D       		.uleb128 0xd
 13148 13b9 44040000 		.4byte	.LASF453
 13149 13bd 08       		.sleb128 8
 13150 13be 0D       		.uleb128 0xd
 13151 13bf 15170000 		.4byte	.LASF454
 13152 13c3 01       		.sleb128 1
 13153 13c4 0D       		.uleb128 0xd
 13154 13c5 261C0000 		.4byte	.LASF455
 13155 13c9 02       		.sleb128 2
 13156 13ca 0D       		.uleb128 0xd
 13157 13cb 1C230000 		.4byte	.LASF456
 13158 13cf 03       		.sleb128 3
 13159 13d0 0D       		.uleb128 0xd
 13160 13d1 C50C0000 		.4byte	.LASF457
 13161 13d5 05       		.sleb128 5
 13162 13d6 0D       		.uleb128 0xd
 13163 13d7 30010000 		.4byte	.LASF458
 13164 13db 06       		.sleb128 6
 13165 13dc 0D       		.uleb128 0xd
 13166 13dd D21B0000 		.4byte	.LASF459
 13167 13e1 04       		.sleb128 4
 13168 13e2 0D       		.uleb128 0xd
 13169 13e3 40220000 		.4byte	.LASF460
 13170 13e7 0B       		.sleb128 11
 13171 13e8 00       		.byte	0
 13172 13e9 0C       		.uleb128 0xc
 13173 13ea 35090000 		.4byte	.LASF461
 13174 13ee 01       		.byte	0x1
 13175 13ef 0D       		.byte	0xd
 13176 13f0 AB       		.byte	0xab
 13177 13f1 02140000 		.4byte	0x1402
 13178 13f5 0D       		.uleb128 0xd
 13179 13f6 50050000 		.4byte	.LASF462
 13180 13fa 01       		.sleb128 1
 13181 13fb 0D       		.uleb128 0xd
 13182 13fc CF110000 		.4byte	.LASF463
 13183 1400 02       		.sleb128 2
 13184 1401 00       		.byte	0
 13185 1402 22       		.uleb128 0x22
 13186 1403 0A       		.byte	0xa
 13187 1404 0D       		.byte	0xd
 13188 1405 B1       		.byte	0xb1
 13189 1406 47140000 		.4byte	0x1447
 13190 140a 0F       		.uleb128 0xf
 13191 140b E0020000 		.4byte	.LASF247
 13192 140f 0D       		.byte	0xd
 13193 1410 B3       		.byte	0xb3
 13194 1411 F4000000 		.4byte	0xf4
 13195 1415 00       		.byte	0
 13196 1416 0F       		.uleb128 0xf
 13197 1417 0D060000 		.4byte	.LASF464
 13198 141b 0D       		.byte	0xd
 13199 141c B4       		.byte	0xb4
 13200 141d F9000000 		.4byte	0xf9
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 282


 13201 1421 02       		.byte	0x2
 13202 1422 0F       		.uleb128 0xf
 13203 1423 73150000 		.4byte	.LASF465
 13204 1427 0D       		.byte	0xd
 13205 1428 B5       		.byte	0xb5
 13206 1429 F4000000 		.4byte	0xf4
 13207 142d 04       		.byte	0x4
 13208 142e 0F       		.uleb128 0xf
 13209 142f 03040000 		.4byte	.LASF466
 13210 1433 0D       		.byte	0xd
 13211 1434 B7       		.byte	0xb7
 13212 1435 F9000000 		.4byte	0xf9
 13213 1439 06       		.byte	0x6
 13214 143a 0F       		.uleb128 0xf
 13215 143b 91280000 		.4byte	.LASF467
 13216 143f 0D       		.byte	0xd
 13217 1440 B8       		.byte	0xb8
 13218 1441 F9000000 		.4byte	0xf9
 13219 1445 08       		.byte	0x8
 13220 1446 00       		.byte	0
 13221 1447 03       		.uleb128 0x3
 13222 1448 C22A0000 		.4byte	.LASF468
 13223 144c 0D       		.byte	0xd
 13224 144d B9       		.byte	0xb9
 13225 144e 02140000 		.4byte	0x1402
 13226 1452 22       		.uleb128 0x22
 13227 1453 02       		.byte	0x2
 13228 1454 0E       		.byte	0xe
 13229 1455 72       		.byte	0x72
 13230 1456 73140000 		.4byte	0x1473
 13231 145a 0F       		.uleb128 0xf
 13232 145b 3A2B0000 		.4byte	.LASF469
 13233 145f 0E       		.byte	0xe
 13234 1460 74       		.byte	0x74
 13235 1461 97000000 		.4byte	0x97
 13236 1465 00       		.byte	0
 13237 1466 0F       		.uleb128 0xf
 13238 1467 00000000 		.4byte	.LASF470
 13239 146b 0E       		.byte	0xe
 13240 146c 75       		.byte	0x75
 13241 146d 97000000 		.4byte	0x97
 13242 1471 01       		.byte	0x1
 13243 1472 00       		.byte	0
 13244 1473 03       		.uleb128 0x3
 13245 1474 FE230000 		.4byte	.LASF471
 13246 1478 0E       		.byte	0xe
 13247 1479 77       		.byte	0x77
 13248 147a 52140000 		.4byte	0x1452
 13249 147e 23       		.uleb128 0x23
 13250 147f 76140000 		.4byte	.LASF474
 13251 1483 01       		.byte	0x1
 13252 1484 2A       		.byte	0x2a
 13253 1485 00000000 		.4byte	.LFB63
 13254 1489 B6000000 		.4byte	.LFE63-.LFB63
 13255 148d 01       		.uleb128 0x1
 13256 148e 9C       		.byte	0x9c
 13257 148f C8140000 		.4byte	0x14c8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 283


 13258 1493 24       		.uleb128 0x24
 13259 1494 15230000 		.4byte	.LASF476
 13260 1498 01       		.byte	0x1
 13261 1499 2A       		.byte	0x2a
 13262 149a 11010000 		.4byte	0x111
 13263 149e 02       		.uleb128 0x2
 13264 149f 91       		.byte	0x91
 13265 14a0 6C       		.sleb128 -20
 13266 14a1 25       		.uleb128 0x25
 13267 14a2 EB1E0000 		.4byte	.LASF472
 13268 14a6 01       		.byte	0x1
 13269 14a7 2C       		.byte	0x2c
 13270 14a8 730F0000 		.4byte	0xf73
 13271 14ac 02       		.uleb128 0x2
 13272 14ad 91       		.byte	0x91
 13273 14ae 74       		.sleb128 -12
 13274 14af 26       		.uleb128 0x26
 13275 14b0 12000000 		.4byte	.LBB2
 13276 14b4 9E000000 		.4byte	.LBE2-.LBB2
 13277 14b8 25       		.uleb128 0x25
 13278 14b9 1C050000 		.4byte	.LASF473
 13279 14bd 01       		.byte	0x1
 13280 14be 2F       		.byte	0x2f
 13281 14bf 97000000 		.4byte	0x97
 13282 14c3 02       		.uleb128 0x2
 13283 14c4 91       		.byte	0x91
 13284 14c5 73       		.sleb128 -13
 13285 14c6 00       		.byte	0
 13286 14c7 00       		.byte	0
 13287 14c8 27       		.uleb128 0x27
 13288 14c9 49100000 		.4byte	.LASF475
 13289 14cd 01       		.byte	0x1
 13290 14ce 47       		.byte	0x47
 13291 14cf 00000000 		.4byte	.LFB64
 13292 14d3 48000000 		.4byte	.LFE64-.LFB64
 13293 14d7 01       		.uleb128 0x1
 13294 14d8 9C       		.byte	0x9c
 13295 14d9 FA140000 		.4byte	0x14fa
 13296 14dd 24       		.uleb128 0x24
 13297 14de 15230000 		.4byte	.LASF476
 13298 14e2 01       		.byte	0x1
 13299 14e3 47       		.byte	0x47
 13300 14e4 11010000 		.4byte	0x111
 13301 14e8 02       		.uleb128 0x2
 13302 14e9 91       		.byte	0x91
 13303 14ea 6C       		.sleb128 -20
 13304 14eb 25       		.uleb128 0x25
 13305 14ec EB1E0000 		.4byte	.LASF472
 13306 14f0 01       		.byte	0x1
 13307 14f1 49       		.byte	0x49
 13308 14f2 730F0000 		.4byte	0xf73
 13309 14f6 02       		.uleb128 0x2
 13310 14f7 91       		.byte	0x91
 13311 14f8 74       		.sleb128 -12
 13312 14f9 00       		.byte	0
 13313 14fa 23       		.uleb128 0x23
 13314 14fb AF0F0000 		.4byte	.LASF477
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 284


 13315 14ff 01       		.byte	0x1
 13316 1500 51       		.byte	0x51
 13317 1501 00000000 		.4byte	.LFB65
 13318 1505 E0000000 		.4byte	.LFE65-.LFB65
 13319 1509 01       		.uleb128 0x1
 13320 150a 9C       		.byte	0x9c
 13321 150b 2C150000 		.4byte	0x152c
 13322 150f 24       		.uleb128 0x24
 13323 1510 15230000 		.4byte	.LASF476
 13324 1514 01       		.byte	0x1
 13325 1515 51       		.byte	0x51
 13326 1516 11010000 		.4byte	0x111
 13327 151a 02       		.uleb128 0x2
 13328 151b 91       		.byte	0x91
 13329 151c 64       		.sleb128 -28
 13330 151d 25       		.uleb128 0x25
 13331 151e EB1E0000 		.4byte	.LASF472
 13332 1522 01       		.byte	0x1
 13333 1523 53       		.byte	0x53
 13334 1524 730F0000 		.4byte	0xf73
 13335 1528 02       		.uleb128 0x2
 13336 1529 91       		.byte	0x91
 13337 152a 6C       		.sleb128 -20
 13338 152b 00       		.byte	0
 13339 152c 23       		.uleb128 0x23
 13340 152d A3220000 		.4byte	.LASF478
 13341 1531 01       		.byte	0x1
 13342 1532 63       		.byte	0x63
 13343 1533 00000000 		.4byte	.LFB66
 13344 1537 9A0F0000 		.4byte	.LFE66-.LFB66
 13345 153b 01       		.uleb128 0x1
 13346 153c 9C       		.byte	0x9c
 13347 153d C8150000 		.4byte	0x15c8
 13348 1541 24       		.uleb128 0x24
 13349 1542 15230000 		.4byte	.LASF476
 13350 1546 01       		.byte	0x1
 13351 1547 63       		.byte	0x63
 13352 1548 11010000 		.4byte	0x111
 13353 154c 02       		.uleb128 0x2
 13354 154d 91       		.byte	0x91
 13355 154e 5C       		.sleb128 -36
 13356 154f 25       		.uleb128 0x25
 13357 1550 EB1E0000 		.4byte	.LASF472
 13358 1554 01       		.byte	0x1
 13359 1555 65       		.byte	0x65
 13360 1556 730F0000 		.4byte	0xf73
 13361 155a 02       		.uleb128 0x2
 13362 155b 91       		.byte	0x91
 13363 155c 6C       		.sleb128 -20
 13364 155d 26       		.uleb128 0x26
 13365 155e 14000000 		.4byte	.LBB3
 13366 1562 800F0000 		.4byte	.LBE3-.LBB3
 13367 1566 25       		.uleb128 0x25
 13368 1567 30260000 		.4byte	.LASF479
 13369 156b 01       		.byte	0x1
 13370 156c 69       		.byte	0x69
 13371 156d 97000000 		.4byte	0x97
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 285


 13372 1571 02       		.uleb128 0x2
 13373 1572 91       		.byte	0x91
 13374 1573 6B       		.sleb128 -21
 13375 1574 25       		.uleb128 0x25
 13376 1575 3F070000 		.4byte	.LASF480
 13377 1579 01       		.byte	0x1
 13378 157a 6A       		.byte	0x6a
 13379 157b 97000000 		.4byte	0x97
 13380 157f 02       		.uleb128 0x2
 13381 1580 91       		.byte	0x91
 13382 1581 6A       		.sleb128 -22
 13383 1582 28       		.uleb128 0x28
 13384 1583 70747300 		.ascii	"pts\000"
 13385 1587 01       		.byte	0x1
 13386 1588 0902     		.2byte	0x209
 13387 158a 96090000 		.4byte	0x996
 13388 158e 02       		.uleb128 0x2
 13389 158f 91       		.byte	0x91
 13390 1590 60       		.sleb128 -32
 13391 1591 29       		.uleb128 0x29
 13392 1592 A6000000 		.4byte	.LBB4
 13393 1596 94010000 		.4byte	.LBE4-.LBB4
 13394 159a AD150000 		.4byte	0x15ad
 13395 159e 25       		.uleb128 0x25
 13396 159f E50C0000 		.4byte	.LASF481
 13397 15a3 01       		.byte	0x1
 13398 15a4 7E       		.byte	0x7e
 13399 15a5 A3000000 		.4byte	0xa3
 13400 15a9 02       		.uleb128 0x2
 13401 15aa 91       		.byte	0x91
 13402 15ab 68       		.sleb128 -24
 13403 15ac 00       		.byte	0
 13404 15ad 26       		.uleb128 0x26
 13405 15ae 94070000 		.4byte	.LBB5
 13406 15b2 BE010000 		.4byte	.LBE5-.LBB5
 13407 15b6 2A       		.uleb128 0x2a
 13408 15b7 E50C0000 		.4byte	.LASF481
 13409 15bb 01       		.byte	0x1
 13410 15bc 4201     		.2byte	0x142
 13411 15be A3000000 		.4byte	0xa3
 13412 15c2 02       		.uleb128 0x2
 13413 15c3 91       		.byte	0x91
 13414 15c4 66       		.sleb128 -26
 13415 15c5 00       		.byte	0
 13416 15c6 00       		.byte	0
 13417 15c7 00       		.byte	0
 13418 15c8 2B       		.uleb128 0x2b
 13419 15c9 541A0000 		.4byte	.LASF482
 13420 15cd 01       		.byte	0x1
 13421 15ce 1C02     		.2byte	0x21c
 13422 15d0 00000000 		.4byte	.LFB67
 13423 15d4 54010000 		.4byte	.LFE67-.LFB67
 13424 15d8 01       		.uleb128 0x1
 13425 15d9 9C       		.byte	0x9c
 13426 15da 43160000 		.4byte	0x1643
 13427 15de 2C       		.uleb128 0x2c
 13428 15df 15230000 		.4byte	.LASF476
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 286


 13429 15e3 01       		.byte	0x1
 13430 15e4 1C02     		.2byte	0x21c
 13431 15e6 11010000 		.4byte	0x111
 13432 15ea 02       		.uleb128 0x2
 13433 15eb 91       		.byte	0x91
 13434 15ec 64       		.sleb128 -28
 13435 15ed 2A       		.uleb128 0x2a
 13436 15ee EB1E0000 		.4byte	.LASF472
 13437 15f2 01       		.byte	0x1
 13438 15f3 1E02     		.2byte	0x21e
 13439 15f5 730F0000 		.4byte	0xf73
 13440 15f9 02       		.uleb128 0x2
 13441 15fa 91       		.byte	0x91
 13442 15fb 74       		.sleb128 -12
 13443 15fc 26       		.uleb128 0x26
 13444 15fd 14000000 		.4byte	.LBB6
 13445 1601 34010000 		.4byte	.LBE6-.LBB6
 13446 1605 2A       		.uleb128 0x2a
 13447 1606 90040000 		.4byte	.LASF483
 13448 160a 01       		.byte	0x1
 13449 160b 2102     		.2byte	0x221
 13450 160d 49020000 		.4byte	0x249
 13451 1611 02       		.uleb128 0x2
 13452 1612 91       		.byte	0x91
 13453 1613 73       		.sleb128 -13
 13454 1614 2A       		.uleb128 0x2a
 13455 1615 4B1A0000 		.4byte	.LASF484
 13456 1619 01       		.byte	0x1
 13457 161a 2202     		.2byte	0x222
 13458 161c 97000000 		.4byte	0x97
 13459 1620 02       		.uleb128 0x2
 13460 1621 91       		.byte	0x91
 13461 1622 72       		.sleb128 -14
 13462 1623 2A       		.uleb128 0x2a
 13463 1624 B6250000 		.4byte	.LASF485
 13464 1628 01       		.byte	0x1
 13465 1629 3C02     		.2byte	0x23c
 13466 162b 49020000 		.4byte	0x249
 13467 162f 02       		.uleb128 0x2
 13468 1630 91       		.byte	0x91
 13469 1631 71       		.sleb128 -15
 13470 1632 28       		.uleb128 0x28
 13471 1633 70747300 		.ascii	"pts\000"
 13472 1637 01       		.byte	0x1
 13473 1638 3D02     		.2byte	0x23d
 13474 163a 96090000 		.4byte	0x996
 13475 163e 02       		.uleb128 0x2
 13476 163f 91       		.byte	0x91
 13477 1640 6C       		.sleb128 -20
 13478 1641 00       		.byte	0
 13479 1642 00       		.byte	0
 13480 1643 2B       		.uleb128 0x2b
 13481 1644 C0000000 		.4byte	.LASF486
 13482 1648 01       		.byte	0x1
 13483 1649 5602     		.2byte	0x256
 13484 164b 00000000 		.4byte	.LFB68
 13485 164f 2C000000 		.4byte	.LFE68-.LFB68
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 287


 13486 1653 01       		.uleb128 0x1
 13487 1654 9C       		.byte	0x9c
 13488 1655 78160000 		.4byte	0x1678
 13489 1659 2C       		.uleb128 0x2c
 13490 165a 15230000 		.4byte	.LASF476
 13491 165e 01       		.byte	0x1
 13492 165f 5602     		.2byte	0x256
 13493 1661 11010000 		.4byte	0x111
 13494 1665 02       		.uleb128 0x2
 13495 1666 91       		.byte	0x91
 13496 1667 6C       		.sleb128 -20
 13497 1668 2A       		.uleb128 0x2a
 13498 1669 EB1E0000 		.4byte	.LASF472
 13499 166d 01       		.byte	0x1
 13500 166e 5802     		.2byte	0x258
 13501 1670 730F0000 		.4byte	0xf73
 13502 1674 02       		.uleb128 0x2
 13503 1675 91       		.byte	0x91
 13504 1676 74       		.sleb128 -12
 13505 1677 00       		.byte	0
 13506 1678 2D       		.uleb128 0x2d
 13507 1679 D8280000 		.4byte	.LASF487
 13508 167d 01       		.byte	0x1
 13509 167e 9C02     		.2byte	0x29c
 13510 1680 00000000 		.4byte	.LFB69
 13511 1684 36000000 		.4byte	.LFE69-.LFB69
 13512 1688 01       		.uleb128 0x1
 13513 1689 9C       		.byte	0x9c
 13514 168a AD160000 		.4byte	0x16ad
 13515 168e 2C       		.uleb128 0x2c
 13516 168f 15230000 		.4byte	.LASF476
 13517 1693 01       		.byte	0x1
 13518 1694 9C02     		.2byte	0x29c
 13519 1696 11010000 		.4byte	0x111
 13520 169a 02       		.uleb128 0x2
 13521 169b 91       		.byte	0x91
 13522 169c 6C       		.sleb128 -20
 13523 169d 2A       		.uleb128 0x2a
 13524 169e EB1E0000 		.4byte	.LASF472
 13525 16a2 01       		.byte	0x1
 13526 16a3 9E02     		.2byte	0x29e
 13527 16a5 730F0000 		.4byte	0xf73
 13528 16a9 02       		.uleb128 0x2
 13529 16aa 91       		.byte	0x91
 13530 16ab 74       		.sleb128 -12
 13531 16ac 00       		.byte	0
 13532 16ad 2D       		.uleb128 0x2d
 13533 16ae E4290000 		.4byte	.LASF488
 13534 16b2 01       		.byte	0x1
 13535 16b3 AD02     		.2byte	0x2ad
 13536 16b5 00000000 		.4byte	.LFB70
 13537 16b9 36000000 		.4byte	.LFE70-.LFB70
 13538 16bd 01       		.uleb128 0x1
 13539 16be 9C       		.byte	0x9c
 13540 16bf E2160000 		.4byte	0x16e2
 13541 16c3 2C       		.uleb128 0x2c
 13542 16c4 15230000 		.4byte	.LASF476
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 288


 13543 16c8 01       		.byte	0x1
 13544 16c9 AD02     		.2byte	0x2ad
 13545 16cb 11010000 		.4byte	0x111
 13546 16cf 02       		.uleb128 0x2
 13547 16d0 91       		.byte	0x91
 13548 16d1 6C       		.sleb128 -20
 13549 16d2 2A       		.uleb128 0x2a
 13550 16d3 EB1E0000 		.4byte	.LASF472
 13551 16d7 01       		.byte	0x1
 13552 16d8 AF02     		.2byte	0x2af
 13553 16da 730F0000 		.4byte	0xf73
 13554 16de 02       		.uleb128 0x2
 13555 16df 91       		.byte	0x91
 13556 16e0 74       		.sleb128 -12
 13557 16e1 00       		.byte	0
 13558 16e2 2B       		.uleb128 0x2b
 13559 16e3 CC100000 		.4byte	.LASF489
 13560 16e7 01       		.byte	0x1
 13561 16e8 C202     		.2byte	0x2c2
 13562 16ea 00000000 		.4byte	.LFB71
 13563 16ee 82000000 		.4byte	.LFE71-.LFB71
 13564 16f2 01       		.uleb128 0x1
 13565 16f3 9C       		.byte	0x9c
 13566 16f4 3F170000 		.4byte	0x173f
 13567 16f8 2C       		.uleb128 0x2c
 13568 16f9 15230000 		.4byte	.LASF476
 13569 16fd 01       		.byte	0x1
 13570 16fe C202     		.2byte	0x2c2
 13571 1700 11010000 		.4byte	0x111
 13572 1704 02       		.uleb128 0x2
 13573 1705 91       		.byte	0x91
 13574 1706 64       		.sleb128 -28
 13575 1707 2A       		.uleb128 0x2a
 13576 1708 34000000 		.4byte	.LASF490
 13577 170c 01       		.byte	0x1
 13578 170d C402     		.2byte	0x2c4
 13579 170f 2B0D0000 		.4byte	0xd2b
 13580 1713 02       		.uleb128 0x2
 13581 1714 91       		.byte	0x91
 13582 1715 74       		.sleb128 -12
 13583 1716 26       		.uleb128 0x26
 13584 1717 12000000 		.4byte	.LBB7
 13585 171b 6A000000 		.4byte	.LBE7-.LBB7
 13586 171f 2A       		.uleb128 0x2a
 13587 1720 2E250000 		.4byte	.LASF491
 13588 1724 01       		.byte	0x1
 13589 1725 CB02     		.2byte	0x2cb
 13590 1727 81000000 		.4byte	0x81
 13591 172b 02       		.uleb128 0x2
 13592 172c 91       		.byte	0x91
 13593 172d 73       		.sleb128 -13
 13594 172e 2A       		.uleb128 0x2a
 13595 172f B60C0000 		.4byte	.LASF492
 13596 1733 01       		.byte	0x1
 13597 1734 CD02     		.2byte	0x2cd
 13598 1736 8C050000 		.4byte	0x58c
 13599 173a 02       		.uleb128 0x2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 289


 13600 173b 91       		.byte	0x91
 13601 173c 6C       		.sleb128 -20
 13602 173d 00       		.byte	0
 13603 173e 00       		.byte	0
 13604 173f 2B       		.uleb128 0x2b
 13605 1740 EA0A0000 		.4byte	.LASF493
 13606 1744 01       		.byte	0x1
 13607 1745 DD02     		.2byte	0x2dd
 13608 1747 00000000 		.4byte	.LFB72
 13609 174b 70000000 		.4byte	.LFE72-.LFB72
 13610 174f 01       		.uleb128 0x1
 13611 1750 9C       		.byte	0x9c
 13612 1751 9C170000 		.4byte	0x179c
 13613 1755 2C       		.uleb128 0x2c
 13614 1756 15230000 		.4byte	.LASF476
 13615 175a 01       		.byte	0x1
 13616 175b DD02     		.2byte	0x2dd
 13617 175d 11010000 		.4byte	0x111
 13618 1761 02       		.uleb128 0x2
 13619 1762 91       		.byte	0x91
 13620 1763 64       		.sleb128 -28
 13621 1764 2A       		.uleb128 0x2a
 13622 1765 34000000 		.4byte	.LASF490
 13623 1769 01       		.byte	0x1
 13624 176a DF02     		.2byte	0x2df
 13625 176c 2B0D0000 		.4byte	0xd2b
 13626 1770 02       		.uleb128 0x2
 13627 1771 91       		.byte	0x91
 13628 1772 74       		.sleb128 -12
 13629 1773 26       		.uleb128 0x26
 13630 1774 12000000 		.4byte	.LBB8
 13631 1778 58000000 		.4byte	.LBE8-.LBB8
 13632 177c 2A       		.uleb128 0x2a
 13633 177d 2E250000 		.4byte	.LASF491
 13634 1781 01       		.byte	0x1
 13635 1782 E202     		.2byte	0x2e2
 13636 1784 81000000 		.4byte	0x81
 13637 1788 02       		.uleb128 0x2
 13638 1789 91       		.byte	0x91
 13639 178a 73       		.sleb128 -13
 13640 178b 2A       		.uleb128 0x2a
 13641 178c B60C0000 		.4byte	.LASF492
 13642 1790 01       		.byte	0x1
 13643 1791 E402     		.2byte	0x2e4
 13644 1793 8C050000 		.4byte	0x58c
 13645 1797 02       		.uleb128 0x2
 13646 1798 91       		.byte	0x91
 13647 1799 6C       		.sleb128 -20
 13648 179a 00       		.byte	0
 13649 179b 00       		.byte	0
 13650 179c 2B       		.uleb128 0x2b
 13651 179d 4C040000 		.4byte	.LASF494
 13652 17a1 01       		.byte	0x1
 13653 17a2 F402     		.2byte	0x2f4
 13654 17a4 00000000 		.4byte	.LFB73
 13655 17a8 60000000 		.4byte	.LFE73-.LFB73
 13656 17ac 01       		.uleb128 0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 290


 13657 17ad 9C       		.byte	0x9c
 13658 17ae F9170000 		.4byte	0x17f9
 13659 17b2 2C       		.uleb128 0x2c
 13660 17b3 15230000 		.4byte	.LASF476
 13661 17b7 01       		.byte	0x1
 13662 17b8 F402     		.2byte	0x2f4
 13663 17ba 11010000 		.4byte	0x111
 13664 17be 02       		.uleb128 0x2
 13665 17bf 91       		.byte	0x91
 13666 17c0 64       		.sleb128 -28
 13667 17c1 2A       		.uleb128 0x2a
 13668 17c2 34000000 		.4byte	.LASF490
 13669 17c6 01       		.byte	0x1
 13670 17c7 F602     		.2byte	0x2f6
 13671 17c9 2B0D0000 		.4byte	0xd2b
 13672 17cd 02       		.uleb128 0x2
 13673 17ce 91       		.byte	0x91
 13674 17cf 74       		.sleb128 -12
 13675 17d0 26       		.uleb128 0x26
 13676 17d1 12000000 		.4byte	.LBB9
 13677 17d5 48000000 		.4byte	.LBE9-.LBB9
 13678 17d9 2A       		.uleb128 0x2a
 13679 17da 2E250000 		.4byte	.LASF491
 13680 17de 01       		.byte	0x1
 13681 17df F902     		.2byte	0x2f9
 13682 17e1 81000000 		.4byte	0x81
 13683 17e5 02       		.uleb128 0x2
 13684 17e6 91       		.byte	0x91
 13685 17e7 73       		.sleb128 -13
 13686 17e8 2A       		.uleb128 0x2a
 13687 17e9 B60C0000 		.4byte	.LASF492
 13688 17ed 01       		.byte	0x1
 13689 17ee FB02     		.2byte	0x2fb
 13690 17f0 8C050000 		.4byte	0x58c
 13691 17f4 02       		.uleb128 0x2
 13692 17f5 91       		.byte	0x91
 13693 17f6 6C       		.sleb128 -20
 13694 17f7 00       		.byte	0
 13695 17f8 00       		.byte	0
 13696 17f9 2B       		.uleb128 0x2b
 13697 17fa 1B250000 		.4byte	.LASF495
 13698 17fe 01       		.byte	0x1
 13699 17ff 0703     		.2byte	0x307
 13700 1801 00000000 		.4byte	.LFB74
 13701 1805 6A000000 		.4byte	.LFE74-.LFB74
 13702 1809 01       		.uleb128 0x1
 13703 180a 9C       		.byte	0x9c
 13704 180b 56180000 		.4byte	0x1856
 13705 180f 2C       		.uleb128 0x2c
 13706 1810 15230000 		.4byte	.LASF476
 13707 1814 01       		.byte	0x1
 13708 1815 0703     		.2byte	0x307
 13709 1817 11010000 		.4byte	0x111
 13710 181b 02       		.uleb128 0x2
 13711 181c 91       		.byte	0x91
 13712 181d 64       		.sleb128 -28
 13713 181e 2A       		.uleb128 0x2a
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 291


 13714 181f 34000000 		.4byte	.LASF490
 13715 1823 01       		.byte	0x1
 13716 1824 0903     		.2byte	0x309
 13717 1826 2B0D0000 		.4byte	0xd2b
 13718 182a 02       		.uleb128 0x2
 13719 182b 91       		.byte	0x91
 13720 182c 74       		.sleb128 -12
 13721 182d 26       		.uleb128 0x26
 13722 182e 12000000 		.4byte	.LBB10
 13723 1832 52000000 		.4byte	.LBE10-.LBB10
 13724 1836 2A       		.uleb128 0x2a
 13725 1837 2E250000 		.4byte	.LASF491
 13726 183b 01       		.byte	0x1
 13727 183c 0C03     		.2byte	0x30c
 13728 183e 81000000 		.4byte	0x81
 13729 1842 02       		.uleb128 0x2
 13730 1843 91       		.byte	0x91
 13731 1844 73       		.sleb128 -13
 13732 1845 2A       		.uleb128 0x2a
 13733 1846 B60C0000 		.4byte	.LASF492
 13734 184a 01       		.byte	0x1
 13735 184b 0E03     		.2byte	0x30e
 13736 184d 8C050000 		.4byte	0x58c
 13737 1851 02       		.uleb128 0x2
 13738 1852 91       		.byte	0x91
 13739 1853 6C       		.sleb128 -20
 13740 1854 00       		.byte	0
 13741 1855 00       		.byte	0
 13742 1856 2B       		.uleb128 0x2b
 13743 1857 76250000 		.4byte	.LASF496
 13744 185b 01       		.byte	0x1
 13745 185c 1B03     		.2byte	0x31b
 13746 185e 00000000 		.4byte	.LFB75
 13747 1862 6A000000 		.4byte	.LFE75-.LFB75
 13748 1866 01       		.uleb128 0x1
 13749 1867 9C       		.byte	0x9c
 13750 1868 B3180000 		.4byte	0x18b3
 13751 186c 2C       		.uleb128 0x2c
 13752 186d 15230000 		.4byte	.LASF476
 13753 1871 01       		.byte	0x1
 13754 1872 1B03     		.2byte	0x31b
 13755 1874 11010000 		.4byte	0x111
 13756 1878 02       		.uleb128 0x2
 13757 1879 91       		.byte	0x91
 13758 187a 64       		.sleb128 -28
 13759 187b 2A       		.uleb128 0x2a
 13760 187c 34000000 		.4byte	.LASF490
 13761 1880 01       		.byte	0x1
 13762 1881 1D03     		.2byte	0x31d
 13763 1883 2B0D0000 		.4byte	0xd2b
 13764 1887 02       		.uleb128 0x2
 13765 1888 91       		.byte	0x91
 13766 1889 74       		.sleb128 -12
 13767 188a 26       		.uleb128 0x26
 13768 188b 12000000 		.4byte	.LBB11
 13769 188f 52000000 		.4byte	.LBE11-.LBB11
 13770 1893 2A       		.uleb128 0x2a
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 292


 13771 1894 2E250000 		.4byte	.LASF491
 13772 1898 01       		.byte	0x1
 13773 1899 2003     		.2byte	0x320
 13774 189b 81000000 		.4byte	0x81
 13775 189f 02       		.uleb128 0x2
 13776 18a0 91       		.byte	0x91
 13777 18a1 73       		.sleb128 -13
 13778 18a2 2A       		.uleb128 0x2a
 13779 18a3 B60C0000 		.4byte	.LASF492
 13780 18a7 01       		.byte	0x1
 13781 18a8 2203     		.2byte	0x322
 13782 18aa 8C050000 		.4byte	0x58c
 13783 18ae 02       		.uleb128 0x2
 13784 18af 91       		.byte	0x91
 13785 18b0 6C       		.sleb128 -20
 13786 18b1 00       		.byte	0
 13787 18b2 00       		.byte	0
 13788 18b3 2B       		.uleb128 0x2b
 13789 18b4 BF030000 		.4byte	.LASF497
 13790 18b8 01       		.byte	0x1
 13791 18b9 3003     		.2byte	0x330
 13792 18bb 00000000 		.4byte	.LFB76
 13793 18bf 6A000000 		.4byte	.LFE76-.LFB76
 13794 18c3 01       		.uleb128 0x1
 13795 18c4 9C       		.byte	0x9c
 13796 18c5 10190000 		.4byte	0x1910
 13797 18c9 2C       		.uleb128 0x2c
 13798 18ca 15230000 		.4byte	.LASF476
 13799 18ce 01       		.byte	0x1
 13800 18cf 3003     		.2byte	0x330
 13801 18d1 11010000 		.4byte	0x111
 13802 18d5 02       		.uleb128 0x2
 13803 18d6 91       		.byte	0x91
 13804 18d7 64       		.sleb128 -28
 13805 18d8 2A       		.uleb128 0x2a
 13806 18d9 34000000 		.4byte	.LASF490
 13807 18dd 01       		.byte	0x1
 13808 18de 3203     		.2byte	0x332
 13809 18e0 2B0D0000 		.4byte	0xd2b
 13810 18e4 02       		.uleb128 0x2
 13811 18e5 91       		.byte	0x91
 13812 18e6 74       		.sleb128 -12
 13813 18e7 26       		.uleb128 0x26
 13814 18e8 12000000 		.4byte	.LBB12
 13815 18ec 52000000 		.4byte	.LBE12-.LBB12
 13816 18f0 2A       		.uleb128 0x2a
 13817 18f1 2E250000 		.4byte	.LASF491
 13818 18f5 01       		.byte	0x1
 13819 18f6 3503     		.2byte	0x335
 13820 18f8 81000000 		.4byte	0x81
 13821 18fc 02       		.uleb128 0x2
 13822 18fd 91       		.byte	0x91
 13823 18fe 73       		.sleb128 -13
 13824 18ff 2A       		.uleb128 0x2a
 13825 1900 B60C0000 		.4byte	.LASF492
 13826 1904 01       		.byte	0x1
 13827 1905 3703     		.2byte	0x337
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 293


 13828 1907 8C050000 		.4byte	0x58c
 13829 190b 02       		.uleb128 0x2
 13830 190c 91       		.byte	0x91
 13831 190d 6C       		.sleb128 -20
 13832 190e 00       		.byte	0
 13833 190f 00       		.byte	0
 13834 1910 2B       		.uleb128 0x2b
 13835 1911 350E0000 		.4byte	.LASF498
 13836 1915 01       		.byte	0x1
 13837 1916 4503     		.2byte	0x345
 13838 1918 00000000 		.4byte	.LFB77
 13839 191c 6A000000 		.4byte	.LFE77-.LFB77
 13840 1920 01       		.uleb128 0x1
 13841 1921 9C       		.byte	0x9c
 13842 1922 6D190000 		.4byte	0x196d
 13843 1926 2C       		.uleb128 0x2c
 13844 1927 15230000 		.4byte	.LASF476
 13845 192b 01       		.byte	0x1
 13846 192c 4503     		.2byte	0x345
 13847 192e 11010000 		.4byte	0x111
 13848 1932 02       		.uleb128 0x2
 13849 1933 91       		.byte	0x91
 13850 1934 64       		.sleb128 -28
 13851 1935 2A       		.uleb128 0x2a
 13852 1936 34000000 		.4byte	.LASF490
 13853 193a 01       		.byte	0x1
 13854 193b 4703     		.2byte	0x347
 13855 193d 2B0D0000 		.4byte	0xd2b
 13856 1941 02       		.uleb128 0x2
 13857 1942 91       		.byte	0x91
 13858 1943 74       		.sleb128 -12
 13859 1944 26       		.uleb128 0x26
 13860 1945 12000000 		.4byte	.LBB13
 13861 1949 52000000 		.4byte	.LBE13-.LBB13
 13862 194d 2A       		.uleb128 0x2a
 13863 194e 2E250000 		.4byte	.LASF491
 13864 1952 01       		.byte	0x1
 13865 1953 4A03     		.2byte	0x34a
 13866 1955 81000000 		.4byte	0x81
 13867 1959 02       		.uleb128 0x2
 13868 195a 91       		.byte	0x91
 13869 195b 73       		.sleb128 -13
 13870 195c 2A       		.uleb128 0x2a
 13871 195d B60C0000 		.4byte	.LASF492
 13872 1961 01       		.byte	0x1
 13873 1962 4C03     		.2byte	0x34c
 13874 1964 8C050000 		.4byte	0x58c
 13875 1968 02       		.uleb128 0x2
 13876 1969 91       		.byte	0x91
 13877 196a 6C       		.sleb128 -20
 13878 196b 00       		.byte	0
 13879 196c 00       		.byte	0
 13880 196d 2B       		.uleb128 0x2b
 13881 196e 201B0000 		.4byte	.LASF499
 13882 1972 01       		.byte	0x1
 13883 1973 5D03     		.2byte	0x35d
 13884 1975 00000000 		.4byte	.LFB78
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 294


 13885 1979 AA030000 		.4byte	.LFE78-.LFB78
 13886 197d 01       		.uleb128 0x1
 13887 197e 9C       		.byte	0x9c
 13888 197f 631A0000 		.4byte	0x1a63
 13889 1983 2C       		.uleb128 0x2c
 13890 1984 15230000 		.4byte	.LASF476
 13891 1988 01       		.byte	0x1
 13892 1989 5D03     		.2byte	0x35d
 13893 198b 11010000 		.4byte	0x111
 13894 198f 02       		.uleb128 0x2
 13895 1990 91       		.byte	0x91
 13896 1991 4C       		.sleb128 -52
 13897 1992 2A       		.uleb128 0x2a
 13898 1993 34000000 		.4byte	.LASF490
 13899 1997 01       		.byte	0x1
 13900 1998 5F03     		.2byte	0x35f
 13901 199a 2B0D0000 		.4byte	0xd2b
 13902 199e 02       		.uleb128 0x2
 13903 199f 91       		.byte	0x91
 13904 19a0 68       		.sleb128 -24
 13905 19a1 26       		.uleb128 0x26
 13906 19a2 14000000 		.4byte	.LBB14
 13907 19a6 90030000 		.4byte	.LBE14-.LBB14
 13908 19aa 2A       		.uleb128 0x2a
 13909 19ab 2E250000 		.4byte	.LASF491
 13910 19af 01       		.byte	0x1
 13911 19b0 6203     		.2byte	0x362
 13912 19b2 81000000 		.4byte	0x81
 13913 19b6 02       		.uleb128 0x2
 13914 19b7 91       		.byte	0x91
 13915 19b8 6F       		.sleb128 -17
 13916 19b9 2A       		.uleb128 0x2a
 13917 19ba B60C0000 		.4byte	.LASF492
 13918 19be 01       		.byte	0x1
 13919 19bf 6303     		.2byte	0x363
 13920 19c1 8C050000 		.4byte	0x58c
 13921 19c5 02       		.uleb128 0x2
 13922 19c6 91       		.byte	0x91
 13923 19c7 64       		.sleb128 -28
 13924 19c8 29       		.uleb128 0x29
 13925 19c9 5A000000 		.4byte	.LBB15
 13926 19cd A8010000 		.4byte	.LBE15-.LBB15
 13927 19d1 2A1A0000 		.4byte	0x1a2a
 13928 19d5 2A       		.uleb128 0x2a
 13929 19d6 7D260000 		.4byte	.LASF500
 13930 19da 01       		.byte	0x1
 13931 19db 6B03     		.2byte	0x36b
 13932 19dd 97000000 		.4byte	0x97
 13933 19e1 02       		.uleb128 0x2
 13934 19e2 91       		.byte	0x91
 13935 19e3 63       		.sleb128 -29
 13936 19e4 28       		.uleb128 0x28
 13937 19e5 70747200 		.ascii	"ptr\000"
 13938 19e9 01       		.byte	0x1
 13939 19ea 8003     		.2byte	0x380
 13940 19ec 3B010000 		.4byte	0x13b
 13941 19f0 02       		.uleb128 0x2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 295


 13942 19f1 91       		.byte	0x91
 13943 19f2 5C       		.sleb128 -36
 13944 19f3 29       		.uleb128 0x29
 13945 19f4 54010000 		.4byte	.LBB16
 13946 19f8 4E000000 		.4byte	.LBE16-.LBB16
 13947 19fc 101A0000 		.4byte	0x1a10
 13948 1a00 2A       		.uleb128 0x2a
 13949 1a01 1D160000 		.4byte	.LASF501
 13950 1a05 01       		.byte	0x1
 13951 1a06 8503     		.2byte	0x385
 13952 1a08 97000000 		.4byte	0x97
 13953 1a0c 02       		.uleb128 0x2
 13954 1a0d 91       		.byte	0x91
 13955 1a0e 6E       		.sleb128 -18
 13956 1a0f 00       		.byte	0
 13957 1a10 26       		.uleb128 0x26
 13958 1a11 A4010000 		.4byte	.LBB17
 13959 1a15 5E000000 		.4byte	.LBE17-.LBB17
 13960 1a19 2A       		.uleb128 0x2a
 13961 1a1a 1D160000 		.4byte	.LASF501
 13962 1a1e 01       		.byte	0x1
 13963 1a1f 8D03     		.2byte	0x38d
 13964 1a21 97000000 		.4byte	0x97
 13965 1a25 02       		.uleb128 0x2
 13966 1a26 91       		.byte	0x91
 13967 1a27 6D       		.sleb128 -19
 13968 1a28 00       		.byte	0
 13969 1a29 00       		.byte	0
 13970 1a2a 26       		.uleb128 0x26
 13971 1a2b 0E020000 		.4byte	.LBB18
 13972 1a2f 38010000 		.4byte	.LBE18-.LBB18
 13973 1a33 2A       		.uleb128 0x2a
 13974 1a34 7D260000 		.4byte	.LASF500
 13975 1a38 01       		.byte	0x1
 13976 1a39 9703     		.2byte	0x397
 13977 1a3b 97000000 		.4byte	0x97
 13978 1a3f 02       		.uleb128 0x2
 13979 1a40 91       		.byte	0x91
 13980 1a41 5B       		.sleb128 -37
 13981 1a42 28       		.uleb128 0x28
 13982 1a43 70747200 		.ascii	"ptr\000"
 13983 1a47 01       		.byte	0x1
 13984 1a48 A503     		.2byte	0x3a5
 13985 1a4a 3B010000 		.4byte	0x13b
 13986 1a4e 02       		.uleb128 0x2
 13987 1a4f 91       		.byte	0x91
 13988 1a50 54       		.sleb128 -44
 13989 1a51 2A       		.uleb128 0x2a
 13990 1a52 1D160000 		.4byte	.LASF501
 13991 1a56 01       		.byte	0x1
 13992 1a57 AB03     		.2byte	0x3ab
 13993 1a59 97000000 		.4byte	0x97
 13994 1a5d 02       		.uleb128 0x2
 13995 1a5e 91       		.byte	0x91
 13996 1a5f 6C       		.sleb128 -20
 13997 1a60 00       		.byte	0
 13998 1a61 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 296


 13999 1a62 00       		.byte	0
 14000 1a63 2B       		.uleb128 0x2b
 14001 1a64 AD080000 		.4byte	.LASF502
 14002 1a68 01       		.byte	0x1
 14003 1a69 C603     		.2byte	0x3c6
 14004 1a6b 00000000 		.4byte	.LFB79
 14005 1a6f 78030000 		.4byte	.LFE79-.LFB79
 14006 1a73 01       		.uleb128 0x1
 14007 1a74 9C       		.byte	0x9c
 14008 1a75 591B0000 		.4byte	0x1b59
 14009 1a79 2C       		.uleb128 0x2c
 14010 1a7a 15230000 		.4byte	.LASF476
 14011 1a7e 01       		.byte	0x1
 14012 1a7f C603     		.2byte	0x3c6
 14013 1a81 11010000 		.4byte	0x111
 14014 1a85 02       		.uleb128 0x2
 14015 1a86 91       		.byte	0x91
 14016 1a87 4C       		.sleb128 -52
 14017 1a88 2A       		.uleb128 0x2a
 14018 1a89 34000000 		.4byte	.LASF490
 14019 1a8d 01       		.byte	0x1
 14020 1a8e C803     		.2byte	0x3c8
 14021 1a90 2B0D0000 		.4byte	0xd2b
 14022 1a94 02       		.uleb128 0x2
 14023 1a95 91       		.byte	0x91
 14024 1a96 68       		.sleb128 -24
 14025 1a97 26       		.uleb128 0x26
 14026 1a98 14000000 		.4byte	.LBB19
 14027 1a9c 58030000 		.4byte	.LBE19-.LBB19
 14028 1aa0 2A       		.uleb128 0x2a
 14029 1aa1 2E250000 		.4byte	.LASF491
 14030 1aa5 01       		.byte	0x1
 14031 1aa6 CB03     		.2byte	0x3cb
 14032 1aa8 81000000 		.4byte	0x81
 14033 1aac 02       		.uleb128 0x2
 14034 1aad 91       		.byte	0x91
 14035 1aae 6F       		.sleb128 -17
 14036 1aaf 2A       		.uleb128 0x2a
 14037 1ab0 B60C0000 		.4byte	.LASF492
 14038 1ab4 01       		.byte	0x1
 14039 1ab5 CC03     		.2byte	0x3cc
 14040 1ab7 8C050000 		.4byte	0x58c
 14041 1abb 02       		.uleb128 0x2
 14042 1abc 91       		.byte	0x91
 14043 1abd 64       		.sleb128 -28
 14044 1abe 29       		.uleb128 0x29
 14045 1abf 5A000000 		.4byte	.LBB20
 14046 1ac3 88010000 		.4byte	.LBE20-.LBB20
 14047 1ac7 201B0000 		.4byte	0x1b20
 14048 1acb 2A       		.uleb128 0x2a
 14049 1acc 7D260000 		.4byte	.LASF500
 14050 1ad0 01       		.byte	0x1
 14051 1ad1 D403     		.2byte	0x3d4
 14052 1ad3 97000000 		.4byte	0x97
 14053 1ad7 02       		.uleb128 0x2
 14054 1ad8 91       		.byte	0x91
 14055 1ad9 63       		.sleb128 -29
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 297


 14056 1ada 28       		.uleb128 0x28
 14057 1adb 70747200 		.ascii	"ptr\000"
 14058 1adf 01       		.byte	0x1
 14059 1ae0 E803     		.2byte	0x3e8
 14060 1ae2 3B010000 		.4byte	0x13b
 14061 1ae6 02       		.uleb128 0x2
 14062 1ae7 91       		.byte	0x91
 14063 1ae8 5C       		.sleb128 -36
 14064 1ae9 29       		.uleb128 0x29
 14065 1aea 28010000 		.4byte	.LBB21
 14066 1aee 54000000 		.4byte	.LBE21-.LBB21
 14067 1af2 061B0000 		.4byte	0x1b06
 14068 1af6 2A       		.uleb128 0x2a
 14069 1af7 1D160000 		.4byte	.LASF501
 14070 1afb 01       		.byte	0x1
 14071 1afc ED03     		.2byte	0x3ed
 14072 1afe 97000000 		.4byte	0x97
 14073 1b02 02       		.uleb128 0x2
 14074 1b03 91       		.byte	0x91
 14075 1b04 6E       		.sleb128 -18
 14076 1b05 00       		.byte	0
 14077 1b06 26       		.uleb128 0x26
 14078 1b07 7E010000 		.4byte	.LBB22
 14079 1b0b 64000000 		.4byte	.LBE22-.LBB22
 14080 1b0f 2A       		.uleb128 0x2a
 14081 1b10 1D160000 		.4byte	.LASF501
 14082 1b14 01       		.byte	0x1
 14083 1b15 F503     		.2byte	0x3f5
 14084 1b17 97000000 		.4byte	0x97
 14085 1b1b 02       		.uleb128 0x2
 14086 1b1c 91       		.byte	0x91
 14087 1b1d 6D       		.sleb128 -19
 14088 1b1e 00       		.byte	0
 14089 1b1f 00       		.byte	0
 14090 1b20 26       		.uleb128 0x26
 14091 1b21 EE010000 		.4byte	.LBB23
 14092 1b25 20010000 		.4byte	.LBE23-.LBB23
 14093 1b29 2A       		.uleb128 0x2a
 14094 1b2a 7D260000 		.4byte	.LASF500
 14095 1b2e 01       		.byte	0x1
 14096 1b2f FF03     		.2byte	0x3ff
 14097 1b31 97000000 		.4byte	0x97
 14098 1b35 02       		.uleb128 0x2
 14099 1b36 91       		.byte	0x91
 14100 1b37 5B       		.sleb128 -37
 14101 1b38 28       		.uleb128 0x28
 14102 1b39 70747200 		.ascii	"ptr\000"
 14103 1b3d 01       		.byte	0x1
 14104 1b3e 0C04     		.2byte	0x40c
 14105 1b40 3B010000 		.4byte	0x13b
 14106 1b44 02       		.uleb128 0x2
 14107 1b45 91       		.byte	0x91
 14108 1b46 54       		.sleb128 -44
 14109 1b47 2A       		.uleb128 0x2a
 14110 1b48 1D160000 		.4byte	.LASF501
 14111 1b4c 01       		.byte	0x1
 14112 1b4d 1204     		.2byte	0x412
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 298


 14113 1b4f 97000000 		.4byte	0x97
 14114 1b53 02       		.uleb128 0x2
 14115 1b54 91       		.byte	0x91
 14116 1b55 6C       		.sleb128 -20
 14117 1b56 00       		.byte	0
 14118 1b57 00       		.byte	0
 14119 1b58 00       		.byte	0
 14120 1b59 2B       		.uleb128 0x2b
 14121 1b5a 76030000 		.4byte	.LASF503
 14122 1b5e 01       		.byte	0x1
 14123 1b5f 2C04     		.2byte	0x42c
 14124 1b61 00000000 		.4byte	.LFB80
 14125 1b65 C4020000 		.4byte	.LFE80-.LFB80
 14126 1b69 01       		.uleb128 0x1
 14127 1b6a 9C       		.byte	0x9c
 14128 1b6b 4F1C0000 		.4byte	0x1c4f
 14129 1b6f 2C       		.uleb128 0x2c
 14130 1b70 15230000 		.4byte	.LASF476
 14131 1b74 01       		.byte	0x1
 14132 1b75 2C04     		.2byte	0x42c
 14133 1b77 11010000 		.4byte	0x111
 14134 1b7b 02       		.uleb128 0x2
 14135 1b7c 91       		.byte	0x91
 14136 1b7d 4C       		.sleb128 -52
 14137 1b7e 2A       		.uleb128 0x2a
 14138 1b7f 34000000 		.4byte	.LASF490
 14139 1b83 01       		.byte	0x1
 14140 1b84 2E04     		.2byte	0x42e
 14141 1b86 2B0D0000 		.4byte	0xd2b
 14142 1b8a 02       		.uleb128 0x2
 14143 1b8b 91       		.byte	0x91
 14144 1b8c 68       		.sleb128 -24
 14145 1b8d 26       		.uleb128 0x26
 14146 1b8e 14000000 		.4byte	.LBB24
 14147 1b92 A6020000 		.4byte	.LBE24-.LBB24
 14148 1b96 2A       		.uleb128 0x2a
 14149 1b97 2E250000 		.4byte	.LASF491
 14150 1b9b 01       		.byte	0x1
 14151 1b9c 3104     		.2byte	0x431
 14152 1b9e 81000000 		.4byte	0x81
 14153 1ba2 02       		.uleb128 0x2
 14154 1ba3 91       		.byte	0x91
 14155 1ba4 6F       		.sleb128 -17
 14156 1ba5 2A       		.uleb128 0x2a
 14157 1ba6 B60C0000 		.4byte	.LASF492
 14158 1baa 01       		.byte	0x1
 14159 1bab 3304     		.2byte	0x433
 14160 1bad 8C050000 		.4byte	0x58c
 14161 1bb1 02       		.uleb128 0x2
 14162 1bb2 91       		.byte	0x91
 14163 1bb3 64       		.sleb128 -28
 14164 1bb4 29       		.uleb128 0x29
 14165 1bb5 5A000000 		.4byte	.LBB25
 14166 1bb9 30010000 		.4byte	.LBE25-.LBB25
 14167 1bbd 161C0000 		.4byte	0x1c16
 14168 1bc1 2A       		.uleb128 0x2a
 14169 1bc2 7D260000 		.4byte	.LASF500
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 299


 14170 1bc6 01       		.byte	0x1
 14171 1bc7 3A04     		.2byte	0x43a
 14172 1bc9 97000000 		.4byte	0x97
 14173 1bcd 02       		.uleb128 0x2
 14174 1bce 91       		.byte	0x91
 14175 1bcf 63       		.sleb128 -29
 14176 1bd0 28       		.uleb128 0x28
 14177 1bd1 70747200 		.ascii	"ptr\000"
 14178 1bd5 01       		.byte	0x1
 14179 1bd6 4804     		.2byte	0x448
 14180 1bd8 3B010000 		.4byte	0x13b
 14181 1bdc 02       		.uleb128 0x2
 14182 1bdd 91       		.byte	0x91
 14183 1bde 5C       		.sleb128 -36
 14184 1bdf 29       		.uleb128 0x29
 14185 1be0 D0000000 		.4byte	.LBB26
 14186 1be4 54000000 		.4byte	.LBE26-.LBB26
 14187 1be8 FC1B0000 		.4byte	0x1bfc
 14188 1bec 2A       		.uleb128 0x2a
 14189 1bed 1D160000 		.4byte	.LASF501
 14190 1bf1 01       		.byte	0x1
 14191 1bf2 4D04     		.2byte	0x44d
 14192 1bf4 97000000 		.4byte	0x97
 14193 1bf8 02       		.uleb128 0x2
 14194 1bf9 91       		.byte	0x91
 14195 1bfa 6E       		.sleb128 -18
 14196 1bfb 00       		.byte	0
 14197 1bfc 26       		.uleb128 0x26
 14198 1bfd 26010000 		.4byte	.LBB27
 14199 1c01 64000000 		.4byte	.LBE27-.LBB27
 14200 1c05 2A       		.uleb128 0x2a
 14201 1c06 1D160000 		.4byte	.LASF501
 14202 1c0a 01       		.byte	0x1
 14203 1c0b 5504     		.2byte	0x455
 14204 1c0d 97000000 		.4byte	0x97
 14205 1c11 02       		.uleb128 0x2
 14206 1c12 91       		.byte	0x91
 14207 1c13 6D       		.sleb128 -19
 14208 1c14 00       		.byte	0
 14209 1c15 00       		.byte	0
 14210 1c16 26       		.uleb128 0x26
 14211 1c17 94010000 		.4byte	.LBB28
 14212 1c1b C8000000 		.4byte	.LBE28-.LBB28
 14213 1c1f 2A       		.uleb128 0x2a
 14214 1c20 7D260000 		.4byte	.LASF500
 14215 1c24 01       		.byte	0x1
 14216 1c25 5F04     		.2byte	0x45f
 14217 1c27 97000000 		.4byte	0x97
 14218 1c2b 02       		.uleb128 0x2
 14219 1c2c 91       		.byte	0x91
 14220 1c2d 5B       		.sleb128 -37
 14221 1c2e 28       		.uleb128 0x28
 14222 1c2f 70747200 		.ascii	"ptr\000"
 14223 1c33 01       		.byte	0x1
 14224 1c34 6604     		.2byte	0x466
 14225 1c36 3B010000 		.4byte	0x13b
 14226 1c3a 02       		.uleb128 0x2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 300


 14227 1c3b 91       		.byte	0x91
 14228 1c3c 54       		.sleb128 -44
 14229 1c3d 2A       		.uleb128 0x2a
 14230 1c3e 1D160000 		.4byte	.LASF501
 14231 1c42 01       		.byte	0x1
 14232 1c43 6C04     		.2byte	0x46c
 14233 1c45 97000000 		.4byte	0x97
 14234 1c49 02       		.uleb128 0x2
 14235 1c4a 91       		.byte	0x91
 14236 1c4b 6C       		.sleb128 -20
 14237 1c4c 00       		.byte	0
 14238 1c4d 00       		.byte	0
 14239 1c4e 00       		.byte	0
 14240 1c4f 2B       		.uleb128 0x2b
 14241 1c50 2E0F0000 		.4byte	.LASF504
 14242 1c54 01       		.byte	0x1
 14243 1c55 8004     		.2byte	0x480
 14244 1c57 00000000 		.4byte	.LFB81
 14245 1c5b 14020000 		.4byte	.LFE81-.LFB81
 14246 1c5f 01       		.uleb128 0x1
 14247 1c60 9C       		.byte	0x9c
 14248 1c61 DE1C0000 		.4byte	0x1cde
 14249 1c65 2C       		.uleb128 0x2c
 14250 1c66 15230000 		.4byte	.LASF476
 14251 1c6a 01       		.byte	0x1
 14252 1c6b 8004     		.2byte	0x480
 14253 1c6d 30010000 		.4byte	0x130
 14254 1c71 02       		.uleb128 0x2
 14255 1c72 91       		.byte	0x91
 14256 1c73 54       		.sleb128 -44
 14257 1c74 2A       		.uleb128 0x2a
 14258 1c75 EB1E0000 		.4byte	.LASF472
 14259 1c79 01       		.byte	0x1
 14260 1c7a 8204     		.2byte	0x482
 14261 1c7c 730F0000 		.4byte	0xf73
 14262 1c80 02       		.uleb128 0x2
 14263 1c81 91       		.byte	0x91
 14264 1c82 6C       		.sleb128 -20
 14265 1c83 26       		.uleb128 0x26
 14266 1c84 14000000 		.4byte	.LBB29
 14267 1c88 FA010000 		.4byte	.LBE29-.LBB29
 14268 1c8c 28       		.uleb128 0x28
 14269 1c8d 70747300 		.ascii	"pts\000"
 14270 1c91 01       		.byte	0x1
 14271 1c92 8904     		.2byte	0x489
 14272 1c94 96090000 		.4byte	0x996
 14273 1c98 02       		.uleb128 0x2
 14274 1c99 91       		.byte	0x91
 14275 1c9a 68       		.sleb128 -24
 14276 1c9b 26       		.uleb128 0x26
 14277 1c9c 4E000000 		.4byte	.LBB30
 14278 1ca0 C0010000 		.4byte	.LBE30-.LBB30
 14279 1ca4 2A       		.uleb128 0x2a
 14280 1ca5 2E250000 		.4byte	.LASF491
 14281 1ca9 01       		.byte	0x1
 14282 1caa 8D04     		.2byte	0x48d
 14283 1cac 97000000 		.4byte	0x97
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 301


 14284 1cb0 02       		.uleb128 0x2
 14285 1cb1 91       		.byte	0x91
 14286 1cb2 67       		.sleb128 -25
 14287 1cb3 2A       		.uleb128 0x2a
 14288 1cb4 43150000 		.4byte	.LASF505
 14289 1cb8 01       		.byte	0x1
 14290 1cb9 AA04     		.2byte	0x4aa
 14291 1cbb 96090000 		.4byte	0x996
 14292 1cbf 02       		.uleb128 0x2
 14293 1cc0 91       		.byte	0x91
 14294 1cc1 5C       		.sleb128 -36
 14295 1cc2 26       		.uleb128 0x26
 14296 1cc3 98000000 		.4byte	.LBB31
 14297 1cc7 50000000 		.4byte	.LBE31-.LBB31
 14298 1ccb 2A       		.uleb128 0x2a
 14299 1ccc EE1F0000 		.4byte	.LASF506
 14300 1cd0 01       		.byte	0x1
 14301 1cd1 9804     		.2byte	0x498
 14302 1cd3 AF000000 		.4byte	0xaf
 14303 1cd7 02       		.uleb128 0x2
 14304 1cd8 91       		.byte	0x91
 14305 1cd9 60       		.sleb128 -32
 14306 1cda 00       		.byte	0
 14307 1cdb 00       		.byte	0
 14308 1cdc 00       		.byte	0
 14309 1cdd 00       		.byte	0
 14310 1cde 2B       		.uleb128 0x2b
 14311 1cdf 491D0000 		.4byte	.LASF507
 14312 1ce3 01       		.byte	0x1
 14313 1ce4 BB04     		.2byte	0x4bb
 14314 1ce6 00000000 		.4byte	.LFB82
 14315 1cea E8000000 		.4byte	.LFE82-.LFB82
 14316 1cee 01       		.uleb128 0x1
 14317 1cef 9C       		.byte	0x9c
 14318 1cf0 541D0000 		.4byte	0x1d54
 14319 1cf4 2C       		.uleb128 0x2c
 14320 1cf5 15230000 		.4byte	.LASF476
 14321 1cf9 01       		.byte	0x1
 14322 1cfa BB04     		.2byte	0x4bb
 14323 1cfc 30010000 		.4byte	0x130
 14324 1d00 02       		.uleb128 0x2
 14325 1d01 91       		.byte	0x91
 14326 1d02 64       		.sleb128 -28
 14327 1d03 2A       		.uleb128 0x2a
 14328 1d04 EB1E0000 		.4byte	.LASF472
 14329 1d08 01       		.byte	0x1
 14330 1d09 BD04     		.2byte	0x4bd
 14331 1d0b 730F0000 		.4byte	0xf73
 14332 1d0f 02       		.uleb128 0x2
 14333 1d10 91       		.byte	0x91
 14334 1d11 74       		.sleb128 -12
 14335 1d12 26       		.uleb128 0x26
 14336 1d13 12000000 		.4byte	.LBB32
 14337 1d17 D0000000 		.4byte	.LBE32-.LBB32
 14338 1d1b 28       		.uleb128 0x28
 14339 1d1c 70747300 		.ascii	"pts\000"
 14340 1d20 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 302


 14341 1d21 C404     		.2byte	0x4c4
 14342 1d23 96090000 		.4byte	0x996
 14343 1d27 02       		.uleb128 0x2
 14344 1d28 91       		.byte	0x91
 14345 1d29 70       		.sleb128 -16
 14346 1d2a 26       		.uleb128 0x26
 14347 1d2b 4A000000 		.4byte	.LBB33
 14348 1d2f 98000000 		.4byte	.LBE33-.LBB33
 14349 1d33 2A       		.uleb128 0x2a
 14350 1d34 2E250000 		.4byte	.LASF491
 14351 1d38 01       		.byte	0x1
 14352 1d39 C804     		.2byte	0x4c8
 14353 1d3b 97000000 		.4byte	0x97
 14354 1d3f 02       		.uleb128 0x2
 14355 1d40 91       		.byte	0x91
 14356 1d41 6F       		.sleb128 -17
 14357 1d42 2A       		.uleb128 0x2a
 14358 1d43 43150000 		.4byte	.LASF505
 14359 1d47 01       		.byte	0x1
 14360 1d48 CE04     		.2byte	0x4ce
 14361 1d4a 96090000 		.4byte	0x996
 14362 1d4e 02       		.uleb128 0x2
 14363 1d4f 91       		.byte	0x91
 14364 1d50 68       		.sleb128 -24
 14365 1d51 00       		.byte	0
 14366 1d52 00       		.byte	0
 14367 1d53 00       		.byte	0
 14368 1d54 2B       		.uleb128 0x2b
 14369 1d55 A3250000 		.4byte	.LASF508
 14370 1d59 01       		.byte	0x1
 14371 1d5a E504     		.2byte	0x4e5
 14372 1d5c 00000000 		.4byte	.LFB83
 14373 1d60 28030000 		.4byte	.LFE83-.LFB83
 14374 1d64 01       		.uleb128 0x1
 14375 1d65 9C       		.byte	0x9c
 14376 1d66 231E0000 		.4byte	0x1e23
 14377 1d6a 2C       		.uleb128 0x2c
 14378 1d6b 15230000 		.4byte	.LASF476
 14379 1d6f 01       		.byte	0x1
 14380 1d70 E504     		.2byte	0x4e5
 14381 1d72 11010000 		.4byte	0x111
 14382 1d76 02       		.uleb128 0x2
 14383 1d77 91       		.byte	0x91
 14384 1d78 4C       		.sleb128 -52
 14385 1d79 2A       		.uleb128 0x2a
 14386 1d7a 34000000 		.4byte	.LASF490
 14387 1d7e 01       		.byte	0x1
 14388 1d7f E704     		.2byte	0x4e7
 14389 1d81 2B0D0000 		.4byte	0xd2b
 14390 1d85 02       		.uleb128 0x2
 14391 1d86 91       		.byte	0x91
 14392 1d87 68       		.sleb128 -24
 14393 1d88 26       		.uleb128 0x26
 14394 1d89 14000000 		.4byte	.LBB34
 14395 1d8d 08030000 		.4byte	.LBE34-.LBB34
 14396 1d91 2A       		.uleb128 0x2a
 14397 1d92 2E250000 		.4byte	.LASF491
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 303


 14398 1d96 01       		.byte	0x1
 14399 1d97 EA04     		.2byte	0x4ea
 14400 1d99 81000000 		.4byte	0x81
 14401 1d9d 02       		.uleb128 0x2
 14402 1d9e 91       		.byte	0x91
 14403 1d9f 6F       		.sleb128 -17
 14404 1da0 2A       		.uleb128 0x2a
 14405 1da1 B60C0000 		.4byte	.LASF492
 14406 1da5 01       		.byte	0x1
 14407 1da6 EB04     		.2byte	0x4eb
 14408 1da8 8C050000 		.4byte	0x58c
 14409 1dac 02       		.uleb128 0x2
 14410 1dad 91       		.byte	0x91
 14411 1dae 64       		.sleb128 -28
 14412 1daf 29       		.uleb128 0x29
 14413 1db0 5A000000 		.4byte	.LBB35
 14414 1db4 2C010000 		.4byte	.LBE35-.LBB35
 14415 1db8 EA1D0000 		.4byte	0x1dea
 14416 1dbc 2A       		.uleb128 0x2a
 14417 1dbd 7D260000 		.4byte	.LASF500
 14418 1dc1 01       		.byte	0x1
 14419 1dc2 F704     		.2byte	0x4f7
 14420 1dc4 97000000 		.4byte	0x97
 14421 1dc8 02       		.uleb128 0x2
 14422 1dc9 91       		.byte	0x91
 14423 1dca 63       		.sleb128 -29
 14424 1dcb 28       		.uleb128 0x28
 14425 1dcc 70747200 		.ascii	"ptr\000"
 14426 1dd0 01       		.byte	0x1
 14427 1dd1 0305     		.2byte	0x503
 14428 1dd3 3B010000 		.4byte	0x13b
 14429 1dd7 02       		.uleb128 0x2
 14430 1dd8 91       		.byte	0x91
 14431 1dd9 5C       		.sleb128 -36
 14432 1dda 2A       		.uleb128 0x2a
 14433 1ddb 1D160000 		.4byte	.LASF501
 14434 1ddf 01       		.byte	0x1
 14435 1de0 0C05     		.2byte	0x50c
 14436 1de2 97000000 		.4byte	0x97
 14437 1de6 02       		.uleb128 0x2
 14438 1de7 91       		.byte	0x91
 14439 1de8 6E       		.sleb128 -18
 14440 1de9 00       		.byte	0
 14441 1dea 26       		.uleb128 0x26
 14442 1deb 92010000 		.4byte	.LBB36
 14443 1def 2C010000 		.4byte	.LBE36-.LBB36
 14444 1df3 2A       		.uleb128 0x2a
 14445 1df4 7D260000 		.4byte	.LASF500
 14446 1df8 01       		.byte	0x1
 14447 1df9 1605     		.2byte	0x516
 14448 1dfb 97000000 		.4byte	0x97
 14449 1dff 02       		.uleb128 0x2
 14450 1e00 91       		.byte	0x91
 14451 1e01 5B       		.sleb128 -37
 14452 1e02 28       		.uleb128 0x28
 14453 1e03 70747200 		.ascii	"ptr\000"
 14454 1e07 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 304


 14455 1e08 2205     		.2byte	0x522
 14456 1e0a 3B010000 		.4byte	0x13b
 14457 1e0e 02       		.uleb128 0x2
 14458 1e0f 91       		.byte	0x91
 14459 1e10 54       		.sleb128 -44
 14460 1e11 2A       		.uleb128 0x2a
 14461 1e12 1D160000 		.4byte	.LASF501
 14462 1e16 01       		.byte	0x1
 14463 1e17 2B05     		.2byte	0x52b
 14464 1e19 97000000 		.4byte	0x97
 14465 1e1d 02       		.uleb128 0x2
 14466 1e1e 91       		.byte	0x91
 14467 1e1f 6D       		.sleb128 -19
 14468 1e20 00       		.byte	0
 14469 1e21 00       		.byte	0
 14470 1e22 00       		.byte	0
 14471 1e23 2B       		.uleb128 0x2b
 14472 1e24 AE0A0000 		.4byte	.LASF509
 14473 1e28 01       		.byte	0x1
 14474 1e29 4705     		.2byte	0x547
 14475 1e2b 00000000 		.4byte	.LFB84
 14476 1e2f 74020000 		.4byte	.LFE84-.LFB84
 14477 1e33 01       		.uleb128 0x1
 14478 1e34 9C       		.byte	0x9c
 14479 1e35 F21E0000 		.4byte	0x1ef2
 14480 1e39 2C       		.uleb128 0x2c
 14481 1e3a 15230000 		.4byte	.LASF476
 14482 1e3e 01       		.byte	0x1
 14483 1e3f 4705     		.2byte	0x547
 14484 1e41 11010000 		.4byte	0x111
 14485 1e45 02       		.uleb128 0x2
 14486 1e46 91       		.byte	0x91
 14487 1e47 4C       		.sleb128 -52
 14488 1e48 2A       		.uleb128 0x2a
 14489 1e49 34000000 		.4byte	.LASF490
 14490 1e4d 01       		.byte	0x1
 14491 1e4e 4905     		.2byte	0x549
 14492 1e50 2B0D0000 		.4byte	0xd2b
 14493 1e54 02       		.uleb128 0x2
 14494 1e55 91       		.byte	0x91
 14495 1e56 68       		.sleb128 -24
 14496 1e57 26       		.uleb128 0x26
 14497 1e58 14000000 		.4byte	.LBB37
 14498 1e5c 54020000 		.4byte	.LBE37-.LBB37
 14499 1e60 2A       		.uleb128 0x2a
 14500 1e61 2E250000 		.4byte	.LASF491
 14501 1e65 01       		.byte	0x1
 14502 1e66 4C05     		.2byte	0x54c
 14503 1e68 81000000 		.4byte	0x81
 14504 1e6c 02       		.uleb128 0x2
 14505 1e6d 91       		.byte	0x91
 14506 1e6e 6F       		.sleb128 -17
 14507 1e6f 2A       		.uleb128 0x2a
 14508 1e70 B60C0000 		.4byte	.LASF492
 14509 1e74 01       		.byte	0x1
 14510 1e75 4D05     		.2byte	0x54d
 14511 1e77 8C050000 		.4byte	0x58c
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 305


 14512 1e7b 02       		.uleb128 0x2
 14513 1e7c 91       		.byte	0x91
 14514 1e7d 64       		.sleb128 -28
 14515 1e7e 29       		.uleb128 0x29
 14516 1e7f 60000000 		.4byte	.LBB38
 14517 1e83 D4000000 		.4byte	.LBE38-.LBB38
 14518 1e87 B91E0000 		.4byte	0x1eb9
 14519 1e8b 2A       		.uleb128 0x2a
 14520 1e8c 7D260000 		.4byte	.LASF500
 14521 1e90 01       		.byte	0x1
 14522 1e91 5B05     		.2byte	0x55b
 14523 1e93 97000000 		.4byte	0x97
 14524 1e97 02       		.uleb128 0x2
 14525 1e98 91       		.byte	0x91
 14526 1e99 63       		.sleb128 -29
 14527 1e9a 28       		.uleb128 0x28
 14528 1e9b 70747200 		.ascii	"ptr\000"
 14529 1e9f 01       		.byte	0x1
 14530 1ea0 6205     		.2byte	0x562
 14531 1ea2 3B010000 		.4byte	0x13b
 14532 1ea6 02       		.uleb128 0x2
 14533 1ea7 91       		.byte	0x91
 14534 1ea8 5C       		.sleb128 -36
 14535 1ea9 2A       		.uleb128 0x2a
 14536 1eaa 1D160000 		.4byte	.LASF501
 14537 1eae 01       		.byte	0x1
 14538 1eaf 6C05     		.2byte	0x56c
 14539 1eb1 97000000 		.4byte	0x97
 14540 1eb5 02       		.uleb128 0x2
 14541 1eb6 91       		.byte	0x91
 14542 1eb7 6E       		.sleb128 -18
 14543 1eb8 00       		.byte	0
 14544 1eb9 26       		.uleb128 0x26
 14545 1eba 36010000 		.4byte	.LBB39
 14546 1ebe D4000000 		.4byte	.LBE39-.LBB39
 14547 1ec2 2A       		.uleb128 0x2a
 14548 1ec3 7D260000 		.4byte	.LASF500
 14549 1ec7 01       		.byte	0x1
 14550 1ec8 7605     		.2byte	0x576
 14551 1eca 97000000 		.4byte	0x97
 14552 1ece 02       		.uleb128 0x2
 14553 1ecf 91       		.byte	0x91
 14554 1ed0 5B       		.sleb128 -37
 14555 1ed1 28       		.uleb128 0x28
 14556 1ed2 70747200 		.ascii	"ptr\000"
 14557 1ed6 01       		.byte	0x1
 14558 1ed7 7D05     		.2byte	0x57d
 14559 1ed9 3B010000 		.4byte	0x13b
 14560 1edd 02       		.uleb128 0x2
 14561 1ede 91       		.byte	0x91
 14562 1edf 54       		.sleb128 -44
 14563 1ee0 2A       		.uleb128 0x2a
 14564 1ee1 1D160000 		.4byte	.LASF501
 14565 1ee5 01       		.byte	0x1
 14566 1ee6 8705     		.2byte	0x587
 14567 1ee8 97000000 		.4byte	0x97
 14568 1eec 02       		.uleb128 0x2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 306


 14569 1eed 91       		.byte	0x91
 14570 1eee 6D       		.sleb128 -19
 14571 1eef 00       		.byte	0
 14572 1ef0 00       		.byte	0
 14573 1ef1 00       		.byte	0
 14574 1ef2 2B       		.uleb128 0x2b
 14575 1ef3 17070000 		.4byte	.LASF510
 14576 1ef7 01       		.byte	0x1
 14577 1ef8 A105     		.2byte	0x5a1
 14578 1efa 00000000 		.4byte	.LFB85
 14579 1efe C4020000 		.4byte	.LFE85-.LFB85
 14580 1f02 01       		.uleb128 0x1
 14581 1f03 9C       		.byte	0x9c
 14582 1f04 BC1F0000 		.4byte	0x1fbc
 14583 1f08 2C       		.uleb128 0x2c
 14584 1f09 15230000 		.4byte	.LASF476
 14585 1f0d 01       		.byte	0x1
 14586 1f0e A105     		.2byte	0x5a1
 14587 1f10 11010000 		.4byte	0x111
 14588 1f14 02       		.uleb128 0x2
 14589 1f15 91       		.byte	0x91
 14590 1f16 54       		.sleb128 -44
 14591 1f17 2A       		.uleb128 0x2a
 14592 1f18 34000000 		.4byte	.LASF490
 14593 1f1c 01       		.byte	0x1
 14594 1f1d A305     		.2byte	0x5a3
 14595 1f1f 2B0D0000 		.4byte	0xd2b
 14596 1f23 02       		.uleb128 0x2
 14597 1f24 91       		.byte	0x91
 14598 1f25 68       		.sleb128 -24
 14599 1f26 26       		.uleb128 0x26
 14600 1f27 14000000 		.4byte	.LBB40
 14601 1f2b A4020000 		.4byte	.LBE40-.LBB40
 14602 1f2f 2A       		.uleb128 0x2a
 14603 1f30 2E250000 		.4byte	.LASF491
 14604 1f34 01       		.byte	0x1
 14605 1f35 A605     		.2byte	0x5a6
 14606 1f37 81000000 		.4byte	0x81
 14607 1f3b 02       		.uleb128 0x2
 14608 1f3c 91       		.byte	0x91
 14609 1f3d 6F       		.sleb128 -17
 14610 1f3e 2A       		.uleb128 0x2a
 14611 1f3f B60C0000 		.4byte	.LASF492
 14612 1f43 01       		.byte	0x1
 14613 1f44 A805     		.2byte	0x5a8
 14614 1f46 8C050000 		.4byte	0x58c
 14615 1f4a 02       		.uleb128 0x2
 14616 1f4b 91       		.byte	0x91
 14617 1f4c 64       		.sleb128 -28
 14618 1f4d 26       		.uleb128 0x26
 14619 1f4e 3A000000 		.4byte	.LBB41
 14620 1f52 7E020000 		.4byte	.LBE41-.LBB41
 14621 1f56 2A       		.uleb128 0x2a
 14622 1f57 E50C0000 		.4byte	.LASF481
 14623 1f5b 01       		.byte	0x1
 14624 1f5c BA05     		.2byte	0x5ba
 14625 1f5e A3000000 		.4byte	0xa3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 307


 14626 1f62 02       		.uleb128 0x2
 14627 1f63 91       		.byte	0x91
 14628 1f64 62       		.sleb128 -30
 14629 1f65 2A       		.uleb128 0x2a
 14630 1f66 5B120000 		.4byte	.LASF511
 14631 1f6a 01       		.byte	0x1
 14632 1f6b D505     		.2byte	0x5d5
 14633 1f6d 97000000 		.4byte	0x97
 14634 1f71 02       		.uleb128 0x2
 14635 1f72 91       		.byte	0x91
 14636 1f73 61       		.sleb128 -31
 14637 1f74 28       		.uleb128 0x28
 14638 1f75 70747200 		.ascii	"ptr\000"
 14639 1f79 01       		.byte	0x1
 14640 1f7a D605     		.2byte	0x5d6
 14641 1f7c 3B010000 		.4byte	0x13b
 14642 1f80 02       		.uleb128 0x2
 14643 1f81 91       		.byte	0x91
 14644 1f82 5C       		.sleb128 -36
 14645 1f83 29       		.uleb128 0x29
 14646 1f84 D6010000 		.4byte	.LBB42
 14647 1f88 34000000 		.4byte	.LBE42-.LBB42
 14648 1f8c A01F0000 		.4byte	0x1fa0
 14649 1f90 2A       		.uleb128 0x2a
 14650 1f91 1D160000 		.4byte	.LASF501
 14651 1f95 01       		.byte	0x1
 14652 1f96 DA05     		.2byte	0x5da
 14653 1f98 97000000 		.4byte	0x97
 14654 1f9c 02       		.uleb128 0x2
 14655 1f9d 91       		.byte	0x91
 14656 1f9e 6E       		.sleb128 -18
 14657 1f9f 00       		.byte	0
 14658 1fa0 26       		.uleb128 0x26
 14659 1fa1 0C020000 		.4byte	.LBB43
 14660 1fa5 34000000 		.4byte	.LBE43-.LBB43
 14661 1fa9 2A       		.uleb128 0x2a
 14662 1faa 1D160000 		.4byte	.LASF501
 14663 1fae 01       		.byte	0x1
 14664 1faf DF05     		.2byte	0x5df
 14665 1fb1 97000000 		.4byte	0x97
 14666 1fb5 02       		.uleb128 0x2
 14667 1fb6 91       		.byte	0x91
 14668 1fb7 6D       		.sleb128 -19
 14669 1fb8 00       		.byte	0
 14670 1fb9 00       		.byte	0
 14671 1fba 00       		.byte	0
 14672 1fbb 00       		.byte	0
 14673 1fbc 2B       		.uleb128 0x2b
 14674 1fbd A7190000 		.4byte	.LASF512
 14675 1fc1 01       		.byte	0x1
 14676 1fc2 F105     		.2byte	0x5f1
 14677 1fc4 00000000 		.4byte	.LFB86
 14678 1fc8 B0010000 		.4byte	.LFE86-.LFB86
 14679 1fcc 01       		.uleb128 0x1
 14680 1fcd 9C       		.byte	0x9c
 14681 1fce 68200000 		.4byte	0x2068
 14682 1fd2 2C       		.uleb128 0x2c
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 308


 14683 1fd3 15230000 		.4byte	.LASF476
 14684 1fd7 01       		.byte	0x1
 14685 1fd8 F105     		.2byte	0x5f1
 14686 1fda 11010000 		.4byte	0x111
 14687 1fde 02       		.uleb128 0x2
 14688 1fdf 91       		.byte	0x91
 14689 1fe0 5C       		.sleb128 -36
 14690 1fe1 2A       		.uleb128 0x2a
 14691 1fe2 34000000 		.4byte	.LASF490
 14692 1fe6 01       		.byte	0x1
 14693 1fe7 F305     		.2byte	0x5f3
 14694 1fe9 2B0D0000 		.4byte	0xd2b
 14695 1fed 02       		.uleb128 0x2
 14696 1fee 91       		.byte	0x91
 14697 1fef 68       		.sleb128 -24
 14698 1ff0 26       		.uleb128 0x26
 14699 1ff1 14000000 		.4byte	.LBB44
 14700 1ff5 92010000 		.4byte	.LBE44-.LBB44
 14701 1ff9 2A       		.uleb128 0x2a
 14702 1ffa 2E250000 		.4byte	.LASF491
 14703 1ffe 01       		.byte	0x1
 14704 1fff F605     		.2byte	0x5f6
 14705 2001 81000000 		.4byte	0x81
 14706 2005 02       		.uleb128 0x2
 14707 2006 91       		.byte	0x91
 14708 2007 6F       		.sleb128 -17
 14709 2008 2A       		.uleb128 0x2a
 14710 2009 B60C0000 		.4byte	.LASF492
 14711 200d 01       		.byte	0x1
 14712 200e F805     		.2byte	0x5f8
 14713 2010 8C050000 		.4byte	0x58c
 14714 2014 02       		.uleb128 0x2
 14715 2015 91       		.byte	0x91
 14716 2016 64       		.sleb128 -28
 14717 2017 26       		.uleb128 0x26
 14718 2018 3A000000 		.4byte	.LBB45
 14719 201c 6C010000 		.4byte	.LBE45-.LBB45
 14720 2020 28       		.uleb128 0x28
 14721 2021 70747200 		.ascii	"ptr\000"
 14722 2025 01       		.byte	0x1
 14723 2026 0D06     		.2byte	0x60d
 14724 2028 3B010000 		.4byte	0x13b
 14725 202c 02       		.uleb128 0x2
 14726 202d 91       		.byte	0x91
 14727 202e 60       		.sleb128 -32
 14728 202f 29       		.uleb128 0x29
 14729 2030 EC000000 		.4byte	.LBB46
 14730 2034 34000000 		.4byte	.LBE46-.LBB46
 14731 2038 4C200000 		.4byte	0x204c
 14732 203c 2A       		.uleb128 0x2a
 14733 203d 1D160000 		.4byte	.LASF501
 14734 2041 01       		.byte	0x1
 14735 2042 1106     		.2byte	0x611
 14736 2044 97000000 		.4byte	0x97
 14737 2048 02       		.uleb128 0x2
 14738 2049 91       		.byte	0x91
 14739 204a 6E       		.sleb128 -18
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 309


 14740 204b 00       		.byte	0
 14741 204c 26       		.uleb128 0x26
 14742 204d 22010000 		.4byte	.LBB47
 14743 2051 34000000 		.4byte	.LBE47-.LBB47
 14744 2055 2A       		.uleb128 0x2a
 14745 2056 1D160000 		.4byte	.LASF501
 14746 205a 01       		.byte	0x1
 14747 205b 1606     		.2byte	0x616
 14748 205d 97000000 		.4byte	0x97
 14749 2061 02       		.uleb128 0x2
 14750 2062 91       		.byte	0x91
 14751 2063 6D       		.sleb128 -19
 14752 2064 00       		.byte	0
 14753 2065 00       		.byte	0
 14754 2066 00       		.byte	0
 14755 2067 00       		.byte	0
 14756 2068 2B       		.uleb128 0x2b
 14757 2069 FD200000 		.4byte	.LASF513
 14758 206d 01       		.byte	0x1
 14759 206e 2806     		.2byte	0x628
 14760 2070 00000000 		.4byte	.LFB87
 14761 2074 3C020000 		.4byte	.LFE87-.LFB87
 14762 2078 01       		.uleb128 0x1
 14763 2079 9C       		.byte	0x9c
 14764 207a 23210000 		.4byte	0x2123
 14765 207e 2C       		.uleb128 0x2c
 14766 207f 15230000 		.4byte	.LASF476
 14767 2083 01       		.byte	0x1
 14768 2084 2806     		.2byte	0x628
 14769 2086 11010000 		.4byte	0x111
 14770 208a 02       		.uleb128 0x2
 14771 208b 91       		.byte	0x91
 14772 208c 54       		.sleb128 -44
 14773 208d 2A       		.uleb128 0x2a
 14774 208e 34000000 		.4byte	.LASF490
 14775 2092 01       		.byte	0x1
 14776 2093 2A06     		.2byte	0x62a
 14777 2095 2B0D0000 		.4byte	0xd2b
 14778 2099 02       		.uleb128 0x2
 14779 209a 91       		.byte	0x91
 14780 209b 68       		.sleb128 -24
 14781 209c 26       		.uleb128 0x26
 14782 209d 14000000 		.4byte	.LBB48
 14783 20a1 1E020000 		.4byte	.LBE48-.LBB48
 14784 20a5 2A       		.uleb128 0x2a
 14785 20a6 2E250000 		.4byte	.LASF491
 14786 20aa 01       		.byte	0x1
 14787 20ab 2D06     		.2byte	0x62d
 14788 20ad 81000000 		.4byte	0x81
 14789 20b1 02       		.uleb128 0x2
 14790 20b2 91       		.byte	0x91
 14791 20b3 6F       		.sleb128 -17
 14792 20b4 2A       		.uleb128 0x2a
 14793 20b5 B60C0000 		.4byte	.LASF492
 14794 20b9 01       		.byte	0x1
 14795 20ba 2F06     		.2byte	0x62f
 14796 20bc 8C050000 		.4byte	0x58c
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 310


 14797 20c0 02       		.uleb128 0x2
 14798 20c1 91       		.byte	0x91
 14799 20c2 64       		.sleb128 -28
 14800 20c3 26       		.uleb128 0x26
 14801 20c4 3A000000 		.4byte	.LBB49
 14802 20c8 F2010000 		.4byte	.LBE49-.LBB49
 14803 20cc 2A       		.uleb128 0x2a
 14804 20cd E50C0000 		.4byte	.LASF481
 14805 20d1 01       		.byte	0x1
 14806 20d2 4306     		.2byte	0x643
 14807 20d4 A3000000 		.4byte	0xa3
 14808 20d8 02       		.uleb128 0x2
 14809 20d9 91       		.byte	0x91
 14810 20da 62       		.sleb128 -30
 14811 20db 28       		.uleb128 0x28
 14812 20dc 70747200 		.ascii	"ptr\000"
 14813 20e0 01       		.byte	0x1
 14814 20e1 5A06     		.2byte	0x65a
 14815 20e3 3B010000 		.4byte	0x13b
 14816 20e7 02       		.uleb128 0x2
 14817 20e8 91       		.byte	0x91
 14818 20e9 5C       		.sleb128 -36
 14819 20ea 29       		.uleb128 0x29
 14820 20eb 78010000 		.4byte	.LBB50
 14821 20ef 34000000 		.4byte	.LBE50-.LBB50
 14822 20f3 07210000 		.4byte	0x2107
 14823 20f7 2A       		.uleb128 0x2a
 14824 20f8 1D160000 		.4byte	.LASF501
 14825 20fc 01       		.byte	0x1
 14826 20fd 5E06     		.2byte	0x65e
 14827 20ff 97000000 		.4byte	0x97
 14828 2103 02       		.uleb128 0x2
 14829 2104 91       		.byte	0x91
 14830 2105 6E       		.sleb128 -18
 14831 2106 00       		.byte	0
 14832 2107 26       		.uleb128 0x26
 14833 2108 AE010000 		.4byte	.LBB51
 14834 210c 34000000 		.4byte	.LBE51-.LBB51
 14835 2110 2A       		.uleb128 0x2a
 14836 2111 1D160000 		.4byte	.LASF501
 14837 2115 01       		.byte	0x1
 14838 2116 6306     		.2byte	0x663
 14839 2118 97000000 		.4byte	0x97
 14840 211c 02       		.uleb128 0x2
 14841 211d 91       		.byte	0x91
 14842 211e 6D       		.sleb128 -19
 14843 211f 00       		.byte	0
 14844 2120 00       		.byte	0
 14845 2121 00       		.byte	0
 14846 2122 00       		.byte	0
 14847 2123 2B       		.uleb128 0x2b
 14848 2124 FC020000 		.4byte	.LASF514
 14849 2128 01       		.byte	0x1
 14850 2129 7906     		.2byte	0x679
 14851 212b 00000000 		.4byte	.LFB88
 14852 212f 6A000000 		.4byte	.LFE88-.LFB88
 14853 2133 01       		.uleb128 0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 311


 14854 2134 9C       		.byte	0x9c
 14855 2135 80210000 		.4byte	0x2180
 14856 2139 2C       		.uleb128 0x2c
 14857 213a 15230000 		.4byte	.LASF476
 14858 213e 01       		.byte	0x1
 14859 213f 7906     		.2byte	0x679
 14860 2141 11010000 		.4byte	0x111
 14861 2145 02       		.uleb128 0x2
 14862 2146 91       		.byte	0x91
 14863 2147 64       		.sleb128 -28
 14864 2148 2A       		.uleb128 0x2a
 14865 2149 34000000 		.4byte	.LASF490
 14866 214d 01       		.byte	0x1
 14867 214e 7B06     		.2byte	0x67b
 14868 2150 2B0D0000 		.4byte	0xd2b
 14869 2154 02       		.uleb128 0x2
 14870 2155 91       		.byte	0x91
 14871 2156 74       		.sleb128 -12
 14872 2157 26       		.uleb128 0x26
 14873 2158 12000000 		.4byte	.LBB52
 14874 215c 52000000 		.4byte	.LBE52-.LBB52
 14875 2160 2A       		.uleb128 0x2a
 14876 2161 2E250000 		.4byte	.LASF491
 14877 2165 01       		.byte	0x1
 14878 2166 7E06     		.2byte	0x67e
 14879 2168 81000000 		.4byte	0x81
 14880 216c 02       		.uleb128 0x2
 14881 216d 91       		.byte	0x91
 14882 216e 73       		.sleb128 -13
 14883 216f 2A       		.uleb128 0x2a
 14884 2170 B60C0000 		.4byte	.LASF492
 14885 2174 01       		.byte	0x1
 14886 2175 8006     		.2byte	0x680
 14887 2177 8C050000 		.4byte	0x58c
 14888 217b 02       		.uleb128 0x2
 14889 217c 91       		.byte	0x91
 14890 217d 6C       		.sleb128 -20
 14891 217e 00       		.byte	0
 14892 217f 00       		.byte	0
 14893 2180 2B       		.uleb128 0x2b
 14894 2181 48140000 		.4byte	.LASF515
 14895 2185 01       		.byte	0x1
 14896 2186 8D06     		.2byte	0x68d
 14897 2188 00000000 		.4byte	.LFB89
 14898 218c 60000000 		.4byte	.LFE89-.LFB89
 14899 2190 01       		.uleb128 0x1
 14900 2191 9C       		.byte	0x9c
 14901 2192 DD210000 		.4byte	0x21dd
 14902 2196 2C       		.uleb128 0x2c
 14903 2197 15230000 		.4byte	.LASF476
 14904 219b 01       		.byte	0x1
 14905 219c 8D06     		.2byte	0x68d
 14906 219e 11010000 		.4byte	0x111
 14907 21a2 02       		.uleb128 0x2
 14908 21a3 91       		.byte	0x91
 14909 21a4 64       		.sleb128 -28
 14910 21a5 2A       		.uleb128 0x2a
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 312


 14911 21a6 34000000 		.4byte	.LASF490
 14912 21aa 01       		.byte	0x1
 14913 21ab 8F06     		.2byte	0x68f
 14914 21ad 2B0D0000 		.4byte	0xd2b
 14915 21b1 02       		.uleb128 0x2
 14916 21b2 91       		.byte	0x91
 14917 21b3 74       		.sleb128 -12
 14918 21b4 26       		.uleb128 0x26
 14919 21b5 12000000 		.4byte	.LBB53
 14920 21b9 48000000 		.4byte	.LBE53-.LBB53
 14921 21bd 2A       		.uleb128 0x2a
 14922 21be 2E250000 		.4byte	.LASF491
 14923 21c2 01       		.byte	0x1
 14924 21c3 9206     		.2byte	0x692
 14925 21c5 81000000 		.4byte	0x81
 14926 21c9 02       		.uleb128 0x2
 14927 21ca 91       		.byte	0x91
 14928 21cb 73       		.sleb128 -13
 14929 21cc 2A       		.uleb128 0x2a
 14930 21cd B60C0000 		.4byte	.LASF492
 14931 21d1 01       		.byte	0x1
 14932 21d2 9406     		.2byte	0x694
 14933 21d4 8C050000 		.4byte	0x58c
 14934 21d8 02       		.uleb128 0x2
 14935 21d9 91       		.byte	0x91
 14936 21da 6C       		.sleb128 -20
 14937 21db 00       		.byte	0
 14938 21dc 00       		.byte	0
 14939 21dd 2B       		.uleb128 0x2b
 14940 21de 061B0000 		.4byte	.LASF516
 14941 21e2 01       		.byte	0x1
 14942 21e3 A106     		.2byte	0x6a1
 14943 21e5 00000000 		.4byte	.LFB90
 14944 21e9 E6000000 		.4byte	.LFE90-.LFB90
 14945 21ed 01       		.uleb128 0x1
 14946 21ee 9C       		.byte	0x9c
 14947 21ef 3A220000 		.4byte	0x223a
 14948 21f3 2C       		.uleb128 0x2c
 14949 21f4 15230000 		.4byte	.LASF476
 14950 21f8 01       		.byte	0x1
 14951 21f9 A106     		.2byte	0x6a1
 14952 21fb 30010000 		.4byte	0x130
 14953 21ff 02       		.uleb128 0x2
 14954 2200 91       		.byte	0x91
 14955 2201 5C       		.sleb128 -36
 14956 2202 2A       		.uleb128 0x2a
 14957 2203 34000000 		.4byte	.LASF490
 14958 2207 01       		.byte	0x1
 14959 2208 A306     		.2byte	0x6a3
 14960 220a 2B0D0000 		.4byte	0xd2b
 14961 220e 02       		.uleb128 0x2
 14962 220f 91       		.byte	0x91
 14963 2210 6C       		.sleb128 -20
 14964 2211 26       		.uleb128 0x26
 14965 2212 12000000 		.4byte	.LBB54
 14966 2216 CE000000 		.4byte	.LBE54-.LBB54
 14967 221a 2A       		.uleb128 0x2a
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 313


 14968 221b 2E250000 		.4byte	.LASF491
 14969 221f 01       		.byte	0x1
 14970 2220 A606     		.2byte	0x6a6
 14971 2222 81000000 		.4byte	0x81
 14972 2226 02       		.uleb128 0x2
 14973 2227 91       		.byte	0x91
 14974 2228 6B       		.sleb128 -21
 14975 2229 2A       		.uleb128 0x2a
 14976 222a B60C0000 		.4byte	.LASF492
 14977 222e 01       		.byte	0x1
 14978 222f A806     		.2byte	0x6a8
 14979 2231 8C050000 		.4byte	0x58c
 14980 2235 02       		.uleb128 0x2
 14981 2236 91       		.byte	0x91
 14982 2237 64       		.sleb128 -28
 14983 2238 00       		.byte	0
 14984 2239 00       		.byte	0
 14985 223a 2B       		.uleb128 0x2b
 14986 223b 570F0000 		.4byte	.LASF517
 14987 223f 01       		.byte	0x1
 14988 2240 C006     		.2byte	0x6c0
 14989 2242 00000000 		.4byte	.LFB91
 14990 2246 54040000 		.4byte	.LFE91-.LFB91
 14991 224a 01       		.uleb128 0x1
 14992 224b 9C       		.byte	0x9c
 14993 224c FB220000 		.4byte	0x22fb
 14994 2250 2C       		.uleb128 0x2c
 14995 2251 15230000 		.4byte	.LASF476
 14996 2255 01       		.byte	0x1
 14997 2256 C006     		.2byte	0x6c0
 14998 2258 11010000 		.4byte	0x111
 14999 225c 02       		.uleb128 0x2
 15000 225d 91       		.byte	0x91
 15001 225e 54       		.sleb128 -44
 15002 225f 2A       		.uleb128 0x2a
 15003 2260 EB1E0000 		.4byte	.LASF472
 15004 2264 01       		.byte	0x1
 15005 2265 C206     		.2byte	0x6c2
 15006 2267 730F0000 		.4byte	0xf73
 15007 226b 02       		.uleb128 0x2
 15008 226c 91       		.byte	0x91
 15009 226d 68       		.sleb128 -24
 15010 226e 26       		.uleb128 0x26
 15011 226f 14000000 		.4byte	.LBB55
 15012 2273 34040000 		.4byte	.LBE55-.LBB55
 15013 2277 2A       		.uleb128 0x2a
 15014 2278 2E250000 		.4byte	.LASF491
 15015 227c 01       		.byte	0x1
 15016 227d C506     		.2byte	0x6c5
 15017 227f 97000000 		.4byte	0x97
 15018 2283 02       		.uleb128 0x2
 15019 2284 91       		.byte	0x91
 15020 2285 67       		.sleb128 -25
 15021 2286 2A       		.uleb128 0x2a
 15022 2287 381C0000 		.4byte	.LASF518
 15023 228b 01       		.byte	0x1
 15024 228c C806     		.2byte	0x6c8
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 314


 15025 228e 97000000 		.4byte	0x97
 15026 2292 02       		.uleb128 0x2
 15027 2293 91       		.byte	0x91
 15028 2294 66       		.sleb128 -26
 15029 2295 26       		.uleb128 0x26
 15030 2296 74000000 		.4byte	.LBB56
 15031 229a D4030000 		.4byte	.LBE56-.LBB56
 15032 229e 2A       		.uleb128 0x2a
 15033 229f 5B280000 		.4byte	.LASF519
 15034 22a3 01       		.byte	0x1
 15035 22a4 CE06     		.2byte	0x6ce
 15036 22a6 49020000 		.4byte	0x249
 15037 22aa 02       		.uleb128 0x2
 15038 22ab 91       		.byte	0x91
 15039 22ac 6F       		.sleb128 -17
 15040 22ad 2A       		.uleb128 0x2a
 15041 22ae 1C290000 		.4byte	.LASF520
 15042 22b2 01       		.byte	0x1
 15043 22b3 CF06     		.2byte	0x6cf
 15044 22b5 A3000000 		.4byte	0xa3
 15045 22b9 02       		.uleb128 0x2
 15046 22ba 91       		.byte	0x91
 15047 22bb 6C       		.sleb128 -20
 15048 22bc 2A       		.uleb128 0x2a
 15049 22bd BE180000 		.4byte	.LASF521
 15050 22c1 01       		.byte	0x1
 15051 22c2 EF06     		.2byte	0x6ef
 15052 22c4 7C070000 		.4byte	0x77c
 15053 22c8 02       		.uleb128 0x2
 15054 22c9 91       		.byte	0x91
 15055 22ca 60       		.sleb128 -32
 15056 22cb 2A       		.uleb128 0x2a
 15057 22cc 831B0000 		.4byte	.LASF522
 15058 22d0 01       		.byte	0x1
 15059 22d1 F106     		.2byte	0x6f1
 15060 22d3 97000000 		.4byte	0x97
 15061 22d7 02       		.uleb128 0x2
 15062 22d8 91       		.byte	0x91
 15063 22d9 5F       		.sleb128 -33
 15064 22da 2A       		.uleb128 0x2a
 15065 22db 8E1A0000 		.4byte	.LASF523
 15066 22df 01       		.byte	0x1
 15067 22e0 F206     		.2byte	0x6f2
 15068 22e2 97000000 		.4byte	0x97
 15069 22e6 02       		.uleb128 0x2
 15070 22e7 91       		.byte	0x91
 15071 22e8 5E       		.sleb128 -34
 15072 22e9 2A       		.uleb128 0x2a
 15073 22ea 52120000 		.4byte	.LASF524
 15074 22ee 01       		.byte	0x1
 15075 22ef 2907     		.2byte	0x729
 15076 22f1 72020000 		.4byte	0x272
 15077 22f5 02       		.uleb128 0x2
 15078 22f6 91       		.byte	0x91
 15079 22f7 58       		.sleb128 -40
 15080 22f8 00       		.byte	0
 15081 22f9 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 315


 15082 22fa 00       		.byte	0
 15083 22fb 2D       		.uleb128 0x2d
 15084 22fc 10110000 		.4byte	.LASF525
 15085 2300 01       		.byte	0x1
 15086 2301 4007     		.2byte	0x740
 15087 2303 00000000 		.4byte	.LFB92
 15088 2307 C8040000 		.4byte	.LFE92-.LFB92
 15089 230b 01       		.uleb128 0x1
 15090 230c 9C       		.byte	0x9c
 15091 230d 30230000 		.4byte	0x2330
 15092 2311 2C       		.uleb128 0x2c
 15093 2312 15230000 		.4byte	.LASF476
 15094 2316 01       		.byte	0x1
 15095 2317 4007     		.2byte	0x740
 15096 2319 30010000 		.4byte	0x130
 15097 231d 02       		.uleb128 0x2
 15098 231e 91       		.byte	0x91
 15099 231f 6C       		.sleb128 -20
 15100 2320 2A       		.uleb128 0x2a
 15101 2321 6D170000 		.4byte	.LASF526
 15102 2325 01       		.byte	0x1
 15103 2326 4207     		.2byte	0x742
 15104 2328 7C070000 		.4byte	0x77c
 15105 232c 02       		.uleb128 0x2
 15106 232d 91       		.byte	0x91
 15107 232e 74       		.sleb128 -12
 15108 232f 00       		.byte	0
 15109 2330 2E       		.uleb128 0x2e
 15110 2331 7A130000 		.4byte	.LASF535
 15111 2335 01       		.byte	0x1
 15112 2336 8508     		.2byte	0x885
 15113 2338 49020000 		.4byte	0x249
 15114 233c 00000000 		.4byte	.LFB93
 15115 2340 28010000 		.4byte	.LFE93-.LFB93
 15116 2344 01       		.uleb128 0x1
 15117 2345 9C       		.byte	0x9c
 15118 2346 DA230000 		.4byte	0x23da
 15119 234a 2C       		.uleb128 0x2c
 15120 234b 15230000 		.4byte	.LASF476
 15121 234f 01       		.byte	0x1
 15122 2350 8508     		.2byte	0x885
 15123 2352 11010000 		.4byte	0x111
 15124 2356 02       		.uleb128 0x2
 15125 2357 91       		.byte	0x91
 15126 2358 5C       		.sleb128 -36
 15127 2359 2C       		.uleb128 0x2c
 15128 235a 260F0000 		.4byte	.LASF527
 15129 235e 01       		.byte	0x1
 15130 235f 8508     		.2byte	0x885
 15131 2361 11010000 		.4byte	0x111
 15132 2365 02       		.uleb128 0x2
 15133 2366 91       		.byte	0x91
 15134 2367 58       		.sleb128 -40
 15135 2368 2C       		.uleb128 0x2c
 15136 2369 031A0000 		.4byte	.LASF528
 15137 236d 01       		.byte	0x1
 15138 236e 8508     		.2byte	0x885
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 316


 15139 2370 A3000000 		.4byte	0xa3
 15140 2374 02       		.uleb128 0x2
 15141 2375 91       		.byte	0x91
 15142 2376 56       		.sleb128 -42
 15143 2377 2A       		.uleb128 0x2a
 15144 2378 C6150000 		.4byte	.LASF529
 15145 237c 01       		.byte	0x1
 15146 237d 8708     		.2byte	0x887
 15147 237f 49020000 		.4byte	0x249
 15148 2383 02       		.uleb128 0x2
 15149 2384 91       		.byte	0x91
 15150 2385 6F       		.sleb128 -17
 15151 2386 2A       		.uleb128 0x2a
 15152 2387 2E250000 		.4byte	.LASF491
 15153 238b 01       		.byte	0x1
 15154 238c 8808     		.2byte	0x888
 15155 238e 97000000 		.4byte	0x97
 15156 2392 05       		.uleb128 0x5
 15157 2393 03       		.byte	0x3
 15158 2394 00000000 		.4byte	index.9614
 15159 2398 2A       		.uleb128 0x2a
 15160 2399 34000000 		.4byte	.LASF490
 15161 239d 01       		.byte	0x1
 15162 239e 8908     		.2byte	0x889
 15163 23a0 2B0D0000 		.4byte	0xd2b
 15164 23a4 02       		.uleb128 0x2
 15165 23a5 91       		.byte	0x91
 15166 23a6 68       		.sleb128 -24
 15167 23a7 26       		.uleb128 0x26
 15168 23a8 38000000 		.4byte	.LBB57
 15169 23ac E2000000 		.4byte	.LBE57-.LBB57
 15170 23b0 2A       		.uleb128 0x2a
 15171 23b1 8E1A0000 		.4byte	.LASF523
 15172 23b5 01       		.byte	0x1
 15173 23b6 9008     		.2byte	0x890
 15174 23b8 97000000 		.4byte	0x97
 15175 23bc 02       		.uleb128 0x2
 15176 23bd 91       		.byte	0x91
 15177 23be 67       		.sleb128 -25
 15178 23bf 26       		.uleb128 0x26
 15179 23c0 AA000000 		.4byte	.LBB58
 15180 23c4 70000000 		.4byte	.LBE58-.LBB58
 15181 23c8 2A       		.uleb128 0x2a
 15182 23c9 381C0000 		.4byte	.LASF518
 15183 23cd 01       		.byte	0x1
 15184 23ce 9708     		.2byte	0x897
 15185 23d0 97000000 		.4byte	0x97
 15186 23d4 02       		.uleb128 0x2
 15187 23d5 91       		.byte	0x91
 15188 23d6 66       		.sleb128 -26
 15189 23d7 00       		.byte	0
 15190 23d8 00       		.byte	0
 15191 23d9 00       		.byte	0
 15192 23da 2B       		.uleb128 0x2b
 15193 23db BC080000 		.4byte	.LASF530
 15194 23df 01       		.byte	0x1
 15195 23e0 A608     		.2byte	0x8a6
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 317


 15196 23e2 00000000 		.4byte	.LFB94
 15197 23e6 60000000 		.4byte	.LFE94-.LFB94
 15198 23ea 01       		.uleb128 0x1
 15199 23eb 9C       		.byte	0x9c
 15200 23ec 37240000 		.4byte	0x2437
 15201 23f0 2C       		.uleb128 0x2c
 15202 23f1 15230000 		.4byte	.LASF476
 15203 23f5 01       		.byte	0x1
 15204 23f6 A608     		.2byte	0x8a6
 15205 23f8 30010000 		.4byte	0x130
 15206 23fc 02       		.uleb128 0x2
 15207 23fd 91       		.byte	0x91
 15208 23fe 64       		.sleb128 -28
 15209 23ff 2A       		.uleb128 0x2a
 15210 2400 34000000 		.4byte	.LASF490
 15211 2404 01       		.byte	0x1
 15212 2405 A808     		.2byte	0x8a8
 15213 2407 2B0D0000 		.4byte	0xd2b
 15214 240b 02       		.uleb128 0x2
 15215 240c 91       		.byte	0x91
 15216 240d 74       		.sleb128 -12
 15217 240e 26       		.uleb128 0x26
 15218 240f 12000000 		.4byte	.LBB59
 15219 2413 48000000 		.4byte	.LBE59-.LBB59
 15220 2417 2A       		.uleb128 0x2a
 15221 2418 2E250000 		.4byte	.LASF491
 15222 241c 01       		.byte	0x1
 15223 241d AB08     		.2byte	0x8ab
 15224 241f 81000000 		.4byte	0x81
 15225 2423 02       		.uleb128 0x2
 15226 2424 91       		.byte	0x91
 15227 2425 73       		.sleb128 -13
 15228 2426 2A       		.uleb128 0x2a
 15229 2427 B60C0000 		.4byte	.LASF492
 15230 242b 01       		.byte	0x1
 15231 242c AD08     		.2byte	0x8ad
 15232 242e 8C050000 		.4byte	0x58c
 15233 2432 02       		.uleb128 0x2
 15234 2433 91       		.byte	0x91
 15235 2434 6C       		.sleb128 -20
 15236 2435 00       		.byte	0
 15237 2436 00       		.byte	0
 15238 2437 2B       		.uleb128 0x2b
 15239 2438 4B150000 		.4byte	.LASF531
 15240 243c 01       		.byte	0x1
 15241 243d B908     		.2byte	0x8b9
 15242 243f 00000000 		.4byte	.LFB95
 15243 2443 40020000 		.4byte	.LFE95-.LFB95
 15244 2447 01       		.uleb128 0x1
 15245 2448 9C       		.byte	0x9c
 15246 2449 EC240000 		.4byte	0x24ec
 15247 244d 2C       		.uleb128 0x2c
 15248 244e 15230000 		.4byte	.LASF476
 15249 2452 01       		.byte	0x1
 15250 2453 B908     		.2byte	0x8b9
 15251 2455 30010000 		.4byte	0x130
 15252 2459 02       		.uleb128 0x2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 318


 15253 245a 91       		.byte	0x91
 15254 245b 64       		.sleb128 -28
 15255 245c 2A       		.uleb128 0x2a
 15256 245d EB1E0000 		.4byte	.LASF472
 15257 2461 01       		.byte	0x1
 15258 2462 BC08     		.2byte	0x8bc
 15259 2464 730F0000 		.4byte	0xf73
 15260 2468 02       		.uleb128 0x2
 15261 2469 91       		.byte	0x91
 15262 246a 74       		.sleb128 -12
 15263 246b 29       		.uleb128 0x29
 15264 246c 48000000 		.4byte	.LBB60
 15265 2470 6C000000 		.4byte	.LBE60-.LBB60
 15266 2474 97240000 		.4byte	0x2497
 15267 2478 2A       		.uleb128 0x2a
 15268 2479 C10E0000 		.4byte	.LASF532
 15269 247d 01       		.byte	0x1
 15270 247e CA08     		.2byte	0x8ca
 15271 2480 97000000 		.4byte	0x97
 15272 2484 02       		.uleb128 0x2
 15273 2485 91       		.byte	0x91
 15274 2486 73       		.sleb128 -13
 15275 2487 2A       		.uleb128 0x2a
 15276 2488 190F0000 		.4byte	.LASF533
 15277 248c 01       		.byte	0x1
 15278 248d CB08     		.2byte	0x8cb
 15279 248f 97000000 		.4byte	0x97
 15280 2493 02       		.uleb128 0x2
 15281 2494 91       		.byte	0x91
 15282 2495 72       		.sleb128 -14
 15283 2496 00       		.byte	0
 15284 2497 29       		.uleb128 0x29
 15285 2498 B4000000 		.4byte	.LBB61
 15286 249c 6C000000 		.4byte	.LBE61-.LBB61
 15287 24a0 C3240000 		.4byte	0x24c3
 15288 24a4 2A       		.uleb128 0x2a
 15289 24a5 C10E0000 		.4byte	.LASF532
 15290 24a9 01       		.byte	0x1
 15291 24aa DC08     		.2byte	0x8dc
 15292 24ac 97000000 		.4byte	0x97
 15293 24b0 02       		.uleb128 0x2
 15294 24b1 91       		.byte	0x91
 15295 24b2 71       		.sleb128 -15
 15296 24b3 2A       		.uleb128 0x2a
 15297 24b4 190F0000 		.4byte	.LASF533
 15298 24b8 01       		.byte	0x1
 15299 24b9 DD08     		.2byte	0x8dd
 15300 24bb 97000000 		.4byte	0x97
 15301 24bf 02       		.uleb128 0x2
 15302 24c0 91       		.byte	0x91
 15303 24c1 70       		.sleb128 -16
 15304 24c2 00       		.byte	0
 15305 24c3 26       		.uleb128 0x26
 15306 24c4 20010000 		.4byte	.LBB62
 15307 24c8 6C000000 		.4byte	.LBE62-.LBB62
 15308 24cc 2A       		.uleb128 0x2a
 15309 24cd C10E0000 		.4byte	.LASF532
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 319


 15310 24d1 01       		.byte	0x1
 15311 24d2 EE08     		.2byte	0x8ee
 15312 24d4 97000000 		.4byte	0x97
 15313 24d8 02       		.uleb128 0x2
 15314 24d9 91       		.byte	0x91
 15315 24da 6F       		.sleb128 -17
 15316 24db 2A       		.uleb128 0x2a
 15317 24dc 190F0000 		.4byte	.LASF533
 15318 24e0 01       		.byte	0x1
 15319 24e1 EF08     		.2byte	0x8ef
 15320 24e3 97000000 		.4byte	0x97
 15321 24e7 02       		.uleb128 0x2
 15322 24e8 91       		.byte	0x91
 15323 24e9 6E       		.sleb128 -18
 15324 24ea 00       		.byte	0
 15325 24eb 00       		.byte	0
 15326 24ec 2D       		.uleb128 0x2d
 15327 24ed A00C0000 		.4byte	.LASF534
 15328 24f1 01       		.byte	0x1
 15329 24f2 1C09     		.2byte	0x91c
 15330 24f4 00000000 		.4byte	.LFB96
 15331 24f8 6C000000 		.4byte	.LFE96-.LFB96
 15332 24fc 01       		.uleb128 0x1
 15333 24fd 9C       		.byte	0x9c
 15334 24fe 21250000 		.4byte	0x2521
 15335 2502 2C       		.uleb128 0x2c
 15336 2503 15230000 		.4byte	.LASF476
 15337 2507 01       		.byte	0x1
 15338 2508 1C09     		.2byte	0x91c
 15339 250a 11010000 		.4byte	0x111
 15340 250e 02       		.uleb128 0x2
 15341 250f 91       		.byte	0x91
 15342 2510 6C       		.sleb128 -20
 15343 2511 2A       		.uleb128 0x2a
 15344 2512 EB1E0000 		.4byte	.LASF472
 15345 2516 01       		.byte	0x1
 15346 2517 1E09     		.2byte	0x91e
 15347 2519 730F0000 		.4byte	0xf73
 15348 251d 02       		.uleb128 0x2
 15349 251e 91       		.byte	0x91
 15350 251f 74       		.sleb128 -12
 15351 2520 00       		.byte	0
 15352 2521 2F       		.uleb128 0x2f
 15353 2522 D3270000 		.4byte	.LASF536
 15354 2526 01       		.byte	0x1
 15355 2527 2F09     		.2byte	0x92f
 15356 2529 49020000 		.4byte	0x249
 15357 252d 00000000 		.4byte	.LFB97
 15358 2531 5C010000 		.4byte	.LFE97-.LFB97
 15359 2535 01       		.uleb128 0x1
 15360 2536 9C       		.byte	0x9c
 15361 2537 87250000 		.4byte	0x2587
 15362 253b 2C       		.uleb128 0x2c
 15363 253c 15230000 		.4byte	.LASF476
 15364 2540 01       		.byte	0x1
 15365 2541 2F09     		.2byte	0x92f
 15366 2543 11010000 		.4byte	0x111
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 320


 15367 2547 02       		.uleb128 0x2
 15368 2548 91       		.byte	0x91
 15369 2549 6C       		.sleb128 -20
 15370 254a 2C       		.uleb128 0x2c
 15371 254b 260F0000 		.4byte	.LASF527
 15372 254f 01       		.byte	0x1
 15373 2550 2F09     		.2byte	0x92f
 15374 2552 11010000 		.4byte	0x111
 15375 2556 02       		.uleb128 0x2
 15376 2557 91       		.byte	0x91
 15377 2558 68       		.sleb128 -24
 15378 2559 2C       		.uleb128 0x2c
 15379 255a 031A0000 		.4byte	.LASF528
 15380 255e 01       		.byte	0x1
 15381 255f 2F09     		.2byte	0x92f
 15382 2561 A3000000 		.4byte	0xa3
 15383 2565 02       		.uleb128 0x2
 15384 2566 91       		.byte	0x91
 15385 2567 66       		.sleb128 -26
 15386 2568 2A       		.uleb128 0x2a
 15387 2569 C6150000 		.4byte	.LASF529
 15388 256d 01       		.byte	0x1
 15389 256e 3109     		.2byte	0x931
 15390 2570 49020000 		.4byte	0x249
 15391 2574 02       		.uleb128 0x2
 15392 2575 91       		.byte	0x91
 15393 2576 77       		.sleb128 -9
 15394 2577 2A       		.uleb128 0x2a
 15395 2578 34000000 		.4byte	.LASF490
 15396 257c 01       		.byte	0x1
 15397 257d 3209     		.2byte	0x932
 15398 257f 2B0D0000 		.4byte	0xd2b
 15399 2583 02       		.uleb128 0x2
 15400 2584 91       		.byte	0x91
 15401 2585 70       		.sleb128 -16
 15402 2586 00       		.byte	0
 15403 2587 2F       		.uleb128 0x2f
 15404 2588 B6200000 		.4byte	.LASF537
 15405 258c 01       		.byte	0x1
 15406 258d 5E09     		.2byte	0x95e
 15407 258f 49020000 		.4byte	0x249
 15408 2593 00000000 		.4byte	.LFB98
 15409 2597 4C000000 		.4byte	.LFE98-.LFB98
 15410 259b 01       		.uleb128 0x1
 15411 259c 9C       		.byte	0x9c
 15412 259d ED250000 		.4byte	0x25ed
 15413 25a1 2C       		.uleb128 0x2c
 15414 25a2 15230000 		.4byte	.LASF476
 15415 25a6 01       		.byte	0x1
 15416 25a7 5E09     		.2byte	0x95e
 15417 25a9 11010000 		.4byte	0x111
 15418 25ad 02       		.uleb128 0x2
 15419 25ae 91       		.byte	0x91
 15420 25af 6C       		.sleb128 -20
 15421 25b0 2C       		.uleb128 0x2c
 15422 25b1 260F0000 		.4byte	.LASF527
 15423 25b5 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 321


 15424 25b6 5E09     		.2byte	0x95e
 15425 25b8 11010000 		.4byte	0x111
 15426 25bc 02       		.uleb128 0x2
 15427 25bd 91       		.byte	0x91
 15428 25be 68       		.sleb128 -24
 15429 25bf 2C       		.uleb128 0x2c
 15430 25c0 031A0000 		.4byte	.LASF528
 15431 25c4 01       		.byte	0x1
 15432 25c5 5E09     		.2byte	0x95e
 15433 25c7 A3000000 		.4byte	0xa3
 15434 25cb 02       		.uleb128 0x2
 15435 25cc 91       		.byte	0x91
 15436 25cd 66       		.sleb128 -26
 15437 25ce 2A       		.uleb128 0x2a
 15438 25cf C6150000 		.4byte	.LASF529
 15439 25d3 01       		.byte	0x1
 15440 25d4 6009     		.2byte	0x960
 15441 25d6 49020000 		.4byte	0x249
 15442 25da 02       		.uleb128 0x2
 15443 25db 91       		.byte	0x91
 15444 25dc 77       		.sleb128 -9
 15445 25dd 2A       		.uleb128 0x2a
 15446 25de 34000000 		.4byte	.LASF490
 15447 25e2 01       		.byte	0x1
 15448 25e3 6109     		.2byte	0x961
 15449 25e5 2B0D0000 		.4byte	0xd2b
 15450 25e9 02       		.uleb128 0x2
 15451 25ea 91       		.byte	0x91
 15452 25eb 70       		.sleb128 -16
 15453 25ec 00       		.byte	0
 15454 25ed 2D       		.uleb128 0x2d
 15455 25ee 04160000 		.4byte	.LASF538
 15456 25f2 01       		.byte	0x1
 15457 25f3 6F09     		.2byte	0x96f
 15458 25f5 00000000 		.4byte	.LFB99
 15459 25f9 98000000 		.4byte	.LFE99-.LFB99
 15460 25fd 01       		.uleb128 0x1
 15461 25fe 9C       		.byte	0x9c
 15462 25ff 22260000 		.4byte	0x2622
 15463 2603 2C       		.uleb128 0x2c
 15464 2604 15230000 		.4byte	.LASF476
 15465 2608 01       		.byte	0x1
 15466 2609 6F09     		.2byte	0x96f
 15467 260b 11010000 		.4byte	0x111
 15468 260f 02       		.uleb128 0x2
 15469 2610 91       		.byte	0x91
 15470 2611 6C       		.sleb128 -20
 15471 2612 2A       		.uleb128 0x2a
 15472 2613 EB1E0000 		.4byte	.LASF472
 15473 2617 01       		.byte	0x1
 15474 2618 7109     		.2byte	0x971
 15475 261a 730F0000 		.4byte	0xf73
 15476 261e 02       		.uleb128 0x2
 15477 261f 91       		.byte	0x91
 15478 2620 74       		.sleb128 -12
 15479 2621 00       		.byte	0
 15480 2622 2B       		.uleb128 0x2b
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 322


 15481 2623 2A2A0000 		.4byte	.LASF539
 15482 2627 01       		.byte	0x1
 15483 2628 8C09     		.2byte	0x98c
 15484 262a 00000000 		.4byte	.LFB100
 15485 262e AC000000 		.4byte	.LFE100-.LFB100
 15486 2632 01       		.uleb128 0x1
 15487 2633 9C       		.byte	0x9c
 15488 2634 98260000 		.4byte	0x2698
 15489 2638 2C       		.uleb128 0x2c
 15490 2639 15230000 		.4byte	.LASF476
 15491 263d 01       		.byte	0x1
 15492 263e 8C09     		.2byte	0x98c
 15493 2640 30010000 		.4byte	0x130
 15494 2644 02       		.uleb128 0x2
 15495 2645 91       		.byte	0x91
 15496 2646 64       		.sleb128 -28
 15497 2647 2A       		.uleb128 0x2a
 15498 2648 34000000 		.4byte	.LASF490
 15499 264c 01       		.byte	0x1
 15500 264d 8E09     		.2byte	0x98e
 15501 264f 2B0D0000 		.4byte	0xd2b
 15502 2653 02       		.uleb128 0x2
 15503 2654 91       		.byte	0x91
 15504 2655 70       		.sleb128 -16
 15505 2656 2A       		.uleb128 0x2a
 15506 2657 64250000 		.4byte	.LASF540
 15507 265b 01       		.byte	0x1
 15508 265c 8F09     		.2byte	0x98f
 15509 265e 72020000 		.4byte	0x272
 15510 2662 02       		.uleb128 0x2
 15511 2663 91       		.byte	0x91
 15512 2664 6C       		.sleb128 -20
 15513 2665 26       		.uleb128 0x26
 15514 2666 16000000 		.4byte	.LBB63
 15515 266a 86000000 		.4byte	.LBE63-.LBB63
 15516 266e 2A       		.uleb128 0x2a
 15517 266f E1110000 		.4byte	.LASF541
 15518 2673 01       		.byte	0x1
 15519 2674 9409     		.2byte	0x994
 15520 2676 5B0F0000 		.4byte	0xf5b
 15521 267a 02       		.uleb128 0x2
 15522 267b 91       		.byte	0x91
 15523 267c 74       		.sleb128 -12
 15524 267d 26       		.uleb128 0x26
 15525 267e 38000000 		.4byte	.LBB64
 15526 2682 5C000000 		.4byte	.LBE64-.LBB64
 15527 2686 2A       		.uleb128 0x2a
 15528 2687 700C0000 		.4byte	.LASF542
 15529 268b 01       		.byte	0x1
 15530 268c 9909     		.2byte	0x999
 15531 268e 730F0000 		.4byte	0xf73
 15532 2692 02       		.uleb128 0x2
 15533 2693 91       		.byte	0x91
 15534 2694 68       		.sleb128 -24
 15535 2695 00       		.byte	0
 15536 2696 00       		.byte	0
 15537 2697 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 323


 15538 2698 2F       		.uleb128 0x2f
 15539 2699 65160000 		.4byte	.LASF543
 15540 269d 01       		.byte	0x1
 15541 269e B109     		.2byte	0x9b1
 15542 26a0 81000000 		.4byte	0x81
 15543 26a4 00000000 		.4byte	.LFB101
 15544 26a8 5E000000 		.4byte	.LFE101-.LFB101
 15545 26ac 01       		.uleb128 0x1
 15546 26ad 9C       		.byte	0x9c
 15547 26ae D1260000 		.4byte	0x26d1
 15548 26b2 2C       		.uleb128 0x2c
 15549 26b3 2E0B0000 		.4byte	.LASF544
 15550 26b7 01       		.byte	0x1
 15551 26b8 B109     		.2byte	0x9b1
 15552 26ba 3B010000 		.4byte	0x13b
 15553 26be 02       		.uleb128 0x2
 15554 26bf 91       		.byte	0x91
 15555 26c0 6C       		.sleb128 -20
 15556 26c1 28       		.uleb128 0x28
 15557 26c2 6C726300 		.ascii	"lrc\000"
 15558 26c6 01       		.byte	0x1
 15559 26c7 B309     		.2byte	0x9b3
 15560 26c9 81000000 		.4byte	0x81
 15561 26cd 02       		.uleb128 0x2
 15562 26ce 91       		.byte	0x91
 15563 26cf 77       		.sleb128 -9
 15564 26d0 00       		.byte	0
 15565 26d1 2F       		.uleb128 0x2f
 15566 26d2 39120000 		.4byte	.LASF545
 15567 26d6 01       		.byte	0x1
 15568 26d7 BD09     		.2byte	0x9bd
 15569 26d9 81000000 		.4byte	0x81
 15570 26dd 00000000 		.4byte	.LFB102
 15571 26e1 32000000 		.4byte	.LFE102-.LFB102
 15572 26e5 01       		.uleb128 0x1
 15573 26e6 9C       		.byte	0x9c
 15574 26e7 0A270000 		.4byte	0x270a
 15575 26eb 2C       		.uleb128 0x2c
 15576 26ec 2E0B0000 		.4byte	.LASF544
 15577 26f0 01       		.byte	0x1
 15578 26f1 BD09     		.2byte	0x9bd
 15579 26f3 3B010000 		.4byte	0x13b
 15580 26f7 02       		.uleb128 0x2
 15581 26f8 91       		.byte	0x91
 15582 26f9 6C       		.sleb128 -20
 15583 26fa 28       		.uleb128 0x28
 15584 26fb 6C726300 		.ascii	"lrc\000"
 15585 26ff 01       		.byte	0x1
 15586 2700 BF09     		.2byte	0x9bf
 15587 2702 81000000 		.4byte	0x81
 15588 2706 02       		.uleb128 0x2
 15589 2707 91       		.byte	0x91
 15590 2708 77       		.sleb128 -9
 15591 2709 00       		.byte	0
 15592 270a 2D       		.uleb128 0x2d
 15593 270b C3130000 		.4byte	.LASF546
 15594 270f 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 324


 15595 2710 C909     		.2byte	0x9c9
 15596 2712 00000000 		.4byte	.LFB103
 15597 2716 2C000000 		.4byte	.LFE103-.LFB103
 15598 271a 01       		.uleb128 0x1
 15599 271b 9C       		.byte	0x9c
 15600 271c 3F270000 		.4byte	0x273f
 15601 2720 2C       		.uleb128 0x2c
 15602 2721 15230000 		.4byte	.LASF476
 15603 2725 01       		.byte	0x1
 15604 2726 C909     		.2byte	0x9c9
 15605 2728 11010000 		.4byte	0x111
 15606 272c 02       		.uleb128 0x2
 15607 272d 91       		.byte	0x91
 15608 272e 6C       		.sleb128 -20
 15609 272f 2A       		.uleb128 0x2a
 15610 2730 EB1E0000 		.4byte	.LASF472
 15611 2734 01       		.byte	0x1
 15612 2735 CB09     		.2byte	0x9cb
 15613 2737 30100000 		.4byte	0x1030
 15614 273b 02       		.uleb128 0x2
 15615 273c 91       		.byte	0x91
 15616 273d 74       		.sleb128 -12
 15617 273e 00       		.byte	0
 15618 273f 2D       		.uleb128 0x2d
 15619 2740 D1140000 		.4byte	.LASF547
 15620 2744 01       		.byte	0x1
 15621 2745 D509     		.2byte	0x9d5
 15622 2747 00000000 		.4byte	.LFB104
 15623 274b 2C000000 		.4byte	.LFE104-.LFB104
 15624 274f 01       		.uleb128 0x1
 15625 2750 9C       		.byte	0x9c
 15626 2751 74270000 		.4byte	0x2774
 15627 2755 2C       		.uleb128 0x2c
 15628 2756 15230000 		.4byte	.LASF476
 15629 275a 01       		.byte	0x1
 15630 275b D509     		.2byte	0x9d5
 15631 275d 11010000 		.4byte	0x111
 15632 2761 02       		.uleb128 0x2
 15633 2762 91       		.byte	0x91
 15634 2763 6C       		.sleb128 -20
 15635 2764 2A       		.uleb128 0x2a
 15636 2765 EB1E0000 		.4byte	.LASF472
 15637 2769 01       		.byte	0x1
 15638 276a D709     		.2byte	0x9d7
 15639 276c 730F0000 		.4byte	0xf73
 15640 2770 02       		.uleb128 0x2
 15641 2771 91       		.byte	0x91
 15642 2772 74       		.sleb128 -12
 15643 2773 00       		.byte	0
 15644 2774 2B       		.uleb128 0x2b
 15645 2775 24190000 		.4byte	.LASF548
 15646 2779 01       		.byte	0x1
 15647 277a E009     		.2byte	0x9e0
 15648 277c 00000000 		.4byte	.LFB105
 15649 2780 48020000 		.4byte	.LFE105-.LFB105
 15650 2784 01       		.uleb128 0x1
 15651 2785 9C       		.byte	0x9c
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 325


 15652 2786 C2270000 		.4byte	0x27c2
 15653 278a 2C       		.uleb128 0x2c
 15654 278b 15230000 		.4byte	.LASF476
 15655 278f 01       		.byte	0x1
 15656 2790 E009     		.2byte	0x9e0
 15657 2792 11010000 		.4byte	0x111
 15658 2796 02       		.uleb128 0x2
 15659 2797 91       		.byte	0x91
 15660 2798 64       		.sleb128 -28
 15661 2799 2A       		.uleb128 0x2a
 15662 279a EB1E0000 		.4byte	.LASF472
 15663 279e 01       		.byte	0x1
 15664 279f E209     		.2byte	0x9e2
 15665 27a1 730F0000 		.4byte	0xf73
 15666 27a5 02       		.uleb128 0x2
 15667 27a6 91       		.byte	0x91
 15668 27a7 6C       		.sleb128 -20
 15669 27a8 26       		.uleb128 0x26
 15670 27a9 3C000000 		.4byte	.LBB65
 15671 27ad FA010000 		.4byte	.LBE65-.LBB65
 15672 27b1 2A       		.uleb128 0x2a
 15673 27b2 52120000 		.4byte	.LASF524
 15674 27b6 01       		.byte	0x1
 15675 27b7 EB09     		.2byte	0x9eb
 15676 27b9 72020000 		.4byte	0x272
 15677 27bd 02       		.uleb128 0x2
 15678 27be 91       		.byte	0x91
 15679 27bf 68       		.sleb128 -24
 15680 27c0 00       		.byte	0
 15681 27c1 00       		.byte	0
 15682 27c2 2D       		.uleb128 0x2d
 15683 27c3 5E0D0000 		.4byte	.LASF549
 15684 27c7 01       		.byte	0x1
 15685 27c8 3C0A     		.2byte	0xa3c
 15686 27ca 00000000 		.4byte	.LFB106
 15687 27ce 74010000 		.4byte	.LFE106-.LFB106
 15688 27d2 01       		.uleb128 0x1
 15689 27d3 9C       		.byte	0x9c
 15690 27d4 33280000 		.4byte	0x2833
 15691 27d8 2C       		.uleb128 0x2c
 15692 27d9 260F0000 		.4byte	.LASF527
 15693 27dd 01       		.byte	0x1
 15694 27de 3C0A     		.2byte	0xa3c
 15695 27e0 3B010000 		.4byte	0x13b
 15696 27e4 02       		.uleb128 0x2
 15697 27e5 91       		.byte	0x91
 15698 27e6 6C       		.sleb128 -20
 15699 27e7 2C       		.uleb128 0x2c
 15700 27e8 031A0000 		.4byte	.LASF528
 15701 27ec 01       		.byte	0x1
 15702 27ed 3C0A     		.2byte	0xa3c
 15703 27ef 97000000 		.4byte	0x97
 15704 27f3 02       		.uleb128 0x2
 15705 27f4 91       		.byte	0x91
 15706 27f5 6B       		.sleb128 -21
 15707 27f6 2A       		.uleb128 0x2a
 15708 27f7 0E1A0000 		.4byte	.LASF550
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 326


 15709 27fb 01       		.byte	0x1
 15710 27fc 3E0A     		.2byte	0xa3e
 15711 27fe 97000000 		.4byte	0x97
 15712 2802 02       		.uleb128 0x2
 15713 2803 91       		.byte	0x91
 15714 2804 77       		.sleb128 -9
 15715 2805 2A       		.uleb128 0x2a
 15716 2806 AC100000 		.4byte	.LASF551
 15717 280a 01       		.byte	0x1
 15718 280b 3F0A     		.2byte	0xa3f
 15719 280d 49020000 		.4byte	0x249
 15720 2811 02       		.uleb128 0x2
 15721 2812 91       		.byte	0x91
 15722 2813 76       		.sleb128 -10
 15723 2814 2A       		.uleb128 0x2a
 15724 2815 2E250000 		.4byte	.LASF491
 15725 2819 01       		.byte	0x1
 15726 281a 410A     		.2byte	0xa41
 15727 281c BB000000 		.4byte	0xbb
 15728 2820 02       		.uleb128 0x2
 15729 2821 91       		.byte	0x91
 15730 2822 75       		.sleb128 -11
 15731 2823 2A       		.uleb128 0x2a
 15732 2824 5A130000 		.4byte	.LASF552
 15733 2828 01       		.byte	0x1
 15734 2829 510A     		.2byte	0xa51
 15735 282b BB000000 		.4byte	0xbb
 15736 282f 02       		.uleb128 0x2
 15737 2830 91       		.byte	0x91
 15738 2831 74       		.sleb128 -12
 15739 2832 00       		.byte	0
 15740 2833 2D       		.uleb128 0x2d
 15741 2834 38260000 		.4byte	.LASF553
 15742 2838 01       		.byte	0x1
 15743 2839 740A     		.2byte	0xa74
 15744 283b 00000000 		.4byte	.LFB107
 15745 283f 64010000 		.4byte	.LFE107-.LFB107
 15746 2843 01       		.uleb128 0x1
 15747 2844 9C       		.byte	0x9c
 15748 2845 A4280000 		.4byte	0x28a4
 15749 2849 2C       		.uleb128 0x2c
 15750 284a 260F0000 		.4byte	.LASF527
 15751 284e 01       		.byte	0x1
 15752 284f 740A     		.2byte	0xa74
 15753 2851 3B010000 		.4byte	0x13b
 15754 2855 02       		.uleb128 0x2
 15755 2856 91       		.byte	0x91
 15756 2857 6C       		.sleb128 -20
 15757 2858 2C       		.uleb128 0x2c
 15758 2859 031A0000 		.4byte	.LASF528
 15759 285d 01       		.byte	0x1
 15760 285e 740A     		.2byte	0xa74
 15761 2860 97000000 		.4byte	0x97
 15762 2864 02       		.uleb128 0x2
 15763 2865 91       		.byte	0x91
 15764 2866 6B       		.sleb128 -21
 15765 2867 2A       		.uleb128 0x2a
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 327


 15766 2868 0E1A0000 		.4byte	.LASF550
 15767 286c 01       		.byte	0x1
 15768 286d 760A     		.2byte	0xa76
 15769 286f 97000000 		.4byte	0x97
 15770 2873 02       		.uleb128 0x2
 15771 2874 91       		.byte	0x91
 15772 2875 77       		.sleb128 -9
 15773 2876 2A       		.uleb128 0x2a
 15774 2877 AC100000 		.4byte	.LASF551
 15775 287b 01       		.byte	0x1
 15776 287c 770A     		.2byte	0xa77
 15777 287e 49020000 		.4byte	0x249
 15778 2882 02       		.uleb128 0x2
 15779 2883 91       		.byte	0x91
 15780 2884 76       		.sleb128 -10
 15781 2885 2A       		.uleb128 0x2a
 15782 2886 2E250000 		.4byte	.LASF491
 15783 288a 01       		.byte	0x1
 15784 288b 790A     		.2byte	0xa79
 15785 288d BB000000 		.4byte	0xbb
 15786 2891 02       		.uleb128 0x2
 15787 2892 91       		.byte	0x91
 15788 2893 75       		.sleb128 -11
 15789 2894 2A       		.uleb128 0x2a
 15790 2895 5A130000 		.4byte	.LASF552
 15791 2899 01       		.byte	0x1
 15792 289a 890A     		.2byte	0xa89
 15793 289c BB000000 		.4byte	0xbb
 15794 28a0 02       		.uleb128 0x2
 15795 28a1 91       		.byte	0x91
 15796 28a2 74       		.sleb128 -12
 15797 28a3 00       		.byte	0
 15798 28a4 2F       		.uleb128 0x2f
 15799 28a5 41240000 		.4byte	.LASF554
 15800 28a9 01       		.byte	0x1
 15801 28aa B20A     		.2byte	0xab2
 15802 28ac E1000000 		.4byte	0xe1
 15803 28b0 00000000 		.4byte	.LFB108
 15804 28b4 48000000 		.4byte	.LFE108-.LFB108
 15805 28b8 01       		.uleb128 0x1
 15806 28b9 9C       		.byte	0x9c
 15807 28ba EC280000 		.4byte	0x28ec
 15808 28be 2C       		.uleb128 0x2c
 15809 28bf B7260000 		.4byte	.LASF555
 15810 28c3 01       		.byte	0x1
 15811 28c4 B20A     		.2byte	0xab2
 15812 28c6 E1000000 		.4byte	0xe1
 15813 28ca 02       		.uleb128 0x2
 15814 28cb 91       		.byte	0x91
 15815 28cc 6F       		.sleb128 -17
 15816 28cd 2A       		.uleb128 0x2a
 15817 28ce C6150000 		.4byte	.LASF529
 15818 28d2 01       		.byte	0x1
 15819 28d3 B40A     		.2byte	0xab4
 15820 28d5 E1000000 		.4byte	0xe1
 15821 28d9 02       		.uleb128 0x2
 15822 28da 91       		.byte	0x91
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 328


 15823 28db 77       		.sleb128 -9
 15824 28dc 2A       		.uleb128 0x2a
 15825 28dd 351B0000 		.4byte	.LASF556
 15826 28e1 01       		.byte	0x1
 15827 28e2 B50A     		.2byte	0xab5
 15828 28e4 71070000 		.4byte	0x771
 15829 28e8 02       		.uleb128 0x2
 15830 28e9 91       		.byte	0x91
 15831 28ea 70       		.sleb128 -16
 15832 28eb 00       		.byte	0
 15833 28ec 30       		.uleb128 0x30
 15834 28ed A1180000 		.4byte	.LASF557
 15835 28f1 0F       		.byte	0xf
 15836 28f2 5506     		.2byte	0x655
 15837 28f4 F8280000 		.4byte	0x28f8
 15838 28f8 06       		.uleb128 0x6
 15839 28f9 8C000000 		.4byte	0x8c
 15840 28fd 30       		.uleb128 0x30
 15841 28fe 8D050000 		.4byte	.LASF558
 15842 2902 0A       		.byte	0xa
 15843 2903 5002     		.2byte	0x250
 15844 2905 61100000 		.4byte	0x1061
 15845 2909 0A       		.uleb128 0xa
 15846 290a 1F0D0000 		.4byte	0xd1f
 15847 290e 19290000 		.4byte	0x2919
 15848 2912 0B       		.uleb128 0xb
 15849 2913 0A010000 		.4byte	0x10a
 15850 2917 03       		.byte	0x3
 15851 2918 00       		.byte	0
 15852 2919 30       		.uleb128 0x30
 15853 291a 41120000 		.4byte	.LASF559
 15854 291e 0A       		.byte	0xa
 15855 291f 5102     		.2byte	0x251
 15856 2921 09290000 		.4byte	0x2909
 15857 2925 30       		.uleb128 0x30
 15858 2926 C2020000 		.4byte	.LASF560
 15859 292a 0A       		.byte	0xa
 15860 292b 5302     		.2byte	0x253
 15861 292d 57110000 		.4byte	0x1157
 15862 2931 31       		.uleb128 0x31
 15863 2932 80200000 		.4byte	.LASF561
 15864 2936 0D       		.byte	0xd
 15865 2937 C2       		.byte	0xc2
 15866 2938 47140000 		.4byte	0x1447
 15867 293c 31       		.uleb128 0x31
 15868 293d 5F200000 		.4byte	.LASF562
 15869 2941 0E       		.byte	0xe
 15870 2942 79       		.byte	0x79
 15871 2943 73140000 		.4byte	0x1473
 15872 2947 31       		.uleb128 0x31
 15873 2948 41190000 		.4byte	.LASF563
 15874 294c 01       		.byte	0x1
 15875 294d 25       		.byte	0x25
 15876 294e 63110000 		.4byte	0x1163
 15877 2952 0A       		.uleb128 0xa
 15878 2953 E1000000 		.4byte	0xe1
 15879 2957 68290000 		.4byte	0x2968
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 329


 15880 295b 0B       		.uleb128 0xb
 15881 295c 0A010000 		.4byte	0x10a
 15882 2960 0F       		.byte	0xf
 15883 2961 0B       		.uleb128 0xb
 15884 2962 0A010000 		.4byte	0x10a
 15885 2966 01       		.byte	0x1
 15886 2967 00       		.byte	0
 15887 2968 32       		.uleb128 0x32
 15888 2969 79190000 		.4byte	.LASF564
 15889 296d 01       		.byte	0x1
 15890 296e AA0A     		.2byte	0xaaa
 15891 2970 52290000 		.4byte	0x2952
 15892 2974 05       		.uleb128 0x5
 15893 2975 03       		.byte	0x3
 15894 2976 00000000 		.4byte	_g_sfcharmap
 15895 297a 00       		.byte	0
 15896              		.section	.debug_abbrev,"",%progbits
 15897              	.Ldebug_abbrev0:
 15898 0000 01       		.uleb128 0x1
 15899 0001 11       		.uleb128 0x11
 15900 0002 01       		.byte	0x1
 15901 0003 25       		.uleb128 0x25
 15902 0004 0E       		.uleb128 0xe
 15903 0005 13       		.uleb128 0x13
 15904 0006 0B       		.uleb128 0xb
 15905 0007 03       		.uleb128 0x3
 15906 0008 0E       		.uleb128 0xe
 15907 0009 1B       		.uleb128 0x1b
 15908 000a 0E       		.uleb128 0xe
 15909 000b 55       		.uleb128 0x55
 15910 000c 17       		.uleb128 0x17
 15911 000d 11       		.uleb128 0x11
 15912 000e 01       		.uleb128 0x1
 15913 000f 10       		.uleb128 0x10
 15914 0010 17       		.uleb128 0x17
 15915 0011 00       		.byte	0
 15916 0012 00       		.byte	0
 15917 0013 02       		.uleb128 0x2
 15918 0014 24       		.uleb128 0x24
 15919 0015 00       		.byte	0
 15920 0016 0B       		.uleb128 0xb
 15921 0017 0B       		.uleb128 0xb
 15922 0018 3E       		.uleb128 0x3e
 15923 0019 0B       		.uleb128 0xb
 15924 001a 03       		.uleb128 0x3
 15925 001b 0E       		.uleb128 0xe
 15926 001c 00       		.byte	0
 15927 001d 00       		.byte	0
 15928 001e 03       		.uleb128 0x3
 15929 001f 16       		.uleb128 0x16
 15930 0020 00       		.byte	0
 15931 0021 03       		.uleb128 0x3
 15932 0022 0E       		.uleb128 0xe
 15933 0023 3A       		.uleb128 0x3a
 15934 0024 0B       		.uleb128 0xb
 15935 0025 3B       		.uleb128 0x3b
 15936 0026 0B       		.uleb128 0xb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 330


 15937 0027 49       		.uleb128 0x49
 15938 0028 13       		.uleb128 0x13
 15939 0029 00       		.byte	0
 15940 002a 00       		.byte	0
 15941 002b 04       		.uleb128 0x4
 15942 002c 24       		.uleb128 0x24
 15943 002d 00       		.byte	0
 15944 002e 0B       		.uleb128 0xb
 15945 002f 0B       		.uleb128 0xb
 15946 0030 3E       		.uleb128 0x3e
 15947 0031 0B       		.uleb128 0xb
 15948 0032 03       		.uleb128 0x3
 15949 0033 08       		.uleb128 0x8
 15950 0034 00       		.byte	0
 15951 0035 00       		.byte	0
 15952 0036 05       		.uleb128 0x5
 15953 0037 16       		.uleb128 0x16
 15954 0038 00       		.byte	0
 15955 0039 03       		.uleb128 0x3
 15956 003a 0E       		.uleb128 0xe
 15957 003b 3A       		.uleb128 0x3a
 15958 003c 0B       		.uleb128 0xb
 15959 003d 3B       		.uleb128 0x3b
 15960 003e 05       		.uleb128 0x5
 15961 003f 49       		.uleb128 0x49
 15962 0040 13       		.uleb128 0x13
 15963 0041 00       		.byte	0
 15964 0042 00       		.byte	0
 15965 0043 06       		.uleb128 0x6
 15966 0044 35       		.uleb128 0x35
 15967 0045 00       		.byte	0
 15968 0046 49       		.uleb128 0x49
 15969 0047 13       		.uleb128 0x13
 15970 0048 00       		.byte	0
 15971 0049 00       		.byte	0
 15972 004a 07       		.uleb128 0x7
 15973 004b 0F       		.uleb128 0xf
 15974 004c 00       		.byte	0
 15975 004d 0B       		.uleb128 0xb
 15976 004e 0B       		.uleb128 0xb
 15977 004f 49       		.uleb128 0x49
 15978 0050 13       		.uleb128 0x13
 15979 0051 00       		.byte	0
 15980 0052 00       		.byte	0
 15981 0053 08       		.uleb128 0x8
 15982 0054 15       		.uleb128 0x15
 15983 0055 00       		.byte	0
 15984 0056 27       		.uleb128 0x27
 15985 0057 19       		.uleb128 0x19
 15986 0058 00       		.byte	0
 15987 0059 00       		.byte	0
 15988 005a 09       		.uleb128 0x9
 15989 005b 0F       		.uleb128 0xf
 15990 005c 00       		.byte	0
 15991 005d 0B       		.uleb128 0xb
 15992 005e 0B       		.uleb128 0xb
 15993 005f 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 331


 15994 0060 00       		.byte	0
 15995 0061 0A       		.uleb128 0xa
 15996 0062 01       		.uleb128 0x1
 15997 0063 01       		.byte	0x1
 15998 0064 49       		.uleb128 0x49
 15999 0065 13       		.uleb128 0x13
 16000 0066 01       		.uleb128 0x1
 16001 0067 13       		.uleb128 0x13
 16002 0068 00       		.byte	0
 16003 0069 00       		.byte	0
 16004 006a 0B       		.uleb128 0xb
 16005 006b 21       		.uleb128 0x21
 16006 006c 00       		.byte	0
 16007 006d 49       		.uleb128 0x49
 16008 006e 13       		.uleb128 0x13
 16009 006f 2F       		.uleb128 0x2f
 16010 0070 0B       		.uleb128 0xb
 16011 0071 00       		.byte	0
 16012 0072 00       		.byte	0
 16013 0073 0C       		.uleb128 0xc
 16014 0074 04       		.uleb128 0x4
 16015 0075 01       		.byte	0x1
 16016 0076 03       		.uleb128 0x3
 16017 0077 0E       		.uleb128 0xe
 16018 0078 0B       		.uleb128 0xb
 16019 0079 0B       		.uleb128 0xb
 16020 007a 3A       		.uleb128 0x3a
 16021 007b 0B       		.uleb128 0xb
 16022 007c 3B       		.uleb128 0x3b
 16023 007d 0B       		.uleb128 0xb
 16024 007e 01       		.uleb128 0x1
 16025 007f 13       		.uleb128 0x13
 16026 0080 00       		.byte	0
 16027 0081 00       		.byte	0
 16028 0082 0D       		.uleb128 0xd
 16029 0083 28       		.uleb128 0x28
 16030 0084 00       		.byte	0
 16031 0085 03       		.uleb128 0x3
 16032 0086 0E       		.uleb128 0xe
 16033 0087 1C       		.uleb128 0x1c
 16034 0088 0D       		.uleb128 0xd
 16035 0089 00       		.byte	0
 16036 008a 00       		.byte	0
 16037 008b 0E       		.uleb128 0xe
 16038 008c 13       		.uleb128 0x13
 16039 008d 01       		.byte	0x1
 16040 008e 03       		.uleb128 0x3
 16041 008f 0E       		.uleb128 0xe
 16042 0090 0B       		.uleb128 0xb
 16043 0091 05       		.uleb128 0x5
 16044 0092 3A       		.uleb128 0x3a
 16045 0093 0B       		.uleb128 0xb
 16046 0094 3B       		.uleb128 0x3b
 16047 0095 0B       		.uleb128 0xb
 16048 0096 01       		.uleb128 0x1
 16049 0097 13       		.uleb128 0x13
 16050 0098 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 332


 16051 0099 00       		.byte	0
 16052 009a 0F       		.uleb128 0xf
 16053 009b 0D       		.uleb128 0xd
 16054 009c 00       		.byte	0
 16055 009d 03       		.uleb128 0x3
 16056 009e 0E       		.uleb128 0xe
 16057 009f 3A       		.uleb128 0x3a
 16058 00a0 0B       		.uleb128 0xb
 16059 00a1 3B       		.uleb128 0x3b
 16060 00a2 0B       		.uleb128 0xb
 16061 00a3 49       		.uleb128 0x49
 16062 00a4 13       		.uleb128 0x13
 16063 00a5 38       		.uleb128 0x38
 16064 00a6 0B       		.uleb128 0xb
 16065 00a7 00       		.byte	0
 16066 00a8 00       		.byte	0
 16067 00a9 10       		.uleb128 0x10
 16068 00aa 0D       		.uleb128 0xd
 16069 00ab 00       		.byte	0
 16070 00ac 03       		.uleb128 0x3
 16071 00ad 0E       		.uleb128 0xe
 16072 00ae 3A       		.uleb128 0x3a
 16073 00af 0B       		.uleb128 0xb
 16074 00b0 3B       		.uleb128 0x3b
 16075 00b1 0B       		.uleb128 0xb
 16076 00b2 49       		.uleb128 0x49
 16077 00b3 13       		.uleb128 0x13
 16078 00b4 38       		.uleb128 0x38
 16079 00b5 05       		.uleb128 0x5
 16080 00b6 00       		.byte	0
 16081 00b7 00       		.byte	0
 16082 00b8 11       		.uleb128 0x11
 16083 00b9 21       		.uleb128 0x21
 16084 00ba 00       		.byte	0
 16085 00bb 49       		.uleb128 0x49
 16086 00bc 13       		.uleb128 0x13
 16087 00bd 2F       		.uleb128 0x2f
 16088 00be 05       		.uleb128 0x5
 16089 00bf 00       		.byte	0
 16090 00c0 00       		.byte	0
 16091 00c1 12       		.uleb128 0x12
 16092 00c2 15       		.uleb128 0x15
 16093 00c3 01       		.byte	0x1
 16094 00c4 27       		.uleb128 0x27
 16095 00c5 19       		.uleb128 0x19
 16096 00c6 01       		.uleb128 0x1
 16097 00c7 13       		.uleb128 0x13
 16098 00c8 00       		.byte	0
 16099 00c9 00       		.byte	0
 16100 00ca 13       		.uleb128 0x13
 16101 00cb 05       		.uleb128 0x5
 16102 00cc 00       		.byte	0
 16103 00cd 49       		.uleb128 0x49
 16104 00ce 13       		.uleb128 0x13
 16105 00cf 00       		.byte	0
 16106 00d0 00       		.byte	0
 16107 00d1 14       		.uleb128 0x14
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 333


 16108 00d2 13       		.uleb128 0x13
 16109 00d3 01       		.byte	0x1
 16110 00d4 03       		.uleb128 0x3
 16111 00d5 0E       		.uleb128 0xe
 16112 00d6 0B       		.uleb128 0xb
 16113 00d7 0B       		.uleb128 0xb
 16114 00d8 3A       		.uleb128 0x3a
 16115 00d9 0B       		.uleb128 0xb
 16116 00da 3B       		.uleb128 0x3b
 16117 00db 0B       		.uleb128 0xb
 16118 00dc 01       		.uleb128 0x1
 16119 00dd 13       		.uleb128 0x13
 16120 00de 00       		.byte	0
 16121 00df 00       		.byte	0
 16122 00e0 15       		.uleb128 0x15
 16123 00e1 15       		.uleb128 0x15
 16124 00e2 00       		.byte	0
 16125 00e3 27       		.uleb128 0x27
 16126 00e4 19       		.uleb128 0x19
 16127 00e5 49       		.uleb128 0x49
 16128 00e6 13       		.uleb128 0x13
 16129 00e7 00       		.byte	0
 16130 00e8 00       		.byte	0
 16131 00e9 16       		.uleb128 0x16
 16132 00ea 26       		.uleb128 0x26
 16133 00eb 00       		.byte	0
 16134 00ec 49       		.uleb128 0x49
 16135 00ed 13       		.uleb128 0x13
 16136 00ee 00       		.byte	0
 16137 00ef 00       		.byte	0
 16138 00f0 17       		.uleb128 0x17
 16139 00f1 04       		.uleb128 0x4
 16140 00f2 01       		.byte	0x1
 16141 00f3 0B       		.uleb128 0xb
 16142 00f4 0B       		.uleb128 0xb
 16143 00f5 3A       		.uleb128 0x3a
 16144 00f6 0B       		.uleb128 0xb
 16145 00f7 3B       		.uleb128 0x3b
 16146 00f8 0B       		.uleb128 0xb
 16147 00f9 01       		.uleb128 0x1
 16148 00fa 13       		.uleb128 0x13
 16149 00fb 00       		.byte	0
 16150 00fc 00       		.byte	0
 16151 00fd 18       		.uleb128 0x18
 16152 00fe 15       		.uleb128 0x15
 16153 00ff 01       		.byte	0x1
 16154 0100 27       		.uleb128 0x27
 16155 0101 19       		.uleb128 0x19
 16156 0102 49       		.uleb128 0x49
 16157 0103 13       		.uleb128 0x13
 16158 0104 01       		.uleb128 0x1
 16159 0105 13       		.uleb128 0x13
 16160 0106 00       		.byte	0
 16161 0107 00       		.byte	0
 16162 0108 19       		.uleb128 0x19
 16163 0109 28       		.uleb128 0x28
 16164 010a 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 334


 16165 010b 03       		.uleb128 0x3
 16166 010c 08       		.uleb128 0x8
 16167 010d 1C       		.uleb128 0x1c
 16168 010e 0D       		.uleb128 0xd
 16169 010f 00       		.byte	0
 16170 0110 00       		.byte	0
 16171 0111 1A       		.uleb128 0x1a
 16172 0112 04       		.uleb128 0x4
 16173 0113 01       		.byte	0x1
 16174 0114 03       		.uleb128 0x3
 16175 0115 0E       		.uleb128 0xe
 16176 0116 0B       		.uleb128 0xb
 16177 0117 0B       		.uleb128 0xb
 16178 0118 3A       		.uleb128 0x3a
 16179 0119 0B       		.uleb128 0xb
 16180 011a 3B       		.uleb128 0x3b
 16181 011b 05       		.uleb128 0x5
 16182 011c 01       		.uleb128 0x1
 16183 011d 13       		.uleb128 0x13
 16184 011e 00       		.byte	0
 16185 011f 00       		.byte	0
 16186 0120 1B       		.uleb128 0x1b
 16187 0121 13       		.uleb128 0x13
 16188 0122 01       		.byte	0x1
 16189 0123 0B       		.uleb128 0xb
 16190 0124 05       		.uleb128 0x5
 16191 0125 3A       		.uleb128 0x3a
 16192 0126 0B       		.uleb128 0xb
 16193 0127 3B       		.uleb128 0x3b
 16194 0128 05       		.uleb128 0x5
 16195 0129 01       		.uleb128 0x1
 16196 012a 13       		.uleb128 0x13
 16197 012b 00       		.byte	0
 16198 012c 00       		.byte	0
 16199 012d 1C       		.uleb128 0x1c
 16200 012e 0D       		.uleb128 0xd
 16201 012f 00       		.byte	0
 16202 0130 03       		.uleb128 0x3
 16203 0131 0E       		.uleb128 0xe
 16204 0132 3A       		.uleb128 0x3a
 16205 0133 0B       		.uleb128 0xb
 16206 0134 3B       		.uleb128 0x3b
 16207 0135 05       		.uleb128 0x5
 16208 0136 49       		.uleb128 0x49
 16209 0137 13       		.uleb128 0x13
 16210 0138 38       		.uleb128 0x38
 16211 0139 0B       		.uleb128 0xb
 16212 013a 00       		.byte	0
 16213 013b 00       		.byte	0
 16214 013c 1D       		.uleb128 0x1d
 16215 013d 0D       		.uleb128 0xd
 16216 013e 00       		.byte	0
 16217 013f 03       		.uleb128 0x3
 16218 0140 0E       		.uleb128 0xe
 16219 0141 3A       		.uleb128 0x3a
 16220 0142 0B       		.uleb128 0xb
 16221 0143 3B       		.uleb128 0x3b
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 335


 16222 0144 05       		.uleb128 0x5
 16223 0145 49       		.uleb128 0x49
 16224 0146 13       		.uleb128 0x13
 16225 0147 38       		.uleb128 0x38
 16226 0148 05       		.uleb128 0x5
 16227 0149 00       		.byte	0
 16228 014a 00       		.byte	0
 16229 014b 1E       		.uleb128 0x1e
 16230 014c 13       		.uleb128 0x13
 16231 014d 01       		.byte	0x1
 16232 014e 0B       		.uleb128 0xb
 16233 014f 0B       		.uleb128 0xb
 16234 0150 3A       		.uleb128 0x3a
 16235 0151 0B       		.uleb128 0xb
 16236 0152 3B       		.uleb128 0x3b
 16237 0153 05       		.uleb128 0x5
 16238 0154 01       		.uleb128 0x1
 16239 0155 13       		.uleb128 0x13
 16240 0156 00       		.byte	0
 16241 0157 00       		.byte	0
 16242 0158 1F       		.uleb128 0x1f
 16243 0159 13       		.uleb128 0x13
 16244 015a 01       		.byte	0x1
 16245 015b 03       		.uleb128 0x3
 16246 015c 0E       		.uleb128 0xe
 16247 015d 0B       		.uleb128 0xb
 16248 015e 05       		.uleb128 0x5
 16249 015f 3A       		.uleb128 0x3a
 16250 0160 0B       		.uleb128 0xb
 16251 0161 3B       		.uleb128 0x3b
 16252 0162 05       		.uleb128 0x5
 16253 0163 01       		.uleb128 0x1
 16254 0164 13       		.uleb128 0x13
 16255 0165 00       		.byte	0
 16256 0166 00       		.byte	0
 16257 0167 20       		.uleb128 0x20
 16258 0168 13       		.uleb128 0x13
 16259 0169 01       		.byte	0x1
 16260 016a 03       		.uleb128 0x3
 16261 016b 0E       		.uleb128 0xe
 16262 016c 0B       		.uleb128 0xb
 16263 016d 0B       		.uleb128 0xb
 16264 016e 3A       		.uleb128 0x3a
 16265 016f 0B       		.uleb128 0xb
 16266 0170 3B       		.uleb128 0x3b
 16267 0171 05       		.uleb128 0x5
 16268 0172 01       		.uleb128 0x1
 16269 0173 13       		.uleb128 0x13
 16270 0174 00       		.byte	0
 16271 0175 00       		.byte	0
 16272 0176 21       		.uleb128 0x21
 16273 0177 0D       		.uleb128 0xd
 16274 0178 00       		.byte	0
 16275 0179 03       		.uleb128 0x3
 16276 017a 0E       		.uleb128 0xe
 16277 017b 3A       		.uleb128 0x3a
 16278 017c 0B       		.uleb128 0xb
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 336


 16279 017d 3B       		.uleb128 0x3b
 16280 017e 05       		.uleb128 0x5
 16281 017f 49       		.uleb128 0x49
 16282 0180 13       		.uleb128 0x13
 16283 0181 0B       		.uleb128 0xb
 16284 0182 0B       		.uleb128 0xb
 16285 0183 0D       		.uleb128 0xd
 16286 0184 0B       		.uleb128 0xb
 16287 0185 0C       		.uleb128 0xc
 16288 0186 0B       		.uleb128 0xb
 16289 0187 38       		.uleb128 0x38
 16290 0188 0B       		.uleb128 0xb
 16291 0189 00       		.byte	0
 16292 018a 00       		.byte	0
 16293 018b 22       		.uleb128 0x22
 16294 018c 13       		.uleb128 0x13
 16295 018d 01       		.byte	0x1
 16296 018e 0B       		.uleb128 0xb
 16297 018f 0B       		.uleb128 0xb
 16298 0190 3A       		.uleb128 0x3a
 16299 0191 0B       		.uleb128 0xb
 16300 0192 3B       		.uleb128 0x3b
 16301 0193 0B       		.uleb128 0xb
 16302 0194 01       		.uleb128 0x1
 16303 0195 13       		.uleb128 0x13
 16304 0196 00       		.byte	0
 16305 0197 00       		.byte	0
 16306 0198 23       		.uleb128 0x23
 16307 0199 2E       		.uleb128 0x2e
 16308 019a 01       		.byte	0x1
 16309 019b 3F       		.uleb128 0x3f
 16310 019c 19       		.uleb128 0x19
 16311 019d 03       		.uleb128 0x3
 16312 019e 0E       		.uleb128 0xe
 16313 019f 3A       		.uleb128 0x3a
 16314 01a0 0B       		.uleb128 0xb
 16315 01a1 3B       		.uleb128 0x3b
 16316 01a2 0B       		.uleb128 0xb
 16317 01a3 27       		.uleb128 0x27
 16318 01a4 19       		.uleb128 0x19
 16319 01a5 11       		.uleb128 0x11
 16320 01a6 01       		.uleb128 0x1
 16321 01a7 12       		.uleb128 0x12
 16322 01a8 06       		.uleb128 0x6
 16323 01a9 40       		.uleb128 0x40
 16324 01aa 18       		.uleb128 0x18
 16325 01ab 9642     		.uleb128 0x2116
 16326 01ad 19       		.uleb128 0x19
 16327 01ae 01       		.uleb128 0x1
 16328 01af 13       		.uleb128 0x13
 16329 01b0 00       		.byte	0
 16330 01b1 00       		.byte	0
 16331 01b2 24       		.uleb128 0x24
 16332 01b3 05       		.uleb128 0x5
 16333 01b4 00       		.byte	0
 16334 01b5 03       		.uleb128 0x3
 16335 01b6 0E       		.uleb128 0xe
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 337


 16336 01b7 3A       		.uleb128 0x3a
 16337 01b8 0B       		.uleb128 0xb
 16338 01b9 3B       		.uleb128 0x3b
 16339 01ba 0B       		.uleb128 0xb
 16340 01bb 49       		.uleb128 0x49
 16341 01bc 13       		.uleb128 0x13
 16342 01bd 02       		.uleb128 0x2
 16343 01be 18       		.uleb128 0x18
 16344 01bf 00       		.byte	0
 16345 01c0 00       		.byte	0
 16346 01c1 25       		.uleb128 0x25
 16347 01c2 34       		.uleb128 0x34
 16348 01c3 00       		.byte	0
 16349 01c4 03       		.uleb128 0x3
 16350 01c5 0E       		.uleb128 0xe
 16351 01c6 3A       		.uleb128 0x3a
 16352 01c7 0B       		.uleb128 0xb
 16353 01c8 3B       		.uleb128 0x3b
 16354 01c9 0B       		.uleb128 0xb
 16355 01ca 49       		.uleb128 0x49
 16356 01cb 13       		.uleb128 0x13
 16357 01cc 02       		.uleb128 0x2
 16358 01cd 18       		.uleb128 0x18
 16359 01ce 00       		.byte	0
 16360 01cf 00       		.byte	0
 16361 01d0 26       		.uleb128 0x26
 16362 01d1 0B       		.uleb128 0xb
 16363 01d2 01       		.byte	0x1
 16364 01d3 11       		.uleb128 0x11
 16365 01d4 01       		.uleb128 0x1
 16366 01d5 12       		.uleb128 0x12
 16367 01d6 06       		.uleb128 0x6
 16368 01d7 00       		.byte	0
 16369 01d8 00       		.byte	0
 16370 01d9 27       		.uleb128 0x27
 16371 01da 2E       		.uleb128 0x2e
 16372 01db 01       		.byte	0x1
 16373 01dc 3F       		.uleb128 0x3f
 16374 01dd 19       		.uleb128 0x19
 16375 01de 03       		.uleb128 0x3
 16376 01df 0E       		.uleb128 0xe
 16377 01e0 3A       		.uleb128 0x3a
 16378 01e1 0B       		.uleb128 0xb
 16379 01e2 3B       		.uleb128 0x3b
 16380 01e3 0B       		.uleb128 0xb
 16381 01e4 27       		.uleb128 0x27
 16382 01e5 19       		.uleb128 0x19
 16383 01e6 11       		.uleb128 0x11
 16384 01e7 01       		.uleb128 0x1
 16385 01e8 12       		.uleb128 0x12
 16386 01e9 06       		.uleb128 0x6
 16387 01ea 40       		.uleb128 0x40
 16388 01eb 18       		.uleb128 0x18
 16389 01ec 9742     		.uleb128 0x2117
 16390 01ee 19       		.uleb128 0x19
 16391 01ef 01       		.uleb128 0x1
 16392 01f0 13       		.uleb128 0x13
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 338


 16393 01f1 00       		.byte	0
 16394 01f2 00       		.byte	0
 16395 01f3 28       		.uleb128 0x28
 16396 01f4 34       		.uleb128 0x34
 16397 01f5 00       		.byte	0
 16398 01f6 03       		.uleb128 0x3
 16399 01f7 08       		.uleb128 0x8
 16400 01f8 3A       		.uleb128 0x3a
 16401 01f9 0B       		.uleb128 0xb
 16402 01fa 3B       		.uleb128 0x3b
 16403 01fb 05       		.uleb128 0x5
 16404 01fc 49       		.uleb128 0x49
 16405 01fd 13       		.uleb128 0x13
 16406 01fe 02       		.uleb128 0x2
 16407 01ff 18       		.uleb128 0x18
 16408 0200 00       		.byte	0
 16409 0201 00       		.byte	0
 16410 0202 29       		.uleb128 0x29
 16411 0203 0B       		.uleb128 0xb
 16412 0204 01       		.byte	0x1
 16413 0205 11       		.uleb128 0x11
 16414 0206 01       		.uleb128 0x1
 16415 0207 12       		.uleb128 0x12
 16416 0208 06       		.uleb128 0x6
 16417 0209 01       		.uleb128 0x1
 16418 020a 13       		.uleb128 0x13
 16419 020b 00       		.byte	0
 16420 020c 00       		.byte	0
 16421 020d 2A       		.uleb128 0x2a
 16422 020e 34       		.uleb128 0x34
 16423 020f 00       		.byte	0
 16424 0210 03       		.uleb128 0x3
 16425 0211 0E       		.uleb128 0xe
 16426 0212 3A       		.uleb128 0x3a
 16427 0213 0B       		.uleb128 0xb
 16428 0214 3B       		.uleb128 0x3b
 16429 0215 05       		.uleb128 0x5
 16430 0216 49       		.uleb128 0x49
 16431 0217 13       		.uleb128 0x13
 16432 0218 02       		.uleb128 0x2
 16433 0219 18       		.uleb128 0x18
 16434 021a 00       		.byte	0
 16435 021b 00       		.byte	0
 16436 021c 2B       		.uleb128 0x2b
 16437 021d 2E       		.uleb128 0x2e
 16438 021e 01       		.byte	0x1
 16439 021f 3F       		.uleb128 0x3f
 16440 0220 19       		.uleb128 0x19
 16441 0221 03       		.uleb128 0x3
 16442 0222 0E       		.uleb128 0xe
 16443 0223 3A       		.uleb128 0x3a
 16444 0224 0B       		.uleb128 0xb
 16445 0225 3B       		.uleb128 0x3b
 16446 0226 05       		.uleb128 0x5
 16447 0227 27       		.uleb128 0x27
 16448 0228 19       		.uleb128 0x19
 16449 0229 11       		.uleb128 0x11
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 339


 16450 022a 01       		.uleb128 0x1
 16451 022b 12       		.uleb128 0x12
 16452 022c 06       		.uleb128 0x6
 16453 022d 40       		.uleb128 0x40
 16454 022e 18       		.uleb128 0x18
 16455 022f 9642     		.uleb128 0x2116
 16456 0231 19       		.uleb128 0x19
 16457 0232 01       		.uleb128 0x1
 16458 0233 13       		.uleb128 0x13
 16459 0234 00       		.byte	0
 16460 0235 00       		.byte	0
 16461 0236 2C       		.uleb128 0x2c
 16462 0237 05       		.uleb128 0x5
 16463 0238 00       		.byte	0
 16464 0239 03       		.uleb128 0x3
 16465 023a 0E       		.uleb128 0xe
 16466 023b 3A       		.uleb128 0x3a
 16467 023c 0B       		.uleb128 0xb
 16468 023d 3B       		.uleb128 0x3b
 16469 023e 05       		.uleb128 0x5
 16470 023f 49       		.uleb128 0x49
 16471 0240 13       		.uleb128 0x13
 16472 0241 02       		.uleb128 0x2
 16473 0242 18       		.uleb128 0x18
 16474 0243 00       		.byte	0
 16475 0244 00       		.byte	0
 16476 0245 2D       		.uleb128 0x2d
 16477 0246 2E       		.uleb128 0x2e
 16478 0247 01       		.byte	0x1
 16479 0248 3F       		.uleb128 0x3f
 16480 0249 19       		.uleb128 0x19
 16481 024a 03       		.uleb128 0x3
 16482 024b 0E       		.uleb128 0xe
 16483 024c 3A       		.uleb128 0x3a
 16484 024d 0B       		.uleb128 0xb
 16485 024e 3B       		.uleb128 0x3b
 16486 024f 05       		.uleb128 0x5
 16487 0250 27       		.uleb128 0x27
 16488 0251 19       		.uleb128 0x19
 16489 0252 11       		.uleb128 0x11
 16490 0253 01       		.uleb128 0x1
 16491 0254 12       		.uleb128 0x12
 16492 0255 06       		.uleb128 0x6
 16493 0256 40       		.uleb128 0x40
 16494 0257 18       		.uleb128 0x18
 16495 0258 9742     		.uleb128 0x2117
 16496 025a 19       		.uleb128 0x19
 16497 025b 01       		.uleb128 0x1
 16498 025c 13       		.uleb128 0x13
 16499 025d 00       		.byte	0
 16500 025e 00       		.byte	0
 16501 025f 2E       		.uleb128 0x2e
 16502 0260 2E       		.uleb128 0x2e
 16503 0261 01       		.byte	0x1
 16504 0262 3F       		.uleb128 0x3f
 16505 0263 19       		.uleb128 0x19
 16506 0264 03       		.uleb128 0x3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 340


 16507 0265 0E       		.uleb128 0xe
 16508 0266 3A       		.uleb128 0x3a
 16509 0267 0B       		.uleb128 0xb
 16510 0268 3B       		.uleb128 0x3b
 16511 0269 05       		.uleb128 0x5
 16512 026a 27       		.uleb128 0x27
 16513 026b 19       		.uleb128 0x19
 16514 026c 49       		.uleb128 0x49
 16515 026d 13       		.uleb128 0x13
 16516 026e 11       		.uleb128 0x11
 16517 026f 01       		.uleb128 0x1
 16518 0270 12       		.uleb128 0x12
 16519 0271 06       		.uleb128 0x6
 16520 0272 40       		.uleb128 0x40
 16521 0273 18       		.uleb128 0x18
 16522 0274 9642     		.uleb128 0x2116
 16523 0276 19       		.uleb128 0x19
 16524 0277 01       		.uleb128 0x1
 16525 0278 13       		.uleb128 0x13
 16526 0279 00       		.byte	0
 16527 027a 00       		.byte	0
 16528 027b 2F       		.uleb128 0x2f
 16529 027c 2E       		.uleb128 0x2e
 16530 027d 01       		.byte	0x1
 16531 027e 3F       		.uleb128 0x3f
 16532 027f 19       		.uleb128 0x19
 16533 0280 03       		.uleb128 0x3
 16534 0281 0E       		.uleb128 0xe
 16535 0282 3A       		.uleb128 0x3a
 16536 0283 0B       		.uleb128 0xb
 16537 0284 3B       		.uleb128 0x3b
 16538 0285 05       		.uleb128 0x5
 16539 0286 27       		.uleb128 0x27
 16540 0287 19       		.uleb128 0x19
 16541 0288 49       		.uleb128 0x49
 16542 0289 13       		.uleb128 0x13
 16543 028a 11       		.uleb128 0x11
 16544 028b 01       		.uleb128 0x1
 16545 028c 12       		.uleb128 0x12
 16546 028d 06       		.uleb128 0x6
 16547 028e 40       		.uleb128 0x40
 16548 028f 18       		.uleb128 0x18
 16549 0290 9742     		.uleb128 0x2117
 16550 0292 19       		.uleb128 0x19
 16551 0293 01       		.uleb128 0x1
 16552 0294 13       		.uleb128 0x13
 16553 0295 00       		.byte	0
 16554 0296 00       		.byte	0
 16555 0297 30       		.uleb128 0x30
 16556 0298 34       		.uleb128 0x34
 16557 0299 00       		.byte	0
 16558 029a 03       		.uleb128 0x3
 16559 029b 0E       		.uleb128 0xe
 16560 029c 3A       		.uleb128 0x3a
 16561 029d 0B       		.uleb128 0xb
 16562 029e 3B       		.uleb128 0x3b
 16563 029f 05       		.uleb128 0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 341


 16564 02a0 49       		.uleb128 0x49
 16565 02a1 13       		.uleb128 0x13
 16566 02a2 3F       		.uleb128 0x3f
 16567 02a3 19       		.uleb128 0x19
 16568 02a4 3C       		.uleb128 0x3c
 16569 02a5 19       		.uleb128 0x19
 16570 02a6 00       		.byte	0
 16571 02a7 00       		.byte	0
 16572 02a8 31       		.uleb128 0x31
 16573 02a9 34       		.uleb128 0x34
 16574 02aa 00       		.byte	0
 16575 02ab 03       		.uleb128 0x3
 16576 02ac 0E       		.uleb128 0xe
 16577 02ad 3A       		.uleb128 0x3a
 16578 02ae 0B       		.uleb128 0xb
 16579 02af 3B       		.uleb128 0x3b
 16580 02b0 0B       		.uleb128 0xb
 16581 02b1 49       		.uleb128 0x49
 16582 02b2 13       		.uleb128 0x13
 16583 02b3 3F       		.uleb128 0x3f
 16584 02b4 19       		.uleb128 0x19
 16585 02b5 3C       		.uleb128 0x3c
 16586 02b6 19       		.uleb128 0x19
 16587 02b7 00       		.byte	0
 16588 02b8 00       		.byte	0
 16589 02b9 32       		.uleb128 0x32
 16590 02ba 34       		.uleb128 0x34
 16591 02bb 00       		.byte	0
 16592 02bc 03       		.uleb128 0x3
 16593 02bd 0E       		.uleb128 0xe
 16594 02be 3A       		.uleb128 0x3a
 16595 02bf 0B       		.uleb128 0xb
 16596 02c0 3B       		.uleb128 0x3b
 16597 02c1 05       		.uleb128 0x5
 16598 02c2 49       		.uleb128 0x49
 16599 02c3 13       		.uleb128 0x13
 16600 02c4 3F       		.uleb128 0x3f
 16601 02c5 19       		.uleb128 0x19
 16602 02c6 02       		.uleb128 0x2
 16603 02c7 18       		.uleb128 0x18
 16604 02c8 00       		.byte	0
 16605 02c9 00       		.byte	0
 16606 02ca 00       		.byte	0
 16607              		.section	.debug_aranges,"",%progbits
 16608 0000 84010000 		.4byte	0x184
 16609 0004 0200     		.2byte	0x2
 16610 0006 00000000 		.4byte	.Ldebug_info0
 16611 000a 04       		.byte	0x4
 16612 000b 00       		.byte	0
 16613 000c 0000     		.2byte	0
 16614 000e 0000     		.2byte	0
 16615 0010 00000000 		.4byte	.LFB63
 16616 0014 B6000000 		.4byte	.LFE63-.LFB63
 16617 0018 00000000 		.4byte	.LFB64
 16618 001c 48000000 		.4byte	.LFE64-.LFB64
 16619 0020 00000000 		.4byte	.LFB65
 16620 0024 E0000000 		.4byte	.LFE65-.LFB65
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 342


 16621 0028 00000000 		.4byte	.LFB66
 16622 002c 9A0F0000 		.4byte	.LFE66-.LFB66
 16623 0030 00000000 		.4byte	.LFB67
 16624 0034 54010000 		.4byte	.LFE67-.LFB67
 16625 0038 00000000 		.4byte	.LFB68
 16626 003c 2C000000 		.4byte	.LFE68-.LFB68
 16627 0040 00000000 		.4byte	.LFB69
 16628 0044 36000000 		.4byte	.LFE69-.LFB69
 16629 0048 00000000 		.4byte	.LFB70
 16630 004c 36000000 		.4byte	.LFE70-.LFB70
 16631 0050 00000000 		.4byte	.LFB71
 16632 0054 82000000 		.4byte	.LFE71-.LFB71
 16633 0058 00000000 		.4byte	.LFB72
 16634 005c 70000000 		.4byte	.LFE72-.LFB72
 16635 0060 00000000 		.4byte	.LFB73
 16636 0064 60000000 		.4byte	.LFE73-.LFB73
 16637 0068 00000000 		.4byte	.LFB74
 16638 006c 6A000000 		.4byte	.LFE74-.LFB74
 16639 0070 00000000 		.4byte	.LFB75
 16640 0074 6A000000 		.4byte	.LFE75-.LFB75
 16641 0078 00000000 		.4byte	.LFB76
 16642 007c 6A000000 		.4byte	.LFE76-.LFB76
 16643 0080 00000000 		.4byte	.LFB77
 16644 0084 6A000000 		.4byte	.LFE77-.LFB77
 16645 0088 00000000 		.4byte	.LFB78
 16646 008c AA030000 		.4byte	.LFE78-.LFB78
 16647 0090 00000000 		.4byte	.LFB79
 16648 0094 78030000 		.4byte	.LFE79-.LFB79
 16649 0098 00000000 		.4byte	.LFB80
 16650 009c C4020000 		.4byte	.LFE80-.LFB80
 16651 00a0 00000000 		.4byte	.LFB81
 16652 00a4 14020000 		.4byte	.LFE81-.LFB81
 16653 00a8 00000000 		.4byte	.LFB82
 16654 00ac E8000000 		.4byte	.LFE82-.LFB82
 16655 00b0 00000000 		.4byte	.LFB83
 16656 00b4 28030000 		.4byte	.LFE83-.LFB83
 16657 00b8 00000000 		.4byte	.LFB84
 16658 00bc 74020000 		.4byte	.LFE84-.LFB84
 16659 00c0 00000000 		.4byte	.LFB85
 16660 00c4 C4020000 		.4byte	.LFE85-.LFB85
 16661 00c8 00000000 		.4byte	.LFB86
 16662 00cc B0010000 		.4byte	.LFE86-.LFB86
 16663 00d0 00000000 		.4byte	.LFB87
 16664 00d4 3C020000 		.4byte	.LFE87-.LFB87
 16665 00d8 00000000 		.4byte	.LFB88
 16666 00dc 6A000000 		.4byte	.LFE88-.LFB88
 16667 00e0 00000000 		.4byte	.LFB89
 16668 00e4 60000000 		.4byte	.LFE89-.LFB89
 16669 00e8 00000000 		.4byte	.LFB90
 16670 00ec E6000000 		.4byte	.LFE90-.LFB90
 16671 00f0 00000000 		.4byte	.LFB91
 16672 00f4 54040000 		.4byte	.LFE91-.LFB91
 16673 00f8 00000000 		.4byte	.LFB92
 16674 00fc C8040000 		.4byte	.LFE92-.LFB92
 16675 0100 00000000 		.4byte	.LFB93
 16676 0104 28010000 		.4byte	.LFE93-.LFB93
 16677 0108 00000000 		.4byte	.LFB94
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 343


 16678 010c 60000000 		.4byte	.LFE94-.LFB94
 16679 0110 00000000 		.4byte	.LFB95
 16680 0114 40020000 		.4byte	.LFE95-.LFB95
 16681 0118 00000000 		.4byte	.LFB96
 16682 011c 6C000000 		.4byte	.LFE96-.LFB96
 16683 0120 00000000 		.4byte	.LFB97
 16684 0124 5C010000 		.4byte	.LFE97-.LFB97
 16685 0128 00000000 		.4byte	.LFB98
 16686 012c 4C000000 		.4byte	.LFE98-.LFB98
 16687 0130 00000000 		.4byte	.LFB99
 16688 0134 98000000 		.4byte	.LFE99-.LFB99
 16689 0138 00000000 		.4byte	.LFB100
 16690 013c AC000000 		.4byte	.LFE100-.LFB100
 16691 0140 00000000 		.4byte	.LFB101
 16692 0144 5E000000 		.4byte	.LFE101-.LFB101
 16693 0148 00000000 		.4byte	.LFB102
 16694 014c 32000000 		.4byte	.LFE102-.LFB102
 16695 0150 00000000 		.4byte	.LFB103
 16696 0154 2C000000 		.4byte	.LFE103-.LFB103
 16697 0158 00000000 		.4byte	.LFB104
 16698 015c 2C000000 		.4byte	.LFE104-.LFB104
 16699 0160 00000000 		.4byte	.LFB105
 16700 0164 48020000 		.4byte	.LFE105-.LFB105
 16701 0168 00000000 		.4byte	.LFB106
 16702 016c 74010000 		.4byte	.LFE106-.LFB106
 16703 0170 00000000 		.4byte	.LFB107
 16704 0174 64010000 		.4byte	.LFE107-.LFB107
 16705 0178 00000000 		.4byte	.LFB108
 16706 017c 48000000 		.4byte	.LFE108-.LFB108
 16707 0180 00000000 		.4byte	0
 16708 0184 00000000 		.4byte	0
 16709              		.section	.debug_ranges,"",%progbits
 16710              	.Ldebug_ranges0:
 16711 0000 00000000 		.4byte	.LFB63
 16712 0004 B6000000 		.4byte	.LFE63
 16713 0008 00000000 		.4byte	.LFB64
 16714 000c 48000000 		.4byte	.LFE64
 16715 0010 00000000 		.4byte	.LFB65
 16716 0014 E0000000 		.4byte	.LFE65
 16717 0018 00000000 		.4byte	.LFB66
 16718 001c 9A0F0000 		.4byte	.LFE66
 16719 0020 00000000 		.4byte	.LFB67
 16720 0024 54010000 		.4byte	.LFE67
 16721 0028 00000000 		.4byte	.LFB68
 16722 002c 2C000000 		.4byte	.LFE68
 16723 0030 00000000 		.4byte	.LFB69
 16724 0034 36000000 		.4byte	.LFE69
 16725 0038 00000000 		.4byte	.LFB70
 16726 003c 36000000 		.4byte	.LFE70
 16727 0040 00000000 		.4byte	.LFB71
 16728 0044 82000000 		.4byte	.LFE71
 16729 0048 00000000 		.4byte	.LFB72
 16730 004c 70000000 		.4byte	.LFE72
 16731 0050 00000000 		.4byte	.LFB73
 16732 0054 60000000 		.4byte	.LFE73
 16733 0058 00000000 		.4byte	.LFB74
 16734 005c 6A000000 		.4byte	.LFE74
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 344


 16735 0060 00000000 		.4byte	.LFB75
 16736 0064 6A000000 		.4byte	.LFE75
 16737 0068 00000000 		.4byte	.LFB76
 16738 006c 6A000000 		.4byte	.LFE76
 16739 0070 00000000 		.4byte	.LFB77
 16740 0074 6A000000 		.4byte	.LFE77
 16741 0078 00000000 		.4byte	.LFB78
 16742 007c AA030000 		.4byte	.LFE78
 16743 0080 00000000 		.4byte	.LFB79
 16744 0084 78030000 		.4byte	.LFE79
 16745 0088 00000000 		.4byte	.LFB80
 16746 008c C4020000 		.4byte	.LFE80
 16747 0090 00000000 		.4byte	.LFB81
 16748 0094 14020000 		.4byte	.LFE81
 16749 0098 00000000 		.4byte	.LFB82
 16750 009c E8000000 		.4byte	.LFE82
 16751 00a0 00000000 		.4byte	.LFB83
 16752 00a4 28030000 		.4byte	.LFE83
 16753 00a8 00000000 		.4byte	.LFB84
 16754 00ac 74020000 		.4byte	.LFE84
 16755 00b0 00000000 		.4byte	.LFB85
 16756 00b4 C4020000 		.4byte	.LFE85
 16757 00b8 00000000 		.4byte	.LFB86
 16758 00bc B0010000 		.4byte	.LFE86
 16759 00c0 00000000 		.4byte	.LFB87
 16760 00c4 3C020000 		.4byte	.LFE87
 16761 00c8 00000000 		.4byte	.LFB88
 16762 00cc 6A000000 		.4byte	.LFE88
 16763 00d0 00000000 		.4byte	.LFB89
 16764 00d4 60000000 		.4byte	.LFE89
 16765 00d8 00000000 		.4byte	.LFB90
 16766 00dc E6000000 		.4byte	.LFE90
 16767 00e0 00000000 		.4byte	.LFB91
 16768 00e4 54040000 		.4byte	.LFE91
 16769 00e8 00000000 		.4byte	.LFB92
 16770 00ec C8040000 		.4byte	.LFE92
 16771 00f0 00000000 		.4byte	.LFB93
 16772 00f4 28010000 		.4byte	.LFE93
 16773 00f8 00000000 		.4byte	.LFB94
 16774 00fc 60000000 		.4byte	.LFE94
 16775 0100 00000000 		.4byte	.LFB95
 16776 0104 40020000 		.4byte	.LFE95
 16777 0108 00000000 		.4byte	.LFB96
 16778 010c 6C000000 		.4byte	.LFE96
 16779 0110 00000000 		.4byte	.LFB97
 16780 0114 5C010000 		.4byte	.LFE97
 16781 0118 00000000 		.4byte	.LFB98
 16782 011c 4C000000 		.4byte	.LFE98
 16783 0120 00000000 		.4byte	.LFB99
 16784 0124 98000000 		.4byte	.LFE99
 16785 0128 00000000 		.4byte	.LFB100
 16786 012c AC000000 		.4byte	.LFE100
 16787 0130 00000000 		.4byte	.LFB101
 16788 0134 5E000000 		.4byte	.LFE101
 16789 0138 00000000 		.4byte	.LFB102
 16790 013c 32000000 		.4byte	.LFE102
 16791 0140 00000000 		.4byte	.LFB103
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 345


 16792 0144 2C000000 		.4byte	.LFE103
 16793 0148 00000000 		.4byte	.LFB104
 16794 014c 2C000000 		.4byte	.LFE104
 16795 0150 00000000 		.4byte	.LFB105
 16796 0154 48020000 		.4byte	.LFE105
 16797 0158 00000000 		.4byte	.LFB106
 16798 015c 74010000 		.4byte	.LFE106
 16799 0160 00000000 		.4byte	.LFB107
 16800 0164 64010000 		.4byte	.LFE107
 16801 0168 00000000 		.4byte	.LFB108
 16802 016c 48000000 		.4byte	.LFE108
 16803 0170 00000000 		.4byte	0
 16804 0174 00000000 		.4byte	0
 16805              		.section	.debug_line,"",%progbits
 16806              	.Ldebug_line0:
 16807 0000 BD0D0000 		.section	.debug_str,"MS",%progbits,1
 16807      02000402 
 16807      00000201 
 16807      FB0E0D00 
 16807      01010101 
 16808              	.LASF470:
 16809 0000 5F707269 		.ascii	"_printerportside2\000"
 16809      6E746572 
 16809      706F7274 
 16809      73696465 
 16809      3200
 16810              	.LASF369:
 16811 0012 5F706F73 		.ascii	"_positionoffset\000"
 16811      6974696F 
 16811      6E6F6666 
 16811      73657400 
 16812              	.LASF284:
 16813 0022 5F70756D 		.ascii	"_pumprftransstate\000"
 16813      70726674 
 16813      72616E73 
 16813      73746174 
 16813      6500
 16814              	.LASF490:
 16815 0034 7070756D 		.ascii	"ppump\000"
 16815      7000
 16816              	.LASF364:
 16817 003a 5F766F6C 		.ascii	"_volumeunit\000"
 16817      756D6575 
 16817      6E697400 
 16818              	.LASF192:
 16819 0046 44495350 		.ascii	"DISPLAY1\000"
 16819      4C415931 
 16819      00
 16820              	.LASF193:
 16821 004f 44495350 		.ascii	"DISPLAY2\000"
 16821      4C415932 
 16821      00
 16822              	.LASF96:
 16823 0058 5F53494E 		.ascii	"_SINK_MESSAGE_\000"
 16823      4B5F4D45 
 16823      53534147 
 16823      455F00
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 346


 16824              	.LASF371:
 16825 0067 504E4541 		.ascii	"PNEARDISPENSERACTIVATEPROGRAMMING\000"
 16825      52444953 
 16825      50454E53 
 16825      45524143 
 16825      54495641 
 16826              	.LASF312:
 16827 0089 52657370 		.ascii	"ResponseSizeResolver\000"
 16827      6F6E7365 
 16827      53697A65 
 16827      5265736F 
 16827      6C766572 
 16828              	.LASF334:
 16829 009e 5F726570 		.ascii	"_repushtimeoutmultiplier\000"
 16829      75736874 
 16829      696D656F 
 16829      75746D75 
 16829      6C746970 
 16830              	.LASF22:
 16831 00b7 73697A65 		.ascii	"sizetype\000"
 16831      74797065 
 16831      00
 16832              	.LASF486:
 16833 00c0 50726F63 		.ascii	"ProcessPumpTotalsDataPpuCheck\000"
 16833      65737350 
 16833      756D7054 
 16833      6F74616C 
 16833      73446174 
 16834              	.LASF60:
 16835 00de 44495350 		.ascii	"DISPENSER_ACQUIRE_PUMP_STATE\000"
 16835      454E5345 
 16835      525F4143 
 16835      51554952 
 16835      455F5055 
 16836              	.LASF123:
 16837 00fb 5F6D6573 		.ascii	"_messagelength\000"
 16837      73616765 
 16837      6C656E67 
 16837      746800
 16838              	.LASF324:
 16839 010a 5F50554D 		.ascii	"_PUMP_TRANSACTION_\000"
 16839      505F5452 
 16839      414E5341 
 16839      4354494F 
 16839      4E5F00
 16840              	.LASF201:
 16841 011d 50554D50 		.ascii	"PUMP_AUTHORIZATION\000"
 16841      5F415554 
 16841      484F5249 
 16841      5A415449 
 16841      4F4E00
 16842              	.LASF458:
 16843 0130 52465F43 		.ascii	"RF_CREDITSALEREPORT\000"
 16843      52454449 
 16843      5453414C 
 16843      45524550 
 16843      4F525400 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 347


 16844              	.LASF145:
 16845 0144 44495350 		.ascii	"DISPLAY_SUBA_MANIJA\000"
 16845      4C41595F 
 16845      53554241 
 16845      5F4D414E 
 16845      494A4100 
 16846              	.LASF373:
 16847 0158 45455052 		.ascii	"EEPROM_CONFIGURATION_PAGE0\000"
 16847      4F4D5F43 
 16847      4F4E4649 
 16847      47555241 
 16847      54494F4E 
 16848              	.LASF37:
 16849 0173 53494E4B 		.ascii	"SINK_BUSY\000"
 16849      5F425553 
 16849      5900
 16850              	.LASF375:
 16851 017d 45455052 		.ascii	"EEPROM_CONFIGURATION_PAGE2\000"
 16851      4F4D5F43 
 16851      4F4E4649 
 16851      47555241 
 16851      54494F4E 
 16852              	.LASF376:
 16853 0198 45455052 		.ascii	"EEPROM_CONFIGURATION_PAGE3\000"
 16853      4F4D5F43 
 16853      4F4E4649 
 16853      47555241 
 16853      54494F4E 
 16854              	.LASF377:
 16855 01b3 45455052 		.ascii	"EEPROM_CONFIGURATION_PAGE4\000"
 16855      4F4D5F43 
 16855      4F4E4649 
 16855      47555241 
 16855      54494F4E 
 16856              	.LASF378:
 16857 01ce 45455052 		.ascii	"EEPROM_CONFIGURATION_PAGE5\000"
 16857      4F4D5F43 
 16857      4F4E4649 
 16857      47555241 
 16857      54494F4E 
 16858              	.LASF379:
 16859 01e9 45455052 		.ascii	"EEPROM_CONFIGURATION_PAGE6\000"
 16859      4F4D5F43 
 16859      4F4E4649 
 16859      47555241 
 16859      54494F4E 
 16860              	.LASF380:
 16861 0204 45455052 		.ascii	"EEPROM_CONFIGURATION_PAGE7\000"
 16861      4F4D5F43 
 16861      4F4E4649 
 16861      47555241 
 16861      54494F4E 
 16862              	.LASF57:
 16863 021f 53494E4B 		.ascii	"SINK_RELEASE_BY_ID\000"
 16863      5F52454C 
 16863      45415345 
 16863      5F42595F 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 348


 16863      494400
 16864              	.LASF129:
 16865 0232 55415254 		.ascii	"UART_RF\000"
 16865      5F524600 
 16866              	.LASF12:
 16867 023a 696E7433 		.ascii	"int32_t\000"
 16867      325F7400 
 16868              	.LASF343:
 16869 0242 5F50554D 		.ascii	"_PUMP_JOB_QUEUE_\000"
 16869      505F4A4F 
 16869      425F5155 
 16869      4555455F 
 16869      00
 16870              	.LASF326:
 16871 0253 5F6A6F62 		.ascii	"_jobs\000"
 16871      7300
 16872              	.LASF292:
 16873 0259 5F727862 		.ascii	"_rxbuffersize\000"
 16873      75666665 
 16873      7273697A 
 16873      6500
 16874              	.LASF91:
 16875 0267 49425554 		.ascii	"IBUTTON1_SCAN\000"
 16875      544F4E31 
 16875      5F534341 
 16875      4E00
 16876              	.LASF217:
 16877 0275 50554D50 		.ascii	"PUMP_AUTHORIZED\000"
 16877      5F415554 
 16877      484F5249 
 16877      5A454400 
 16878              	.LASF55:
 16879 0285 55415254 		.ascii	"UART_RF_AUTONOMOUS_MONITOR\000"
 16879      5F52465F 
 16879      4155544F 
 16879      4E4F4D4F 
 16879      55535F4D 
 16880              	.LASF415:
 16881 02a0 52465F4D 		.ascii	"RF_MUX_CREDIT_SERIAL_AUTH_REQUEST\000"
 16881      55585F43 
 16881      52454449 
 16881      545F5345 
 16881      5249414C 
 16882              	.LASF560:
 16883 02c2 5F675F64 		.ascii	"_g_dispenserlayoutinfo\000"
 16883      69737065 
 16883      6E736572 
 16883      6C61796F 
 16883      7574696E 
 16884              	.LASF15:
 16885 02d9 75696E74 		.ascii	"uint32\000"
 16885      333200
 16886              	.LASF247:
 16887 02e0 5F737461 		.ascii	"_state\000"
 16887      746500
 16888              	.LASF165:
 16889 02e7 44495350 		.ascii	"DISPLAY_COPIA_RECIBO\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 349


 16889      4C41595F 
 16889      434F5049 
 16889      415F5245 
 16889      4349424F 
 16890              	.LASF514:
 16891 02fc 50756D70 		.ascii	"PumpStopRequest\000"
 16891      53746F70 
 16891      52657175 
 16891      65737400 
 16892              	.LASF408:
 16893 030c 45455052 		.ascii	"EEPROM_DISPENSER_PUMP34_TRANSACTION_PAGE\000"
 16893      4F4D5F44 
 16893      49535045 
 16893      4E534552 
 16893      5F50554D 
 16894              	.LASF223:
 16895 0335 50554D50 		.ascii	"PUMP_UNKNOWN\000"
 16895      5F554E4B 
 16895      4E4F574E 
 16895      00
 16896              	.LASF207:
 16897 0342 50554D50 		.ascii	"PUMP_REAL_TIME_HOSE_VOLUME_REQUEST\000"
 16897      5F524541 
 16897      4C5F5449 
 16897      4D455F48 
 16897      4F53455F 
 16898              	.LASF84:
 16899 0365 44495350 		.ascii	"DISPLAY1_MESSAGE\000"
 16899      4C415931 
 16899      5F4D4553 
 16899      53414745 
 16899      00
 16900              	.LASF503:
 16901 0376 50756D70 		.ascii	"PumpPresetNoHose\000"
 16901      50726573 
 16901      65744E6F 
 16901      486F7365 
 16901      00
 16902              	.LASF64:
 16903 0387 44495350 		.ascii	"DISPENSER_UNLOCK_EOT_PUMPS\000"
 16903      454E5345 
 16903      525F554E 
 16903      4C4F434B 
 16903      5F454F54 
 16904              	.LASF101:
 16905 03a2 53746F70 		.ascii	"Stop\000"
 16905      00
 16906              	.LASF117:
 16907 03a7 55415254 		.ascii	"UARTManager\000"
 16907      4D616E61 
 16907      67657200 
 16908              	.LASF452:
 16909 03b3 5F52465F 		.ascii	"_RF_STATES_\000"
 16909      53544154 
 16909      45535F00 
 16910              	.LASF497:
 16911 03bf 50756D70 		.ascii	"PumpTotalsDataRequest\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 350


 16911      546F7461 
 16911      6C734461 
 16911      74615265 
 16911      71756573 
 16912              	.LASF353:
 16913 03d5 50756D70 		.ascii	"PumpJobQueue\000"
 16913      4A6F6251 
 16913      75657565 
 16913      00
 16914              	.LASF244:
 16915 03e2 5F50554D 		.ascii	"_PUMP_TRANS_HEALTH_\000"
 16915      505F5452 
 16915      414E535F 
 16915      4845414C 
 16915      54485F00 
 16916              	.LASF199:
 16917 03f6 5F434F4D 		.ascii	"_COMMAND_ID_\000"
 16917      4D414E44 
 16917      5F49445F 
 16917      00
 16918              	.LASF466:
 16919 0403 5F74696D 		.ascii	"_timeouttoreceive\000"
 16919      656F7574 
 16919      746F7265 
 16919      63656976 
 16919      6500
 16920              	.LASF177:
 16921 0415 44495350 		.ascii	"DISPLAY_ABRIR_TURNO\000"
 16921      4C41595F 
 16921      41425249 
 16921      525F5455 
 16921      524E4F00 
 16922              	.LASF374:
 16923 0429 45455052 		.ascii	"EEPROM_CONFIGURATION_PAGE1\000"
 16923      4F4D5F43 
 16923      4F4E4649 
 16923      47555241 
 16923      54494F4E 
 16924              	.LASF453:
 16925 0444 52465F49 		.ascii	"RF_IDLE\000"
 16925      444C4500 
 16926              	.LASF494:
 16927 044c 50756D70 		.ascii	"PumpStateRequest\000"
 16927      53746174 
 16927      65526571 
 16927      75657374 
 16927      00
 16928              	.LASF164:
 16929 045d 44495350 		.ascii	"DISPLAY_CONFIGURACIONES\000"
 16929      4C41595F 
 16929      434F4E46 
 16929      49475552 
 16929      4143494F 
 16930              	.LASF124:
 16931 0475 5F6D6573 		.ascii	"_messagetx\000"
 16931      73616765 
 16931      747800
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 351


 16932              	.LASF320:
 16933 0480 5F706F73 		.ascii	"_postconditions\000"
 16933      74636F6E 
 16933      64697469 
 16933      6F6E7300 
 16934              	.LASF483:
 16935 0490 64617461 		.ascii	"dataok\000"
 16935      6F6B00
 16936              	.LASF411:
 16937 0497 45455052 		.ascii	"EEPROM_DISPENSER_PUMP43_TRANSACTION_PAGE\000"
 16937      4F4D5F44 
 16937      49535045 
 16937      4E534552 
 16937      5F50554D 
 16938              	.LASF20:
 16939 04c0 63686172 		.ascii	"char8\000"
 16939      3800
 16940              	.LASF94:
 16941 04c6 544F4747 		.ascii	"TOGGLE_SCREEN_AND_WRITE_TEST\000"
 16941      4C455F53 
 16941      43524545 
 16941      4E5F414E 
 16941      445F5752 
 16942              	.LASF71:
 16943 04e3 44495350 		.ascii	"DISPENSER_ACQUIRE_TOTALS\000"
 16943      454E5345 
 16943      525F4143 
 16943      51554952 
 16943      455F544F 
 16944              	.LASF58:
 16945 04fc 53494E4B 		.ascii	"SINK_RELEASE_BY_PTR\000"
 16945      5F52454C 
 16945      45415345 
 16945      5F42595F 
 16945      50545200 
 16946              	.LASF293:
 16947 0510 5F747261 		.ascii	"_transqueue\000"
 16947      6E737175 
 16947      65756500 
 16948              	.LASF473:
 16949 051c 70726576 		.ascii	"prevstate\000"
 16949      73746174 
 16949      6500
 16950              	.LASF385:
 16951 0526 45455052 		.ascii	"EEPROM_DISPENSER_PUMP1_PRODUCT_NAMES_PAGE\000"
 16951      4F4D5F44 
 16951      49535045 
 16951      4E534552 
 16951      5F50554D 
 16952              	.LASF462:
 16953 0550 52465F41 		.ascii	"RF_AUTONOMOUS\000"
 16953      55544F4E 
 16953      4F4D4F55 
 16953      5300
 16954              	.LASF321:
 16955 055e 496E6974 		.ascii	"Initialization\000"
 16955      69616C69 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 352


 16955      7A617469 
 16955      6F6E00
 16956              	.LASF449:
 16957 056d 52465F4D 		.ascii	"RF_MUX_COPY_REQUEST\000"
 16957      55585F43 
 16957      4F50595F 
 16957      52455155 
 16957      45535400 
 16958              	.LASF265:
 16959 0581 5F707265 		.ascii	"_presettype\000"
 16959      73657474 
 16959      79706500 
 16960              	.LASF558:
 16961 058d 5F675F70 		.ascii	"_g_pumpjobqueue\000"
 16961      756D706A 
 16961      6F627175 
 16961      65756500 
 16962              	.LASF404:
 16963 059d 45455052 		.ascii	"EEPROM_DISPENSER_PUMP24_TRANSACTION_PAGE\000"
 16963      4F4D5F44 
 16963      49535045 
 16963      4E534552 
 16963      5F50554D 
 16964              	.LASF76:
 16965 05c6 5052494E 		.ascii	"PRINTER21_JOB\000"
 16965      54455232 
 16965      315F4A4F 
 16965      4200
 16966              	.LASF228:
 16967 05d4 5F50554D 		.ascii	"_PUMP_FILL_CREDIT_\000"
 16967      505F4649 
 16967      4C4C5F43 
 16967      52454449 
 16967      545F00
 16968              	.LASF16:
 16969 05e7 696E7438 		.ascii	"int8\000"
 16969      00
 16970              	.LASF446:
 16971 05ec 52465F4D 		.ascii	"RF_MUX_ISLAND_OPER_DATA_RESPONSE\000"
 16971      55585F49 
 16971      534C414E 
 16971      445F4F50 
 16971      45525F44 
 16972              	.LASF464:
 16973 060d 5F746F61 		.ascii	"_toautonomoustimetoken\000"
 16973      75746F6E 
 16973      6F6D6F75 
 16973      7374696D 
 16973      65746F6B 
 16974              	.LASF234:
 16975 0624 5F50554D 		.ascii	"_PUMP_EOT_STARTUP_\000"
 16975      505F454F 
 16975      545F5354 
 16975      41525455 
 16975      505F00
 16976              	.LASF381:
 16977 0637 45455052 		.ascii	"EEPROM_DISPENSER_PUMP1_LAYOUT_PAGE\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 353


 16977      4F4D5F44 
 16977      49535045 
 16977      4E534552 
 16977      5F50554D 
 16978              	.LASF299:
 16979 065a 50756D70 		.ascii	"PumpTransQueueDeallocate\000"
 16979      5472616E 
 16979      73517565 
 16979      75654465 
 16979      616C6C6F 
 16980              	.LASF206:
 16981 0673 50554D50 		.ascii	"PUMP_REAL_TIME_MONEY_REQUEST\000"
 16981      5F524541 
 16981      4C5F5449 
 16981      4D455F4D 
 16981      4F4E4559 
 16982              	.LASF434:
 16983 0690 52465F4D 		.ascii	"RF_MUX_CREDIT_SALE_PRINT_RESPONSE\000"
 16983      55585F43 
 16983      52454449 
 16983      545F5341 
 16983      4C455F50 
 16984              	.LASF118:
 16985 06b2 5F554152 		.ascii	"_UART_MESSAGE_STATE_\000"
 16985      545F4D45 
 16985      53534147 
 16985      455F5354 
 16985      4154455F 
 16986              	.LASF444:
 16987 06c7 52465F4D 		.ascii	"RF_MUX_POSITION_CFG_RESPONSE\000"
 16987      55585F50 
 16987      4F534954 
 16987      494F4E5F 
 16987      4346475F 
 16988              	.LASF4:
 16989 06e4 5F5F7569 		.ascii	"__uint8_t\000"
 16989      6E74385F 
 16989      7400
 16990              	.LASF407:
 16991 06ee 45455052 		.ascii	"EEPROM_DISPENSER_PUMP33_TRANSACTION_PAGE\000"
 16991      4F4D5F44 
 16991      49535045 
 16991      4E534552 
 16991      5F50554D 
 16992              	.LASF510:
 16993 0717 50756D70 		.ascii	"PumpPpuChange\000"
 16993      50707543 
 16993      68616E67 
 16993      6500
 16994              	.LASF142:
 16995 0725 44495350 		.ascii	"DISPLAY_INTRODUZCA_VALOR2\000"
 16995      4C41595F 
 16995      494E5452 
 16995      4F44555A 
 16995      43415F56 
 16996              	.LASF480:
 16997 073f 6C6F6361 		.ascii	"locallrc\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 354


 16997      6C6C7263 
 16997      00
 16998              	.LASF184:
 16999 0748 44495350 		.ascii	"DISPLAY_IDENTIFICADOR_ESTACION\000"
 16999      4C41595F 
 16999      4944454E 
 16999      54494649 
 16999      4341444F 
 17000              	.LASF86:
 17001 0767 44495350 		.ascii	"DISPLAY1_ANIMATE_HOME\000"
 17001      4C415931 
 17001      5F414E49 
 17001      4D415445 
 17001      5F484F4D 
 17002              	.LASF46:
 17003 077d 5F627566 		.ascii	"_buffer\000"
 17003      66657200 
 17004              	.LASF448:
 17005 0785 52465F4D 		.ascii	"RF_MUX_ISLAND_ADMIN_RESPONSE\000"
 17005      55585F49 
 17005      534C414E 
 17005      445F4144 
 17005      4D494E5F 
 17006              	.LASF400:
 17007 07a2 45455052 		.ascii	"EEPROM_DISPENSER_PUMP14_TRANSACTION_PAGE\000"
 17007      4F4D5F44 
 17007      49535045 
 17007      4E534552 
 17007      5F50554D 
 17008              	.LASF52:
 17009 07cb 5F53494E 		.ascii	"_SINK_OBSERVABLES_\000"
 17009      4B5F4F42 
 17009      53455256 
 17009      41424C45 
 17009      535F00
 17010              	.LASF337:
 17011 07de 5F74696D 		.ascii	"_timeoutmultiplier\000"
 17011      656F7574 
 17011      6D756C74 
 17011      69706C69 
 17011      657200
 17012              	.LASF231:
 17013 07f1 5F50554D 		.ascii	"_PUMP_TOTALS_\000"
 17013      505F544F 
 17013      54414C53 
 17013      5F00
 17014              	.LASF372:
 17015 07ff 5F454550 		.ascii	"_EEPROM_MEM_FORMAT_\000"
 17015      524F4D5F 
 17015      4D454D5F 
 17015      464F524D 
 17015      41545F00 
 17016              	.LASF19:
 17017 0813 75696E74 		.ascii	"uint64\000"
 17017      363400
 17018              	.LASF6:
 17019 081a 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 355


 17019      20696E74 
 17019      00
 17020              	.LASF282:
 17021 0823 5F726F75 		.ascii	"_roundrobinstate\000"
 17021      6E64726F 
 17021      62696E73 
 17021      74617465 
 17021      00
 17022              	.LASF275:
 17023 0834 5F70756D 		.ascii	"_pumpstate\000"
 17023      70737461 
 17023      746500
 17024              	.LASF135:
 17025 083f 5F415641 		.ascii	"_AVAILABLE_DISPLAYS_\000"
 17025      494C4142 
 17025      4C455F44 
 17025      4953504C 
 17025      4159535F 
 17026              	.LASF62:
 17027 0854 44495350 		.ascii	"DISPENSER_EXECUTE_CASH_TRANSACTION\000"
 17027      454E5345 
 17027      525F4558 
 17027      45435554 
 17027      455F4341 
 17028              	.LASF44:
 17029 0877 5F6D6573 		.ascii	"_messagetimeoutmultiplier\000"
 17029      73616765 
 17029      74696D65 
 17029      6F75746D 
 17029      756C7469 
 17030              	.LASF73:
 17031 0891 44495350 		.ascii	"DISPENSER_PUMP_BEEP_WARNING\000"
 17031      454E5345 
 17031      525F5055 
 17031      4D505F42 
 17031      4545505F 
 17032              	.LASF502:
 17033 08ad 50756D70 		.ascii	"PumpPresetHose\000"
 17033      50726573 
 17033      6574486F 
 17033      736500
 17034              	.LASF530:
 17035 08bc 50756D70 		.ascii	"PumpEnumeratorRequest\000"
 17035      456E756D 
 17035      65726174 
 17035      6F725265 
 17035      71756573 
 17036              	.LASF68:
 17037 08d2 44495350 		.ascii	"DISPENSER_CONFIGURE_PRICES\000"
 17037      454E5345 
 17037      525F434F 
 17037      4E464947 
 17037      5552455F 
 17038              	.LASF382:
 17039 08ed 45455052 		.ascii	"EEPROM_DISPENSER_PUMP2_LAYOUT_PAGE\000"
 17039      4F4D5F44 
 17039      49535045 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 356


 17039      4E534552 
 17039      5F50554D 
 17040              	.LASF389:
 17041 0910 45455052 		.ascii	"EEPROM_DISPENSER_PUMP1_PPU_INFO_PAGE\000"
 17041      4F4D5F44 
 17041      49535045 
 17041      4E534552 
 17041      5F50554D 
 17042              	.LASF461:
 17043 0935 5F52465F 		.ascii	"_RF_AUTONOMOUS_MODE_\000"
 17043      4155544F 
 17043      4E4F4D4F 
 17043      55535F4D 
 17043      4F44455F 
 17044              	.LASF132:
 17045 094a 55415254 		.ascii	"UART_DISPLAY1\000"
 17045      5F444953 
 17045      504C4159 
 17045      3100
 17046              	.LASF133:
 17047 0958 55415254 		.ascii	"UART_DISPLAY2\000"
 17047      5F444953 
 17047      504C4159 
 17047      3200
 17048              	.LASF235:
 17049 0966 5F50554D 		.ascii	"_PUMP_NETWORK_ENUMERATOR_\000"
 17049      505F4E45 
 17049      54574F52 
 17049      4B5F454E 
 17049      554D4552 
 17050              	.LASF346:
 17051 0980 5F706A6F 		.ascii	"_pjobqueueallocated\000"
 17051      62717565 
 17051      7565616C 
 17051      6C6F6361 
 17051      74656400 
 17052              	.LASF162:
 17053 0994 44495350 		.ascii	"DISPLAY_INTRODUZCA_KILOMETRAJE\000"
 17053      4C41595F 
 17053      494E5452 
 17053      4F44555A 
 17053      43415F4B 
 17054              	.LASF420:
 17055 09b3 52465F4D 		.ascii	"RF_MUX_CREDIT_PRESET_NOTIFICATION_RESPONSE\000"
 17055      55585F43 
 17055      52454449 
 17055      545F5052 
 17055      45534554 
 17056              	.LASF89:
 17057 09de 44495350 		.ascii	"DISPLAY2_UPDATE_DATETIME\000"
 17057      4C415932 
 17057      5F555044 
 17057      4154455F 
 17057      44415445 
 17058              	.LASF242:
 17059 09f7 5F50554D 		.ascii	"_PUMP_IDLE_\000"
 17059      505F4944 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 357


 17059      4C455F00 
 17060              	.LASF63:
 17061 0a03 44495350 		.ascii	"DISPENSER_EXECUTE_CREDIT_TRANSACTION\000"
 17061      454E5345 
 17061      525F4558 
 17061      45435554 
 17061      455F4352 
 17062              	.LASF79:
 17063 0a28 5052494E 		.ascii	"PRINTER2_GENERIC_JOB\000"
 17063      54455232 
 17063      5F47454E 
 17063      45524943 
 17063      5F4A4F42 
 17064              	.LASF170:
 17065 0a3d 44495350 		.ascii	"DISPLAY_POR_FAVOR_ESPERE\000"
 17065      4C41595F 
 17065      504F525F 
 17065      4641564F 
 17065      525F4553 
 17066              	.LASF413:
 17067 0a56 52465F4D 		.ascii	"RF_MUX_STATE_REQUEST\000"
 17067      55585F53 
 17067      54415445 
 17067      5F524551 
 17067      55455354 
 17068              	.LASF419:
 17069 0a6b 52465F4D 		.ascii	"RF_MUX_CREDIT_PRESET_NOTIFICATION_REQUEST\000"
 17069      55585F43 
 17069      52454449 
 17069      545F5052 
 17069      45534554 
 17070              	.LASF175:
 17071 0a95 44495350 		.ascii	"DISPLAY_FECHA\000"
 17071      4C41595F 
 17071      46454348 
 17071      4100
 17072              	.LASF328:
 17073 0aa3 5F726565 		.ascii	"_reenqueue\000"
 17073      6E717565 
 17073      756500
 17074              	.LASF509:
 17075 0aae 50756D70 		.ascii	"PumpFullPresetNoHose\000"
 17075      46756C6C 
 17075      50726573 
 17075      65744E6F 
 17075      486F7365 
 17076              	.LASF323:
 17077 0ac3 50756D70 		.ascii	"PumpTransactionJob\000"
 17077      5472616E 
 17077      73616374 
 17077      696F6E4A 
 17077      6F6200
 17078              	.LASF0:
 17079 0ad6 7369676E 		.ascii	"signed char\000"
 17079      65642063 
 17079      68617200 
 17080              	.LASF11:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 358


 17081 0ae2 75696E74 		.ascii	"uint8_t\000"
 17081      385F7400 
 17082              	.LASF493:
 17083 0aea 50756D70 		.ascii	"PumpStartupAuthorization\000"
 17083      53746172 
 17083      74757041 
 17083      7574686F 
 17083      72697A61 
 17084              	.LASF156:
 17085 0b03 44495350 		.ascii	"DISPLAY_ID_DIGITAL\000"
 17085      4C41595F 
 17085      49445F44 
 17085      49474954 
 17085      414C00
 17086              	.LASF154:
 17087 0b16 44495350 		.ascii	"DISPLAY_TIEMPO_EXPIRADO\000"
 17087      4C41595F 
 17087      5449454D 
 17087      504F5F45 
 17087      58504952 
 17088              	.LASF544:
 17089 0b2e 5F706275 		.ascii	"_pbuffer\000"
 17089      66666572 
 17089      00
 17090              	.LASF109:
 17091 0b37 436C6561 		.ascii	"ClearRxBuffer\000"
 17091      72527842 
 17091      75666665 
 17091      7200
 17092              	.LASF106:
 17093 0b45 47657443 		.ascii	"GetChar\000"
 17093      68617200 
 17094              	.LASF414:
 17095 0b4d 52465F4D 		.ascii	"RF_MUX_STATE_RESPONSE\000"
 17095      55585F53 
 17095      54415445 
 17095      5F524553 
 17095      504F4E53 
 17096              	.LASF310:
 17097 0b63 52657370 		.ascii	"Response\000"
 17097      6F6E7365 
 17097      00
 17098              	.LASF399:
 17099 0b6c 45455052 		.ascii	"EEPROM_DISPENSER_PUMP13_TRANSACTION_PAGE\000"
 17099      4F4D5F44 
 17099      49535045 
 17099      4E534552 
 17099      5F50554D 
 17100              	.LASF180:
 17101 0b95 44495350 		.ascii	"DISPLAY_USUARIO_VALIDO\000"
 17101      4C41595F 
 17101      55535541 
 17101      52494F5F 
 17101      56414C49 
 17102              	.LASF178:
 17103 0bac 44495350 		.ascii	"DISPLAY_CERRAR_TURNO\000"
 17103      4C41595F 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 359


 17103      43455252 
 17103      41525F54 
 17103      55524E4F 
 17104              	.LASF339:
 17105 0bc1 5F707265 		.ascii	"_presponse\000"
 17105      73706F6E 
 17105      736500
 17106              	.LASF167:
 17107 0bcc 44495350 		.ascii	"DISPLAY_SELECCIONE_POSICION\000"
 17107      4C41595F 
 17107      53454C45 
 17107      4343494F 
 17107      4E455F50 
 17108              	.LASF121:
 17109 0be8 50454E44 		.ascii	"PENDING\000"
 17109      494E4700 
 17110              	.LASF85:
 17111 0bf0 44495350 		.ascii	"DISPLAY1_UPDATE_DATETIME\000"
 17111      4C415931 
 17111      5F555044 
 17111      4154455F 
 17111      44415445 
 17112              	.LASF368:
 17113 0c09 5F707265 		.ascii	"_presetdigits\000"
 17113      73657464 
 17113      69676974 
 17113      7300
 17114              	.LASF212:
 17115 0c17 4C52436E 		.ascii	"LRCn\000"
 17115      00
 17116              	.LASF1:
 17117 0c1c 756E7369 		.ascii	"unsigned char\000"
 17117      676E6564 
 17117      20636861 
 17117      7200
 17118              	.LASF356:
 17119 0c2a 5F6E756D 		.ascii	"_numpositions\000"
 17119      706F7369 
 17119      74696F6E 
 17119      7300
 17120              	.LASF141:
 17121 0c38 44495350 		.ascii	"DISPLAY_INTRODUZCA_VALOR\000"
 17121      4C41595F 
 17121      494E5452 
 17121      4F44555A 
 17121      43415F56 
 17122              	.LASF421:
 17123 0c51 52465F4D 		.ascii	"RF_MUX_CASH_SALE_START_REQUEST\000"
 17123      55585F43 
 17123      4153485F 
 17123      53414C45 
 17123      5F535441 
 17124              	.LASF542:
 17125 0c70 706A6F62 		.ascii	"pjobcntr\000"
 17125      636E7472 
 17125      00
 17126              	.LASF270:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 360


 17127 0c79 5F736572 		.ascii	"_serial\000"
 17127      69616C00 
 17128              	.LASF169:
 17129 0c81 44495350 		.ascii	"DISPLAY_ESPERANDO_AUTORIZACION\000"
 17129      4C41595F 
 17129      45535045 
 17129      52414E44 
 17129      4F5F4155 
 17130              	.LASF534:
 17131 0ca0 50756D70 		.ascii	"PumpEnumeratorTimeout\000"
 17131      456E756D 
 17131      65726174 
 17131      6F725469 
 17131      6D656F75 
 17132              	.LASF492:
 17133 0cb6 70756172 		.ascii	"puartdisp\000"
 17133      74646973 
 17133      7000
 17134              	.LASF119:
 17135 0cc0 46524545 		.ascii	"FREE\000"
 17135      00
 17136              	.LASF457:
 17137 0cc5 52465F57 		.ascii	"RF_WORKSHIFTREQ\000"
 17137      4F524B53 
 17137      48494654 
 17137      52455100 
 17138              	.LASF327:
 17139 0cd5 50756D70 		.ascii	"PumpTransaction\000"
 17139      5472616E 
 17139      73616374 
 17139      696F6E00 
 17140              	.LASF481:
 17141 0ce5 65657072 		.ascii	"eeprompage\000"
 17141      6F6D7061 
 17141      676500
 17142              	.LASF67:
 17143 0cf0 44495350 		.ascii	"DISPENSER_ACQUIRE_CONFIGURATION_INFORMATION\000"
 17143      454E5345 
 17143      525F4143 
 17143      51554952 
 17143      455F434F 
 17144              	.LASF42:
 17145 0d1c 5F6D6573 		.ascii	"_messagedelay\000"
 17145      73616765 
 17145      64656C61 
 17145      7900
 17146              	.LASF363:
 17147 0d2a 5F766F6C 		.ascii	"_volumedecimals\000"
 17147      756D6564 
 17147      6563696D 
 17147      616C7300 
 17148              	.LASF50:
 17149 0d3a 5F426F6F 		.ascii	"_Bool\000"
 17149      6C00
 17150              	.LASF358:
 17151 0d40 5F686F73 		.ascii	"_hosesposition2\000"
 17151      6573706F 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 361


 17151      73697469 
 17151      6F6E3200 
 17152              	.LASF269:
 17153 0d50 5F766F6C 		.ascii	"_volumeamount\000"
 17153      756D6561 
 17153      6D6F756E 
 17153      7400
 17154              	.LASF549:
 17155 0d5e 43617374 		.ascii	"CastVolumeValue\000"
 17155      566F6C75 
 17155      6D655661 
 17155      6C756500 
 17156              	.LASF110:
 17157 0d6e 57726974 		.ascii	"WriteTxData\000"
 17157      65547844 
 17157      61746100 
 17158              	.LASF36:
 17159 0d7a 53494E4B 		.ascii	"SINK_ALLOCATED\000"
 17159      5F414C4C 
 17159      4F434154 
 17159      454400
 17160              	.LASF350:
 17161 0d89 5065656B 		.ascii	"Peek\000"
 17161      00
 17162              	.LASF301:
 17163 0d8e 50756D70 		.ascii	"PumpTransQueueDequeue\000"
 17163      5472616E 
 17163      73517565 
 17163      75654465 
 17163      71756575 
 17164              	.LASF21:
 17165 0da4 63686172 		.ascii	"char\000"
 17165      00
 17166              	.LASF440:
 17167 0da9 52465F4D 		.ascii	"RF_MUX_LAST_CASH_SALE_RESPONSE\000"
 17167      55585F4C 
 17167      4153545F 
 17167      43415348 
 17167      5F53414C 
 17168              	.LASF433:
 17169 0dc8 52465F4D 		.ascii	"RF_MUX_CREDIT_SALE_PRINT_REQUEST\000"
 17169      55585F43 
 17169      52454449 
 17169      545F5341 
 17169      4C455F50 
 17170              	.LASF182:
 17171 0de9 44495350 		.ascii	"DISPLAY_AMBAS_IMPRESORAS_FUNCIONANDO\000"
 17171      4C41595F 
 17171      414D4241 
 17171      535F494D 
 17171      50524553 
 17172              	.LASF31:
 17173 0e0e 42524F41 		.ascii	"BROADCASTFOREVER\000"
 17173      44434153 
 17173      54464F52 
 17173      45564552 
 17173      00
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 362


 17174              	.LASF88:
 17175 0e1f 44495350 		.ascii	"DISPLAY2_MESSAGE\000"
 17175      4C415932 
 17175      5F4D4553 
 17175      53414745 
 17175      00
 17176              	.LASF211:
 17177 0e30 5052446E 		.ascii	"PRDn\000"
 17177      00
 17178              	.LASF498:
 17179 0e35 50756D70 		.ascii	"PumpDataToPump\000"
 17179      44617461 
 17179      546F5075 
 17179      6D7000
 17180              	.LASF317:
 17181 0e44 5F6F6E65 		.ascii	"_oneshotpreconditions\000"
 17181      73686F74 
 17181      70726563 
 17181      6F6E6469 
 17181      74696F6E 
 17182              	.LASF130:
 17183 0e5a 55415254 		.ascii	"UART_PRINTER\000"
 17183      5F505249 
 17183      4E544552 
 17183      00
 17184              	.LASF386:
 17185 0e67 45455052 		.ascii	"EEPROM_DISPENSER_PUMP2_PRODUCT_NAMES_PAGE\000"
 17185      4F4D5F44 
 17185      49535045 
 17185      4E534552 
 17185      5F50554D 
 17186              	.LASF361:
 17187 0e91 5F6D6F6E 		.ascii	"_moneydecimals\000"
 17187      65796465 
 17187      63696D61 
 17187      6C7300
 17188              	.LASF105:
 17189 0ea0 52656164 		.ascii	"ReadRxStatus\000"
 17189      52785374 
 17189      61747573 
 17189      00
 17190              	.LASF194:
 17191 0ead 50535452 		.ascii	"PSTR\000"
 17191      00
 17192              	.LASF365:
 17193 0eb2 5F6D696E 		.ascii	"_minmoneyvalue\000"
 17193      6D6F6E65 
 17193      7976616C 
 17193      756500
 17194              	.LASF532:
 17195 0ec1 76617230 		.ascii	"var0\000"
 17195      00
 17196              	.LASF283:
 17197 0ec6 5F706F73 		.ascii	"_positionlocked\000"
 17197      6974696F 
 17197      6E6C6F63 
 17197      6B656400 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 363


 17198              	.LASF340:
 17199 0ed6 5F707075 		.ascii	"_ppump\000"
 17199      6D7000
 17200              	.LASF240:
 17201 0edd 5F50554D 		.ascii	"_PUMP_TRANS_STATE_\000"
 17201      505F5452 
 17201      414E535F 
 17201      53544154 
 17201      455F00
 17202              	.LASF403:
 17203 0ef0 45455052 		.ascii	"EEPROM_DISPENSER_PUMP23_TRANSACTION_PAGE\000"
 17203      4F4D5F44 
 17203      49535045 
 17203      4E534552 
 17203      5F50554D 
 17204              	.LASF533:
 17205 0f19 76617231 		.ascii	"var1\000"
 17205      00
 17206              	.LASF115:
 17207 0f1e 50757443 		.ascii	"PutCRLF\000"
 17207      524C4600 
 17208              	.LASF527:
 17209 0f26 70627566 		.ascii	"pbuffer\000"
 17209      66657200 
 17210              	.LASF504:
 17211 0f2e 50756D70 		.ascii	"PumpPresetNotification\000"
 17211      50726573 
 17211      65744E6F 
 17211      74696669 
 17211      63617469 
 17212              	.LASF294:
 17213 0f45 5F747261 		.ascii	"_transqueuelocked\000"
 17213      6E737175 
 17213      6575656C 
 17213      6F636B65 
 17213      6400
 17214              	.LASF517:
 17215 0f57 41637175 		.ascii	"AcquirePumpCompleteConfiguration\000"
 17215      69726550 
 17215      756D7043 
 17215      6F6D706C 
 17215      65746543 
 17216              	.LASF205:
 17217 0f78 50554D50 		.ascii	"PUMP_TOTALS_DATA_REQUEST\000"
 17217      5F544F54 
 17217      414C535F 
 17217      44415441 
 17217      5F524551 
 17218              	.LASF218:
 17219 0f91 50554D50 		.ascii	"PUMP_BUSY\000"
 17219      5F425553 
 17219      5900
 17220              	.LASF147:
 17221 0f9b 44495350 		.ascii	"DISPLAY_BAJE_MANIJA\000"
 17221      4C41595F 
 17221      42414A45 
 17221      5F4D414E 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 364


 17221      494A4100 
 17222              	.LASF477:
 17223 0faf 50726F63 		.ascii	"ProcessPumpRTMoneyRequest\000"
 17223      65737350 
 17223      756D7052 
 17223      544D6F6E 
 17223      65795265 
 17224              	.LASF75:
 17225 0fc9 5052494E 		.ascii	"PRINTER12_JOB\000"
 17225      54455231 
 17225      325F4A4F 
 17225      4200
 17226              	.LASF384:
 17227 0fd7 45455052 		.ascii	"EEPROM_DISPENSER_PUMP4_LAYOUT_PAGE\000"
 17227      4F4D5F44 
 17227      49535045 
 17227      4E534552 
 17227      5F50554D 
 17228              	.LASF224:
 17229 0ffa 5F545241 		.ascii	"_TRANSACTION_NAMES_\000"
 17229      4E534143 
 17229      54494F4E 
 17229      5F4E414D 
 17229      45535F00 
 17230              	.LASF43:
 17231 100e 5F6D6573 		.ascii	"_messagetimeout\000"
 17231      73616765 
 17231      74696D65 
 17231      6F757400 
 17232              	.LASF417:
 17233 101e 52465F4D 		.ascii	"RF_MUX_CREDIT_PRESET_AUTHORIZATION_REQUEST\000"
 17233      55585F43 
 17233      52454449 
 17233      545F5052 
 17233      45534554 
 17234              	.LASF475:
 17235 1049 41637175 		.ascii	"AcquireDatatoPumpResponse\000"
 17235      69726544 
 17235      61746174 
 17235      6F50756D 
 17235      70526573 
 17236              	.LASF140:
 17237 1063 44495350 		.ascii	"DISPLAY_FORMA_PROGRAMACION\000"
 17237      4C41595F 
 17237      464F524D 
 17237      415F5052 
 17237      4F475241 
 17238              	.LASF113:
 17239 107e 50757453 		.ascii	"PutString\000"
 17239      7472696E 
 17239      6700
 17240              	.LASF238:
 17241 1088 5F50554D 		.ascii	"_PUMP_COMPLETE_CONFIGURATION_\000"
 17241      505F434F 
 17241      4D504C45 
 17241      54455F43 
 17241      4F4E4649 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 365


 17242              	.LASF352:
 17243 10a6 436C6561 		.ascii	"Clear\000"
 17243      7200
 17244              	.LASF551:
 17245 10ac 73686966 		.ascii	"shiftbydelimiter\000"
 17245      74627964 
 17245      656C696D 
 17245      69746572 
 17245      00
 17246              	.LASF99:
 17247 10bd 43757374 		.ascii	"CustomUARTSend\000"
 17247      6F6D5541 
 17247      52545365 
 17247      6E6400
 17248              	.LASF489:
 17249 10cc 50756D70 		.ascii	"PumpAuthorization\000"
 17249      41757468 
 17249      6F72697A 
 17249      6174696F 
 17249      6E00
 17250              	.LASF427:
 17251 10de 52465F4D 		.ascii	"RF_MUX_TOTALS_REPORT_REQUEST\000"
 17251      55585F54 
 17251      4F54414C 
 17251      535F5245 
 17251      504F5254 
 17252              	.LASF362:
 17253 10fb 5F707075 		.ascii	"_ppudecimals\000"
 17253      64656369 
 17253      6D616C73 
 17253      00
 17254              	.LASF273:
 17255 1108 5F70756D 		.ascii	"_pumpid\000"
 17255      70696400 
 17256              	.LASF525:
 17257 1110 41637175 		.ascii	"AcquireDispenserLayoutInformation\000"
 17257      69726544 
 17257      69737065 
 17257      6E736572 
 17257      4C61796F 
 17258              	.LASF136:
 17259 1132 44495350 		.ascii	"DISPLAY_INICIO0\000"
 17259      4C41595F 
 17259      494E4943 
 17259      494F3000 
 17260              	.LASF137:
 17261 1142 44495350 		.ascii	"DISPLAY_INICIO1\000"
 17261      4C41595F 
 17261      494E4943 
 17261      494F3100 
 17262              	.LASF138:
 17263 1152 44495350 		.ascii	"DISPLAY_INICIO2\000"
 17263      4C41595F 
 17263      494E4943 
 17263      494F3200 
 17264              	.LASF29:
 17265 1162 44454C41 		.ascii	"DELAYEDALLINTERESTED\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 366


 17265      59454441 
 17265      4C4C494E 
 17265      54455245 
 17265      53544544 
 17266              	.LASF291:
 17267 1177 5F727862 		.ascii	"_rxbuffer\000"
 17267      75666665 
 17267      7200
 17268              	.LASF315:
 17269 1181 5F726573 		.ascii	"_responsesize\000"
 17269      706F6E73 
 17269      6573697A 
 17269      6500
 17270              	.LASF347:
 17271 118f 526F7461 		.ascii	"Rotate\000"
 17271      746500
 17272              	.LASF250:
 17273 1196 504E4541 		.ascii	"PNEAR_PUMPTRANSACTIONALSTATEPTR\000"
 17273      525F5055 
 17273      4D505452 
 17273      414E5341 
 17273      4354494F 
 17274              	.LASF181:
 17275 11b6 44495350 		.ascii	"DISPLAY_USUARIO_INVALIDO\000"
 17275      4C41595F 
 17275      55535541 
 17275      52494F5F 
 17275      494E5641 
 17276              	.LASF463:
 17277 11cf 52465F4E 		.ascii	"RF_NON_AUTONOMOUS\000"
 17277      4F4E5F41 
 17277      55544F4E 
 17277      4F4D4F55 
 17277      5300
 17278              	.LASF541:
 17279 11e1 7074726A 		.ascii	"ptrjob\000"
 17279      6F6200
 17280              	.LASF392:
 17281 11e8 45455052 		.ascii	"EEPROM_DISPENSER_PUMP4_PPU_INFO_PAGE\000"
 17281      4F4D5F44 
 17281      49535045 
 17281      4E534552 
 17281      5F50554D 
 17282              	.LASF80:
 17283 120d 5052494E 		.ascii	"PRINTER1_GENERIC_JOB_LOGO\000"
 17283      54455231 
 17283      5F47454E 
 17283      45524943 
 17283      5F4A4F42 
 17284              	.LASF290:
 17285 1227 5F747261 		.ascii	"_trasactionbuffer\000"
 17285      73616374 
 17285      696F6E62 
 17285      75666665 
 17285      7200
 17286              	.LASF545:
 17287 1239 46696E64 		.ascii	"FindLRC\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 367


 17287      4C524300 
 17288              	.LASF559:
 17289 1241 5F675F70 		.ascii	"_g_pumps\000"
 17289      756D7073 
 17289      00
 17290              	.LASF349:
 17291 124a 456E7175 		.ascii	"Enqueue\000"
 17291      65756500 
 17292              	.LASF524:
 17293 1252 7073696E 		.ascii	"psinkmsg\000"
 17293      6B6D7367 
 17293      00
 17294              	.LASF511:
 17295 125b 62756666 		.ascii	"bufferlength\000"
 17295      65726C65 
 17295      6E677468 
 17295      00
 17296              	.LASF271:
 17297 1268 50756D70 		.ascii	"PumpAuthorizationInfo\000"
 17297      41757468 
 17297      6F72697A 
 17297      6174696F 
 17297      6E496E66 
 17298              	.LASF393:
 17299 127e 45455052 		.ascii	"EEPROM_INSEPET_RESERVED_PAGE1\000"
 17299      4F4D5F49 
 17299      4E534550 
 17299      45545F52 
 17299      45534552 
 17300              	.LASF394:
 17301 129c 45455052 		.ascii	"EEPROM_INSEPET_RESERVED_PAGE2\000"
 17301      4F4D5F49 
 17301      4E534550 
 17301      45545F52 
 17301      45534552 
 17302              	.LASF395:
 17303 12ba 45455052 		.ascii	"EEPROM_INSEPET_RESERVED_PAGE3\000"
 17303      4F4D5F49 
 17303      4E534550 
 17303      45545F52 
 17303      45534552 
 17304              	.LASF396:
 17305 12d8 45455052 		.ascii	"EEPROM_INSEPET_RESERVED_PAGE4\000"
 17305      4F4D5F49 
 17305      4E534550 
 17305      45545F52 
 17305      45534552 
 17306              	.LASF287:
 17307 12f6 5F727476 		.ascii	"_rtvolumeamount\000"
 17307      6F6C756D 
 17307      65616D6F 
 17307      756E7400 
 17308              	.LASF330:
 17309 1306 5F64656C 		.ascii	"_delay\000"
 17309      617900
 17310              	.LASF388:
 17311 130d 45455052 		.ascii	"EEPROM_DISPENSER_PUMP4_PRODUCT_NAMES_PAGE\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 368


 17311      4F4D5F44 
 17311      49535045 
 17311      4E534552 
 17311      5F50554D 
 17312              	.LASF437:
 17313 1337 52465F4D 		.ascii	"RF_MUX_PENDING_CREDIT_SALE_REQUEST\000"
 17313      55585F50 
 17313      454E4449 
 17313      4E475F43 
 17313      52454449 
 17314              	.LASF552:
 17315 135a 73686966 		.ascii	"shiftcount\000"
 17315      74636F75 
 17315      6E7400
 17316              	.LASF32:
 17317 1365 414C4C49 		.ascii	"ALLINTERESTEDFOREVER\000"
 17317      4E544552 
 17317      45535445 
 17317      44464F52 
 17317      45564552 
 17318              	.LASF535:
 17319 137a 41637175 		.ascii	"AcquirePumpSpecialFunctionResponseResolver\000"
 17319      69726550 
 17319      756D7053 
 17319      70656369 
 17319      616C4675 
 17320              	.LASF354:
 17321 13a5 5F696E63 		.ascii	"_inconfiguration\000"
 17321      6F6E6669 
 17321      67757261 
 17321      74696F6E 
 17321      00
 17322              	.LASF232:
 17323 13b6 5F50554D 		.ascii	"_PUMP_STATE_\000"
 17323      505F5354 
 17323      4154455F 
 17323      00
 17324              	.LASF546:
 17325 13c3 496E6974 		.ascii	"InitiateTransaction\000"
 17325      69617465 
 17325      5472616E 
 17325      73616374 
 17325      696F6E00 
 17326              	.LASF7:
 17327 13d7 6C6F6E67 		.ascii	"long unsigned int\000"
 17327      20756E73 
 17327      69676E65 
 17327      6420696E 
 17327      7400
 17328              	.LASF239:
 17329 13e9 5F50554D 		.ascii	"_PUMP_PROGRAM_MODE_\000"
 17329      505F5052 
 17329      4F475241 
 17329      4D5F4D4F 
 17329      44455F00 
 17330              	.LASF186:
 17331 13fd 44495350 		.ascii	"DISPLAY_DUMMY0\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 369


 17331      4C41595F 
 17331      44554D4D 
 17331      593000
 17332              	.LASF187:
 17333 140c 44495350 		.ascii	"DISPLAY_DUMMY1\000"
 17333      4C41595F 
 17333      44554D4D 
 17333      593100
 17334              	.LASF188:
 17335 141b 44495350 		.ascii	"DISPLAY_DUMMY2\000"
 17335      4C41595F 
 17335      44554D4D 
 17335      593200
 17336              	.LASF189:
 17337 142a 44495350 		.ascii	"DISPLAY_DUMMY3\000"
 17337      4C41595F 
 17337      44554D4D 
 17337      593300
 17338              	.LASF243:
 17339 1439 5F50554D 		.ascii	"_PUMP_UNKNOWN_\000"
 17339      505F554E 
 17339      4B4E4F57 
 17339      4E5F00
 17340              	.LASF515:
 17341 1448 50756D70 		.ascii	"PumpStopAllRequest\000"
 17341      53746F70 
 17341      416C6C52 
 17341      65717565 
 17341      737400
 17342              	.LASF166:
 17343 145b 44495350 		.ascii	"DISPLAY_IMPRIMIENDO_RECIBO\000"
 17343      4C41595F 
 17343      494D5052 
 17343      494D4945 
 17343      4E444F5F 
 17344              	.LASF474:
 17345 1476 41637175 		.ascii	"AcquirePumpStateResponse\000"
 17345      69726550 
 17345      756D7053 
 17345      74617465 
 17345      52657370 
 17346              	.LASF424:
 17347 148f 52465F4D 		.ascii	"RF_MUX_CASH_SALE_END_REPORT_RESPONSE\000"
 17347      55585F43 
 17347      4153485F 
 17347      53414C45 
 17347      5F454E44 
 17348              	.LASF425:
 17349 14b4 52465F4D 		.ascii	"RF_MUX_TOTALS_REQUEST\000"
 17349      55585F54 
 17349      4F54414C 
 17349      535F5245 
 17349      51554553 
 17350              	.LASF48:
 17351 14ca 5F706461 		.ascii	"_pdata\000"
 17351      746100
 17352              	.LASF547:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 370


 17353 14d1 5465726D 		.ascii	"TerminateTransaction\000"
 17353      696E6174 
 17353      65547261 
 17353      6E736163 
 17353      74696F6E 
 17354              	.LASF197:
 17355 14e6 5F504F49 		.ascii	"_POINT_AS_DECIMAL_SEPARATOR_\000"
 17355      4E545F41 
 17355      535F4445 
 17355      43494D41 
 17355      4C5F5345 
 17356              	.LASF279:
 17357 1503 5F726573 		.ascii	"_restoreprice\000"
 17357      746F7265 
 17357      70726963 
 17357      6500
 17358              	.LASF322:
 17359 1511 46696E61 		.ascii	"Finalization\000"
 17359      6C697A61 
 17359      74696F6E 
 17359      00
 17360              	.LASF49:
 17361 151e 43616C6C 		.ascii	"Callback\000"
 17361      6261636B 
 17361      00
 17362              	.LASF61:
 17363 1527 44495350 		.ascii	"DISPENSER_ACQUIRE_PUMP_HOSE\000"
 17363      454E5345 
 17363      525F4143 
 17363      51554952 
 17363      455F5055 
 17364              	.LASF505:
 17365 1543 70747374 		.ascii	"ptstemp\000"
 17365      656D7000 
 17366              	.LASF531:
 17367 154b 41637175 		.ascii	"AcquirePumpEnumeratorResponse\000"
 17367      69726550 
 17367      756D7045 
 17367      6E756D65 
 17367      7261746F 
 17368              	.LASF338:
 17369 1569 5F707265 		.ascii	"_prequest\000"
 17369      71756573 
 17369      7400
 17370              	.LASF465:
 17371 1573 5F74696D 		.ascii	"_timeouttoautonomous\000"
 17371      656F7574 
 17371      746F6175 
 17371      746F6E6F 
 17371      6D6F7573 
 17372              	.LASF451:
 17373 1588 52465F4D 		.ascii	"RF_MUX_NULL\000"
 17373      55585F4E 
 17373      554C4C00 
 17374              	.LASF131:
 17375 1594 55415254 		.ascii	"UART_DISPENSER\000"
 17375      5F444953 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 371


 17375      50454E53 
 17375      455200
 17376              	.LASF159:
 17377 15a3 44495350 		.ascii	"DISPLAY_ID_RECONOCIDO\000"
 17377      4C41595F 
 17377      49445F52 
 17377      45434F4E 
 17377      4F434944 
 17378              	.LASF336:
 17379 15b9 5F74696D 		.ascii	"_timeoutseed\000"
 17379      656F7574 
 17379      73656564 
 17379      00
 17380              	.LASF529:
 17381 15c6 72657476 		.ascii	"retval\000"
 17381      616C00
 17382              	.LASF410:
 17383 15cd 45455052 		.ascii	"EEPROM_DISPENSER_PUMP42_TRANSACTION_PAGE\000"
 17383      4F4D5F44 
 17383      49535045 
 17383      4E534552 
 17383      5F50554D 
 17384              	.LASF272:
 17385 15f6 5F50554D 		.ascii	"_PUMP_LAYOUT_\000"
 17385      505F4C41 
 17385      594F5554 
 17385      5F00
 17386              	.LASF538:
 17387 1604 41637175 		.ascii	"AcquirePpuChangeResponse\000"
 17387      69726550 
 17387      70754368 
 17387      616E6765 
 17387      52657370 
 17388              	.LASF501:
 17389 161d 62756666 		.ascii	"buffndx\000"
 17389      6E647800 
 17390              	.LASF95:
 17391 1625 57415443 		.ascii	"WATCHDOG_STARTUP\000"
 17391      48444F47 
 17391      5F535441 
 17391      52545550 
 17391      00
 17392              	.LASF183:
 17393 1636 44495350 		.ascii	"DISPLAY_IMPRESORA_NO_FUNCIONANDO\000"
 17393      4C41595F 
 17393      494D5052 
 17393      45534F52 
 17393      415F4E4F 
 17394              	.LASF74:
 17395 1657 5052494E 		.ascii	"PRINTER11_JOB\000"
 17395      54455231 
 17395      315F4A4F 
 17395      4200
 17396              	.LASF543:
 17397 1665 4765744C 		.ascii	"GetLRC\000"
 17397      524300
 17398              	.LASF150:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 372


 17399 166c 44495350 		.ascii	"DISPLAY_INGRESE_PASSWORD\000"
 17399      4C41595F 
 17399      494E4752 
 17399      4553455F 
 17399      50415353 
 17400              	.LASF426:
 17401 1685 52465F4D 		.ascii	"RF_MUX_TOTALS_RESPONSE\000"
 17401      55585F54 
 17401      4F54414C 
 17401      535F5245 
 17401      53504F4E 
 17402              	.LASF8:
 17403 169c 6C6F6E67 		.ascii	"long long int\000"
 17403      206C6F6E 
 17403      6720696E 
 17403      7400
 17404              	.LASF325:
 17405 16aa 5F747261 		.ascii	"_transactionname\000"
 17405      6E736163 
 17405      74696F6E 
 17405      6E616D65 
 17405      00
 17406              	.LASF171:
 17407 16bb 44495350 		.ascii	"DISPLAY_AUTORIZACION_ACEPTADA\000"
 17407      4C41595F 
 17407      4155544F 
 17407      52495A41 
 17407      43494F4E 
 17408              	.LASF149:
 17409 16d9 44495350 		.ascii	"DISPLAY_DESEA_IMPRIMIR_RECIBO\000"
 17409      4C41595F 
 17409      44455345 
 17409      415F494D 
 17409      5052494D 
 17410              	.LASF155:
 17411 16f7 44495350 		.ascii	"DISPLAY_GRACIAS_VUELVA_PRONTO\000"
 17411      4C41595F 
 17411      47524143 
 17411      4941535F 
 17411      5655454C 
 17412              	.LASF454:
 17413 1715 52465F44 		.ascii	"RF_DELIVERING\000"
 17413      454C4956 
 17413      4552494E 
 17413      4700
 17414              	.LASF59:
 17415 1723 44495350 		.ascii	"DISPENSER_UPDATE_PUMP_TRANSACTION_TIMEOUTS\000"
 17415      454E5345 
 17415      525F5550 
 17415      44415445 
 17415      5F50554D 
 17416              	.LASF435:
 17417 174e 52465F4D 		.ascii	"RF_MUX_CASH_SALE_PRINT_REQUEST\000"
 17417      55585F43 
 17417      4153485F 
 17417      53414C45 
 17417      5F505249 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 373


 17418              	.LASF526:
 17419 176d 70747262 		.ascii	"ptrbuff\000"
 17419      75666600 
 17420              	.LASF116:
 17421 1775 436C6561 		.ascii	"ClearTxBuffer\000"
 17421      72547842 
 17421      75666665 
 17421      7200
 17422              	.LASF18:
 17423 1783 646F7562 		.ascii	"double\000"
 17423      6C6500
 17424              	.LASF406:
 17425 178a 45455052 		.ascii	"EEPROM_DISPENSER_PUMP32_TRANSACTION_PAGE\000"
 17425      4F4D5F44 
 17425      49535045 
 17425      4E534552 
 17425      5F50554D 
 17426              	.LASF151:
 17427 17b3 44495350 		.ascii	"DISPLAY_PASSWORD_VALIDO\000"
 17427      4C41595F 
 17427      50415353 
 17427      574F5244 
 17427      5F56414C 
 17428              	.LASF567:
 17429 17cb 433A5C54 		.ascii	"C:\\TeamInsepet\\NSX-Prime\\Hardware\\CorEx-MUX-Ker"
 17429      65616D49 
 17429      6E736570 
 17429      65745C4E 
 17429      53582D50 
 17430 17fa 6E656C2D 		.ascii	"nel-Enhanced\\Workspace01\\CorEx-Mux-Kernel.cydsn\000"
 17430      456E6861 
 17430      6E636564 
 17430      5C576F72 
 17430      6B737061 
 17431              	.LASF143:
 17432 182a 44495350 		.ascii	"DISPLAY_SELECCIONE_PRODUCTO3\000"
 17432      4C41595F 
 17432      53454C45 
 17432      4343494F 
 17432      4E455F50 
 17433              	.LASF144:
 17434 1847 44495350 		.ascii	"DISPLAY_SELECCIONE_PRODUCTO4\000"
 17434      4C41595F 
 17434      53454C45 
 17434      4343494F 
 17434      4E455F50 
 17435              	.LASF208:
 17436 1864 50554D50 		.ascii	"PUMP_ALL_PUMPS_STOP\000"
 17436      5F414C4C 
 17436      5F50554D 
 17436      50535F53 
 17436      544F5000 
 17437              	.LASF152:
 17438 1878 44495350 		.ascii	"DISPLAY_PASSWORD_INVALIDO\000"
 17438      4C41595F 
 17438      50415353 
 17438      574F5244 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 374


 17438      5F494E56 
 17439              	.LASF286:
 17440 1892 5F72746D 		.ascii	"_rtmoneyamount\000"
 17440      6F6E6579 
 17440      616D6F75 
 17440      6E7400
 17441              	.LASF557:
 17442 18a1 49544D5F 		.ascii	"ITM_RxBuffer\000"
 17442      52784275 
 17442      66666572 
 17442      00
 17443              	.LASF38:
 17444 18ae 5F73656C 		.ascii	"_selfkill\000"
 17444      666B696C 
 17444      6C00
 17445              	.LASF17:
 17446 18b8 666C6F61 		.ascii	"float\000"
 17446      7400
 17447              	.LASF521:
 17448 18be 70747265 		.ascii	"ptreeprom\000"
 17448      6570726F 
 17448      6D00
 17449              	.LASF409:
 17450 18c8 45455052 		.ascii	"EEPROM_DISPENSER_PUMP41_TRANSACTION_PAGE\000"
 17450      4F4D5F44 
 17450      49535045 
 17450      4E534552 
 17450      5F50554D 
 17451              	.LASF245:
 17452 18f1 5F50554D 		.ascii	"_PUMP_OK_\000"
 17452      505F4F4B 
 17452      5F00
 17453              	.LASF397:
 17454 18fb 45455052 		.ascii	"EEPROM_DISPENSER_PUMP11_TRANSACTION_PAGE\000"
 17454      4F4D5F44 
 17454      49535045 
 17454      4E534552 
 17454      5F50554D 
 17455              	.LASF548:
 17456 1924 5465726D 		.ascii	"TerminateTransactionAndPrint\000"
 17456      696E6174 
 17456      65547261 
 17456      6E736163 
 17456      74696F6E 
 17457              	.LASF563:
 17458 1941 5F675F70 		.ascii	"_g_ptractprogramming\000"
 17458      74726163 
 17458      7470726F 
 17458      6772616D 
 17458      6D696E67 
 17459              	.LASF263:
 17460 1956 50756D70 		.ascii	"PumpDataContainer\000"
 17460      44617461 
 17460      436F6E74 
 17460      61696E65 
 17460      7200
 17461              	.LASF331:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 375


 17462 1968 5F64656C 		.ascii	"_delaymultiplier\000"
 17462      61796D75 
 17462      6C746970 
 17462      6C696572 
 17462      00
 17463              	.LASF564:
 17464 1979 5F675F73 		.ascii	"_g_sfcharmap\000"
 17464      66636861 
 17464      726D6170 
 17464      00
 17465              	.LASF267:
 17466 1986 5F707269 		.ascii	"_price\000"
 17466      636500
 17467              	.LASF10:
 17468 198d 756E7369 		.ascii	"unsigned int\000"
 17468      676E6564 
 17468      20696E74 
 17468      00
 17469              	.LASF111:
 17470 199a 52656164 		.ascii	"ReadTxStatus\000"
 17470      54785374 
 17470      61747573 
 17470      00
 17471              	.LASF512:
 17472 19a7 50756D70 		.ascii	"PumpDefault2CreditPpuChange\000"
 17472      44656661 
 17472      756C7432 
 17472      43726564 
 17472      69745070 
 17473              	.LASF319:
 17474 19c3 5F6F6E65 		.ascii	"_oneshotpostconditions\000"
 17474      73686F74 
 17474      706F7374 
 17474      636F6E64 
 17474      6974696F 
 17475              	.LASF157:
 17476 19da 44495350 		.ascii	"DISPLAY_ID_NO_RECONOCIDO\000"
 17476      4C41595F 
 17476      49445F4E 
 17476      4F5F5245 
 17476      434F4E4F 
 17477              	.LASF51:
 17478 19f3 5053494E 		.ascii	"PSINKMESSAGEPTR\000"
 17478      4B4D4553 
 17478      53414745 
 17478      50545200 
 17479              	.LASF528:
 17480 1a03 62756666 		.ascii	"buffersize\000"
 17480      65727369 
 17480      7A6500
 17481              	.LASF550:
 17482 1a0e 64656C69 		.ascii	"delimiterindex\000"
 17482      6D697465 
 17482      72696E64 
 17482      657800
 17483              	.LASF148:
 17484 1a1d 44495350 		.ascii	"DISPLAY_DIGITE_PLACA\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 376


 17484      4C41595F 
 17484      44494749 
 17484      54455F50 
 17484      4C414341 
 17485              	.LASF26:
 17486 1a32 42524F41 		.ascii	"BROADCAST\000"
 17486      44434153 
 17486      5400
 17487              	.LASF97:
 17488 1a3c 5F554152 		.ascii	"_UART_MANAGER_\000"
 17488      545F4D41 
 17488      4E414745 
 17488      525F00
 17489              	.LASF484:
 17490 1a4b 6E756D68 		.ascii	"numhoses\000"
 17490      6F736573 
 17490      00
 17491              	.LASF482:
 17492 1a54 50726F63 		.ascii	"ProcessPumpTotalsDataReport\000"
 17492      65737350 
 17492      756D7054 
 17492      6F74616C 
 17492      73446174 
 17493              	.LASF344:
 17494 1a70 5F717565 		.ascii	"_queueindex\000"
 17494      7565696E 
 17494      64657800 
 17495              	.LASF566:
 17496 1a7c 2E5C4164 		.ascii	".\\AdvantageImpl.c\000"
 17496      76616E74 
 17496      61676549 
 17496      6D706C2E 
 17496      6300
 17497              	.LASF523:
 17498 1a8e 6D73676C 		.ascii	"msglength\000"
 17498      656E6774 
 17498      6800
 17499              	.LASF568:
 17500 1a98 5F706F69 		.ascii	"_pointcommadecimalmode\000"
 17500      6E74636F 
 17500      6D6D6164 
 17500      6563696D 
 17500      616C6D6F 
 17501              	.LASF405:
 17502 1aaf 45455052 		.ascii	"EEPROM_DISPENSER_PUMP31_TRANSACTION_PAGE\000"
 17502      4F4D5F44 
 17502      49535045 
 17502      4E534552 
 17502      5F50554D 
 17503              	.LASF134:
 17504 1ad8 55415254 		.ascii	"UART_NULL\000"
 17504      5F4E554C 
 17504      4C00
 17505              	.LASF423:
 17506 1ae2 52465F4D 		.ascii	"RF_MUX_CASH_SALE_END_REPORT_REQUEST\000"
 17506      55585F43 
 17506      4153485F 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 377


 17506      53414C45 
 17506      5F454E44 
 17507              	.LASF516:
 17508 1b06 50756D70 		.ascii	"PumpCompleteConfiguration\000"
 17508      436F6D70 
 17508      6C657465 
 17508      436F6E66 
 17508      69677572 
 17509              	.LASF499:
 17510 1b20 50756D70 		.ascii	"PumpCreditPresetHose\000"
 17510      43726564 
 17510      69745072 
 17510      65736574 
 17510      486F7365 
 17511              	.LASF556:
 17512 1b35 70747273 		.ascii	"ptrstr\000"
 17512      747200
 17513              	.LASF342:
 17514 1b3c 5050554D 		.ascii	"PPUMPTRANSACTIONJOBCONTEXTPTR\000"
 17514      50545241 
 17514      4E534143 
 17514      54494F4E 
 17514      4A4F4243 
 17515              	.LASF398:
 17516 1b5a 45455052 		.ascii	"EEPROM_DISPENSER_PUMP12_TRANSACTION_PAGE\000"
 17516      4F4D5F44 
 17516      49535045 
 17516      4E534552 
 17516      5F50554D 
 17517              	.LASF522:
 17518 1b83 626C6B69 		.ascii	"blkindex\000"
 17518      6E646578 
 17518      00
 17519              	.LASF103:
 17520 1b8c 57726974 		.ascii	"WriteControlRegister\000"
 17520      65436F6E 
 17520      74726F6C 
 17520      52656769 
 17520      73746572 
 17521              	.LASF93:
 17522 1ba1 474C4F42 		.ascii	"GLOBAL_TICK_NOTIFICATION\000"
 17522      414C5F54 
 17522      49434B5F 
 17522      4E4F5449 
 17522      46494341 
 17523              	.LASF216:
 17524 1bba 50554D50 		.ascii	"PUMP_CALLING\000"
 17524      5F43414C 
 17524      4C494E47 
 17524      00
 17525              	.LASF27:
 17526 1bc7 46495253 		.ascii	"FIRSTFOUND\000"
 17526      54464F55 
 17526      4E4400
 17527              	.LASF459:
 17528 1bd2 52465F45 		.ascii	"RF_ERROR\000"
 17528      52524F52 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 378


 17528      00
 17529              	.LASF24:
 17530 1bdb 4C50564F 		.ascii	"LPVOID\000"
 17530      494400
 17531              	.LASF72:
 17532 1be2 44495350 		.ascii	"DISPENSER_PUMP_HANDLER\000"
 17532      454E5345 
 17532      525F5055 
 17532      4D505F48 
 17532      414E444C 
 17533              	.LASF335:
 17534 1bf9 5F726574 		.ascii	"_retriescounter\000"
 17534      72696573 
 17534      636F756E 
 17534      74657200 
 17535              	.LASF108:
 17536 1c09 47657452 		.ascii	"GetRxBufferSize\000"
 17536      78427566 
 17536      66657253 
 17536      697A6500 
 17537              	.LASF288:
 17538 1c19 5F747261 		.ascii	"_transhealth\000"
 17538      6E736865 
 17538      616C7468 
 17538      00
 17539              	.LASF455:
 17540 1c26 52465F43 		.ascii	"RF_CASHSALEREPORT\000"
 17540      41534853 
 17540      414C4552 
 17540      45504F52 
 17540      5400
 17541              	.LASF518:
 17542 1c38 72656D62 		.ascii	"remblocks\000"
 17542      6C6F636B 
 17542      7300
 17543              	.LASF401:
 17544 1c42 45455052 		.ascii	"EEPROM_DISPENSER_PUMP21_TRANSACTION_PAGE\000"
 17544      4F4D5F44 
 17544      49535045 
 17544      4E534552 
 17544      5F50554D 
 17545              	.LASF190:
 17546 1c6b 44495350 		.ascii	"DISPLAY_SIDE_DUMMY_DISPLAY\000"
 17546      4C41595F 
 17546      53494445 
 17546      5F44554D 
 17546      4D595F44 
 17547              	.LASF173:
 17548 1c86 44495350 		.ascii	"DISPLAY_CONFIGURAR_FECHA_HORA\000"
 17548      4C41595F 
 17548      434F4E46 
 17548      49475552 
 17548      41525F46 
 17549              	.LASF428:
 17550 1ca4 52465F4D 		.ascii	"RF_MUX_TOTALS_REPORT_RESPONSE\000"
 17550      55585F54 
 17550      4F54414C 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 379


 17550      535F5245 
 17550      504F5254 
 17551              	.LASF53:
 17552 1cc2 55415254 		.ascii	"UART_RF_RECEPTION\000"
 17552      5F52465F 
 17552      52454345 
 17552      5054494F 
 17552      4E00
 17553              	.LASF308:
 17554 1cd4 5F50554D 		.ascii	"_PUMP_TRANSACTION_JOB_\000"
 17554      505F5452 
 17554      414E5341 
 17554      4354494F 
 17554      4E5F4A4F 
 17555              	.LASF196:
 17556 1ceb 5F444543 		.ascii	"_DECIMAL_SEPARATOR_\000"
 17556      494D414C 
 17556      5F534550 
 17556      41524154 
 17556      4F525F00 
 17557              	.LASF264:
 17558 1cff 5F617574 		.ascii	"_authorized\000"
 17558      686F7269 
 17558      7A656400 
 17559              	.LASF23:
 17560 1d0b 6C6F6E67 		.ascii	"long double\000"
 17560      20646F75 
 17560      626C6500 
 17561              	.LASF348:
 17562 1d17 416C6C6F 		.ascii	"Allocate\000"
 17562      63617465 
 17562      00
 17563              	.LASF200:
 17564 1d20 50554D50 		.ascii	"PUMP_STATE_REQUEST\000"
 17564      5F535441 
 17564      54455F52 
 17564      45515545 
 17564      535400
 17565              	.LASF226:
 17566 1d33 5F50554D 		.ascii	"_PUMP_FILL_BY_VOLUME_\000"
 17566      505F4649 
 17566      4C4C5F42 
 17566      595F564F 
 17566      4C554D45 
 17567              	.LASF507:
 17568 1d49 50756D70 		.ascii	"PumpCreditPresetNotification\000"
 17568      43726564 
 17568      69745072 
 17568      65736574 
 17568      4E6F7469 
 17569              	.LASF248:
 17570 1d66 5F747261 		.ascii	"_transtate\000"
 17570      6E737461 
 17570      746500
 17571              	.LASF214:
 17572 1d71 50554D50 		.ascii	"PUMP_FAIL\000"
 17572      5F464149 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 380


 17572      4C00
 17573              	.LASF100:
 17574 1d7b 53746172 		.ascii	"Start\000"
 17574      7400
 17575              	.LASF122:
 17576 1d81 5F554152 		.ascii	"_UART_MESSAGE_\000"
 17576      545F4D45 
 17576      53534147 
 17576      455F00
 17577              	.LASF168:
 17578 1d90 44495350 		.ascii	"DISPLAY_OPERACION_CANCELADA\000"
 17578      4C41595F 
 17578      4F504552 
 17578      4143494F 
 17578      4E5F4341 
 17579              	.LASF163:
 17580 1dac 44495350 		.ascii	"DISPLAY_OPERACIONES\000"
 17580      4C41595F 
 17580      4F504552 
 17580      4143494F 
 17580      4E455300 
 17581              	.LASF220:
 17582 1dc0 50554D50 		.ascii	"PUMP_FEOT\000"
 17582      5F46454F 
 17582      5400
 17583              	.LASF318:
 17584 1dca 5F707265 		.ascii	"_preconditions\000"
 17584      636F6E64 
 17584      6974696F 
 17584      6E7300
 17585              	.LASF307:
 17586 1dd9 504E4541 		.ascii	"PNEAR_PUMPPTR\000"
 17586      525F5055 
 17586      4D505054 
 17586      5200
 17587              	.LASF127:
 17588 1de7 50554152 		.ascii	"PUARTMESSAGEPTR\000"
 17588      544D4553 
 17588      53414745 
 17588      50545200 
 17589              	.LASF357:
 17590 1df7 5F686F73 		.ascii	"_hosesposition1\000"
 17590      6573706F 
 17590      73697469 
 17590      6F6E3100 
 17591              	.LASF277:
 17592 1e07 5F686F73 		.ascii	"_hoseactivestate\000"
 17592      65616374 
 17592      69766573 
 17592      74617465 
 17592      00
 17593              	.LASF359:
 17594 1e18 5F686F73 		.ascii	"_hosesposition3\000"
 17594      6573706F 
 17594      73697469 
 17594      6F6E3300 
 17595              	.LASF360:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 381


 17596 1e28 5F686F73 		.ascii	"_hosesposition4\000"
 17596      6573706F 
 17596      73697469 
 17596      6F6E3400 
 17597              	.LASF153:
 17598 1e38 44495350 		.ascii	"DISPLAY_NUEVO_PASSWORD\000"
 17598      4C41595F 
 17598      4E554556 
 17598      4F5F5041 
 17598      5353574F 
 17599              	.LASF366:
 17600 1e4f 5F6D696E 		.ascii	"_minvolumevalue\000"
 17600      766F6C75 
 17600      6D657661 
 17600      6C756500 
 17601              	.LASF311:
 17602 1e5f 54696D65 		.ascii	"TimeoutCallback\000"
 17602      6F757443 
 17602      616C6C62 
 17602      61636B00 
 17603              	.LASF305:
 17604 1e6f 436C6561 		.ascii	"CleanUp\000"
 17604      6E557000 
 17605              	.LASF158:
 17606 1e77 44495350 		.ascii	"DISPLAY_ESPERANDO_ID\000"
 17606      4C41595F 
 17606      45535045 
 17606      52414E44 
 17606      4F5F4944 
 17607              	.LASF345:
 17608 1e8c 5F6A6F62 		.ascii	"_jobqueueheap\000"
 17608      71756575 
 17608      65686561 
 17608      7000
 17609              	.LASF390:
 17610 1e9a 45455052 		.ascii	"EEPROM_DISPENSER_PUMP2_PPU_INFO_PAGE\000"
 17610      4F4D5F44 
 17610      49535045 
 17610      4E534552 
 17610      5F50554D 
 17611              	.LASF306:
 17612 1ebf 50756D70 		.ascii	"Pump\000"
 17612      00
 17613              	.LASF236:
 17614 1ec4 5F50554D 		.ascii	"_PUMP_STOP_\000"
 17614      505F5354 
 17614      4F505F00 
 17615              	.LASF139:
 17616 1ed0 44495350 		.ascii	"DISPLAY_FORMA_PAGO_DESEADA\000"
 17616      4C41595F 
 17616      464F524D 
 17616      415F5041 
 17616      474F5F44 
 17617              	.LASF472:
 17618 1eeb 706A6F62 		.ascii	"pjob\000"
 17618      00
 17619              	.LASF9:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 382


 17620 1ef0 6C6F6E67 		.ascii	"long long unsigned int\000"
 17620      206C6F6E 
 17620      6720756E 
 17620      7369676E 
 17620      65642069 
 17621              	.LASF229:
 17622 1f07 5F50554D 		.ascii	"_PUMP_PPU_CHANGE_\000"
 17622      505F5050 
 17622      555F4348 
 17622      414E4745 
 17622      5F00
 17623              	.LASF114:
 17624 1f19 50757441 		.ascii	"PutArray\000"
 17624      72726179 
 17624      00
 17625              	.LASF289:
 17626 1f22 5F706375 		.ascii	"_pcurrtransaction\000"
 17626      72727472 
 17626      616E7361 
 17626      6374696F 
 17626      6E00
 17627              	.LASF436:
 17628 1f34 52465F4D 		.ascii	"RF_MUX_CASH_SALE_PRINT_RESPONSE\000"
 17628      55585F43 
 17628      4153485F 
 17628      53414C45 
 17628      5F505249 
 17629              	.LASF341:
 17630 1f54 50756D70 		.ascii	"PumpTransactionJobContext\000"
 17630      5472616E 
 17630      73616374 
 17630      696F6E4A 
 17630      6F62436F 
 17631              	.LASF355:
 17632 1f6e 5F637572 		.ascii	"_currentloopopen\000"
 17632      72656E74 
 17632      6C6F6F70 
 17632      6F70656E 
 17632      00
 17633              	.LASF219:
 17634 1f7f 50554D50 		.ascii	"PUMP_PEOT\000"
 17634      5F50454F 
 17634      5400
 17635              	.LASF56:
 17636 1f89 53494E4B 		.ascii	"SINK_UPDATE_COUNTERS\000"
 17636      5F555044 
 17636      4154455F 
 17636      434F554E 
 17636      54455253 
 17637              	.LASF102:
 17638 1f9e 52656164 		.ascii	"ReadControlRegister\000"
 17638      436F6E74 
 17638      726F6C52 
 17638      65676973 
 17638      74657200 
 17639              	.LASF447:
 17640 1fb2 52465F4D 		.ascii	"RF_MUX_ISLAND_ADMIN_REQUEST\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 383


 17640      55585F49 
 17640      534C414E 
 17640      445F4144 
 17640      4D494E5F 
 17641              	.LASF254:
 17642 1fce 5F766172 		.ascii	"_var3\000"
 17642      3300
 17643              	.LASF255:
 17644 1fd4 5F766172 		.ascii	"_var4\000"
 17644      3400
 17645              	.LASF314:
 17646 1fda 5F726570 		.ascii	"_repushtimeoutlimit\000"
 17646      75736874 
 17646      696D656F 
 17646      75746C69 
 17646      6D697400 
 17647              	.LASF506:
 17648 1fee 766F6C75 		.ascii	"volumeamount\000"
 17648      6D65616D 
 17648      6F756E74 
 17648      00
 17649              	.LASF65:
 17650 1ffb 44495350 		.ascii	"DISPENSER_LOAD_EEPROM_SETTINGS\000"
 17650      454E5345 
 17650      525F4C4F 
 17650      41445F45 
 17650      4550524F 
 17651              	.LASF268:
 17652 201a 5F707265 		.ascii	"_presetamount\000"
 17652      73657461 
 17652      6D6F756E 
 17652      7400
 17653              	.LASF98:
 17654 2028 5F696465 		.ascii	"_identifier\000"
 17654      6E746966 
 17654      69657200 
 17655              	.LASF439:
 17656 2034 52465F4D 		.ascii	"RF_MUX_LAST_CASH_SALE_REQUEST\000"
 17656      55585F4C 
 17656      4153545F 
 17656      43415348 
 17656      5F53414C 
 17657              	.LASF276:
 17658 2052 5F637572 		.ascii	"_currenthose\000"
 17658      72656E74 
 17658      686F7365 
 17658      00
 17659              	.LASF562:
 17660 205f 5F675F70 		.ascii	"_g_printerlayout\000"
 17660      72696E74 
 17660      65726C61 
 17660      796F7574 
 17660      00
 17661              	.LASF209:
 17662 2070 5F434F4E 		.ascii	"_CONTROL_WORDS_\000"
 17662      54524F4C 
 17662      5F574F52 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 384


 17662      44535F00 
 17663              	.LASF561:
 17664 2080 5F675F72 		.ascii	"_g_rfautorun\000"
 17664      66617574 
 17664      6F72756E 
 17664      00
 17665              	.LASF198:
 17666 208d 5F434F4D 		.ascii	"_COMMA_AS_DECIMAL_SEPARATOR_\000"
 17666      4D415F41 
 17666      535F4445 
 17666      43494D41 
 17666      4C5F5345 
 17667              	.LASF280:
 17668 20aa 5F707265 		.ascii	"_presetdone\000"
 17668      73657464 
 17668      6F6E6500 
 17669              	.LASF537:
 17670 20b6 41637175 		.ascii	"AcquirePumpTransactionDataResponseResolver\000"
 17670      69726550 
 17670      756D7054 
 17670      72616E73 
 17670      61637469 
 17671              	.LASF107:
 17672 20e1 47657442 		.ascii	"GetByte\000"
 17672      79746500 
 17673              	.LASF370:
 17674 20e9 44697370 		.ascii	"DispenserLayoutInfo\000"
 17674      656E7365 
 17674      724C6179 
 17674      6F757449 
 17674      6E666F00 
 17675              	.LASF513:
 17676 20fd 50756D70 		.ascii	"PumpCredit2DefaultPpuChange\000"
 17676      43726564 
 17676      69743244 
 17676      65666175 
 17676      6C745070 
 17677              	.LASF54:
 17678 2119 55415254 		.ascii	"UART_RF_TEST\000"
 17678      5F52465F 
 17678      54455354 
 17678      00
 17679              	.LASF416:
 17680 2126 52465F4D 		.ascii	"RF_MUX_CREDIT_SERIAL_AUTH_RESPONSE\000"
 17680      55585F43 
 17680      52454449 
 17680      545F5345 
 17680      5249414C 
 17681              	.LASF412:
 17682 2149 45455052 		.ascii	"EEPROM_DISPENSER_PUMP44_TRANSACTION_PAGE\000"
 17682      4F4D5F44 
 17682      49535045 
 17682      4E534552 
 17682      5F50554D 
 17683              	.LASF246:
 17684 2172 5F50554D 		.ascii	"_PUMP_FAIL_\000"
 17684      505F4641 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 385


 17684      494C5F00 
 17685              	.LASF278:
 17686 217e 5F616371 		.ascii	"_acquiringstate\000"
 17686      75697269 
 17686      6E677374 
 17686      61746500 
 17687              	.LASF146:
 17688 218e 44495350 		.ascii	"DISPLAY_DESPACHANDO\000"
 17688      4C41595F 
 17688      44455350 
 17688      41434841 
 17688      4E444F00 
 17689              	.LASF222:
 17690 21a2 50554D50 		.ascii	"PUMP_SEND_DATA\000"
 17690      5F53454E 
 17690      445F4441 
 17690      544100
 17691              	.LASF251:
 17692 21b1 5F766172 		.ascii	"_var0\000"
 17692      3000
 17693              	.LASF252:
 17694 21b7 5F766172 		.ascii	"_var1\000"
 17694      3100
 17695              	.LASF253:
 17696 21bd 5F766172 		.ascii	"_var2\000"
 17696      3200
 17697              	.LASF174:
 17698 21c3 44495350 		.ascii	"DISPLAY_HORA\000"
 17698      4C41595F 
 17698      484F5241 
 17698      00
 17699              	.LASF78:
 17700 21d0 5052494E 		.ascii	"PRINTER1_GENERIC_JOB\000"
 17700      54455231 
 17700      5F47454E 
 17700      45524943 
 17700      5F4A4F42 
 17701              	.LASF256:
 17702 21e5 5F766172 		.ascii	"_var5\000"
 17702      3500
 17703              	.LASF257:
 17704 21eb 5F766172 		.ascii	"_var6\000"
 17704      3600
 17705              	.LASF258:
 17706 21f1 5F766172 		.ascii	"_var7\000"
 17706      3700
 17707              	.LASF259:
 17708 21f7 5F766172 		.ascii	"_var8\000"
 17708      3800
 17709              	.LASF260:
 17710 21fd 5F766172 		.ascii	"_var9\000"
 17710      3900
 17711              	.LASF429:
 17712 2203 52465F4D 		.ascii	"RF_MUX_PRICE_CHANGE_REQUEST\000"
 17712      55585F50 
 17712      52494345 
 17712      5F434841 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 386


 17712      4E47455F 
 17713              	.LASF230:
 17714 221f 5F50554D 		.ascii	"_PUMP_RESTORE_PRICE_\000"
 17714      505F5245 
 17714      53544F52 
 17714      455F5052 
 17714      4943455F 
 17715              	.LASF261:
 17716 2234 5F766172 		.ascii	"_varA\000"
 17716      4100
 17717              	.LASF262:
 17718 223a 5F766172 		.ascii	"_varB\000"
 17718      4200
 17719              	.LASF460:
 17720 2240 52465F43 		.ascii	"RF_COPY_RECEIPT\000"
 17720      4F50595F 
 17720      52454345 
 17720      49505400 
 17721              	.LASF161:
 17722 2250 44495350 		.ascii	"DISPLAY_INTRODUZCA_VOLUMEN\000"
 17722      4C41595F 
 17722      494E5452 
 17722      4F44555A 
 17722      43415F56 
 17723              	.LASF28:
 17724 226b 414C4C49 		.ascii	"ALLINTERESTED\000"
 17724      4E544552 
 17724      45535445 
 17724      4400
 17725              	.LASF179:
 17726 2279 44495350 		.ascii	"DISPLAY_CANCELADO_X_PC\000"
 17726      4C41595F 
 17726      43414E43 
 17726      454C4144 
 17726      4F5F585F 
 17727              	.LASF274:
 17728 2290 5F70756D 		.ascii	"_pumpindex\000"
 17728      70696E64 
 17728      657800
 17729              	.LASF309:
 17730 229b 52657175 		.ascii	"Request\000"
 17730      65737400 
 17731              	.LASF478:
 17732 22a3 50726F63 		.ascii	"ProcessPumpTransactionData\000"
 17732      65737350 
 17732      756D7054 
 17732      72616E73 
 17732      61637469 
 17733              	.LASF281:
 17734 22be 5F70756D 		.ascii	"_pumplocked\000"
 17734      706C6F63 
 17734      6B656400 
 17735              	.LASF39:
 17736 22ca 5F6D6573 		.ascii	"_messageid\000"
 17736      73616765 
 17736      696400
 17737              	.LASF225:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 387


 17738 22d5 5F50554D 		.ascii	"_PUMP_FILL_BY_MONEY_\000"
 17738      505F4649 
 17738      4C4C5F42 
 17738      595F4D4F 
 17738      4E45595F 
 17739              	.LASF120:
 17740 22ea 414C4C4F 		.ascii	"ALLOCATED\000"
 17740      43415445 
 17740      4400
 17741              	.LASF13:
 17742 22f4 75696E74 		.ascii	"uint8\000"
 17742      3800
 17743              	.LASF112:
 17744 22fa 50757443 		.ascii	"PutChar\000"
 17744      68617200 
 17745              	.LASF87:
 17746 2302 44495350 		.ascii	"DISPLAY2_RECEPTION\000"
 17746      4C415932 
 17746      5F524543 
 17746      45505449 
 17746      4F4E00
 17747              	.LASF476:
 17748 2315 70706172 		.ascii	"pparam\000"
 17748      616D00
 17749              	.LASF456:
 17750 231c 52465F43 		.ascii	"RF_CREDITSALEAUTH\000"
 17750      52454449 
 17750      5453414C 
 17750      45415554 
 17750      4800
 17751              	.LASF203:
 17752 232e 50554D50 		.ascii	"PUMP_PUMP_STOP\000"
 17752      5F50554D 
 17752      505F5354 
 17752      4F5000
 17753              	.LASF2:
 17754 233d 73686F72 		.ascii	"short int\000"
 17754      7420696E 
 17754      7400
 17755              	.LASF185:
 17756 2347 44495350 		.ascii	"DISPLAY_PRECIO_POR_UNIDAD\000"
 17756      4C41595F 
 17756      50524543 
 17756      494F5F50 
 17756      4F525F55 
 17757              	.LASF295:
 17758 2361 50756D70 		.ascii	"PumpTransQueueLock\000"
 17758      5472616E 
 17758      73517565 
 17758      75654C6F 
 17758      636B00
 17759              	.LASF191:
 17760 2374 44495350 		.ascii	"DISPLAY_NULL\000"
 17760      4C41595F 
 17760      4E554C4C 
 17760      00
 17761              	.LASF300:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 388


 17762 2381 50756D70 		.ascii	"PumpTransQueueAllocate\000"
 17762      5472616E 
 17762      73517565 
 17762      7565416C 
 17762      6C6F6361 
 17763              	.LASF70:
 17764 2398 44495350 		.ascii	"DISPENSER_CONFIGURE_SINGLE_PRICE\000"
 17764      454E5345 
 17764      525F434F 
 17764      4E464947 
 17764      5552455F 
 17765              	.LASF443:
 17766 23b9 52465F4D 		.ascii	"RF_MUX_POSITION_CFG_REQUEST\000"
 17766      55585F50 
 17766      4F534954 
 17766      494F4E5F 
 17766      4346475F 
 17767              	.LASF83:
 17768 23d5 44495350 		.ascii	"DISPLAY1_RECEPTION\000"
 17768      4C415931 
 17768      5F524543 
 17768      45505449 
 17768      4F4E00
 17769              	.LASF298:
 17770 23e8 50756D70 		.ascii	"PumpTransQueueEnqueue\000"
 17770      5472616E 
 17770      73517565 
 17770      7565456E 
 17770      71756575 
 17771              	.LASF471:
 17772 23fe 5072696E 		.ascii	"PrinterLayout\000"
 17772      7465724C 
 17772      61796F75 
 17772      7400
 17773              	.LASF351:
 17774 240c 44657175 		.ascii	"Dequeue\000"
 17774      65756500 
 17775              	.LASF66:
 17776 2414 44495350 		.ascii	"DISPENSER_ENUMERATE_VISIBLE_PUMPS\000"
 17776      454E5345 
 17776      525F454E 
 17776      554D4552 
 17776      4154455F 
 17777              	.LASF104:
 17778 2436 52656164 		.ascii	"ReadRxData\000"
 17778      52784461 
 17778      746100
 17779              	.LASF554:
 17780 2441 5472616E 		.ascii	"TranslateSpecialFuncionDigit\000"
 17780      736C6174 
 17780      65537065 
 17780      6369616C 
 17780      46756E63 
 17781              	.LASF45:
 17782 245e 5F6D6573 		.ascii	"_messagetimeoutlimit\000"
 17782      73616765 
 17782      74696D65 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 389


 17782      6F75746C 
 17782      696D6974 
 17783              	.LASF128:
 17784 2473 5F554152 		.ascii	"_UART_MANAGERS_AVAILABLE_\000"
 17784      545F4D41 
 17784      4E414745 
 17784      52535F41 
 17784      5641494C 
 17785              	.LASF565:
 17786 248d 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 17786      4320342E 
 17786      392E3320 
 17786      32303135 
 17786      30333033 
 17787 24c0 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 17787      20726576 
 17787      6973696F 
 17787      6E203232 
 17787      31323230 
 17788 24f3 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 17788      66756E63 
 17788      74696F6E 
 17788      2D736563 
 17788      74696F6E 
 17789              	.LASF495:
 17790 251b 50756D70 		.ascii	"PumpRTMoneyRequest\000"
 17790      52544D6F 
 17790      6E657952 
 17790      65717565 
 17790      737400
 17791              	.LASF491:
 17792 252e 696E6465 		.ascii	"index\000"
 17792      7800
 17793              	.LASF160:
 17794 2534 44495350 		.ascii	"DISPLAY_INTRODUZCA_CEDULA\000"
 17794      4C41595F 
 17794      494E5452 
 17794      4F44555A 
 17794      43415F43 
 17795              	.LASF332:
 17796 254e 5F726570 		.ascii	"_repushretriescounter\000"
 17796      75736872 
 17796      65747269 
 17796      6573636F 
 17796      756E7465 
 17797              	.LASF540:
 17798 2564 706D7367 		.ascii	"pmsg\000"
 17798      00
 17799              	.LASF40:
 17800 2569 5F6D6573 		.ascii	"_messagetype\000"
 17800      73616765 
 17800      74797065 
 17800      00
 17801              	.LASF496:
 17802 2576 50756D70 		.ascii	"PumpTransactionDataRequest\000"
 17802      5472616E 
 17802      73616374 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 390


 17802      696F6E44 
 17802      61746152 
 17803              	.LASF30:
 17804 2591 46495253 		.ascii	"FIRSTFOUNDFOREVER\000"
 17804      54464F55 
 17804      4E44464F 
 17804      52455645 
 17804      5200
 17805              	.LASF508:
 17806 25a3 50756D70 		.ascii	"PumpFullPresetHose\000"
 17806      46756C6C 
 17806      50726573 
 17806      6574486F 
 17806      736500
 17807              	.LASF485:
 17808 25b6 7472616E 		.ascii	"transtatefound\000"
 17808      73746174 
 17808      65666F75 
 17808      6E6400
 17809              	.LASF215:
 17810 25c5 50554D50 		.ascii	"PUMP_IDLE\000"
 17810      5F49444C 
 17810      4500
 17811              	.LASF391:
 17812 25cf 45455052 		.ascii	"EEPROM_DISPENSER_PUMP3_PPU_INFO_PAGE\000"
 17812      4F4D5F44 
 17812      49535045 
 17812      4E534552 
 17812      5F50554D 
 17813              	.LASF442:
 17814 25f4 52465F4D 		.ascii	"RF_MUX_BROADCAST_CFG_RESPONSE\000"
 17814      55585F42 
 17814      524F4144 
 17814      43415354 
 17814      5F434647 
 17815              	.LASF204:
 17816 2612 50554D50 		.ascii	"PUMP_TRANSACTION_DATA_REQUEST\000"
 17816      5F545241 
 17816      4E534143 
 17816      54494F4E 
 17816      5F444154 
 17817              	.LASF479:
 17818 2630 7374726D 		.ascii	"strmlrc\000"
 17818      6C726300 
 17819              	.LASF553:
 17820 2638 43617374 		.ascii	"CastMoneyValue\000"
 17820      4D6F6E65 
 17820      7956616C 
 17820      756500
 17821              	.LASF210:
 17822 2647 5055446E 		.ascii	"PUDn\000"
 17822      00
 17823              	.LASF302:
 17824 264c 50756D70 		.ascii	"PumpValidState\000"
 17824      56616C69 
 17824      64537461 
 17824      746500
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 391


 17825              	.LASF304:
 17826 265b 5F617574 		.ascii	"_authorizationinfo\000"
 17826      686F7269 
 17826      7A617469 
 17826      6F6E696E 
 17826      666F00
 17827              	.LASF237:
 17828 266e 5F50554D 		.ascii	"_PUMP_STOPALL_\000"
 17828      505F5354 
 17828      4F50414C 
 17828      4C5F00
 17829              	.LASF500:
 17830 267d 7472616E 		.ascii	"transtype\000"
 17830      73747970 
 17830      6500
 17831              	.LASF176:
 17832 2687 44495350 		.ascii	"DISPLAY_OPCION_TURNO\000"
 17832      4C41595F 
 17832      4F504349 
 17832      4F4E5F54 
 17832      55524E4F 
 17833              	.LASF333:
 17834 269c 5F726570 		.ascii	"_repushtimeoutseed\000"
 17834      75736874 
 17834      696D656F 
 17834      75747365 
 17834      656400
 17835              	.LASF266:
 17836 26af 5F686F73 		.ascii	"_hoseid\000"
 17836      65696400 
 17837              	.LASF555:
 17838 26b7 72656676 		.ascii	"refval\000"
 17838      616C00
 17839              	.LASF418:
 17840 26be 52465F4D 		.ascii	"RF_MUX_CREDIT_PRESET_AUTHORIZATION_RESPONSE\000"
 17840      55585F43 
 17840      52454449 
 17840      545F5052 
 17840      45534554 
 17841              	.LASF41:
 17842 26ea 5F6D6573 		.ascii	"_messagestate\000"
 17842      73616765 
 17842      73746174 
 17842      6500
 17843              	.LASF316:
 17844 26f8 5F726574 		.ascii	"_retryinsteadofrepush\000"
 17844      7279696E 
 17844      73746561 
 17844      646F6672 
 17844      65707573 
 17845              	.LASF227:
 17846 270e 5F50554D 		.ascii	"_PUMP_FILL_FULL_\000"
 17846      505F4649 
 17846      4C4C5F46 
 17846      554C4C5F 
 17846      00
 17847              	.LASF90:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 392


 17848 271f 44495350 		.ascii	"DISPLAY2_ANIMATE_HOME\000"
 17848      4C415932 
 17848      5F414E49 
 17848      4D415445 
 17848      5F484F4D 
 17849              	.LASF195:
 17850 2735 4C505241 		.ascii	"LPRAWPTR\000"
 17850      57505452 
 17850      00
 17851              	.LASF233:
 17852 273e 5F50554D 		.ascii	"_PUMP_EOT_\000"
 17852      505F454F 
 17852      545F00
 17853              	.LASF82:
 17854 2749 44495350 		.ascii	"DISPLAY_UPDATE_PUMP_STATE\000"
 17854      4C41595F 
 17854      55504441 
 17854      54455F50 
 17854      554D505F 
 17855              	.LASF33:
 17856 2763 5F4D4553 		.ascii	"_MESSAGE_TYPE_\000"
 17856      53414745 
 17856      5F545950 
 17856      455F00
 17857              	.LASF69:
 17858 2772 44495350 		.ascii	"DISPENSER_RESTORE_PRICES\000"
 17858      454E5345 
 17858      525F5245 
 17858      53544F52 
 17858      455F5052 
 17859              	.LASF202:
 17860 278b 50554D50 		.ascii	"PUMP_DATA_TO_PUMP\000"
 17860      5F444154 
 17860      415F544F 
 17860      5F50554D 
 17860      5000
 17861              	.LASF422:
 17862 279d 52465F4D 		.ascii	"RF_MUX_CASH_SALE_START_RESPONSE\000"
 17862      55585F43 
 17862      4153485F 
 17862      53414C45 
 17862      5F535441 
 17863              	.LASF313:
 17864 27bd 5F726573 		.ascii	"_responsetimeoutlimit\000"
 17864      706F6E73 
 17864      6574696D 
 17864      656F7574 
 17864      6C696D69 
 17865              	.LASF536:
 17866 27d3 41637175 		.ascii	"AcquirePumpTotalsResponseResolver\000"
 17866      69726550 
 17866      756D7054 
 17866      6F74616C 
 17866      73526573 
 17867              	.LASF285:
 17868 27f5 5F707269 		.ascii	"_print\000"
 17868      6E7400
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 393


 17869              	.LASF241:
 17870 27fc 5F50554D 		.ascii	"_PUMP_BUSY_\000"
 17870      505F4255 
 17870      53595F00 
 17871              	.LASF383:
 17872 2808 45455052 		.ascii	"EEPROM_DISPENSER_PUMP3_LAYOUT_PAGE\000"
 17872      4F4D5F44 
 17872      49535045 
 17872      4E534552 
 17872      5F50554D 
 17873              	.LASF430:
 17874 282b 52465F4D 		.ascii	"RF_MUX_PRICE_CHANGE_RESPONSE\000"
 17874      55585F50 
 17874      52494345 
 17874      5F434841 
 17874      4E47455F 
 17875              	.LASF3:
 17876 2848 73686F72 		.ascii	"short unsigned int\000"
 17876      7420756E 
 17876      7369676E 
 17876      65642069 
 17876      6E7400
 17877              	.LASF519:
 17878 285b 74617267 		.ascii	"targetmemoryareafound\000"
 17878      65746D65 
 17878      6D6F7279 
 17878      61726561 
 17878      666F756E 
 17879              	.LASF297:
 17880 2871 50756D70 		.ascii	"PumpTransQueueFind\000"
 17880      5472616E 
 17880      73517565 
 17880      75654669 
 17880      6E6400
 17881              	.LASF125:
 17882 2884 4572726F 		.ascii	"ErrorHandler\000"
 17882      7248616E 
 17882      646C6572 
 17882      00
 17883              	.LASF467:
 17884 2891 5F74696D 		.ascii	"_timeouttoreceivemultiplier\000"
 17884      656F7574 
 17884      746F7265 
 17884      63656976 
 17884      656D756C 
 17885              	.LASF77:
 17886 28ad 5052494E 		.ascii	"PRINTER22_JOB\000"
 17886      54455232 
 17886      325F4A4F 
 17886      4200
 17887              	.LASF441:
 17888 28bb 52465F4D 		.ascii	"RF_MUX_BROADCAST_CFG_REQUEST\000"
 17888      55585F42 
 17888      524F4144 
 17888      43415354 
 17888      5F434647 
 17889              	.LASF487:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 394


 17890 28d8 50756D70 		.ascii	"PumpJobTimeout\000"
 17890      4A6F6254 
 17890      696D656F 
 17890      757400
 17891              	.LASF213:
 17892 28e7 5F50554D 		.ascii	"_PUMP_STATES_\000"
 17892      505F5354 
 17892      41544553 
 17892      5F00
 17893              	.LASF5:
 17894 28f5 5F5F696E 		.ascii	"__int32_t\000"
 17894      7433325F 
 17894      7400
 17895              	.LASF450:
 17896 28ff 52465F4D 		.ascii	"RF_MUX_COPY_REQUEST_RESPONSE\000"
 17896      55585F43 
 17896      4F50595F 
 17896      52455155 
 17896      4553545F 
 17897              	.LASF520:
 17898 291c 65657072 		.ascii	"eeprompumpconfigmemorypageid\000"
 17898      6F6D7075 
 17898      6D70636F 
 17898      6E666967 
 17898      6D656D6F 
 17899              	.LASF431:
 17900 2939 52465F4D 		.ascii	"RF_MUX_GENERAL_PRINT_REQUEST\000"
 17900      55585F47 
 17900      454E4552 
 17900      414C5F50 
 17900      52494E54 
 17901              	.LASF387:
 17902 2956 45455052 		.ascii	"EEPROM_DISPENSER_PUMP3_PRODUCT_NAMES_PAGE\000"
 17902      4F4D5F44 
 17902      49535045 
 17902      4E534552 
 17902      5F50554D 
 17903              	.LASF249:
 17904 2980 50756D70 		.ascii	"PumpTransactionalState\000"
 17904      5472616E 
 17904      73616374 
 17904      696F6E61 
 17904      6C537461 
 17905              	.LASF303:
 17906 2997 5F646174 		.ascii	"_datacontainer\000"
 17906      61636F6E 
 17906      7461696E 
 17906      657200
 17907              	.LASF329:
 17908 29a6 5F726565 		.ascii	"_reenqueuecounter\000"
 17908      6E717565 
 17908      7565636F 
 17908      756E7465 
 17908      7200
 17909              	.LASF221:
 17910 29b8 50554D50 		.ascii	"PUMP_STOPPED\000"
 17910      5F53544F 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 395


 17910      50504544 
 17910      00
 17911              	.LASF34:
 17912 29c5 5F4D4553 		.ascii	"_MESSAGE_STATE_\000"
 17912      53414745 
 17912      5F535441 
 17912      54455F00 
 17913              	.LASF35:
 17914 29d5 53494E4B 		.ascii	"SINK_FREE\000"
 17914      5F465245 
 17914      4500
 17915              	.LASF25:
 17916 29df 4E4F4E45 		.ascii	"NONE\000"
 17916      00
 17917              	.LASF488:
 17918 29e4 50756D70 		.ascii	"PumpStateJobTimeout\000"
 17918      53746174 
 17918      654A6F62 
 17918      54696D65 
 17918      6F757400 
 17919              	.LASF92:
 17920 29f8 49425554 		.ascii	"IBUTTON2_SCAN\000"
 17920      544F4E32 
 17920      5F534341 
 17920      4E00
 17921              	.LASF438:
 17922 2a06 52465F4D 		.ascii	"RF_MUX_PENDING_CREDIT_SALE_RESPONSE\000"
 17922      55585F50 
 17922      454E4449 
 17922      4E475F43 
 17922      52454449 
 17923              	.LASF539:
 17924 2a2a 41647661 		.ascii	"AdvantageActivateProgramming\000"
 17924      6E746167 
 17924      65416374 
 17924      69766174 
 17924      6550726F 
 17925              	.LASF367:
 17926 2a47 5F646973 		.ascii	"_displaydigitsmode\000"
 17926      706C6179 
 17926      64696769 
 17926      74736D6F 
 17926      646500
 17927              	.LASF14:
 17928 2a5a 75696E74 		.ascii	"uint16\000"
 17928      313600
 17929              	.LASF445:
 17930 2a61 52465F4D 		.ascii	"RF_MUX_ISLAND_OPER_DATA_REQUEST\000"
 17930      55585F49 
 17930      534C414E 
 17930      445F4F50 
 17930      45525F44 
 17931              	.LASF296:
 17932 2a81 50756D70 		.ascii	"PumpTransQueueUnlock\000"
 17932      5472616E 
 17932      73517565 
 17932      7565556E 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccgMWkro.s 			page 396


 17932      6C6F636B 
 17933              	.LASF126:
 17934 2a96 5F707561 		.ascii	"_puartmanager\000"
 17934      72746D61 
 17934      6E616765 
 17934      7200
 17935              	.LASF432:
 17936 2aa4 52465F4D 		.ascii	"RF_MUX_GENERAL_PRINT_RESPONSE\000"
 17936      55585F47 
 17936      454E4552 
 17936      414C5F50 
 17936      52494E54 
 17937              	.LASF468:
 17938 2ac2 52464175 		.ascii	"RFAutoRun\000"
 17938      746F5275 
 17938      6E00
 17939              	.LASF81:
 17940 2acc 5052494E 		.ascii	"PRINTER2_GENERIC_JOB_LOGO\000"
 17940      54455232 
 17940      5F47454E 
 17940      45524943 
 17940      5F4A4F42 
 17941              	.LASF47:
 17942 2ae6 5F627566 		.ascii	"_buffersize\000"
 17942      66657273 
 17942      697A6500 
 17943              	.LASF402:
 17944 2af2 45455052 		.ascii	"EEPROM_DISPENSER_PUMP22_TRANSACTION_PAGE\000"
 17944      4F4D5F44 
 17944      49535045 
 17944      4E534552 
 17944      5F50554D 
 17945              	.LASF172:
 17946 2b1b 44495350 		.ascii	"DISPLAY_AUTORIZACION_RECHAZADA\000"
 17946      4C41595F 
 17946      4155544F 
 17946      52495A41 
 17946      43494F4E 
 17947              	.LASF469:
 17948 2b3a 5F707269 		.ascii	"_printerportside1\000"
 17948      6E746572 
 17948      706F7274 
 17948      73696465 
 17948      3100
 17949              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
