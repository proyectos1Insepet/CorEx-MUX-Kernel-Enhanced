ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfkYfRg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Dispenser_INT.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.Dispenser_RXISR,"ax",%progbits
  19              		.align	2
  20              		.global	Dispenser_RXISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	Dispenser_RXISR, %function
  24              	Dispenser_RXISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\Dispenser_INT.c"
   1:.\Generated_Source\PSoC5/Dispenser_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Dispenser_INT.c **** * File Name: DispenserINT.c
   3:.\Generated_Source\PSoC5/Dispenser_INT.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/Dispenser_INT.c **** *
   5:.\Generated_Source\PSoC5/Dispenser_INT.c **** * Description:
   6:.\Generated_Source\PSoC5/Dispenser_INT.c **** *  This file provides all Interrupt Service functionality of the UART component
   7:.\Generated_Source\PSoC5/Dispenser_INT.c **** *
   8:.\Generated_Source\PSoC5/Dispenser_INT.c **** ********************************************************************************
   9:.\Generated_Source\PSoC5/Dispenser_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:.\Generated_Source\PSoC5/Dispenser_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  11:.\Generated_Source\PSoC5/Dispenser_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  12:.\Generated_Source\PSoC5/Dispenser_INT.c **** * the software package with which this file was provided.
  13:.\Generated_Source\PSoC5/Dispenser_INT.c **** *******************************************************************************/
  14:.\Generated_Source\PSoC5/Dispenser_INT.c **** 
  15:.\Generated_Source\PSoC5/Dispenser_INT.c **** #include "Dispenser.h"
  16:.\Generated_Source\PSoC5/Dispenser_INT.c **** #include "cyapicallbacks.h"
  17:.\Generated_Source\PSoC5/Dispenser_INT.c **** 
  18:.\Generated_Source\PSoC5/Dispenser_INT.c **** 
  19:.\Generated_Source\PSoC5/Dispenser_INT.c **** /***************************************
  20:.\Generated_Source\PSoC5/Dispenser_INT.c **** * Custom Declarations
  21:.\Generated_Source\PSoC5/Dispenser_INT.c **** ***************************************/
  22:.\Generated_Source\PSoC5/Dispenser_INT.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  23:.\Generated_Source\PSoC5/Dispenser_INT.c **** 
  24:.\Generated_Source\PSoC5/Dispenser_INT.c **** #include "UARTManager.h"
  25:.\Generated_Source\PSoC5/Dispenser_INT.c **** 
  26:.\Generated_Source\PSoC5/Dispenser_INT.c **** /* `#END` */
  27:.\Generated_Source\PSoC5/Dispenser_INT.c **** 
  28:.\Generated_Source\PSoC5/Dispenser_INT.c **** #if (Dispenser_RX_INTERRUPT_ENABLED && (Dispenser_RX_ENABLED || Dispenser_HD_ENABLED))
  29:.\Generated_Source\PSoC5/Dispenser_INT.c ****     /*******************************************************************************
  30:.\Generated_Source\PSoC5/Dispenser_INT.c ****     * Function Name: Dispenser_RXISR
  31:.\Generated_Source\PSoC5/Dispenser_INT.c ****     ********************************************************************************
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfkYfRg.s 			page 2


  32:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *
  33:.\Generated_Source\PSoC5/Dispenser_INT.c ****     * Summary:
  34:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *  Interrupt Service Routine for RX portion of the UART
  35:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *
  36:.\Generated_Source\PSoC5/Dispenser_INT.c ****     * Parameters:
  37:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *  None.
  38:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *
  39:.\Generated_Source\PSoC5/Dispenser_INT.c ****     * Return:
  40:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *  None.
  41:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *
  42:.\Generated_Source\PSoC5/Dispenser_INT.c ****     * Global Variables:
  43:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *  Dispenser_rxBuffer - RAM buffer pointer for save received data.
  44:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *  Dispenser_rxBufferWrite - cyclic index for write to rxBuffer,
  45:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *     increments after each byte saved to buffer.
  46:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *  Dispenser_rxBufferRead - cyclic index for read from rxBuffer,
  47:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *     checked to detect overflow condition.
  48:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *  Dispenser_rxBufferOverflow - software overflow flag. Set to one
  49:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *     when Dispenser_rxBufferWrite index overtakes
  50:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *     Dispenser_rxBufferRead index.
  51:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *  Dispenser_rxBufferLoopDetect - additional variable to detect overflow.
  52:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *     Set to one when Dispenser_rxBufferWrite is equal to
  53:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *    Dispenser_rxBufferRead
  54:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *  Dispenser_rxAddressMode - this variable contains the Address mode,
  55:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *     selected in customizer or set by UART_SetRxAddressMode() API.
  56:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *  Dispenser_rxAddressDetected - set to 1 when correct address received,
  57:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *     and analysed to store following addressed data bytes to the buffer.
  58:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *     When not correct address received, set to 0 to skip following data bytes.
  59:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *
  60:.\Generated_Source\PSoC5/Dispenser_INT.c ****     *******************************************************************************/
  61:.\Generated_Source\PSoC5/Dispenser_INT.c ****     CY_ISR(Dispenser_RXISR)
  62:.\Generated_Source\PSoC5/Dispenser_INT.c ****     {
  27              		.loc 1 62 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  63:.\Generated_Source\PSoC5/Dispenser_INT.c ****         uint8 readData;
  64:.\Generated_Source\PSoC5/Dispenser_INT.c ****         uint8 readStatus;
  65:.\Generated_Source\PSoC5/Dispenser_INT.c ****         uint8 increment_pointer = 0u;
  39              		.loc 1 65 0
  40 0006 0023     		movs	r3, #0
  41 0008 FB71     		strb	r3, [r7, #7]
  42              	.L6:
  66:.\Generated_Source\PSoC5/Dispenser_INT.c **** 
  67:.\Generated_Source\PSoC5/Dispenser_INT.c ****     #if(CY_PSOC3)
  68:.\Generated_Source\PSoC5/Dispenser_INT.c ****         uint8 int_en;
  69:.\Generated_Source\PSoC5/Dispenser_INT.c ****     #endif /* (CY_PSOC3) */
  70:.\Generated_Source\PSoC5/Dispenser_INT.c **** 
  71:.\Generated_Source\PSoC5/Dispenser_INT.c ****     #ifdef Dispenser_RXISR_ENTRY_CALLBACK
  72:.\Generated_Source\PSoC5/Dispenser_INT.c ****         Dispenser_RXISR_EntryCallback();
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfkYfRg.s 			page 3


  73:.\Generated_Source\PSoC5/Dispenser_INT.c ****     #endif /* Dispenser_RXISR_ENTRY_CALLBACK */
  74:.\Generated_Source\PSoC5/Dispenser_INT.c **** 
  75:.\Generated_Source\PSoC5/Dispenser_INT.c ****         /* User code required at start of ISR */
  76:.\Generated_Source\PSoC5/Dispenser_INT.c ****         /* `#START Dispenser_RXISR_START` */
  77:.\Generated_Source\PSoC5/Dispenser_INT.c **** 
  78:.\Generated_Source\PSoC5/Dispenser_INT.c ****         /* `#END` */
  79:.\Generated_Source\PSoC5/Dispenser_INT.c **** 
  80:.\Generated_Source\PSoC5/Dispenser_INT.c ****     #if(CY_PSOC3)   /* Make sure nested interrupt is enabled */
  81:.\Generated_Source\PSoC5/Dispenser_INT.c ****         int_en = EA;
  82:.\Generated_Source\PSoC5/Dispenser_INT.c ****         CyGlobalIntEnable;
  83:.\Generated_Source\PSoC5/Dispenser_INT.c ****     #endif /* (CY_PSOC3) */
  84:.\Generated_Source\PSoC5/Dispenser_INT.c **** 
  85:.\Generated_Source\PSoC5/Dispenser_INT.c ****         do
  86:.\Generated_Source\PSoC5/Dispenser_INT.c ****         {
  87:.\Generated_Source\PSoC5/Dispenser_INT.c ****             /* Read receiver status register */
  88:.\Generated_Source\PSoC5/Dispenser_INT.c ****             readStatus = Dispenser_RXSTATUS_REG;
  43              		.loc 1 88 0
  44 000a 304B     		ldr	r3, .L8
  45 000c 1B78     		ldrb	r3, [r3]
  46 000e BB71     		strb	r3, [r7, #6]
  89:.\Generated_Source\PSoC5/Dispenser_INT.c ****             /* Copy the same status to readData variable for backward compatibility support 
  90:.\Generated_Source\PSoC5/Dispenser_INT.c ****             *  of the user code in Dispenser_RXISR_ERROR` section. 
  91:.\Generated_Source\PSoC5/Dispenser_INT.c ****             */
  92:.\Generated_Source\PSoC5/Dispenser_INT.c ****             readData = readStatus;
  47              		.loc 1 92 0
  48 0010 BB79     		ldrb	r3, [r7, #6]
  49 0012 7B71     		strb	r3, [r7, #5]
  93:.\Generated_Source\PSoC5/Dispenser_INT.c **** 
  94:.\Generated_Source\PSoC5/Dispenser_INT.c ****             if((readStatus & (Dispenser_RX_STS_BREAK | 
  95:.\Generated_Source\PSoC5/Dispenser_INT.c ****                             Dispenser_RX_STS_PAR_ERROR |
  96:.\Generated_Source\PSoC5/Dispenser_INT.c ****                             Dispenser_RX_STS_STOP_ERROR | 
  97:.\Generated_Source\PSoC5/Dispenser_INT.c ****                             Dispenser_RX_STS_OVERRUN)) != 0u)
  50              		.loc 1 97 0
  51 0014 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  52 0016 03F01E03 		and	r3, r3, #30
  94:.\Generated_Source\PSoC5/Dispenser_INT.c ****                             Dispenser_RX_STS_PAR_ERROR |
  53              		.loc 1 94 0
  54 001a 002B     		cmp	r3, #0
  55 001c 0BD0     		beq	.L2
  98:.\Generated_Source\PSoC5/Dispenser_INT.c ****             {
  99:.\Generated_Source\PSoC5/Dispenser_INT.c ****                 /* ERROR handling. */
 100:.\Generated_Source\PSoC5/Dispenser_INT.c ****                 Dispenser_errorStatus |= readStatus & ( Dispenser_RX_STS_BREAK | 
  56              		.loc 1 100 0
  57 001e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  58 0020 03F01E03 		and	r3, r3, #30
  59 0024 DAB2     		uxtb	r2, r3
  60 0026 2A4B     		ldr	r3, .L8+4
  61 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  62 002a DBB2     		uxtb	r3, r3
  63 002c 1343     		orrs	r3, r3, r2
  64 002e DBB2     		uxtb	r3, r3
  65 0030 DAB2     		uxtb	r2, r3
  66 0032 274B     		ldr	r3, .L8+4
  67 0034 1A70     		strb	r2, [r3]
  68              	.L2:
 101:.\Generated_Source\PSoC5/Dispenser_INT.c ****                                                             Dispenser_RX_STS_PAR_ERROR | 
 102:.\Generated_Source\PSoC5/Dispenser_INT.c ****                                                             Dispenser_RX_STS_STOP_ERROR | 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfkYfRg.s 			page 4


 103:.\Generated_Source\PSoC5/Dispenser_INT.c ****                                                             Dispenser_RX_STS_OVERRUN);
 104:.\Generated_Source\PSoC5/Dispenser_INT.c ****                 /* `#START Dispenser_RXISR_ERROR` */
 105:.\Generated_Source\PSoC5/Dispenser_INT.c **** 
 106:.\Generated_Source\PSoC5/Dispenser_INT.c ****                 /* `#END` */
 107:.\Generated_Source\PSoC5/Dispenser_INT.c ****                 
 108:.\Generated_Source\PSoC5/Dispenser_INT.c ****             #ifdef Dispenser_RXISR_ERROR_CALLBACK
 109:.\Generated_Source\PSoC5/Dispenser_INT.c ****                 Dispenser_RXISR_ERROR_Callback();
 110:.\Generated_Source\PSoC5/Dispenser_INT.c ****             #endif /* Dispenser_RXISR_ERROR_CALLBACK */
 111:.\Generated_Source\PSoC5/Dispenser_INT.c ****             }
 112:.\Generated_Source\PSoC5/Dispenser_INT.c ****             
 113:.\Generated_Source\PSoC5/Dispenser_INT.c ****             if((readStatus & Dispenser_RX_STS_FIFO_NOTEMPTY) != 0u)
  69              		.loc 1 113 0
  70 0036 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  71 0038 03F02003 		and	r3, r3, #32
  72 003c 002B     		cmp	r3, #0
  73 003e 30D0     		beq	.L3
 114:.\Generated_Source\PSoC5/Dispenser_INT.c ****             {
 115:.\Generated_Source\PSoC5/Dispenser_INT.c ****                 /* Read data from the RX data register */
 116:.\Generated_Source\PSoC5/Dispenser_INT.c ****                 readData = Dispenser_RXDATA_REG;
  74              		.loc 1 116 0
  75 0040 244B     		ldr	r3, .L8+8
  76 0042 1B78     		ldrb	r3, [r3]
  77 0044 7B71     		strb	r3, [r7, #5]
 117:.\Generated_Source\PSoC5/Dispenser_INT.c ****             #if (Dispenser_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC5/Dispenser_INT.c ****                 if(Dispenser_rxAddressMode == (uint8)Dispenser__B_UART__AM_SW_DETECT_TO_BUFFER)
 119:.\Generated_Source\PSoC5/Dispenser_INT.c ****                 {
 120:.\Generated_Source\PSoC5/Dispenser_INT.c ****                     if((readStatus & Dispenser_RX_STS_MRKSPC) != 0u)
 121:.\Generated_Source\PSoC5/Dispenser_INT.c ****                     {
 122:.\Generated_Source\PSoC5/Dispenser_INT.c ****                         if ((readStatus & Dispenser_RX_STS_ADDR_MATCH) != 0u)
 123:.\Generated_Source\PSoC5/Dispenser_INT.c ****                         {
 124:.\Generated_Source\PSoC5/Dispenser_INT.c ****                             Dispenser_rxAddressDetected = 1u;
 125:.\Generated_Source\PSoC5/Dispenser_INT.c ****                         }
 126:.\Generated_Source\PSoC5/Dispenser_INT.c ****                         else
 127:.\Generated_Source\PSoC5/Dispenser_INT.c ****                         {
 128:.\Generated_Source\PSoC5/Dispenser_INT.c ****                             Dispenser_rxAddressDetected = 0u;
 129:.\Generated_Source\PSoC5/Dispenser_INT.c ****                         }
 130:.\Generated_Source\PSoC5/Dispenser_INT.c ****                     }
 131:.\Generated_Source\PSoC5/Dispenser_INT.c ****                     if(Dispenser_rxAddressDetected != 0u)
 132:.\Generated_Source\PSoC5/Dispenser_INT.c ****                     {   /* Store only addressed data */
 133:.\Generated_Source\PSoC5/Dispenser_INT.c ****                         Dispenser_rxBuffer[Dispenser_rxBufferWrite] = readData;
 134:.\Generated_Source\PSoC5/Dispenser_INT.c ****                         increment_pointer = 1u;
 135:.\Generated_Source\PSoC5/Dispenser_INT.c ****                     }
 136:.\Generated_Source\PSoC5/Dispenser_INT.c ****                 }
 137:.\Generated_Source\PSoC5/Dispenser_INT.c ****                 else /* Without software addressing */
 138:.\Generated_Source\PSoC5/Dispenser_INT.c ****                 {
 139:.\Generated_Source\PSoC5/Dispenser_INT.c ****                     Dispenser_rxBuffer[Dispenser_rxBufferWrite] = readData;
 140:.\Generated_Source\PSoC5/Dispenser_INT.c ****                     increment_pointer = 1u;
 141:.\Generated_Source\PSoC5/Dispenser_INT.c ****                 }
 142:.\Generated_Source\PSoC5/Dispenser_INT.c ****             #else  /* Without addressing */
 143:.\Generated_Source\PSoC5/Dispenser_INT.c ****                 Dispenser_rxBuffer[Dispenser_rxBufferWrite] = readData;
  78              		.loc 1 143 0
  79 0046 244B     		ldr	r3, .L8+12
  80 0048 1B88     		ldrh	r3, [r3]	@ movhi
  81 004a 9BB2     		uxth	r3, r3
  82 004c 1946     		mov	r1, r3
  83 004e 234A     		ldr	r2, .L8+16
  84 0050 7B79     		ldrb	r3, [r7, #5]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfkYfRg.s 			page 5


  85 0052 5354     		strb	r3, [r2, r1]
 144:.\Generated_Source\PSoC5/Dispenser_INT.c ****                 increment_pointer = 1u;
  86              		.loc 1 144 0
  87 0054 0123     		movs	r3, #1
  88 0056 FB71     		strb	r3, [r7, #7]
 145:.\Generated_Source\PSoC5/Dispenser_INT.c ****             #endif /* (Dispenser_RXHW_ADDRESS_ENABLED) */
 146:.\Generated_Source\PSoC5/Dispenser_INT.c **** 
 147:.\Generated_Source\PSoC5/Dispenser_INT.c ****                 /* Do not increment buffer pointer when skip not addressed data */
 148:.\Generated_Source\PSoC5/Dispenser_INT.c ****                 if(increment_pointer != 0u)
  89              		.loc 1 148 0
  90 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  91 005a 002B     		cmp	r3, #0
  92 005c 21D0     		beq	.L3
 149:.\Generated_Source\PSoC5/Dispenser_INT.c ****                 {
 150:.\Generated_Source\PSoC5/Dispenser_INT.c ****                     if(Dispenser_rxBufferLoopDetect != 0u)
  93              		.loc 1 150 0
  94 005e 204B     		ldr	r3, .L8+20
  95 0060 1B78     		ldrb	r3, [r3]
  96 0062 DBB2     		uxtb	r3, r3
  97 0064 002B     		cmp	r3, #0
  98 0066 02D0     		beq	.L4
 151:.\Generated_Source\PSoC5/Dispenser_INT.c ****                     {   /* Set Software Buffer status Overflow */
 152:.\Generated_Source\PSoC5/Dispenser_INT.c ****                         Dispenser_rxBufferOverflow = 1u;
  99              		.loc 1 152 0
 100 0068 1E4B     		ldr	r3, .L8+24
 101 006a 0122     		movs	r2, #1
 102 006c 1A70     		strb	r2, [r3]
 103              	.L4:
 153:.\Generated_Source\PSoC5/Dispenser_INT.c ****                     }
 154:.\Generated_Source\PSoC5/Dispenser_INT.c ****                     /* Set next pointer. */
 155:.\Generated_Source\PSoC5/Dispenser_INT.c ****                     Dispenser_rxBufferWrite++;
 104              		.loc 1 155 0
 105 006e 1A4B     		ldr	r3, .L8+12
 106 0070 1B88     		ldrh	r3, [r3]	@ movhi
 107 0072 9BB2     		uxth	r3, r3
 108 0074 0133     		adds	r3, r3, #1
 109 0076 9AB2     		uxth	r2, r3
 110 0078 174B     		ldr	r3, .L8+12
 111 007a 1A80     		strh	r2, [r3]	@ movhi
 156:.\Generated_Source\PSoC5/Dispenser_INT.c **** 
 157:.\Generated_Source\PSoC5/Dispenser_INT.c ****                     /* Check pointer for a loop condition */
 158:.\Generated_Source\PSoC5/Dispenser_INT.c ****                     if(Dispenser_rxBufferWrite >= Dispenser_RX_BUFFER_SIZE)
 112              		.loc 1 158 0
 113 007c 164B     		ldr	r3, .L8+12
 114 007e 1B88     		ldrh	r3, [r3]	@ movhi
 115 0080 9BB2     		uxth	r3, r3
 116 0082 FF2B     		cmp	r3, #255
 117 0084 02D9     		bls	.L5
 159:.\Generated_Source\PSoC5/Dispenser_INT.c ****                     {
 160:.\Generated_Source\PSoC5/Dispenser_INT.c ****                         Dispenser_rxBufferWrite = 0u;
 118              		.loc 1 160 0
 119 0086 144B     		ldr	r3, .L8+12
 120 0088 0022     		movs	r2, #0
 121 008a 1A80     		strh	r2, [r3]	@ movhi
 122              	.L5:
 161:.\Generated_Source\PSoC5/Dispenser_INT.c ****                     }
 162:.\Generated_Source\PSoC5/Dispenser_INT.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfkYfRg.s 			page 6


 163:.\Generated_Source\PSoC5/Dispenser_INT.c ****                     /* Detect pre-overload condition and set flag */
 164:.\Generated_Source\PSoC5/Dispenser_INT.c ****                     if(Dispenser_rxBufferWrite == Dispenser_rxBufferRead)
 123              		.loc 1 164 0
 124 008c 124B     		ldr	r3, .L8+12
 125 008e 1B88     		ldrh	r3, [r3]	@ movhi
 126 0090 9AB2     		uxth	r2, r3
 127 0092 154B     		ldr	r3, .L8+28
 128 0094 1B88     		ldrh	r3, [r3]	@ movhi
 129 0096 9BB2     		uxth	r3, r3
 130 0098 9A42     		cmp	r2, r3
 131 009a 02D1     		bne	.L3
 165:.\Generated_Source\PSoC5/Dispenser_INT.c ****                     {
 166:.\Generated_Source\PSoC5/Dispenser_INT.c ****                         Dispenser_rxBufferLoopDetect = 1u;
 132              		.loc 1 166 0
 133 009c 104B     		ldr	r3, .L8+20
 134 009e 0122     		movs	r2, #1
 135 00a0 1A70     		strb	r2, [r3]
 136              	.L3:
 167:.\Generated_Source\PSoC5/Dispenser_INT.c ****                         /* When Hardware Flow Control selected */
 168:.\Generated_Source\PSoC5/Dispenser_INT.c ****                         #if (Dispenser_FLOW_CONTROL != 0u)
 169:.\Generated_Source\PSoC5/Dispenser_INT.c ****                             /* Disable RX interrupt mask, it is enabled when user read data from th
 170:.\Generated_Source\PSoC5/Dispenser_INT.c ****                             Dispenser_RXSTATUS_MASK_REG  &= (uint8)~Dispenser_RX_STS_FIFO_NOTEMPTY;
 171:.\Generated_Source\PSoC5/Dispenser_INT.c ****                             CyIntClearPending(Dispenser_RX_VECT_NUM);
 172:.\Generated_Source\PSoC5/Dispenser_INT.c ****                             break; /* Break the reading of the FIFO loop, leave the data there for 
 173:.\Generated_Source\PSoC5/Dispenser_INT.c ****                         #endif /* (Dispenser_FLOW_CONTROL != 0u) */
 174:.\Generated_Source\PSoC5/Dispenser_INT.c ****                     }
 175:.\Generated_Source\PSoC5/Dispenser_INT.c ****                 }
 176:.\Generated_Source\PSoC5/Dispenser_INT.c ****             }
 177:.\Generated_Source\PSoC5/Dispenser_INT.c ****         }while((readStatus & Dispenser_RX_STS_FIFO_NOTEMPTY) != 0u);
 137              		.loc 1 177 0
 138 00a2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 139 00a4 03F02003 		and	r3, r3, #32
 140 00a8 002B     		cmp	r3, #0
 141 00aa AED1     		bne	.L6
 178:.\Generated_Source\PSoC5/Dispenser_INT.c **** 
 179:.\Generated_Source\PSoC5/Dispenser_INT.c ****         /* User code required at end of ISR (Optional) */
 180:.\Generated_Source\PSoC5/Dispenser_INT.c ****         /* `#START Dispenser_RXISR_END` */
 181:.\Generated_Source\PSoC5/Dispenser_INT.c **** 
 182:.\Generated_Source\PSoC5/Dispenser_INT.c ****         if(InvokeResolver(UART_DISPENSER, (uint8*)Dispenser_rxBuffer, Dispenser_GetRxBufferSize()))
 142              		.loc 1 182 0
 143 00ac FFF7FEFF 		bl	Dispenser_GetRxBufferSize
 144 00b0 0346     		mov	r3, r0
 145 00b2 A220     		movs	r0, #162
 146 00b4 0949     		ldr	r1, .L8+16
 147 00b6 1A46     		mov	r2, r3
 148 00b8 FFF7FEFF 		bl	InvokeResolver
 149 00bc 0346     		mov	r3, r0
 150 00be 002B     		cmp	r3, #0
 151 00c0 01D0     		beq	.L1
 183:.\Generated_Source\PSoC5/Dispenser_INT.c ****             Dispenser_ClearRxBuffer();
 152              		.loc 1 183 0
 153 00c2 FFF7FEFF 		bl	Dispenser_ClearRxBuffer
 154              	.L1:
 184:.\Generated_Source\PSoC5/Dispenser_INT.c ****         
 185:.\Generated_Source\PSoC5/Dispenser_INT.c ****         /* `#END` */
 186:.\Generated_Source\PSoC5/Dispenser_INT.c **** 
 187:.\Generated_Source\PSoC5/Dispenser_INT.c ****     #ifdef Dispenser_RXISR_EXIT_CALLBACK
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfkYfRg.s 			page 7


 188:.\Generated_Source\PSoC5/Dispenser_INT.c ****         Dispenser_RXISR_ExitCallback();
 189:.\Generated_Source\PSoC5/Dispenser_INT.c ****     #endif /* Dispenser_RXISR_EXIT_CALLBACK */
 190:.\Generated_Source\PSoC5/Dispenser_INT.c **** 
 191:.\Generated_Source\PSoC5/Dispenser_INT.c ****     #if(CY_PSOC3)
 192:.\Generated_Source\PSoC5/Dispenser_INT.c ****         EA = int_en;
 193:.\Generated_Source\PSoC5/Dispenser_INT.c ****     #endif /* (CY_PSOC3) */
 194:.\Generated_Source\PSoC5/Dispenser_INT.c ****     }
 155              		.loc 1 194 0
 156 00c6 0837     		adds	r7, r7, #8
 157              		.cfi_def_cfa_offset 8
 158 00c8 BD46     		mov	sp, r7
 159              		.cfi_def_cfa_register 13
 160              		@ sp needed
 161 00ca 80BD     		pop	{r7, pc}
 162              	.L9:
 163              		.align	2
 164              	.L8:
 165 00cc 66640040 		.word	1073767526
 166 00d0 00000000 		.word	Dispenser_errorStatus
 167 00d4 42640040 		.word	1073767490
 168 00d8 00000000 		.word	Dispenser_rxBufferWrite
 169 00dc 00000000 		.word	Dispenser_rxBuffer
 170 00e0 00000000 		.word	Dispenser_rxBufferLoopDetect
 171 00e4 00000000 		.word	Dispenser_rxBufferOverflow
 172 00e8 00000000 		.word	Dispenser_rxBufferRead
 173              		.cfi_endproc
 174              	.LFE0:
 175              		.size	Dispenser_RXISR, .-Dispenser_RXISR
 176              		.text
 177              	.Letext0:
 178              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 179              		.file 3 ".\\Generated_Source\\PSoC5\\Dispenser.h"
 180              		.file 4 "./UARTManager.h"
 181              		.section	.debug_info,"",%progbits
 182              	.Ldebug_info0:
 183 0000 94010000 		.4byte	0x194
 184 0004 0400     		.2byte	0x4
 185 0006 00000000 		.4byte	.Ldebug_abbrev0
 186 000a 04       		.byte	0x4
 187 000b 01       		.uleb128 0x1
 188 000c AE010000 		.4byte	.LASF33
 189 0010 01       		.byte	0x1
 190 0011 A7000000 		.4byte	.LASF34
 191 0015 07010000 		.4byte	.LASF35
 192 0019 00000000 		.4byte	.Ldebug_ranges0+0
 193 001d 00000000 		.4byte	0
 194 0021 00000000 		.4byte	.Ldebug_line0
 195 0025 02       		.uleb128 0x2
 196 0026 01       		.byte	0x1
 197 0027 06       		.byte	0x6
 198 0028 D9020000 		.4byte	.LASF0
 199 002c 02       		.uleb128 0x2
 200 002d 01       		.byte	0x1
 201 002e 08       		.byte	0x8
 202 002f 66010000 		.4byte	.LASF1
 203 0033 02       		.uleb128 0x2
 204 0034 02       		.byte	0x2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfkYfRg.s 			page 8


 205 0035 05       		.byte	0x5
 206 0036 97020000 		.4byte	.LASF2
 207 003a 02       		.uleb128 0x2
 208 003b 02       		.byte	0x2
 209 003c 07       		.byte	0x7
 210 003d 6F000000 		.4byte	.LASF3
 211 0041 02       		.uleb128 0x2
 212 0042 04       		.byte	0x4
 213 0043 05       		.byte	0x5
 214 0044 BF020000 		.4byte	.LASF4
 215 0048 02       		.uleb128 0x2
 216 0049 04       		.byte	0x4
 217 004a 07       		.byte	0x7
 218 004b 79010000 		.4byte	.LASF5
 219 004f 02       		.uleb128 0x2
 220 0050 08       		.byte	0x8
 221 0051 05       		.byte	0x5
 222 0052 77020000 		.4byte	.LASF6
 223 0056 02       		.uleb128 0x2
 224 0057 08       		.byte	0x8
 225 0058 07       		.byte	0x7
 226 0059 57020000 		.4byte	.LASF7
 227 005d 03       		.uleb128 0x3
 228 005e 04       		.byte	0x4
 229 005f 05       		.byte	0x5
 230 0060 696E7400 		.ascii	"int\000"
 231 0064 02       		.uleb128 0x2
 232 0065 04       		.byte	0x4
 233 0066 07       		.byte	0x7
 234 0067 9A000000 		.4byte	.LASF8
 235 006b 04       		.uleb128 0x4
 236 006c 8B010000 		.4byte	.LASF9
 237 0070 02       		.byte	0x2
 238 0071 3801     		.2byte	0x138
 239 0073 2C000000 		.4byte	0x2c
 240 0077 04       		.uleb128 0x4
 241 0078 43020000 		.4byte	.LASF10
 242 007c 02       		.byte	0x2
 243 007d 3901     		.2byte	0x139
 244 007f 3A000000 		.4byte	0x3a
 245 0083 02       		.uleb128 0x2
 246 0084 04       		.byte	0x4
 247 0085 04       		.byte	0x4
 248 0086 1A000000 		.4byte	.LASF11
 249 008a 02       		.uleb128 0x2
 250 008b 08       		.byte	0x8
 251 008c 04       		.byte	0x4
 252 008d 3C020000 		.4byte	.LASF12
 253 0091 02       		.uleb128 0x2
 254 0092 01       		.byte	0x1
 255 0093 08       		.byte	0x8
 256 0094 C8020000 		.4byte	.LASF13
 257 0098 04       		.uleb128 0x4
 258 0099 74010000 		.4byte	.LASF14
 259 009d 02       		.byte	0x2
 260 009e E201     		.2byte	0x1e2
 261 00a0 A4000000 		.4byte	0xa4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfkYfRg.s 			page 9


 262 00a4 05       		.uleb128 0x5
 263 00a5 6B000000 		.4byte	0x6b
 264 00a9 05       		.uleb128 0x5
 265 00aa 77000000 		.4byte	0x77
 266 00ae 02       		.uleb128 0x2
 267 00af 04       		.byte	0x4
 268 00b0 07       		.byte	0x7
 269 00b1 6E020000 		.4byte	.LASF15
 270 00b5 02       		.uleb128 0x2
 271 00b6 08       		.byte	0x8
 272 00b7 04       		.byte	0x4
 273 00b8 CD020000 		.4byte	.LASF16
 274 00bc 02       		.uleb128 0x2
 275 00bd 01       		.byte	0x1
 276 00be 02       		.byte	0x2
 277 00bf EE020000 		.4byte	.LASF17
 278 00c3 06       		.uleb128 0x6
 279 00c4 00000000 		.4byte	.LASF36
 280 00c8 01       		.byte	0x1
 281 00c9 04       		.byte	0x4
 282 00ca 6D       		.byte	0x6d
 283 00cb FA000000 		.4byte	0xfa
 284 00cf 07       		.uleb128 0x7
 285 00d0 B7020000 		.4byte	.LASF18
 286 00d4 A001     		.sleb128 160
 287 00d6 07       		.uleb128 0x7
 288 00d7 4A020000 		.4byte	.LASF19
 289 00db A101     		.sleb128 161
 290 00dd 07       		.uleb128 0x7
 291 00de F4020000 		.4byte	.LASF20
 292 00e2 A201     		.sleb128 162
 293 00e4 07       		.uleb128 0x7
 294 00e5 D0000000 		.4byte	.LASF21
 295 00e9 A301     		.sleb128 163
 296 00eb 07       		.uleb128 0x7
 297 00ec DE000000 		.4byte	.LASF22
 298 00f0 A401     		.sleb128 164
 299 00f2 07       		.uleb128 0x7
 300 00f3 20000000 		.4byte	.LASF23
 301 00f7 A501     		.sleb128 165
 302 00f9 00       		.byte	0
 303 00fa 08       		.uleb128 0x8
 304 00fb F7000000 		.4byte	.LASF37
 305 00ff 01       		.byte	0x1
 306 0100 3D       		.byte	0x3d
 307 0101 00000000 		.4byte	.LFB0
 308 0105 EC000000 		.4byte	.LFE0-.LFB0
 309 0109 01       		.uleb128 0x1
 310 010a 9C       		.byte	0x9c
 311 010b 3A010000 		.4byte	0x13a
 312 010f 09       		.uleb128 0x9
 313 0110 E5020000 		.4byte	.LASF24
 314 0114 01       		.byte	0x1
 315 0115 3F       		.byte	0x3f
 316 0116 6B000000 		.4byte	0x6b
 317 011a 02       		.uleb128 0x2
 318 011b 91       		.byte	0x91
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfkYfRg.s 			page 10


 319 011c 75       		.sleb128 -11
 320 011d 09       		.uleb128 0x9
 321 011e EC000000 		.4byte	.LASF25
 322 0122 01       		.byte	0x1
 323 0123 40       		.byte	0x40
 324 0124 6B000000 		.4byte	0x6b
 325 0128 02       		.uleb128 0x2
 326 0129 91       		.byte	0x91
 327 012a 76       		.sleb128 -10
 328 012b 09       		.uleb128 0x9
 329 012c 85020000 		.4byte	.LASF26
 330 0130 01       		.byte	0x1
 331 0131 41       		.byte	0x41
 332 0132 6B000000 		.4byte	0x6b
 333 0136 02       		.uleb128 0x2
 334 0137 91       		.byte	0x91
 335 0138 77       		.sleb128 -9
 336 0139 00       		.byte	0
 337 013a 0A       		.uleb128 0xa
 338 013b A1020000 		.4byte	.LASF27
 339 013f 03       		.byte	0x3
 340 0140 3D01     		.2byte	0x13d
 341 0142 6B000000 		.4byte	0x6b
 342 0146 0B       		.uleb128 0xb
 343 0147 6B000000 		.4byte	0x6b
 344 014b 56010000 		.4byte	0x156
 345 014f 0C       		.uleb128 0xc
 346 0150 AE000000 		.4byte	0xae
 347 0154 FF       		.byte	0xff
 348 0155 00       		.byte	0
 349 0156 0A       		.uleb128 0xa
 350 0157 45000000 		.4byte	.LASF28
 351 015b 03       		.byte	0x3
 352 015c 3E01     		.2byte	0x13e
 353 015e 62010000 		.4byte	0x162
 354 0162 05       		.uleb128 0x5
 355 0163 46010000 		.4byte	0x146
 356 0167 0A       		.uleb128 0xa
 357 0168 58000000 		.4byte	.LASF29
 358 016c 03       		.byte	0x3
 359 016d 3F01     		.2byte	0x13f
 360 016f A9000000 		.4byte	0xa9
 361 0173 0A       		.uleb128 0xa
 362 0174 82000000 		.4byte	.LASF30
 363 0178 03       		.byte	0x3
 364 0179 4001     		.2byte	0x140
 365 017b A9000000 		.4byte	0xa9
 366 017f 0A       		.uleb128 0xa
 367 0180 91010000 		.4byte	.LASF31
 368 0184 03       		.byte	0x3
 369 0185 4101     		.2byte	0x141
 370 0187 A4000000 		.4byte	0xa4
 371 018b 0A       		.uleb128 0xa
 372 018c 2A000000 		.4byte	.LASF32
 373 0190 03       		.byte	0x3
 374 0191 4201     		.2byte	0x142
 375 0193 A4000000 		.4byte	0xa4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfkYfRg.s 			page 11


 376 0197 00       		.byte	0
 377              		.section	.debug_abbrev,"",%progbits
 378              	.Ldebug_abbrev0:
 379 0000 01       		.uleb128 0x1
 380 0001 11       		.uleb128 0x11
 381 0002 01       		.byte	0x1
 382 0003 25       		.uleb128 0x25
 383 0004 0E       		.uleb128 0xe
 384 0005 13       		.uleb128 0x13
 385 0006 0B       		.uleb128 0xb
 386 0007 03       		.uleb128 0x3
 387 0008 0E       		.uleb128 0xe
 388 0009 1B       		.uleb128 0x1b
 389 000a 0E       		.uleb128 0xe
 390 000b 55       		.uleb128 0x55
 391 000c 17       		.uleb128 0x17
 392 000d 11       		.uleb128 0x11
 393 000e 01       		.uleb128 0x1
 394 000f 10       		.uleb128 0x10
 395 0010 17       		.uleb128 0x17
 396 0011 00       		.byte	0
 397 0012 00       		.byte	0
 398 0013 02       		.uleb128 0x2
 399 0014 24       		.uleb128 0x24
 400 0015 00       		.byte	0
 401 0016 0B       		.uleb128 0xb
 402 0017 0B       		.uleb128 0xb
 403 0018 3E       		.uleb128 0x3e
 404 0019 0B       		.uleb128 0xb
 405 001a 03       		.uleb128 0x3
 406 001b 0E       		.uleb128 0xe
 407 001c 00       		.byte	0
 408 001d 00       		.byte	0
 409 001e 03       		.uleb128 0x3
 410 001f 24       		.uleb128 0x24
 411 0020 00       		.byte	0
 412 0021 0B       		.uleb128 0xb
 413 0022 0B       		.uleb128 0xb
 414 0023 3E       		.uleb128 0x3e
 415 0024 0B       		.uleb128 0xb
 416 0025 03       		.uleb128 0x3
 417 0026 08       		.uleb128 0x8
 418 0027 00       		.byte	0
 419 0028 00       		.byte	0
 420 0029 04       		.uleb128 0x4
 421 002a 16       		.uleb128 0x16
 422 002b 00       		.byte	0
 423 002c 03       		.uleb128 0x3
 424 002d 0E       		.uleb128 0xe
 425 002e 3A       		.uleb128 0x3a
 426 002f 0B       		.uleb128 0xb
 427 0030 3B       		.uleb128 0x3b
 428 0031 05       		.uleb128 0x5
 429 0032 49       		.uleb128 0x49
 430 0033 13       		.uleb128 0x13
 431 0034 00       		.byte	0
 432 0035 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfkYfRg.s 			page 12


 433 0036 05       		.uleb128 0x5
 434 0037 35       		.uleb128 0x35
 435 0038 00       		.byte	0
 436 0039 49       		.uleb128 0x49
 437 003a 13       		.uleb128 0x13
 438 003b 00       		.byte	0
 439 003c 00       		.byte	0
 440 003d 06       		.uleb128 0x6
 441 003e 04       		.uleb128 0x4
 442 003f 01       		.byte	0x1
 443 0040 03       		.uleb128 0x3
 444 0041 0E       		.uleb128 0xe
 445 0042 0B       		.uleb128 0xb
 446 0043 0B       		.uleb128 0xb
 447 0044 3A       		.uleb128 0x3a
 448 0045 0B       		.uleb128 0xb
 449 0046 3B       		.uleb128 0x3b
 450 0047 0B       		.uleb128 0xb
 451 0048 01       		.uleb128 0x1
 452 0049 13       		.uleb128 0x13
 453 004a 00       		.byte	0
 454 004b 00       		.byte	0
 455 004c 07       		.uleb128 0x7
 456 004d 28       		.uleb128 0x28
 457 004e 00       		.byte	0
 458 004f 03       		.uleb128 0x3
 459 0050 0E       		.uleb128 0xe
 460 0051 1C       		.uleb128 0x1c
 461 0052 0D       		.uleb128 0xd
 462 0053 00       		.byte	0
 463 0054 00       		.byte	0
 464 0055 08       		.uleb128 0x8
 465 0056 2E       		.uleb128 0x2e
 466 0057 01       		.byte	0x1
 467 0058 3F       		.uleb128 0x3f
 468 0059 19       		.uleb128 0x19
 469 005a 03       		.uleb128 0x3
 470 005b 0E       		.uleb128 0xe
 471 005c 3A       		.uleb128 0x3a
 472 005d 0B       		.uleb128 0xb
 473 005e 3B       		.uleb128 0x3b
 474 005f 0B       		.uleb128 0xb
 475 0060 27       		.uleb128 0x27
 476 0061 19       		.uleb128 0x19
 477 0062 11       		.uleb128 0x11
 478 0063 01       		.uleb128 0x1
 479 0064 12       		.uleb128 0x12
 480 0065 06       		.uleb128 0x6
 481 0066 40       		.uleb128 0x40
 482 0067 18       		.uleb128 0x18
 483 0068 9642     		.uleb128 0x2116
 484 006a 19       		.uleb128 0x19
 485 006b 01       		.uleb128 0x1
 486 006c 13       		.uleb128 0x13
 487 006d 00       		.byte	0
 488 006e 00       		.byte	0
 489 006f 09       		.uleb128 0x9
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfkYfRg.s 			page 13


 490 0070 34       		.uleb128 0x34
 491 0071 00       		.byte	0
 492 0072 03       		.uleb128 0x3
 493 0073 0E       		.uleb128 0xe
 494 0074 3A       		.uleb128 0x3a
 495 0075 0B       		.uleb128 0xb
 496 0076 3B       		.uleb128 0x3b
 497 0077 0B       		.uleb128 0xb
 498 0078 49       		.uleb128 0x49
 499 0079 13       		.uleb128 0x13
 500 007a 02       		.uleb128 0x2
 501 007b 18       		.uleb128 0x18
 502 007c 00       		.byte	0
 503 007d 00       		.byte	0
 504 007e 0A       		.uleb128 0xa
 505 007f 34       		.uleb128 0x34
 506 0080 00       		.byte	0
 507 0081 03       		.uleb128 0x3
 508 0082 0E       		.uleb128 0xe
 509 0083 3A       		.uleb128 0x3a
 510 0084 0B       		.uleb128 0xb
 511 0085 3B       		.uleb128 0x3b
 512 0086 05       		.uleb128 0x5
 513 0087 49       		.uleb128 0x49
 514 0088 13       		.uleb128 0x13
 515 0089 3F       		.uleb128 0x3f
 516 008a 19       		.uleb128 0x19
 517 008b 3C       		.uleb128 0x3c
 518 008c 19       		.uleb128 0x19
 519 008d 00       		.byte	0
 520 008e 00       		.byte	0
 521 008f 0B       		.uleb128 0xb
 522 0090 01       		.uleb128 0x1
 523 0091 01       		.byte	0x1
 524 0092 49       		.uleb128 0x49
 525 0093 13       		.uleb128 0x13
 526 0094 01       		.uleb128 0x1
 527 0095 13       		.uleb128 0x13
 528 0096 00       		.byte	0
 529 0097 00       		.byte	0
 530 0098 0C       		.uleb128 0xc
 531 0099 21       		.uleb128 0x21
 532 009a 00       		.byte	0
 533 009b 49       		.uleb128 0x49
 534 009c 13       		.uleb128 0x13
 535 009d 2F       		.uleb128 0x2f
 536 009e 0B       		.uleb128 0xb
 537 009f 00       		.byte	0
 538 00a0 00       		.byte	0
 539 00a1 00       		.byte	0
 540              		.section	.debug_aranges,"",%progbits
 541 0000 1C000000 		.4byte	0x1c
 542 0004 0200     		.2byte	0x2
 543 0006 00000000 		.4byte	.Ldebug_info0
 544 000a 04       		.byte	0x4
 545 000b 00       		.byte	0
 546 000c 0000     		.2byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfkYfRg.s 			page 14


 547 000e 0000     		.2byte	0
 548 0010 00000000 		.4byte	.LFB0
 549 0014 EC000000 		.4byte	.LFE0-.LFB0
 550 0018 00000000 		.4byte	0
 551 001c 00000000 		.4byte	0
 552              		.section	.debug_ranges,"",%progbits
 553              	.Ldebug_ranges0:
 554 0000 00000000 		.4byte	.LFB0
 555 0004 EC000000 		.4byte	.LFE0
 556 0008 00000000 		.4byte	0
 557 000c 00000000 		.4byte	0
 558              		.section	.debug_line,"",%progbits
 559              	.Ldebug_line0:
 560 0000 A3000000 		.section	.debug_str,"MS",%progbits,1
 560      02006E00 
 560      00000201 
 560      FB0E0D00 
 560      01010101 
 561              	.LASF36:
 562 0000 5F554152 		.ascii	"_UART_MANAGERS_AVAILABLE_\000"
 562      545F4D41 
 562      4E414745 
 562      52535F41 
 562      5641494C 
 563              	.LASF11:
 564 001a 666C6F61 		.ascii	"float\000"
 564      7400
 565              	.LASF23:
 566 0020 55415254 		.ascii	"UART_NULL\000"
 566      5F4E554C 
 566      4C00
 567              	.LASF32:
 568 002a 44697370 		.ascii	"Dispenser_rxBufferOverflow\000"
 568      656E7365 
 568      725F7278 
 568      42756666 
 568      65724F76 
 569              	.LASF28:
 570 0045 44697370 		.ascii	"Dispenser_rxBuffer\000"
 570      656E7365 
 570      725F7278 
 570      42756666 
 570      657200
 571              	.LASF29:
 572 0058 44697370 		.ascii	"Dispenser_rxBufferRead\000"
 572      656E7365 
 572      725F7278 
 572      42756666 
 572      65725265 
 573              	.LASF3:
 574 006f 73686F72 		.ascii	"short unsigned int\000"
 574      7420756E 
 574      7369676E 
 574      65642069 
 574      6E7400
 575              	.LASF30:
 576 0082 44697370 		.ascii	"Dispenser_rxBufferWrite\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfkYfRg.s 			page 15


 576      656E7365 
 576      725F7278 
 576      42756666 
 576      65725772 
 577              	.LASF8:
 578 009a 756E7369 		.ascii	"unsigned int\000"
 578      676E6564 
 578      20696E74 
 578      00
 579              	.LASF34:
 580 00a7 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Dispenser_INT.c\000"
 580      6E657261 
 580      7465645F 
 580      536F7572 
 580      63655C50 
 581              	.LASF21:
 582 00d0 55415254 		.ascii	"UART_DISPLAY1\000"
 582      5F444953 
 582      504C4159 
 582      3100
 583              	.LASF22:
 584 00de 55415254 		.ascii	"UART_DISPLAY2\000"
 584      5F444953 
 584      504C4159 
 584      3200
 585              	.LASF25:
 586 00ec 72656164 		.ascii	"readStatus\000"
 586      53746174 
 586      757300
 587              	.LASF37:
 588 00f7 44697370 		.ascii	"Dispenser_RXISR\000"
 588      656E7365 
 588      725F5258 
 588      49535200 
 589              	.LASF35:
 590 0107 433A5C54 		.ascii	"C:\\TeamInsepet\\NSX-Prime\\Hardware\\CorEx-MUX-Ker"
 590      65616D49 
 590      6E736570 
 590      65745C4E 
 590      53582D50 
 591 0136 6E656C2D 		.ascii	"nel-Enhanced\\Workspace01\\CorEx-Mux-Kernel.cydsn\000"
 591      456E6861 
 591      6E636564 
 591      5C576F72 
 591      6B737061 
 592              	.LASF1:
 593 0166 756E7369 		.ascii	"unsigned char\000"
 593      676E6564 
 593      20636861 
 593      7200
 594              	.LASF14:
 595 0174 72656738 		.ascii	"reg8\000"
 595      00
 596              	.LASF5:
 597 0179 6C6F6E67 		.ascii	"long unsigned int\000"
 597      20756E73 
 597      69676E65 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfkYfRg.s 			page 16


 597      6420696E 
 597      7400
 598              	.LASF9:
 599 018b 75696E74 		.ascii	"uint8\000"
 599      3800
 600              	.LASF31:
 601 0191 44697370 		.ascii	"Dispenser_rxBufferLoopDetect\000"
 601      656E7365 
 601      725F7278 
 601      42756666 
 601      65724C6F 
 602              	.LASF33:
 603 01ae 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 603      4320342E 
 603      392E3320 
 603      32303135 
 603      30333033 
 604 01e1 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 604      20726576 
 604      6973696F 
 604      6E203232 
 604      31323230 
 605 0214 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 605      66756E63 
 605      74696F6E 
 605      2D736563 
 605      74696F6E 
 606              	.LASF12:
 607 023c 646F7562 		.ascii	"double\000"
 607      6C6500
 608              	.LASF10:
 609 0243 75696E74 		.ascii	"uint16\000"
 609      313600
 610              	.LASF19:
 611 024a 55415254 		.ascii	"UART_PRINTER\000"
 611      5F505249 
 611      4E544552 
 611      00
 612              	.LASF7:
 613 0257 6C6F6E67 		.ascii	"long long unsigned int\000"
 613      206C6F6E 
 613      6720756E 
 613      7369676E 
 613      65642069 
 614              	.LASF15:
 615 026e 73697A65 		.ascii	"sizetype\000"
 615      74797065 
 615      00
 616              	.LASF6:
 617 0277 6C6F6E67 		.ascii	"long long int\000"
 617      206C6F6E 
 617      6720696E 
 617      7400
 618              	.LASF26:
 619 0285 696E6372 		.ascii	"increment_pointer\000"
 619      656D656E 
 619      745F706F 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccfkYfRg.s 			page 17


 619      696E7465 
 619      7200
 620              	.LASF2:
 621 0297 73686F72 		.ascii	"short int\000"
 621      7420696E 
 621      7400
 622              	.LASF27:
 623 02a1 44697370 		.ascii	"Dispenser_errorStatus\000"
 623      656E7365 
 623      725F6572 
 623      726F7253 
 623      74617475 
 624              	.LASF18:
 625 02b7 55415254 		.ascii	"UART_RF\000"
 625      5F524600 
 626              	.LASF4:
 627 02bf 6C6F6E67 		.ascii	"long int\000"
 627      20696E74 
 627      00
 628              	.LASF13:
 629 02c8 63686172 		.ascii	"char\000"
 629      00
 630              	.LASF16:
 631 02cd 6C6F6E67 		.ascii	"long double\000"
 631      20646F75 
 631      626C6500 
 632              	.LASF0:
 633 02d9 7369676E 		.ascii	"signed char\000"
 633      65642063 
 633      68617200 
 634              	.LASF24:
 635 02e5 72656164 		.ascii	"readData\000"
 635      44617461 
 635      00
 636              	.LASF17:
 637 02ee 5F426F6F 		.ascii	"_Bool\000"
 637      6C00
 638              	.LASF20:
 639 02f4 55415254 		.ascii	"UART_DISPENSER\000"
 639      5F444953 
 639      50454E53 
 639      455200
 640              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
