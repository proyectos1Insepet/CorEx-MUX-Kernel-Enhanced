ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Dispenser.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	Dispenser_initVar
  19              		.bss
  20              		.type	Dispenser_initVar, %object
  21              		.size	Dispenser_initVar, 1
  22              	Dispenser_initVar:
  23 0000 00       		.space	1
  24              		.global	Dispenser_errorStatus
  25              		.type	Dispenser_errorStatus, %object
  26              		.size	Dispenser_errorStatus, 1
  27              	Dispenser_errorStatus:
  28 0001 00       		.space	1
  29              		.comm	Dispenser_rxBuffer,256,4
  30              		.global	Dispenser_rxBufferRead
  31              		.align	1
  32              		.type	Dispenser_rxBufferRead, %object
  33              		.size	Dispenser_rxBufferRead, 2
  34              	Dispenser_rxBufferRead:
  35 0002 0000     		.space	2
  36              		.global	Dispenser_rxBufferWrite
  37              		.align	1
  38              		.type	Dispenser_rxBufferWrite, %object
  39              		.size	Dispenser_rxBufferWrite, 2
  40              	Dispenser_rxBufferWrite:
  41 0004 0000     		.space	2
  42              		.global	Dispenser_rxBufferLoopDetect
  43              		.type	Dispenser_rxBufferLoopDetect, %object
  44              		.size	Dispenser_rxBufferLoopDetect, 1
  45              	Dispenser_rxBufferLoopDetect:
  46 0006 00       		.space	1
  47              		.global	Dispenser_rxBufferOverflow
  48              		.type	Dispenser_rxBufferOverflow, %object
  49              		.size	Dispenser_rxBufferOverflow, 1
  50              	Dispenser_rxBufferOverflow:
  51 0007 00       		.space	1
  52              		.section	.text.Dispenser_Start,"ax",%progbits
  53              		.align	2
  54              		.global	Dispenser_Start
  55              		.thumb
  56              		.thumb_func
  57              		.type	Dispenser_Start, %function
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 2


  58              	Dispenser_Start:
  59              	.LFB0:
  60              		.file 1 ".\\Generated_Source\\PSoC5\\Dispenser.c"
   1:.\Generated_Source\PSoC5/Dispenser.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Dispenser.c **** * File Name: Dispenser.c
   3:.\Generated_Source\PSoC5/Dispenser.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/Dispenser.c **** *
   5:.\Generated_Source\PSoC5/Dispenser.c **** * Description:
   6:.\Generated_Source\PSoC5/Dispenser.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/Dispenser.c **** *
   8:.\Generated_Source\PSoC5/Dispenser.c **** * Note:
   9:.\Generated_Source\PSoC5/Dispenser.c **** *
  10:.\Generated_Source\PSoC5/Dispenser.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/Dispenser.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/Dispenser.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/Dispenser.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/Dispenser.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/Dispenser.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/Dispenser.c **** 
  17:.\Generated_Source\PSoC5/Dispenser.c **** #include "Dispenser.h"
  18:.\Generated_Source\PSoC5/Dispenser.c **** #if (Dispenser_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC5/Dispenser.c ****     #include "Dispenser_IntClock.h"
  20:.\Generated_Source\PSoC5/Dispenser.c **** #endif /* End Dispenser_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC5/Dispenser.c **** 
  22:.\Generated_Source\PSoC5/Dispenser.c **** 
  23:.\Generated_Source\PSoC5/Dispenser.c **** /***************************************
  24:.\Generated_Source\PSoC5/Dispenser.c **** * Global data allocation
  25:.\Generated_Source\PSoC5/Dispenser.c **** ***************************************/
  26:.\Generated_Source\PSoC5/Dispenser.c **** 
  27:.\Generated_Source\PSoC5/Dispenser.c **** uint8 Dispenser_initVar = 0u;
  28:.\Generated_Source\PSoC5/Dispenser.c **** 
  29:.\Generated_Source\PSoC5/Dispenser.c **** #if (Dispenser_TX_INTERRUPT_ENABLED && Dispenser_TX_ENABLED)
  30:.\Generated_Source\PSoC5/Dispenser.c ****     volatile uint8 Dispenser_txBuffer[Dispenser_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC5/Dispenser.c ****     volatile uint8 Dispenser_txBufferRead = 0u;
  32:.\Generated_Source\PSoC5/Dispenser.c ****     uint8 Dispenser_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/Dispenser.c **** #endif /* (Dispenser_TX_INTERRUPT_ENABLED && Dispenser_TX_ENABLED) */
  34:.\Generated_Source\PSoC5/Dispenser.c **** 
  35:.\Generated_Source\PSoC5/Dispenser.c **** #if (Dispenser_RX_INTERRUPT_ENABLED && (Dispenser_RX_ENABLED || Dispenser_HD_ENABLED))
  36:.\Generated_Source\PSoC5/Dispenser.c ****     uint8 Dispenser_errorStatus = 0u;
  37:.\Generated_Source\PSoC5/Dispenser.c ****     volatile uint8 Dispenser_rxBuffer[Dispenser_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC5/Dispenser.c ****     volatile uint16 Dispenser_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC5/Dispenser.c ****     volatile uint16 Dispenser_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC5/Dispenser.c ****     volatile uint8 Dispenser_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC5/Dispenser.c ****     volatile uint8 Dispenser_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC5/Dispenser.c ****     #if (Dispenser_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC5/Dispenser.c ****         volatile uint8 Dispenser_rxAddressMode = Dispenser_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC5/Dispenser.c ****         volatile uint8 Dispenser_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* (Dispenser_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC5/Dispenser.c **** #endif /* (Dispenser_RX_INTERRUPT_ENABLED && (Dispenser_RX_ENABLED || Dispenser_HD_ENABLED)) */
  47:.\Generated_Source\PSoC5/Dispenser.c **** 
  48:.\Generated_Source\PSoC5/Dispenser.c **** 
  49:.\Generated_Source\PSoC5/Dispenser.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC5/Dispenser.c **** * Function Name: Dispenser_Start
  51:.\Generated_Source\PSoC5/Dispenser.c **** ********************************************************************************
  52:.\Generated_Source\PSoC5/Dispenser.c **** *
  53:.\Generated_Source\PSoC5/Dispenser.c **** * Summary:
  54:.\Generated_Source\PSoC5/Dispenser.c **** *  This is the preferred method to begin component operation.
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 3


  55:.\Generated_Source\PSoC5/Dispenser.c **** *  Dispenser_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC5/Dispenser.c **** *  Dispenser_Init() function, and then calls the
  57:.\Generated_Source\PSoC5/Dispenser.c **** *  Dispenser_Enable() function.
  58:.\Generated_Source\PSoC5/Dispenser.c **** *
  59:.\Generated_Source\PSoC5/Dispenser.c **** * Parameters:
  60:.\Generated_Source\PSoC5/Dispenser.c **** *  None.
  61:.\Generated_Source\PSoC5/Dispenser.c **** *
  62:.\Generated_Source\PSoC5/Dispenser.c **** * Return:
  63:.\Generated_Source\PSoC5/Dispenser.c **** *  None.
  64:.\Generated_Source\PSoC5/Dispenser.c **** *
  65:.\Generated_Source\PSoC5/Dispenser.c **** * Global variables:
  66:.\Generated_Source\PSoC5/Dispenser.c **** *  The Dispenser_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC5/Dispenser.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC5/Dispenser.c **** *  and set to one (1u) the first time Dispenser_Start() is called. This
  69:.\Generated_Source\PSoC5/Dispenser.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC5/Dispenser.c **** *  subsequent calls to the Dispenser_Start() routine.
  71:.\Generated_Source\PSoC5/Dispenser.c **** *
  72:.\Generated_Source\PSoC5/Dispenser.c **** * Reentrant:
  73:.\Generated_Source\PSoC5/Dispenser.c **** *  No.
  74:.\Generated_Source\PSoC5/Dispenser.c **** *
  75:.\Generated_Source\PSoC5/Dispenser.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC5/Dispenser.c **** void Dispenser_Start(void) 
  77:.\Generated_Source\PSoC5/Dispenser.c **** {
  61              		.loc 1 77 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65 0000 80B5     		push	{r7, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 7, -8
  68              		.cfi_offset 14, -4
  69 0002 00AF     		add	r7, sp, #0
  70              		.cfi_def_cfa_register 7
  78:.\Generated_Source\PSoC5/Dispenser.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC5/Dispenser.c ****     if(Dispenser_initVar == 0u)
  71              		.loc 1 79 0
  72 0004 054B     		ldr	r3, .L3
  73 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  74 0008 002B     		cmp	r3, #0
  75 000a 04D1     		bne	.L2
  80:.\Generated_Source\PSoC5/Dispenser.c ****     {
  81:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_Init();
  76              		.loc 1 81 0
  77 000c FFF7FEFF 		bl	Dispenser_Init
  82:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_initVar = 1u;
  78              		.loc 1 82 0
  79 0010 024B     		ldr	r3, .L3
  80 0012 0122     		movs	r2, #1
  81 0014 1A70     		strb	r2, [r3]
  82              	.L2:
  83:.\Generated_Source\PSoC5/Dispenser.c ****     }
  84:.\Generated_Source\PSoC5/Dispenser.c **** 
  85:.\Generated_Source\PSoC5/Dispenser.c ****     Dispenser_Enable();
  83              		.loc 1 85 0
  84 0016 FFF7FEFF 		bl	Dispenser_Enable
  86:.\Generated_Source\PSoC5/Dispenser.c **** }
  85              		.loc 1 86 0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 4


  86 001a 80BD     		pop	{r7, pc}
  87              	.L4:
  88              		.align	2
  89              	.L3:
  90 001c 00000000 		.word	Dispenser_initVar
  91              		.cfi_endproc
  92              	.LFE0:
  93              		.size	Dispenser_Start, .-Dispenser_Start
  94              		.section	.text.Dispenser_Init,"ax",%progbits
  95              		.align	2
  96              		.global	Dispenser_Init
  97              		.thumb
  98              		.thumb_func
  99              		.type	Dispenser_Init, %function
 100              	Dispenser_Init:
 101              	.LFB1:
  87:.\Generated_Source\PSoC5/Dispenser.c **** 
  88:.\Generated_Source\PSoC5/Dispenser.c **** 
  89:.\Generated_Source\PSoC5/Dispenser.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC5/Dispenser.c **** * Function Name: Dispenser_Init
  91:.\Generated_Source\PSoC5/Dispenser.c **** ********************************************************************************
  92:.\Generated_Source\PSoC5/Dispenser.c **** *
  93:.\Generated_Source\PSoC5/Dispenser.c **** * Summary:
  94:.\Generated_Source\PSoC5/Dispenser.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC5/Dispenser.c **** *  dialog settings. It is not necessary to call Dispenser_Init() because
  96:.\Generated_Source\PSoC5/Dispenser.c **** *  the Dispenser_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC5/Dispenser.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC5/Dispenser.c **** *
  99:.\Generated_Source\PSoC5/Dispenser.c **** * Parameters:
 100:.\Generated_Source\PSoC5/Dispenser.c **** *  None.
 101:.\Generated_Source\PSoC5/Dispenser.c **** *
 102:.\Generated_Source\PSoC5/Dispenser.c **** * Return:
 103:.\Generated_Source\PSoC5/Dispenser.c **** *  None.
 104:.\Generated_Source\PSoC5/Dispenser.c **** *
 105:.\Generated_Source\PSoC5/Dispenser.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/Dispenser.c **** void Dispenser_Init(void) 
 107:.\Generated_Source\PSoC5/Dispenser.c **** {
 102              		.loc 1 107 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 1, uses_anonymous_args = 0
 106 0000 80B5     		push	{r7, lr}
 107              		.cfi_def_cfa_offset 8
 108              		.cfi_offset 7, -8
 109              		.cfi_offset 14, -4
 110 0002 00AF     		add	r7, sp, #0
 111              		.cfi_def_cfa_register 7
 108:.\Generated_Source\PSoC5/Dispenser.c ****     #if(Dispenser_RX_ENABLED || Dispenser_HD_ENABLED)
 109:.\Generated_Source\PSoC5/Dispenser.c **** 
 110:.\Generated_Source\PSoC5/Dispenser.c ****         #if (Dispenser_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC5/Dispenser.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC5/Dispenser.c ****             (void) CyIntSetVector(Dispenser_RX_VECT_NUM, &Dispenser_RXISR);
 112              		.loc 1 112 0
 113 0004 0120     		movs	r0, #1
 114 0006 0D49     		ldr	r1, .L6
 115 0008 FFF7FEFF 		bl	CyIntSetVector
 113:.\Generated_Source\PSoC5/Dispenser.c ****             CyIntSetPriority(Dispenser_RX_VECT_NUM, Dispenser_RX_PRIOR_NUM);
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 5


 116              		.loc 1 113 0
 117 000c 0120     		movs	r0, #1
 118 000e 0121     		movs	r1, #1
 119 0010 FFF7FEFF 		bl	CyIntSetPriority
 114:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_errorStatus = 0u;
 120              		.loc 1 114 0
 121 0014 0A4B     		ldr	r3, .L6+4
 122 0016 0022     		movs	r2, #0
 123 0018 1A70     		strb	r2, [r3]
 115:.\Generated_Source\PSoC5/Dispenser.c ****         #endif /* (Dispenser_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC5/Dispenser.c **** 
 117:.\Generated_Source\PSoC5/Dispenser.c ****         #if (Dispenser_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_SetRxAddressMode(Dispenser_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_SetRxAddress1(Dispenser_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_SetRxAddress2(Dispenser_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC5/Dispenser.c ****         #endif /* End Dispenser_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC5/Dispenser.c **** 
 123:.\Generated_Source\PSoC5/Dispenser.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_RXBITCTR_PERIOD_REG = Dispenser_RXBITCTR_INIT;
 124              		.loc 1 124 0
 125 001a 0A4B     		ldr	r3, .L6+8
 126 001c 7222     		movs	r2, #114
 127 001e 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC5/Dispenser.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_RXSTATUS_MASK_REG  = Dispenser_INIT_RX_INTERRUPTS_MASK;
 128              		.loc 1 126 0
 129 0020 094B     		ldr	r3, .L6+12
 130 0022 2022     		movs	r2, #32
 131 0024 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* End Dispenser_RX_ENABLED || Dispenser_HD_ENABLED*/
 128:.\Generated_Source\PSoC5/Dispenser.c **** 
 129:.\Generated_Source\PSoC5/Dispenser.c ****     #if(Dispenser_TX_ENABLED)
 130:.\Generated_Source\PSoC5/Dispenser.c ****         #if (Dispenser_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC5/Dispenser.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC5/Dispenser.c ****             (void) CyIntSetVector(Dispenser_TX_VECT_NUM, &Dispenser_TXISR);
 133:.\Generated_Source\PSoC5/Dispenser.c ****             CyIntSetPriority(Dispenser_TX_VECT_NUM, Dispenser_TX_PRIOR_NUM);
 134:.\Generated_Source\PSoC5/Dispenser.c ****         #endif /* (Dispenser_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC5/Dispenser.c **** 
 136:.\Generated_Source\PSoC5/Dispenser.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC5/Dispenser.c ****         #if (Dispenser_TXCLKGEN_DP)
 138:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_TXBITCLKGEN_CTR_REG = Dispenser_BIT_CENTER;
 132              		.loc 1 138 0
 133 0026 094B     		ldr	r3, .L6+16
 134 0028 0622     		movs	r2, #6
 135 002a 1A70     		strb	r2, [r3]
 139:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_TXBITCLKTX_COMPLETE_REG = ((Dispenser_NUMBER_OF_DATA_BITS +
 136              		.loc 1 139 0
 137 002c 084B     		ldr	r3, .L6+20
 138 002e 4722     		movs	r2, #71
 139 0030 1A70     		strb	r2, [r3]
 140:.\Generated_Source\PSoC5/Dispenser.c ****                         Dispenser_NUMBER_OF_START_BIT) * Dispenser_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC5/Dispenser.c ****         #else
 142:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_TXBITCTR_PERIOD_REG = ((Dispenser_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC5/Dispenser.c ****                         Dispenser_NUMBER_OF_START_BIT) * Dispenser_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC5/Dispenser.c ****         #endif /* End Dispenser_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC5/Dispenser.c **** 
 146:.\Generated_Source\PSoC5/Dispenser.c ****         /* Configure the Initial TX interrupt mask */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 6


 147:.\Generated_Source\PSoC5/Dispenser.c ****         #if (Dispenser_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_TXSTATUS_MASK_REG = Dispenser_TX_STS_FIFO_EMPTY;
 149:.\Generated_Source\PSoC5/Dispenser.c ****         #else
 150:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_TXSTATUS_MASK_REG = Dispenser_INIT_TX_INTERRUPTS_MASK;
 140              		.loc 1 150 0
 141 0032 084B     		ldr	r3, .L6+24
 142 0034 0022     		movs	r2, #0
 143 0036 1A70     		strb	r2, [r3]
 151:.\Generated_Source\PSoC5/Dispenser.c ****         #endif /*End Dispenser_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC5/Dispenser.c **** 
 153:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* End Dispenser_TX_ENABLED */
 154:.\Generated_Source\PSoC5/Dispenser.c **** 
 155:.\Generated_Source\PSoC5/Dispenser.c ****     #if(Dispenser_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_WriteControlRegister( \
 157:.\Generated_Source\PSoC5/Dispenser.c ****             (Dispenser_ReadControlRegister() & (uint8)~Dispenser_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC5/Dispenser.c ****             (uint8)(Dispenser_PARITY_TYPE << Dispenser_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* End Dispenser_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC5/Dispenser.c **** }
 144              		.loc 1 160 0
 145 0038 80BD     		pop	{r7, pc}
 146              	.L7:
 147 003a 00BF     		.align	2
 148              	.L6:
 149 003c 00000000 		.word	Dispenser_RXISR
 150 0040 00000000 		.word	Dispenser_errorStatus
 151 0044 85640040 		.word	1073767557
 152 0048 86640040 		.word	1073767558
 153 004c 20640040 		.word	1073767456
 154 0050 30640040 		.word	1073767472
 155 0054 81640040 		.word	1073767553
 156              		.cfi_endproc
 157              	.LFE1:
 158              		.size	Dispenser_Init, .-Dispenser_Init
 159              		.section	.text.Dispenser_Enable,"ax",%progbits
 160              		.align	2
 161              		.global	Dispenser_Enable
 162              		.thumb
 163              		.thumb_func
 164              		.type	Dispenser_Enable, %function
 165              	Dispenser_Enable:
 166              	.LFB2:
 161:.\Generated_Source\PSoC5/Dispenser.c **** 
 162:.\Generated_Source\PSoC5/Dispenser.c **** 
 163:.\Generated_Source\PSoC5/Dispenser.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/Dispenser.c **** * Function Name: Dispenser_Enable
 165:.\Generated_Source\PSoC5/Dispenser.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/Dispenser.c **** *
 167:.\Generated_Source\PSoC5/Dispenser.c **** * Summary:
 168:.\Generated_Source\PSoC5/Dispenser.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC5/Dispenser.c **** *  to call Dispenser_Enable() because the Dispenser_Start() API
 170:.\Generated_Source\PSoC5/Dispenser.c **** *  calls this function, which is the preferred method to begin component
 171:.\Generated_Source\PSoC5/Dispenser.c **** *  operation.
 172:.\Generated_Source\PSoC5/Dispenser.c **** 
 173:.\Generated_Source\PSoC5/Dispenser.c **** * Parameters:
 174:.\Generated_Source\PSoC5/Dispenser.c **** *  None.
 175:.\Generated_Source\PSoC5/Dispenser.c **** *
 176:.\Generated_Source\PSoC5/Dispenser.c **** * Return:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 7


 177:.\Generated_Source\PSoC5/Dispenser.c **** *  None.
 178:.\Generated_Source\PSoC5/Dispenser.c **** *
 179:.\Generated_Source\PSoC5/Dispenser.c **** * Global Variables:
 180:.\Generated_Source\PSoC5/Dispenser.c **** *  Dispenser_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC5/Dispenser.c **** *
 182:.\Generated_Source\PSoC5/Dispenser.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC5/Dispenser.c **** void Dispenser_Enable(void) 
 184:.\Generated_Source\PSoC5/Dispenser.c **** {
 167              		.loc 1 184 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 8
 170              		@ frame_needed = 1, uses_anonymous_args = 0
 171 0000 80B5     		push	{r7, lr}
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 7, -8
 174              		.cfi_offset 14, -4
 175 0002 82B0     		sub	sp, sp, #8
 176              		.cfi_def_cfa_offset 16
 177 0004 00AF     		add	r7, sp, #0
 178              		.cfi_def_cfa_register 7
 185:.\Generated_Source\PSoC5/Dispenser.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC5/Dispenser.c ****     enableInterrupts = CyEnterCriticalSection();
 179              		.loc 1 186 0
 180 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 181 000a 0346     		mov	r3, r0
 182 000c FB71     		strb	r3, [r7, #7]
 187:.\Generated_Source\PSoC5/Dispenser.c **** 
 188:.\Generated_Source\PSoC5/Dispenser.c ****     #if (Dispenser_RX_ENABLED || Dispenser_HD_ENABLED)
 189:.\Generated_Source\PSoC5/Dispenser.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_RXBITCTR_CONTROL_REG |= Dispenser_CNTR_ENABLE;
 183              		.loc 1 190 0
 184 000e 114A     		ldr	r2, .L9
 185 0010 104B     		ldr	r3, .L9
 186 0012 1B78     		ldrb	r3, [r3]
 187 0014 DBB2     		uxtb	r3, r3
 188 0016 43F02003 		orr	r3, r3, #32
 189 001a DBB2     		uxtb	r3, r3
 190 001c 1370     		strb	r3, [r2]
 191:.\Generated_Source\PSoC5/Dispenser.c **** 
 192:.\Generated_Source\PSoC5/Dispenser.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_RXSTATUS_ACTL_REG  |= Dispenser_INT_ENABLE;
 191              		.loc 1 193 0
 192 001e 0E4A     		ldr	r2, .L9+4
 193 0020 0D4B     		ldr	r3, .L9+4
 194 0022 1B78     		ldrb	r3, [r3]
 195 0024 DBB2     		uxtb	r3, r3
 196 0026 43F01003 		orr	r3, r3, #16
 197 002a DBB2     		uxtb	r3, r3
 198 002c 1370     		strb	r3, [r2]
 194:.\Generated_Source\PSoC5/Dispenser.c **** 
 195:.\Generated_Source\PSoC5/Dispenser.c ****         #if (Dispenser_RX_INTERRUPT_ENABLED)
 196:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_EnableRxInt();
 199              		.loc 1 196 0
 200 002e 0B4B     		ldr	r3, .L9+8
 201 0030 0222     		movs	r2, #2
 202 0032 1A60     		str	r2, [r3]
 197:.\Generated_Source\PSoC5/Dispenser.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 8


 198:.\Generated_Source\PSoC5/Dispenser.c ****             #if (Dispenser_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC5/Dispenser.c ****                 Dispenser_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC5/Dispenser.c ****             #endif /* (Dispenser_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC5/Dispenser.c ****         #endif /* (Dispenser_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* (Dispenser_RX_ENABLED || Dispenser_HD_ENABLED) */
 203:.\Generated_Source\PSoC5/Dispenser.c **** 
 204:.\Generated_Source\PSoC5/Dispenser.c ****     #if(Dispenser_TX_ENABLED)
 205:.\Generated_Source\PSoC5/Dispenser.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC5/Dispenser.c ****         #if(!Dispenser_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_TXBITCTR_CONTROL_REG |= Dispenser_CNTR_ENABLE;
 208:.\Generated_Source\PSoC5/Dispenser.c ****         #endif /* End Dispenser_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC5/Dispenser.c **** 
 210:.\Generated_Source\PSoC5/Dispenser.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_TXSTATUS_ACTL_REG |= Dispenser_INT_ENABLE;
 203              		.loc 1 211 0
 204 0034 0A4A     		ldr	r2, .L9+12
 205 0036 0A4B     		ldr	r3, .L9+12
 206 0038 1B78     		ldrb	r3, [r3]
 207 003a DBB2     		uxtb	r3, r3
 208 003c 43F01003 		orr	r3, r3, #16
 209 0040 DBB2     		uxtb	r3, r3
 210 0042 1370     		strb	r3, [r2]
 212:.\Generated_Source\PSoC5/Dispenser.c ****         #if (Dispenser_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_EnableTxInt();
 215:.\Generated_Source\PSoC5/Dispenser.c ****         #endif /* (Dispenser_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC5/Dispenser.c ****      #endif /* (Dispenser_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC5/Dispenser.c **** 
 218:.\Generated_Source\PSoC5/Dispenser.c ****     #if (Dispenser_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_IntClock_Start();  /* Enable the clock */
 220:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* (Dispenser_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC5/Dispenser.c **** 
 222:.\Generated_Source\PSoC5/Dispenser.c ****     CyExitCriticalSection(enableInterrupts);
 211              		.loc 1 222 0
 212 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 213 0046 1846     		mov	r0, r3
 214 0048 FFF7FEFF 		bl	CyExitCriticalSection
 223:.\Generated_Source\PSoC5/Dispenser.c **** }
 215              		.loc 1 223 0
 216 004c 0837     		adds	r7, r7, #8
 217              		.cfi_def_cfa_offset 8
 218 004e BD46     		mov	sp, r7
 219              		.cfi_def_cfa_register 13
 220              		@ sp needed
 221 0050 80BD     		pop	{r7, pc}
 222              	.L10:
 223 0052 00BF     		.align	2
 224              	.L9:
 225 0054 95640040 		.word	1073767573
 226 0058 96640040 		.word	1073767574
 227 005c 00E100E0 		.word	-536813312
 228 0060 91640040 		.word	1073767569
 229              		.cfi_endproc
 230              	.LFE2:
 231              		.size	Dispenser_Enable, .-Dispenser_Enable
 232              		.section	.text.Dispenser_Stop,"ax",%progbits
 233              		.align	2
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 9


 234              		.global	Dispenser_Stop
 235              		.thumb
 236              		.thumb_func
 237              		.type	Dispenser_Stop, %function
 238              	Dispenser_Stop:
 239              	.LFB3:
 224:.\Generated_Source\PSoC5/Dispenser.c **** 
 225:.\Generated_Source\PSoC5/Dispenser.c **** 
 226:.\Generated_Source\PSoC5/Dispenser.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/Dispenser.c **** * Function Name: Dispenser_Stop
 228:.\Generated_Source\PSoC5/Dispenser.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/Dispenser.c **** *
 230:.\Generated_Source\PSoC5/Dispenser.c **** * Summary:
 231:.\Generated_Source\PSoC5/Dispenser.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC5/Dispenser.c **** *
 233:.\Generated_Source\PSoC5/Dispenser.c **** * Parameters:
 234:.\Generated_Source\PSoC5/Dispenser.c **** *  None.
 235:.\Generated_Source\PSoC5/Dispenser.c **** *
 236:.\Generated_Source\PSoC5/Dispenser.c **** * Return:
 237:.\Generated_Source\PSoC5/Dispenser.c **** *  None.
 238:.\Generated_Source\PSoC5/Dispenser.c **** *
 239:.\Generated_Source\PSoC5/Dispenser.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC5/Dispenser.c **** void Dispenser_Stop(void) 
 241:.\Generated_Source\PSoC5/Dispenser.c **** {
 240              		.loc 1 241 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 8
 243              		@ frame_needed = 1, uses_anonymous_args = 0
 244 0000 80B5     		push	{r7, lr}
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 82B0     		sub	sp, sp, #8
 249              		.cfi_def_cfa_offset 16
 250 0004 00AF     		add	r7, sp, #0
 251              		.cfi_def_cfa_register 7
 242:.\Generated_Source\PSoC5/Dispenser.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC5/Dispenser.c ****     enableInterrupts = CyEnterCriticalSection();
 252              		.loc 1 243 0
 253 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 254 000a 0346     		mov	r3, r0
 255 000c FB71     		strb	r3, [r7, #7]
 244:.\Generated_Source\PSoC5/Dispenser.c **** 
 245:.\Generated_Source\PSoC5/Dispenser.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC5/Dispenser.c ****     #if (Dispenser_RX_ENABLED || Dispenser_HD_ENABLED)
 247:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_RXBITCTR_CONTROL_REG &= (uint8) ~Dispenser_CNTR_ENABLE;
 256              		.loc 1 247 0
 257 000e 114A     		ldr	r2, .L12
 258 0010 104B     		ldr	r3, .L12
 259 0012 1B78     		ldrb	r3, [r3]
 260 0014 DBB2     		uxtb	r3, r3
 261 0016 23F02003 		bic	r3, r3, #32
 262 001a DBB2     		uxtb	r3, r3
 263 001c 1370     		strb	r3, [r2]
 248:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* (Dispenser_RX_ENABLED || Dispenser_HD_ENABLED) */
 249:.\Generated_Source\PSoC5/Dispenser.c **** 
 250:.\Generated_Source\PSoC5/Dispenser.c ****     #if (Dispenser_TX_ENABLED)
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 10


 251:.\Generated_Source\PSoC5/Dispenser.c ****         #if(!Dispenser_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_TXBITCTR_CONTROL_REG &= (uint8) ~Dispenser_CNTR_ENABLE;
 253:.\Generated_Source\PSoC5/Dispenser.c ****         #endif /* (!Dispenser_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* (Dispenser_TX_ENABLED) */
 255:.\Generated_Source\PSoC5/Dispenser.c **** 
 256:.\Generated_Source\PSoC5/Dispenser.c ****     #if (Dispenser_INTERNAL_CLOCK_USED)
 257:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_IntClock_Stop();   /* Disable the clock */
 258:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* (Dispenser_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC5/Dispenser.c **** 
 260:.\Generated_Source\PSoC5/Dispenser.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC5/Dispenser.c ****     #if (Dispenser_RX_ENABLED || Dispenser_HD_ENABLED)
 262:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_RXSTATUS_ACTL_REG  &= (uint8) ~Dispenser_INT_ENABLE;
 264              		.loc 1 262 0
 265 001e 0E4A     		ldr	r2, .L12+4
 266 0020 0D4B     		ldr	r3, .L12+4
 267 0022 1B78     		ldrb	r3, [r3]
 268 0024 DBB2     		uxtb	r3, r3
 269 0026 23F01003 		bic	r3, r3, #16
 270 002a DBB2     		uxtb	r3, r3
 271 002c 1370     		strb	r3, [r2]
 263:.\Generated_Source\PSoC5/Dispenser.c **** 
 264:.\Generated_Source\PSoC5/Dispenser.c ****         #if (Dispenser_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_DisableRxInt();
 272              		.loc 1 265 0
 273 002e 0B4B     		ldr	r3, .L12+8
 274 0030 0222     		movs	r2, #2
 275 0032 1A60     		str	r2, [r3]
 266:.\Generated_Source\PSoC5/Dispenser.c ****         #endif /* (Dispenser_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* (Dispenser_RX_ENABLED || Dispenser_HD_ENABLED) */
 268:.\Generated_Source\PSoC5/Dispenser.c **** 
 269:.\Generated_Source\PSoC5/Dispenser.c ****     #if (Dispenser_TX_ENABLED)
 270:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_TXSTATUS_ACTL_REG &= (uint8) ~Dispenser_INT_ENABLE;
 276              		.loc 1 270 0
 277 0034 0A4A     		ldr	r2, .L12+12
 278 0036 0A4B     		ldr	r3, .L12+12
 279 0038 1B78     		ldrb	r3, [r3]
 280 003a DBB2     		uxtb	r3, r3
 281 003c 23F01003 		bic	r3, r3, #16
 282 0040 DBB2     		uxtb	r3, r3
 283 0042 1370     		strb	r3, [r2]
 271:.\Generated_Source\PSoC5/Dispenser.c **** 
 272:.\Generated_Source\PSoC5/Dispenser.c ****         #if (Dispenser_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_DisableTxInt();
 274:.\Generated_Source\PSoC5/Dispenser.c ****         #endif /* (Dispenser_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* (Dispenser_TX_ENABLED) */
 276:.\Generated_Source\PSoC5/Dispenser.c **** 
 277:.\Generated_Source\PSoC5/Dispenser.c ****     CyExitCriticalSection(enableInterrupts);
 284              		.loc 1 277 0
 285 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 286 0046 1846     		mov	r0, r3
 287 0048 FFF7FEFF 		bl	CyExitCriticalSection
 278:.\Generated_Source\PSoC5/Dispenser.c **** }
 288              		.loc 1 278 0
 289 004c 0837     		adds	r7, r7, #8
 290              		.cfi_def_cfa_offset 8
 291 004e BD46     		mov	sp, r7
 292              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 11


 293              		@ sp needed
 294 0050 80BD     		pop	{r7, pc}
 295              	.L13:
 296 0052 00BF     		.align	2
 297              	.L12:
 298 0054 95640040 		.word	1073767573
 299 0058 96640040 		.word	1073767574
 300 005c 80E100E0 		.word	-536813184
 301 0060 91640040 		.word	1073767569
 302              		.cfi_endproc
 303              	.LFE3:
 304              		.size	Dispenser_Stop, .-Dispenser_Stop
 305              		.section	.text.Dispenser_ReadControlRegister,"ax",%progbits
 306              		.align	2
 307              		.global	Dispenser_ReadControlRegister
 308              		.thumb
 309              		.thumb_func
 310              		.type	Dispenser_ReadControlRegister, %function
 311              	Dispenser_ReadControlRegister:
 312              	.LFB4:
 279:.\Generated_Source\PSoC5/Dispenser.c **** 
 280:.\Generated_Source\PSoC5/Dispenser.c **** 
 281:.\Generated_Source\PSoC5/Dispenser.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC5/Dispenser.c **** * Function Name: Dispenser_ReadControlRegister
 283:.\Generated_Source\PSoC5/Dispenser.c **** ********************************************************************************
 284:.\Generated_Source\PSoC5/Dispenser.c **** *
 285:.\Generated_Source\PSoC5/Dispenser.c **** * Summary:
 286:.\Generated_Source\PSoC5/Dispenser.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC5/Dispenser.c **** *
 288:.\Generated_Source\PSoC5/Dispenser.c **** * Parameters:
 289:.\Generated_Source\PSoC5/Dispenser.c **** *  None.
 290:.\Generated_Source\PSoC5/Dispenser.c **** *
 291:.\Generated_Source\PSoC5/Dispenser.c **** * Return:
 292:.\Generated_Source\PSoC5/Dispenser.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC5/Dispenser.c **** *
 294:.\Generated_Source\PSoC5/Dispenser.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC5/Dispenser.c **** uint8 Dispenser_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC5/Dispenser.c **** {
 313              		.loc 1 296 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 1, uses_anonymous_args = 0
 317              		@ link register save eliminated.
 318 0000 80B4     		push	{r7}
 319              		.cfi_def_cfa_offset 4
 320              		.cfi_offset 7, -4
 321 0002 00AF     		add	r7, sp, #0
 322              		.cfi_def_cfa_register 7
 297:.\Generated_Source\PSoC5/Dispenser.c ****     #if (Dispenser_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC5/Dispenser.c ****         return(0u);
 323              		.loc 1 298 0
 324 0004 0023     		movs	r3, #0
 299:.\Generated_Source\PSoC5/Dispenser.c ****     #else
 300:.\Generated_Source\PSoC5/Dispenser.c ****         return(Dispenser_CONTROL_REG);
 301:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* (Dispenser_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC5/Dispenser.c **** }
 325              		.loc 1 302 0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 12


 326 0006 1846     		mov	r0, r3
 327 0008 BD46     		mov	sp, r7
 328              		.cfi_def_cfa_register 13
 329              		@ sp needed
 330 000a 5DF8047B 		ldr	r7, [sp], #4
 331              		.cfi_restore 7
 332              		.cfi_def_cfa_offset 0
 333 000e 7047     		bx	lr
 334              		.cfi_endproc
 335              	.LFE4:
 336              		.size	Dispenser_ReadControlRegister, .-Dispenser_ReadControlRegister
 337              		.section	.text.Dispenser_WriteControlRegister,"ax",%progbits
 338              		.align	2
 339              		.global	Dispenser_WriteControlRegister
 340              		.thumb
 341              		.thumb_func
 342              		.type	Dispenser_WriteControlRegister, %function
 343              	Dispenser_WriteControlRegister:
 344              	.LFB5:
 303:.\Generated_Source\PSoC5/Dispenser.c **** 
 304:.\Generated_Source\PSoC5/Dispenser.c **** 
 305:.\Generated_Source\PSoC5/Dispenser.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC5/Dispenser.c **** * Function Name: Dispenser_WriteControlRegister
 307:.\Generated_Source\PSoC5/Dispenser.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/Dispenser.c **** *
 309:.\Generated_Source\PSoC5/Dispenser.c **** * Summary:
 310:.\Generated_Source\PSoC5/Dispenser.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC5/Dispenser.c **** *
 312:.\Generated_Source\PSoC5/Dispenser.c **** * Parameters:
 313:.\Generated_Source\PSoC5/Dispenser.c **** *  control:  control register value
 314:.\Generated_Source\PSoC5/Dispenser.c **** *
 315:.\Generated_Source\PSoC5/Dispenser.c **** * Return:
 316:.\Generated_Source\PSoC5/Dispenser.c **** *  None.
 317:.\Generated_Source\PSoC5/Dispenser.c **** *
 318:.\Generated_Source\PSoC5/Dispenser.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC5/Dispenser.c **** void  Dispenser_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC5/Dispenser.c **** {
 345              		.loc 1 320 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 8
 348              		@ frame_needed = 1, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 350 0000 80B4     		push	{r7}
 351              		.cfi_def_cfa_offset 4
 352              		.cfi_offset 7, -4
 353 0002 83B0     		sub	sp, sp, #12
 354              		.cfi_def_cfa_offset 16
 355 0004 00AF     		add	r7, sp, #0
 356              		.cfi_def_cfa_register 7
 357 0006 0346     		mov	r3, r0
 358 0008 FB71     		strb	r3, [r7, #7]
 321:.\Generated_Source\PSoC5/Dispenser.c ****     #if (Dispenser_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC5/Dispenser.c ****         if(0u != control)
 323:.\Generated_Source\PSoC5/Dispenser.c ****         {
 324:.\Generated_Source\PSoC5/Dispenser.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC5/Dispenser.c ****         }
 326:.\Generated_Source\PSoC5/Dispenser.c ****     #else
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 13


 327:.\Generated_Source\PSoC5/Dispenser.c ****        Dispenser_CONTROL_REG = control;
 328:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* (Dispenser_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC5/Dispenser.c **** }
 359              		.loc 1 329 0
 360 000a 0C37     		adds	r7, r7, #12
 361              		.cfi_def_cfa_offset 4
 362 000c BD46     		mov	sp, r7
 363              		.cfi_def_cfa_register 13
 364              		@ sp needed
 365 000e 5DF8047B 		ldr	r7, [sp], #4
 366              		.cfi_restore 7
 367              		.cfi_def_cfa_offset 0
 368 0012 7047     		bx	lr
 369              		.cfi_endproc
 370              	.LFE5:
 371              		.size	Dispenser_WriteControlRegister, .-Dispenser_WriteControlRegister
 372              		.section	.text.Dispenser_SetRxInterruptMode,"ax",%progbits
 373              		.align	2
 374              		.global	Dispenser_SetRxInterruptMode
 375              		.thumb
 376              		.thumb_func
 377              		.type	Dispenser_SetRxInterruptMode, %function
 378              	Dispenser_SetRxInterruptMode:
 379              	.LFB6:
 330:.\Generated_Source\PSoC5/Dispenser.c **** 
 331:.\Generated_Source\PSoC5/Dispenser.c **** 
 332:.\Generated_Source\PSoC5/Dispenser.c **** #if(Dispenser_RX_ENABLED || Dispenser_HD_ENABLED)
 333:.\Generated_Source\PSoC5/Dispenser.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC5/Dispenser.c ****     * Function Name: Dispenser_SetRxInterruptMode
 335:.\Generated_Source\PSoC5/Dispenser.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC5/Dispenser.c ****     *
 337:.\Generated_Source\PSoC5/Dispenser.c ****     * Summary:
 338:.\Generated_Source\PSoC5/Dispenser.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC5/Dispenser.c ****     *
 340:.\Generated_Source\PSoC5/Dispenser.c ****     * Parameters:
 341:.\Generated_Source\PSoC5/Dispenser.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC5/Dispenser.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC5/Dispenser.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC5/Dispenser.c ****     *      Dispenser_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC5/Dispenser.c ****     *      Dispenser_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC5/Dispenser.c ****     *      Dispenser_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC5/Dispenser.c ****     *      Dispenser_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC5/Dispenser.c ****     *      Dispenser_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC5/Dispenser.c ****     *      Dispenser_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC5/Dispenser.c ****     *      Dispenser_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC5/Dispenser.c ****     *
 352:.\Generated_Source\PSoC5/Dispenser.c ****     * Return:
 353:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
 354:.\Generated_Source\PSoC5/Dispenser.c ****     *
 355:.\Generated_Source\PSoC5/Dispenser.c ****     * Theory:
 356:.\Generated_Source\PSoC5/Dispenser.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC5/Dispenser.c ****     *
 358:.\Generated_Source\PSoC5/Dispenser.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC5/Dispenser.c ****     void Dispenser_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC5/Dispenser.c ****     {
 380              		.loc 1 360 0
 381              		.cfi_startproc
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 14


 382              		@ args = 0, pretend = 0, frame = 8
 383              		@ frame_needed = 1, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 385 0000 80B4     		push	{r7}
 386              		.cfi_def_cfa_offset 4
 387              		.cfi_offset 7, -4
 388 0002 83B0     		sub	sp, sp, #12
 389              		.cfi_def_cfa_offset 16
 390 0004 00AF     		add	r7, sp, #0
 391              		.cfi_def_cfa_register 7
 392 0006 0346     		mov	r3, r0
 393 0008 FB71     		strb	r3, [r7, #7]
 361:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_RXSTATUS_MASK_REG  = intSrc;
 394              		.loc 1 361 0
 395 000a 044A     		ldr	r2, .L18
 396 000c FB79     		ldrb	r3, [r7, #7]
 397 000e 1370     		strb	r3, [r2]
 362:.\Generated_Source\PSoC5/Dispenser.c ****     }
 398              		.loc 1 362 0
 399 0010 0C37     		adds	r7, r7, #12
 400              		.cfi_def_cfa_offset 4
 401 0012 BD46     		mov	sp, r7
 402              		.cfi_def_cfa_register 13
 403              		@ sp needed
 404 0014 5DF8047B 		ldr	r7, [sp], #4
 405              		.cfi_restore 7
 406              		.cfi_def_cfa_offset 0
 407 0018 7047     		bx	lr
 408              	.L19:
 409 001a 00BF     		.align	2
 410              	.L18:
 411 001c 86640040 		.word	1073767558
 412              		.cfi_endproc
 413              	.LFE6:
 414              		.size	Dispenser_SetRxInterruptMode, .-Dispenser_SetRxInterruptMode
 415              		.section	.text.Dispenser_ReadRxData,"ax",%progbits
 416              		.align	2
 417              		.global	Dispenser_ReadRxData
 418              		.thumb
 419              		.thumb_func
 420              		.type	Dispenser_ReadRxData, %function
 421              	Dispenser_ReadRxData:
 422              	.LFB7:
 363:.\Generated_Source\PSoC5/Dispenser.c **** 
 364:.\Generated_Source\PSoC5/Dispenser.c **** 
 365:.\Generated_Source\PSoC5/Dispenser.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC5/Dispenser.c ****     * Function Name: Dispenser_ReadRxData
 367:.\Generated_Source\PSoC5/Dispenser.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC5/Dispenser.c ****     *
 369:.\Generated_Source\PSoC5/Dispenser.c ****     * Summary:
 370:.\Generated_Source\PSoC5/Dispenser.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC5/Dispenser.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC5/Dispenser.c ****     *
 373:.\Generated_Source\PSoC5/Dispenser.c ****     * Parameters:
 374:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
 375:.\Generated_Source\PSoC5/Dispenser.c ****     *
 376:.\Generated_Source\PSoC5/Dispenser.c ****     * Return:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 15


 377:.\Generated_Source\PSoC5/Dispenser.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC5/Dispenser.c ****     *
 379:.\Generated_Source\PSoC5/Dispenser.c ****     * Global Variables:
 380:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC5/Dispenser.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC5/Dispenser.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC5/Dispenser.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC5/Dispenser.c ****     *
 388:.\Generated_Source\PSoC5/Dispenser.c ****     * Reentrant:
 389:.\Generated_Source\PSoC5/Dispenser.c ****     *  No.
 390:.\Generated_Source\PSoC5/Dispenser.c ****     *
 391:.\Generated_Source\PSoC5/Dispenser.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC5/Dispenser.c ****     uint8 Dispenser_ReadRxData(void) 
 393:.\Generated_Source\PSoC5/Dispenser.c ****     {
 423              		.loc 1 393 0
 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 8
 426              		@ frame_needed = 1, uses_anonymous_args = 0
 427              		@ link register save eliminated.
 428 0000 80B4     		push	{r7}
 429              		.cfi_def_cfa_offset 4
 430              		.cfi_offset 7, -4
 431 0002 83B0     		sub	sp, sp, #12
 432              		.cfi_def_cfa_offset 16
 433 0004 00AF     		add	r7, sp, #0
 434              		.cfi_def_cfa_register 7
 394:.\Generated_Source\PSoC5/Dispenser.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC5/Dispenser.c **** 
 396:.\Generated_Source\PSoC5/Dispenser.c ****     #if (Dispenser_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC5/Dispenser.c **** 
 398:.\Generated_Source\PSoC5/Dispenser.c ****         uint16 locRxBufferRead;
 399:.\Generated_Source\PSoC5/Dispenser.c ****         uint16 locRxBufferWrite;
 400:.\Generated_Source\PSoC5/Dispenser.c **** 
 401:.\Generated_Source\PSoC5/Dispenser.c ****         /* Protect variables that could change on interrupt */
 402:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_DisableRxInt();
 435              		.loc 1 402 0
 436 0006 1C4B     		ldr	r3, .L27
 437 0008 0222     		movs	r2, #2
 438 000a 1A60     		str	r2, [r3]
 403:.\Generated_Source\PSoC5/Dispenser.c **** 
 404:.\Generated_Source\PSoC5/Dispenser.c ****         locRxBufferRead  = Dispenser_rxBufferRead;
 439              		.loc 1 404 0
 440 000c 1B4B     		ldr	r3, .L27+4
 441 000e 1B88     		ldrh	r3, [r3]	@ movhi
 442 0010 BB80     		strh	r3, [r7, #4]	@ movhi
 405:.\Generated_Source\PSoC5/Dispenser.c ****         locRxBufferWrite = Dispenser_rxBufferWrite;
 443              		.loc 1 405 0
 444 0012 1B4B     		ldr	r3, .L27+8
 445 0014 1B88     		ldrh	r3, [r3]	@ movhi
 446 0016 7B80     		strh	r3, [r7, #2]	@ movhi
 406:.\Generated_Source\PSoC5/Dispenser.c **** 
 407:.\Generated_Source\PSoC5/Dispenser.c ****         if( (Dispenser_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 447              		.loc 1 407 0
 448 0018 1A4B     		ldr	r3, .L27+12
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 16


 449 001a 1B78     		ldrb	r3, [r3]
 450 001c DBB2     		uxtb	r3, r3
 451 001e 002B     		cmp	r3, #0
 452 0020 03D1     		bne	.L21
 453              		.loc 1 407 0 is_stmt 0 discriminator 1
 454 0022 BA88     		ldrh	r2, [r7, #4]
 455 0024 7B88     		ldrh	r3, [r7, #2]
 456 0026 9A42     		cmp	r2, r3
 457 0028 18D0     		beq	.L22
 458              	.L21:
 408:.\Generated_Source\PSoC5/Dispenser.c ****         {
 409:.\Generated_Source\PSoC5/Dispenser.c ****             rxData = Dispenser_rxBuffer[locRxBufferRead];
 459              		.loc 1 409 0 is_stmt 1
 460 002a BB88     		ldrh	r3, [r7, #4]
 461 002c 164A     		ldr	r2, .L27+16
 462 002e D35C     		ldrb	r3, [r2, r3]
 463 0030 FB71     		strb	r3, [r7, #7]
 410:.\Generated_Source\PSoC5/Dispenser.c ****             locRxBufferRead++;
 464              		.loc 1 410 0
 465 0032 BB88     		ldrh	r3, [r7, #4]
 466 0034 0133     		adds	r3, r3, #1
 467 0036 BB80     		strh	r3, [r7, #4]	@ movhi
 411:.\Generated_Source\PSoC5/Dispenser.c **** 
 412:.\Generated_Source\PSoC5/Dispenser.c ****             if(locRxBufferRead >= Dispenser_RX_BUFFER_SIZE)
 468              		.loc 1 412 0
 469 0038 BB88     		ldrh	r3, [r7, #4]
 470 003a FF2B     		cmp	r3, #255
 471 003c 01D9     		bls	.L23
 413:.\Generated_Source\PSoC5/Dispenser.c ****             {
 414:.\Generated_Source\PSoC5/Dispenser.c ****                 locRxBufferRead = 0u;
 472              		.loc 1 414 0
 473 003e 0023     		movs	r3, #0
 474 0040 BB80     		strh	r3, [r7, #4]	@ movhi
 475              	.L23:
 415:.\Generated_Source\PSoC5/Dispenser.c ****             }
 416:.\Generated_Source\PSoC5/Dispenser.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_rxBufferRead = locRxBufferRead;
 476              		.loc 1 417 0
 477 0042 0E4A     		ldr	r2, .L27+4
 478 0044 BB88     		ldrh	r3, [r7, #4]	@ movhi
 479 0046 1380     		strh	r3, [r2]	@ movhi
 418:.\Generated_Source\PSoC5/Dispenser.c **** 
 419:.\Generated_Source\PSoC5/Dispenser.c ****             if(Dispenser_rxBufferLoopDetect != 0u)
 480              		.loc 1 419 0
 481 0048 0E4B     		ldr	r3, .L27+12
 482 004a 1B78     		ldrb	r3, [r3]
 483 004c DBB2     		uxtb	r3, r3
 484 004e 002B     		cmp	r3, #0
 485 0050 03D0     		beq	.L24
 420:.\Generated_Source\PSoC5/Dispenser.c ****             {
 421:.\Generated_Source\PSoC5/Dispenser.c ****                 Dispenser_rxBufferLoopDetect = 0u;
 486              		.loc 1 421 0
 487 0052 0C4B     		ldr	r3, .L27+12
 488 0054 0022     		movs	r2, #0
 489 0056 1A70     		strb	r2, [r3]
 419:.\Generated_Source\PSoC5/Dispenser.c ****             {
 490              		.loc 1 419 0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 17


 491 0058 03E0     		b	.L25
 492              	.L24:
 493 005a 02E0     		b	.L25
 494              	.L22:
 422:.\Generated_Source\PSoC5/Dispenser.c ****                 #if ((Dispenser_RX_INTERRUPT_ENABLED) && (Dispenser_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC5/Dispenser.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC5/Dispenser.c ****                     #if( Dispenser_HD_ENABLED )
 425:.\Generated_Source\PSoC5/Dispenser.c ****                         if((Dispenser_CONTROL_REG & Dispenser_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC5/Dispenser.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC5/Dispenser.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC5/Dispenser.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC5/Dispenser.c ****                             */
 430:.\Generated_Source\PSoC5/Dispenser.c ****                             Dispenser_RXSTATUS_MASK_REG  |= Dispenser_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC5/Dispenser.c ****                         }
 432:.\Generated_Source\PSoC5/Dispenser.c ****                     #else
 433:.\Generated_Source\PSoC5/Dispenser.c ****                         Dispenser_RXSTATUS_MASK_REG  |= Dispenser_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC5/Dispenser.c ****                     #endif /* end Dispenser_HD_ENABLED */
 435:.\Generated_Source\PSoC5/Dispenser.c ****                 #endif /* ((Dispenser_RX_INTERRUPT_ENABLED) && (Dispenser_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC5/Dispenser.c ****             }
 437:.\Generated_Source\PSoC5/Dispenser.c ****         }
 438:.\Generated_Source\PSoC5/Dispenser.c ****         else
 439:.\Generated_Source\PSoC5/Dispenser.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:.\Generated_Source\PSoC5/Dispenser.c ****             rxData = Dispenser_RXDATA_REG;
 495              		.loc 1 440 0
 496 005c 0B4B     		ldr	r3, .L27+20
 497 005e 1B78     		ldrb	r3, [r3]
 498 0060 FB71     		strb	r3, [r7, #7]
 499              	.L25:
 441:.\Generated_Source\PSoC5/Dispenser.c ****         }
 442:.\Generated_Source\PSoC5/Dispenser.c **** 
 443:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_EnableRxInt();
 500              		.loc 1 443 0
 501 0062 0B4B     		ldr	r3, .L27+24
 502 0064 0222     		movs	r2, #2
 503 0066 1A60     		str	r2, [r3]
 444:.\Generated_Source\PSoC5/Dispenser.c **** 
 445:.\Generated_Source\PSoC5/Dispenser.c ****     #else
 446:.\Generated_Source\PSoC5/Dispenser.c **** 
 447:.\Generated_Source\PSoC5/Dispenser.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC5/Dispenser.c ****         rxData = Dispenser_RXDATA_REG;
 449:.\Generated_Source\PSoC5/Dispenser.c **** 
 450:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* (Dispenser_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC5/Dispenser.c **** 
 452:.\Generated_Source\PSoC5/Dispenser.c ****         return(rxData);
 504              		.loc 1 452 0
 505 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453:.\Generated_Source\PSoC5/Dispenser.c ****     }
 506              		.loc 1 453 0
 507 006a 1846     		mov	r0, r3
 508 006c 0C37     		adds	r7, r7, #12
 509              		.cfi_def_cfa_offset 4
 510 006e BD46     		mov	sp, r7
 511              		.cfi_def_cfa_register 13
 512              		@ sp needed
 513 0070 5DF8047B 		ldr	r7, [sp], #4
 514              		.cfi_restore 7
 515              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 18


 516 0074 7047     		bx	lr
 517              	.L28:
 518 0076 00BF     		.align	2
 519              	.L27:
 520 0078 80E100E0 		.word	-536813184
 521 007c 00000000 		.word	Dispenser_rxBufferRead
 522 0080 00000000 		.word	Dispenser_rxBufferWrite
 523 0084 00000000 		.word	Dispenser_rxBufferLoopDetect
 524 0088 00000000 		.word	Dispenser_rxBuffer
 525 008c 42640040 		.word	1073767490
 526 0090 00E100E0 		.word	-536813312
 527              		.cfi_endproc
 528              	.LFE7:
 529              		.size	Dispenser_ReadRxData, .-Dispenser_ReadRxData
 530              		.section	.text.Dispenser_ReadRxStatus,"ax",%progbits
 531              		.align	2
 532              		.global	Dispenser_ReadRxStatus
 533              		.thumb
 534              		.thumb_func
 535              		.type	Dispenser_ReadRxStatus, %function
 536              	Dispenser_ReadRxStatus:
 537              	.LFB8:
 454:.\Generated_Source\PSoC5/Dispenser.c **** 
 455:.\Generated_Source\PSoC5/Dispenser.c **** 
 456:.\Generated_Source\PSoC5/Dispenser.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC5/Dispenser.c ****     * Function Name: Dispenser_ReadRxStatus
 458:.\Generated_Source\PSoC5/Dispenser.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC5/Dispenser.c ****     *
 460:.\Generated_Source\PSoC5/Dispenser.c ****     * Summary:
 461:.\Generated_Source\PSoC5/Dispenser.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC5/Dispenser.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC5/Dispenser.c ****     *
 464:.\Generated_Source\PSoC5/Dispenser.c ****     * Parameters:
 465:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
 466:.\Generated_Source\PSoC5/Dispenser.c ****     *
 467:.\Generated_Source\PSoC5/Dispenser.c ****     * Return:
 468:.\Generated_Source\PSoC5/Dispenser.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC5/Dispenser.c ****     *
 470:.\Generated_Source\PSoC5/Dispenser.c ****     * Side Effect:
 471:.\Generated_Source\PSoC5/Dispenser.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC5/Dispenser.c ****     *  register read.
 475:.\Generated_Source\PSoC5/Dispenser.c ****     *
 476:.\Generated_Source\PSoC5/Dispenser.c ****     * Global Variables:
 477:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC5/Dispenser.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC5/Dispenser.c ****     *   Dispenser_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC5/Dispenser.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC5/Dispenser.c ****     *   Dispenser_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC5/Dispenser.c ****     *   bits.
 483:.\Generated_Source\PSoC5/Dispenser.c ****     *
 484:.\Generated_Source\PSoC5/Dispenser.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC5/Dispenser.c ****     uint8 Dispenser_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC5/Dispenser.c ****     {
 538              		.loc 1 486 0
 539              		.cfi_startproc
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 19


 540              		@ args = 0, pretend = 0, frame = 8
 541              		@ frame_needed = 1, uses_anonymous_args = 0
 542              		@ link register save eliminated.
 543 0000 80B4     		push	{r7}
 544              		.cfi_def_cfa_offset 4
 545              		.cfi_offset 7, -4
 546 0002 83B0     		sub	sp, sp, #12
 547              		.cfi_def_cfa_offset 16
 548 0004 00AF     		add	r7, sp, #0
 549              		.cfi_def_cfa_register 7
 487:.\Generated_Source\PSoC5/Dispenser.c ****         uint8 status;
 488:.\Generated_Source\PSoC5/Dispenser.c **** 
 489:.\Generated_Source\PSoC5/Dispenser.c ****         status = Dispenser_RXSTATUS_REG & Dispenser_RX_HW_MASK;
 550              		.loc 1 489 0
 551 0006 0C4B     		ldr	r3, .L32
 552 0008 1B78     		ldrb	r3, [r3]
 553 000a DBB2     		uxtb	r3, r3
 554 000c 03F07F03 		and	r3, r3, #127
 555 0010 FB71     		strb	r3, [r7, #7]
 490:.\Generated_Source\PSoC5/Dispenser.c **** 
 491:.\Generated_Source\PSoC5/Dispenser.c ****     #if (Dispenser_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC5/Dispenser.c ****         if(Dispenser_rxBufferOverflow != 0u)
 556              		.loc 1 492 0
 557 0012 0A4B     		ldr	r3, .L32+4
 558 0014 1B78     		ldrb	r3, [r3]
 559 0016 DBB2     		uxtb	r3, r3
 560 0018 002B     		cmp	r3, #0
 561 001a 06D0     		beq	.L30
 493:.\Generated_Source\PSoC5/Dispenser.c ****         {
 494:.\Generated_Source\PSoC5/Dispenser.c ****             status |= Dispenser_RX_STS_SOFT_BUFF_OVER;
 562              		.loc 1 494 0
 563 001c FB79     		ldrb	r3, [r7, #7]
 564 001e 63F07F03 		orn	r3, r3, #127
 565 0022 FB71     		strb	r3, [r7, #7]
 495:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_rxBufferOverflow = 0u;
 566              		.loc 1 495 0
 567 0024 054B     		ldr	r3, .L32+4
 568 0026 0022     		movs	r2, #0
 569 0028 1A70     		strb	r2, [r3]
 570              	.L30:
 496:.\Generated_Source\PSoC5/Dispenser.c ****         }
 497:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* (Dispenser_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC5/Dispenser.c **** 
 499:.\Generated_Source\PSoC5/Dispenser.c ****         return(status);
 571              		.loc 1 499 0
 572 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 500:.\Generated_Source\PSoC5/Dispenser.c ****     }
 573              		.loc 1 500 0
 574 002c 1846     		mov	r0, r3
 575 002e 0C37     		adds	r7, r7, #12
 576              		.cfi_def_cfa_offset 4
 577 0030 BD46     		mov	sp, r7
 578              		.cfi_def_cfa_register 13
 579              		@ sp needed
 580 0032 5DF8047B 		ldr	r7, [sp], #4
 581              		.cfi_restore 7
 582              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 20


 583 0036 7047     		bx	lr
 584              	.L33:
 585              		.align	2
 586              	.L32:
 587 0038 66640040 		.word	1073767526
 588 003c 00000000 		.word	Dispenser_rxBufferOverflow
 589              		.cfi_endproc
 590              	.LFE8:
 591              		.size	Dispenser_ReadRxStatus, .-Dispenser_ReadRxStatus
 592              		.section	.text.Dispenser_GetChar,"ax",%progbits
 593              		.align	2
 594              		.global	Dispenser_GetChar
 595              		.thumb
 596              		.thumb_func
 597              		.type	Dispenser_GetChar, %function
 598              	Dispenser_GetChar:
 599              	.LFB9:
 501:.\Generated_Source\PSoC5/Dispenser.c **** 
 502:.\Generated_Source\PSoC5/Dispenser.c **** 
 503:.\Generated_Source\PSoC5/Dispenser.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC5/Dispenser.c ****     * Function Name: Dispenser_GetChar
 505:.\Generated_Source\PSoC5/Dispenser.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC5/Dispenser.c ****     *
 507:.\Generated_Source\PSoC5/Dispenser.c ****     * Summary:
 508:.\Generated_Source\PSoC5/Dispenser.c ****     *  Returns the last received byte of data. Dispenser_GetChar() is
 509:.\Generated_Source\PSoC5/Dispenser.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC5/Dispenser.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC5/Dispenser.c ****     *
 512:.\Generated_Source\PSoC5/Dispenser.c ****     * Parameters:
 513:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
 514:.\Generated_Source\PSoC5/Dispenser.c ****     *
 515:.\Generated_Source\PSoC5/Dispenser.c ****     * Return:
 516:.\Generated_Source\PSoC5/Dispenser.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC5/Dispenser.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC5/Dispenser.c ****     *
 519:.\Generated_Source\PSoC5/Dispenser.c ****     * Global Variables:
 520:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC5/Dispenser.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC5/Dispenser.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC5/Dispenser.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC5/Dispenser.c ****     *
 528:.\Generated_Source\PSoC5/Dispenser.c ****     * Reentrant:
 529:.\Generated_Source\PSoC5/Dispenser.c ****     *  No.
 530:.\Generated_Source\PSoC5/Dispenser.c ****     *
 531:.\Generated_Source\PSoC5/Dispenser.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC5/Dispenser.c ****     uint8 Dispenser_GetChar(void) 
 533:.\Generated_Source\PSoC5/Dispenser.c ****     {
 600              		.loc 1 533 0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 8
 603              		@ frame_needed = 1, uses_anonymous_args = 0
 604              		@ link register save eliminated.
 605 0000 80B4     		push	{r7}
 606              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 21


 607              		.cfi_offset 7, -4
 608 0002 83B0     		sub	sp, sp, #12
 609              		.cfi_def_cfa_offset 16
 610 0004 00AF     		add	r7, sp, #0
 611              		.cfi_def_cfa_register 7
 534:.\Generated_Source\PSoC5/Dispenser.c ****         uint8 rxData = 0u;
 612              		.loc 1 534 0
 613 0006 0023     		movs	r3, #0
 614 0008 FB71     		strb	r3, [r7, #7]
 535:.\Generated_Source\PSoC5/Dispenser.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC5/Dispenser.c **** 
 537:.\Generated_Source\PSoC5/Dispenser.c ****     #if (Dispenser_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC5/Dispenser.c ****         uint16 locRxBufferRead;
 539:.\Generated_Source\PSoC5/Dispenser.c ****         uint16 locRxBufferWrite;
 540:.\Generated_Source\PSoC5/Dispenser.c **** 
 541:.\Generated_Source\PSoC5/Dispenser.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_DisableRxInt();
 615              		.loc 1 542 0
 616 000a 234B     		ldr	r3, .L41
 617 000c 0222     		movs	r2, #2
 618 000e 1A60     		str	r2, [r3]
 543:.\Generated_Source\PSoC5/Dispenser.c **** 
 544:.\Generated_Source\PSoC5/Dispenser.c ****         locRxBufferRead  = Dispenser_rxBufferRead;
 619              		.loc 1 544 0
 620 0010 224B     		ldr	r3, .L41+4
 621 0012 1B88     		ldrh	r3, [r3]	@ movhi
 622 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 545:.\Generated_Source\PSoC5/Dispenser.c ****         locRxBufferWrite = Dispenser_rxBufferWrite;
 623              		.loc 1 545 0
 624 0016 224B     		ldr	r3, .L41+8
 625 0018 1B88     		ldrh	r3, [r3]	@ movhi
 626 001a 7B80     		strh	r3, [r7, #2]	@ movhi
 546:.\Generated_Source\PSoC5/Dispenser.c **** 
 547:.\Generated_Source\PSoC5/Dispenser.c ****         if( (Dispenser_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 627              		.loc 1 547 0
 628 001c 214B     		ldr	r3, .L41+12
 629 001e 1B78     		ldrb	r3, [r3]
 630 0020 DBB2     		uxtb	r3, r3
 631 0022 002B     		cmp	r3, #0
 632 0024 03D1     		bne	.L35
 633              		.loc 1 547 0 is_stmt 0 discriminator 1
 634 0026 BA88     		ldrh	r2, [r7, #4]
 635 0028 7B88     		ldrh	r3, [r7, #2]
 636 002a 9A42     		cmp	r2, r3
 637 002c 18D0     		beq	.L36
 638              	.L35:
 548:.\Generated_Source\PSoC5/Dispenser.c ****         {
 549:.\Generated_Source\PSoC5/Dispenser.c ****             rxData = Dispenser_rxBuffer[locRxBufferRead];
 639              		.loc 1 549 0 is_stmt 1
 640 002e BB88     		ldrh	r3, [r7, #4]
 641 0030 1D4A     		ldr	r2, .L41+16
 642 0032 D35C     		ldrb	r3, [r2, r3]
 643 0034 FB71     		strb	r3, [r7, #7]
 550:.\Generated_Source\PSoC5/Dispenser.c ****             locRxBufferRead++;
 644              		.loc 1 550 0
 645 0036 BB88     		ldrh	r3, [r7, #4]
 646 0038 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 22


 647 003a BB80     		strh	r3, [r7, #4]	@ movhi
 551:.\Generated_Source\PSoC5/Dispenser.c ****             if(locRxBufferRead >= Dispenser_RX_BUFFER_SIZE)
 648              		.loc 1 551 0
 649 003c BB88     		ldrh	r3, [r7, #4]
 650 003e FF2B     		cmp	r3, #255
 651 0040 01D9     		bls	.L37
 552:.\Generated_Source\PSoC5/Dispenser.c ****             {
 553:.\Generated_Source\PSoC5/Dispenser.c ****                 locRxBufferRead = 0u;
 652              		.loc 1 553 0
 653 0042 0023     		movs	r3, #0
 654 0044 BB80     		strh	r3, [r7, #4]	@ movhi
 655              	.L37:
 554:.\Generated_Source\PSoC5/Dispenser.c ****             }
 555:.\Generated_Source\PSoC5/Dispenser.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_rxBufferRead = locRxBufferRead;
 656              		.loc 1 556 0
 657 0046 154A     		ldr	r2, .L41+4
 658 0048 BB88     		ldrh	r3, [r7, #4]	@ movhi
 659 004a 1380     		strh	r3, [r2]	@ movhi
 557:.\Generated_Source\PSoC5/Dispenser.c **** 
 558:.\Generated_Source\PSoC5/Dispenser.c ****             if(Dispenser_rxBufferLoopDetect != 0u)
 660              		.loc 1 558 0
 661 004c 154B     		ldr	r3, .L41+12
 662 004e 1B78     		ldrb	r3, [r3]
 663 0050 DBB2     		uxtb	r3, r3
 664 0052 002B     		cmp	r3, #0
 665 0054 03D0     		beq	.L38
 559:.\Generated_Source\PSoC5/Dispenser.c ****             {
 560:.\Generated_Source\PSoC5/Dispenser.c ****                 Dispenser_rxBufferLoopDetect = 0u;
 666              		.loc 1 560 0
 667 0056 134B     		ldr	r3, .L41+12
 668 0058 0022     		movs	r2, #0
 669 005a 1A70     		strb	r2, [r3]
 558:.\Generated_Source\PSoC5/Dispenser.c ****             {
 670              		.loc 1 558 0
 671 005c 12E0     		b	.L39
 672              	.L38:
 673 005e 11E0     		b	.L39
 674              	.L36:
 561:.\Generated_Source\PSoC5/Dispenser.c ****                 #if( (Dispenser_RX_INTERRUPT_ENABLED) && (Dispenser_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC5/Dispenser.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC5/Dispenser.c ****                     #if( Dispenser_HD_ENABLED )
 564:.\Generated_Source\PSoC5/Dispenser.c ****                         if((Dispenser_CONTROL_REG & Dispenser_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC5/Dispenser.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC5/Dispenser.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC5/Dispenser.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC5/Dispenser.c ****                             */
 569:.\Generated_Source\PSoC5/Dispenser.c ****                             Dispenser_RXSTATUS_MASK_REG |= Dispenser_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC5/Dispenser.c ****                         }
 571:.\Generated_Source\PSoC5/Dispenser.c ****                     #else
 572:.\Generated_Source\PSoC5/Dispenser.c ****                         Dispenser_RXSTATUS_MASK_REG |= Dispenser_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC5/Dispenser.c ****                     #endif /* end Dispenser_HD_ENABLED */
 574:.\Generated_Source\PSoC5/Dispenser.c ****                 #endif /* Dispenser_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:.\Generated_Source\PSoC5/Dispenser.c ****             }
 576:.\Generated_Source\PSoC5/Dispenser.c **** 
 577:.\Generated_Source\PSoC5/Dispenser.c ****         }
 578:.\Generated_Source\PSoC5/Dispenser.c ****         else
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 23


 579:.\Generated_Source\PSoC5/Dispenser.c ****         {   rxStatus = Dispenser_RXSTATUS_REG;
 675              		.loc 1 579 0
 676 0060 124B     		ldr	r3, .L41+20
 677 0062 1B78     		ldrb	r3, [r3]
 678 0064 7B70     		strb	r3, [r7, #1]
 580:.\Generated_Source\PSoC5/Dispenser.c ****             if((rxStatus & Dispenser_RX_STS_FIFO_NOTEMPTY) != 0u)
 679              		.loc 1 580 0
 680 0066 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 681 0068 03F02003 		and	r3, r3, #32
 682 006c 002B     		cmp	r3, #0
 683 006e 09D0     		beq	.L39
 581:.\Generated_Source\PSoC5/Dispenser.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC5/Dispenser.c ****                 rxData = Dispenser_RXDATA_REG;
 684              		.loc 1 582 0
 685 0070 0F4B     		ldr	r3, .L41+24
 686 0072 1B78     		ldrb	r3, [r3]
 687 0074 FB71     		strb	r3, [r7, #7]
 583:.\Generated_Source\PSoC5/Dispenser.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC5/Dispenser.c ****                 if((rxStatus & (Dispenser_RX_STS_BREAK | Dispenser_RX_STS_PAR_ERROR |
 585:.\Generated_Source\PSoC5/Dispenser.c ****                                 Dispenser_RX_STS_STOP_ERROR | Dispenser_RX_STS_OVERRUN)) != 0u)
 688              		.loc 1 585 0
 689 0076 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 690 0078 03F01E03 		and	r3, r3, #30
 584:.\Generated_Source\PSoC5/Dispenser.c ****                                 Dispenser_RX_STS_STOP_ERROR | Dispenser_RX_STS_OVERRUN)) != 0u)
 691              		.loc 1 584 0
 692 007c 002B     		cmp	r3, #0
 693 007e 01D0     		beq	.L39
 586:.\Generated_Source\PSoC5/Dispenser.c ****                 {
 587:.\Generated_Source\PSoC5/Dispenser.c ****                     rxData = 0u;
 694              		.loc 1 587 0
 695 0080 0023     		movs	r3, #0
 696 0082 FB71     		strb	r3, [r7, #7]
 697              	.L39:
 588:.\Generated_Source\PSoC5/Dispenser.c ****                 }
 589:.\Generated_Source\PSoC5/Dispenser.c ****             }
 590:.\Generated_Source\PSoC5/Dispenser.c ****         }
 591:.\Generated_Source\PSoC5/Dispenser.c **** 
 592:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_EnableRxInt();
 698              		.loc 1 592 0
 699 0084 0B4B     		ldr	r3, .L41+28
 700 0086 0222     		movs	r2, #2
 701 0088 1A60     		str	r2, [r3]
 593:.\Generated_Source\PSoC5/Dispenser.c **** 
 594:.\Generated_Source\PSoC5/Dispenser.c ****     #else
 595:.\Generated_Source\PSoC5/Dispenser.c **** 
 596:.\Generated_Source\PSoC5/Dispenser.c ****         rxStatus =Dispenser_RXSTATUS_REG;
 597:.\Generated_Source\PSoC5/Dispenser.c ****         if((rxStatus & Dispenser_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:.\Generated_Source\PSoC5/Dispenser.c ****         {
 599:.\Generated_Source\PSoC5/Dispenser.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC5/Dispenser.c ****             rxData = Dispenser_RXDATA_REG;
 601:.\Generated_Source\PSoC5/Dispenser.c **** 
 602:.\Generated_Source\PSoC5/Dispenser.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC5/Dispenser.c ****             if((rxStatus & (Dispenser_RX_STS_BREAK | Dispenser_RX_STS_PAR_ERROR |
 604:.\Generated_Source\PSoC5/Dispenser.c ****                             Dispenser_RX_STS_STOP_ERROR | Dispenser_RX_STS_OVERRUN)) != 0u)
 605:.\Generated_Source\PSoC5/Dispenser.c ****             {
 606:.\Generated_Source\PSoC5/Dispenser.c ****                 rxData = 0u;
 607:.\Generated_Source\PSoC5/Dispenser.c ****             }
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 24


 608:.\Generated_Source\PSoC5/Dispenser.c ****         }
 609:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* (Dispenser_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC5/Dispenser.c **** 
 611:.\Generated_Source\PSoC5/Dispenser.c ****         return(rxData);
 702              		.loc 1 611 0
 703 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612:.\Generated_Source\PSoC5/Dispenser.c ****     }
 704              		.loc 1 612 0
 705 008c 1846     		mov	r0, r3
 706 008e 0C37     		adds	r7, r7, #12
 707              		.cfi_def_cfa_offset 4
 708 0090 BD46     		mov	sp, r7
 709              		.cfi_def_cfa_register 13
 710              		@ sp needed
 711 0092 5DF8047B 		ldr	r7, [sp], #4
 712              		.cfi_restore 7
 713              		.cfi_def_cfa_offset 0
 714 0096 7047     		bx	lr
 715              	.L42:
 716              		.align	2
 717              	.L41:
 718 0098 80E100E0 		.word	-536813184
 719 009c 00000000 		.word	Dispenser_rxBufferRead
 720 00a0 00000000 		.word	Dispenser_rxBufferWrite
 721 00a4 00000000 		.word	Dispenser_rxBufferLoopDetect
 722 00a8 00000000 		.word	Dispenser_rxBuffer
 723 00ac 66640040 		.word	1073767526
 724 00b0 42640040 		.word	1073767490
 725 00b4 00E100E0 		.word	-536813312
 726              		.cfi_endproc
 727              	.LFE9:
 728              		.size	Dispenser_GetChar, .-Dispenser_GetChar
 729              		.section	.text.Dispenser_GetByte,"ax",%progbits
 730              		.align	2
 731              		.global	Dispenser_GetByte
 732              		.thumb
 733              		.thumb_func
 734              		.type	Dispenser_GetByte, %function
 735              	Dispenser_GetByte:
 736              	.LFB10:
 613:.\Generated_Source\PSoC5/Dispenser.c **** 
 614:.\Generated_Source\PSoC5/Dispenser.c **** 
 615:.\Generated_Source\PSoC5/Dispenser.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC5/Dispenser.c ****     * Function Name: Dispenser_GetByte
 617:.\Generated_Source\PSoC5/Dispenser.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC5/Dispenser.c ****     *
 619:.\Generated_Source\PSoC5/Dispenser.c ****     * Summary:
 620:.\Generated_Source\PSoC5/Dispenser.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC5/Dispenser.c ****     *  condition.
 622:.\Generated_Source\PSoC5/Dispenser.c ****     *
 623:.\Generated_Source\PSoC5/Dispenser.c ****     * Parameters:
 624:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
 625:.\Generated_Source\PSoC5/Dispenser.c ****     *
 626:.\Generated_Source\PSoC5/Dispenser.c ****     * Return:
 627:.\Generated_Source\PSoC5/Dispenser.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC5/Dispenser.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC5/Dispenser.c ****     *
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 25


 630:.\Generated_Source\PSoC5/Dispenser.c ****     * Reentrant:
 631:.\Generated_Source\PSoC5/Dispenser.c ****     *  No.
 632:.\Generated_Source\PSoC5/Dispenser.c ****     *
 633:.\Generated_Source\PSoC5/Dispenser.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC5/Dispenser.c ****     uint16 Dispenser_GetByte(void) 
 635:.\Generated_Source\PSoC5/Dispenser.c ****     {
 737              		.loc 1 635 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 8
 740              		@ frame_needed = 1, uses_anonymous_args = 0
 741 0000 90B5     		push	{r4, r7, lr}
 742              		.cfi_def_cfa_offset 12
 743              		.cfi_offset 4, -12
 744              		.cfi_offset 7, -8
 745              		.cfi_offset 14, -4
 746 0002 83B0     		sub	sp, sp, #12
 747              		.cfi_def_cfa_offset 24
 748 0004 00AF     		add	r7, sp, #0
 749              		.cfi_def_cfa_register 7
 636:.\Generated_Source\PSoC5/Dispenser.c ****         
 637:.\Generated_Source\PSoC5/Dispenser.c ****     #if (Dispenser_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC5/Dispenser.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC5/Dispenser.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_DisableRxInt();
 750              		.loc 1 640 0
 751 0006 0C4B     		ldr	r3, .L45
 752 0008 0222     		movs	r2, #2
 753 000a 1A60     		str	r2, [r3]
 641:.\Generated_Source\PSoC5/Dispenser.c ****         locErrorStatus = (uint16)Dispenser_errorStatus;
 754              		.loc 1 641 0
 755 000c 0B4B     		ldr	r3, .L45+4
 756 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 757 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 642:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_errorStatus = 0u;
 758              		.loc 1 642 0
 759 0012 0A4B     		ldr	r3, .L45+4
 760 0014 0022     		movs	r2, #0
 761 0016 1A70     		strb	r2, [r3]
 643:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_EnableRxInt();
 762              		.loc 1 643 0
 763 0018 094B     		ldr	r3, .L45+8
 764 001a 0222     		movs	r2, #2
 765 001c 1A60     		str	r2, [r3]
 644:.\Generated_Source\PSoC5/Dispenser.c ****         return ( (uint16)(locErrorStatus << 8u) | Dispenser_ReadRxData() );
 766              		.loc 1 644 0
 767 001e FB88     		ldrh	r3, [r7, #6]	@ movhi
 768 0020 1B02     		lsls	r3, r3, #8
 769 0022 9CB2     		uxth	r4, r3
 770 0024 FFF7FEFF 		bl	Dispenser_ReadRxData
 771 0028 0346     		mov	r3, r0
 772 002a 9BB2     		uxth	r3, r3
 773 002c 2343     		orrs	r3, r3, r4
 774 002e 9BB2     		uxth	r3, r3
 645:.\Generated_Source\PSoC5/Dispenser.c ****     #else
 646:.\Generated_Source\PSoC5/Dispenser.c ****         return ( ((uint16)Dispenser_ReadRxStatus() << 8u) | Dispenser_ReadRxData() );
 647:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* Dispenser_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC5/Dispenser.c ****         
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 26


 649:.\Generated_Source\PSoC5/Dispenser.c ****     }
 775              		.loc 1 649 0
 776 0030 1846     		mov	r0, r3
 777 0032 0C37     		adds	r7, r7, #12
 778              		.cfi_def_cfa_offset 12
 779 0034 BD46     		mov	sp, r7
 780              		.cfi_def_cfa_register 13
 781              		@ sp needed
 782 0036 90BD     		pop	{r4, r7, pc}
 783              	.L46:
 784              		.align	2
 785              	.L45:
 786 0038 80E100E0 		.word	-536813184
 787 003c 00000000 		.word	Dispenser_errorStatus
 788 0040 00E100E0 		.word	-536813312
 789              		.cfi_endproc
 790              	.LFE10:
 791              		.size	Dispenser_GetByte, .-Dispenser_GetByte
 792              		.section	.text.Dispenser_GetRxBufferSize,"ax",%progbits
 793              		.align	2
 794              		.global	Dispenser_GetRxBufferSize
 795              		.thumb
 796              		.thumb_func
 797              		.type	Dispenser_GetRxBufferSize, %function
 798              	Dispenser_GetRxBufferSize:
 799              	.LFB11:
 650:.\Generated_Source\PSoC5/Dispenser.c **** 
 651:.\Generated_Source\PSoC5/Dispenser.c **** 
 652:.\Generated_Source\PSoC5/Dispenser.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC5/Dispenser.c ****     * Function Name: Dispenser_GetRxBufferSize
 654:.\Generated_Source\PSoC5/Dispenser.c ****     ********************************************************************************
 655:.\Generated_Source\PSoC5/Dispenser.c ****     *
 656:.\Generated_Source\PSoC5/Dispenser.c ****     * Summary:
 657:.\Generated_Source\PSoC5/Dispenser.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC5/Dispenser.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC5/Dispenser.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC5/Dispenser.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC5/Dispenser.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC5/Dispenser.c ****     *    account.
 663:.\Generated_Source\PSoC5/Dispenser.c ****     *
 664:.\Generated_Source\PSoC5/Dispenser.c ****     * Parameters:
 665:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
 666:.\Generated_Source\PSoC5/Dispenser.c ****     *
 667:.\Generated_Source\PSoC5/Dispenser.c ****     * Return:
 668:.\Generated_Source\PSoC5/Dispenser.c ****     *  uint16: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC5/Dispenser.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC5/Dispenser.c ****     *
 671:.\Generated_Source\PSoC5/Dispenser.c ****     * Global Variables:
 672:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC5/Dispenser.c ****     *
 676:.\Generated_Source\PSoC5/Dispenser.c ****     * Reentrant:
 677:.\Generated_Source\PSoC5/Dispenser.c ****     *  No.
 678:.\Generated_Source\PSoC5/Dispenser.c ****     *
 679:.\Generated_Source\PSoC5/Dispenser.c ****     * Theory:
 680:.\Generated_Source\PSoC5/Dispenser.c ****     *  Allows the user to find out how full the RX Buffer is.
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 27


 681:.\Generated_Source\PSoC5/Dispenser.c ****     *
 682:.\Generated_Source\PSoC5/Dispenser.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC5/Dispenser.c ****     uint16 Dispenser_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC5/Dispenser.c ****                                                             
 685:.\Generated_Source\PSoC5/Dispenser.c ****     {
 800              		.loc 1 685 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 8
 803              		@ frame_needed = 1, uses_anonymous_args = 0
 804              		@ link register save eliminated.
 805 0000 80B4     		push	{r7}
 806              		.cfi_def_cfa_offset 4
 807              		.cfi_offset 7, -4
 808 0002 83B0     		sub	sp, sp, #12
 809              		.cfi_def_cfa_offset 16
 810 0004 00AF     		add	r7, sp, #0
 811              		.cfi_def_cfa_register 7
 686:.\Generated_Source\PSoC5/Dispenser.c ****         uint16 size;
 687:.\Generated_Source\PSoC5/Dispenser.c **** 
 688:.\Generated_Source\PSoC5/Dispenser.c ****     #if (Dispenser_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC5/Dispenser.c **** 
 690:.\Generated_Source\PSoC5/Dispenser.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_DisableRxInt();
 812              		.loc 1 691 0
 813 0006 1E4B     		ldr	r3, .L54
 814 0008 0222     		movs	r2, #2
 815 000a 1A60     		str	r2, [r3]
 692:.\Generated_Source\PSoC5/Dispenser.c **** 
 693:.\Generated_Source\PSoC5/Dispenser.c ****         if(Dispenser_rxBufferRead == Dispenser_rxBufferWrite)
 816              		.loc 1 693 0
 817 000c 1D4B     		ldr	r3, .L54+4
 818 000e 1B88     		ldrh	r3, [r3]	@ movhi
 819 0010 9AB2     		uxth	r2, r3
 820 0012 1D4B     		ldr	r3, .L54+8
 821 0014 1B88     		ldrh	r3, [r3]	@ movhi
 822 0016 9BB2     		uxth	r3, r3
 823 0018 9A42     		cmp	r2, r3
 824 001a 0BD1     		bne	.L48
 694:.\Generated_Source\PSoC5/Dispenser.c ****         {
 695:.\Generated_Source\PSoC5/Dispenser.c ****             if(Dispenser_rxBufferLoopDetect != 0u)
 825              		.loc 1 695 0
 826 001c 1B4B     		ldr	r3, .L54+12
 827 001e 1B78     		ldrb	r3, [r3]
 828 0020 DBB2     		uxtb	r3, r3
 829 0022 002B     		cmp	r3, #0
 830 0024 03D0     		beq	.L49
 696:.\Generated_Source\PSoC5/Dispenser.c ****             {
 697:.\Generated_Source\PSoC5/Dispenser.c ****                 size = Dispenser_RX_BUFFER_SIZE;
 831              		.loc 1 697 0
 832 0026 4FF48073 		mov	r3, #256
 833 002a FB80     		strh	r3, [r7, #6]	@ movhi
 834 002c 1EE0     		b	.L51
 835              	.L49:
 698:.\Generated_Source\PSoC5/Dispenser.c ****             }
 699:.\Generated_Source\PSoC5/Dispenser.c ****             else
 700:.\Generated_Source\PSoC5/Dispenser.c ****             {
 701:.\Generated_Source\PSoC5/Dispenser.c ****                 size = 0u;
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 28


 836              		.loc 1 701 0
 837 002e 0023     		movs	r3, #0
 838 0030 FB80     		strh	r3, [r7, #6]	@ movhi
 839 0032 1BE0     		b	.L51
 840              	.L48:
 702:.\Generated_Source\PSoC5/Dispenser.c ****             }
 703:.\Generated_Source\PSoC5/Dispenser.c ****         }
 704:.\Generated_Source\PSoC5/Dispenser.c ****         else if(Dispenser_rxBufferRead < Dispenser_rxBufferWrite)
 841              		.loc 1 704 0
 842 0034 134B     		ldr	r3, .L54+4
 843 0036 1B88     		ldrh	r3, [r3]	@ movhi
 844 0038 9AB2     		uxth	r2, r3
 845 003a 134B     		ldr	r3, .L54+8
 846 003c 1B88     		ldrh	r3, [r3]	@ movhi
 847 003e 9BB2     		uxth	r3, r3
 848 0040 9A42     		cmp	r2, r3
 849 0042 08D2     		bcs	.L52
 705:.\Generated_Source\PSoC5/Dispenser.c ****         {
 706:.\Generated_Source\PSoC5/Dispenser.c ****             size = (Dispenser_rxBufferWrite - Dispenser_rxBufferRead);
 850              		.loc 1 706 0
 851 0044 104B     		ldr	r3, .L54+8
 852 0046 1B88     		ldrh	r3, [r3]	@ movhi
 853 0048 9AB2     		uxth	r2, r3
 854 004a 0E4B     		ldr	r3, .L54+4
 855 004c 1B88     		ldrh	r3, [r3]	@ movhi
 856 004e 9BB2     		uxth	r3, r3
 857 0050 D31A     		subs	r3, r2, r3
 858 0052 FB80     		strh	r3, [r7, #6]	@ movhi
 859 0054 0AE0     		b	.L51
 860              	.L52:
 707:.\Generated_Source\PSoC5/Dispenser.c ****         }
 708:.\Generated_Source\PSoC5/Dispenser.c ****         else
 709:.\Generated_Source\PSoC5/Dispenser.c ****         {
 710:.\Generated_Source\PSoC5/Dispenser.c ****             size = (Dispenser_RX_BUFFER_SIZE - Dispenser_rxBufferRead) + Dispenser_rxBufferWrite;
 861              		.loc 1 710 0
 862 0056 0C4B     		ldr	r3, .L54+8
 863 0058 1B88     		ldrh	r3, [r3]	@ movhi
 864 005a 9AB2     		uxth	r2, r3
 865 005c 094B     		ldr	r3, .L54+4
 866 005e 1B88     		ldrh	r3, [r3]	@ movhi
 867 0060 9BB2     		uxth	r3, r3
 868 0062 D31A     		subs	r3, r2, r3
 869 0064 9BB2     		uxth	r3, r3
 870 0066 03F58073 		add	r3, r3, #256
 871 006a FB80     		strh	r3, [r7, #6]	@ movhi
 872              	.L51:
 711:.\Generated_Source\PSoC5/Dispenser.c ****         }
 712:.\Generated_Source\PSoC5/Dispenser.c **** 
 713:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_EnableRxInt();
 873              		.loc 1 713 0
 874 006c 084B     		ldr	r3, .L54+16
 875 006e 0222     		movs	r2, #2
 876 0070 1A60     		str	r2, [r3]
 714:.\Generated_Source\PSoC5/Dispenser.c **** 
 715:.\Generated_Source\PSoC5/Dispenser.c ****     #else
 716:.\Generated_Source\PSoC5/Dispenser.c **** 
 717:.\Generated_Source\PSoC5/Dispenser.c ****         /* We can only know if there is data in the fifo. */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 29


 718:.\Generated_Source\PSoC5/Dispenser.c ****         size = ((Dispenser_RXSTATUS_REG & Dispenser_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:.\Generated_Source\PSoC5/Dispenser.c **** 
 720:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* (Dispenser_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC5/Dispenser.c **** 
 722:.\Generated_Source\PSoC5/Dispenser.c ****         return(size);
 877              		.loc 1 722 0
 878 0072 FB88     		ldrh	r3, [r7, #6]
 723:.\Generated_Source\PSoC5/Dispenser.c ****     }
 879              		.loc 1 723 0
 880 0074 1846     		mov	r0, r3
 881 0076 0C37     		adds	r7, r7, #12
 882              		.cfi_def_cfa_offset 4
 883 0078 BD46     		mov	sp, r7
 884              		.cfi_def_cfa_register 13
 885              		@ sp needed
 886 007a 5DF8047B 		ldr	r7, [sp], #4
 887              		.cfi_restore 7
 888              		.cfi_def_cfa_offset 0
 889 007e 7047     		bx	lr
 890              	.L55:
 891              		.align	2
 892              	.L54:
 893 0080 80E100E0 		.word	-536813184
 894 0084 00000000 		.word	Dispenser_rxBufferRead
 895 0088 00000000 		.word	Dispenser_rxBufferWrite
 896 008c 00000000 		.word	Dispenser_rxBufferLoopDetect
 897 0090 00E100E0 		.word	-536813312
 898              		.cfi_endproc
 899              	.LFE11:
 900              		.size	Dispenser_GetRxBufferSize, .-Dispenser_GetRxBufferSize
 901              		.section	.text.Dispenser_ClearRxBuffer,"ax",%progbits
 902              		.align	2
 903              		.global	Dispenser_ClearRxBuffer
 904              		.thumb
 905              		.thumb_func
 906              		.type	Dispenser_ClearRxBuffer, %function
 907              	Dispenser_ClearRxBuffer:
 908              	.LFB12:
 724:.\Generated_Source\PSoC5/Dispenser.c **** 
 725:.\Generated_Source\PSoC5/Dispenser.c **** 
 726:.\Generated_Source\PSoC5/Dispenser.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC5/Dispenser.c ****     * Function Name: Dispenser_ClearRxBuffer
 728:.\Generated_Source\PSoC5/Dispenser.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC5/Dispenser.c ****     *
 730:.\Generated_Source\PSoC5/Dispenser.c ****     * Summary:
 731:.\Generated_Source\PSoC5/Dispenser.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC5/Dispenser.c ****     *
 733:.\Generated_Source\PSoC5/Dispenser.c ****     * Parameters:
 734:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
 735:.\Generated_Source\PSoC5/Dispenser.c ****     *
 736:.\Generated_Source\PSoC5/Dispenser.c ****     * Return:
 737:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
 738:.\Generated_Source\PSoC5/Dispenser.c ****     *
 739:.\Generated_Source\PSoC5/Dispenser.c ****     * Global Variables:
 740:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_rxBufferLoopDetect - cleared to zero.
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 30


 743:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC5/Dispenser.c ****     *
 745:.\Generated_Source\PSoC5/Dispenser.c ****     * Reentrant:
 746:.\Generated_Source\PSoC5/Dispenser.c ****     *  No.
 747:.\Generated_Source\PSoC5/Dispenser.c ****     *
 748:.\Generated_Source\PSoC5/Dispenser.c ****     * Theory:
 749:.\Generated_Source\PSoC5/Dispenser.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC5/Dispenser.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC5/Dispenser.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC5/Dispenser.c ****     *
 753:.\Generated_Source\PSoC5/Dispenser.c ****     * Side Effects:
 754:.\Generated_Source\PSoC5/Dispenser.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC5/Dispenser.c ****     *
 756:.\Generated_Source\PSoC5/Dispenser.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC5/Dispenser.c ****     void Dispenser_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC5/Dispenser.c ****     {
 909              		.loc 1 758 0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 8
 912              		@ frame_needed = 1, uses_anonymous_args = 0
 913 0000 80B5     		push	{r7, lr}
 914              		.cfi_def_cfa_offset 8
 915              		.cfi_offset 7, -8
 916              		.cfi_offset 14, -4
 917 0002 82B0     		sub	sp, sp, #8
 918              		.cfi_def_cfa_offset 16
 919 0004 00AF     		add	r7, sp, #0
 920              		.cfi_def_cfa_register 7
 759:.\Generated_Source\PSoC5/Dispenser.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC5/Dispenser.c **** 
 761:.\Generated_Source\PSoC5/Dispenser.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC5/Dispenser.c ****         enableInterrupts = CyEnterCriticalSection();
 921              		.loc 1 762 0
 922 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 923 000a 0346     		mov	r3, r0
 924 000c FB71     		strb	r3, [r7, #7]
 763:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_RXDATA_AUX_CTL_REG |= (uint8)  Dispenser_RX_FIFO_CLR;
 925              		.loc 1 763 0
 926 000e 144A     		ldr	r2, .L57
 927 0010 134B     		ldr	r3, .L57
 928 0012 1B78     		ldrb	r3, [r3]
 929 0014 DBB2     		uxtb	r3, r3
 930 0016 43F00103 		orr	r3, r3, #1
 931 001a DBB2     		uxtb	r3, r3
 932 001c 1370     		strb	r3, [r2]
 764:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_RXDATA_AUX_CTL_REG &= (uint8) ~Dispenser_RX_FIFO_CLR;
 933              		.loc 1 764 0
 934 001e 104A     		ldr	r2, .L57
 935 0020 0F4B     		ldr	r3, .L57
 936 0022 1B78     		ldrb	r3, [r3]
 937 0024 DBB2     		uxtb	r3, r3
 938 0026 23F00103 		bic	r3, r3, #1
 939 002a DBB2     		uxtb	r3, r3
 940 002c 1370     		strb	r3, [r2]
 765:.\Generated_Source\PSoC5/Dispenser.c ****         CyExitCriticalSection(enableInterrupts);
 941              		.loc 1 765 0
 942 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 31


 943 0030 1846     		mov	r0, r3
 944 0032 FFF7FEFF 		bl	CyExitCriticalSection
 766:.\Generated_Source\PSoC5/Dispenser.c **** 
 767:.\Generated_Source\PSoC5/Dispenser.c ****     #if (Dispenser_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC5/Dispenser.c **** 
 769:.\Generated_Source\PSoC5/Dispenser.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_DisableRxInt();
 945              		.loc 1 770 0
 946 0036 0B4B     		ldr	r3, .L57+4
 947 0038 0222     		movs	r2, #2
 948 003a 1A60     		str	r2, [r3]
 771:.\Generated_Source\PSoC5/Dispenser.c **** 
 772:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_rxBufferRead = 0u;
 949              		.loc 1 772 0
 950 003c 0A4B     		ldr	r3, .L57+8
 951 003e 0022     		movs	r2, #0
 952 0040 1A80     		strh	r2, [r3]	@ movhi
 773:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_rxBufferWrite = 0u;
 953              		.loc 1 773 0
 954 0042 0A4B     		ldr	r3, .L57+12
 955 0044 0022     		movs	r2, #0
 956 0046 1A80     		strh	r2, [r3]	@ movhi
 774:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_rxBufferLoopDetect = 0u;
 957              		.loc 1 774 0
 958 0048 094B     		ldr	r3, .L57+16
 959 004a 0022     		movs	r2, #0
 960 004c 1A70     		strb	r2, [r3]
 775:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_rxBufferOverflow = 0u;
 961              		.loc 1 775 0
 962 004e 094B     		ldr	r3, .L57+20
 963 0050 0022     		movs	r2, #0
 964 0052 1A70     		strb	r2, [r3]
 776:.\Generated_Source\PSoC5/Dispenser.c **** 
 777:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_EnableRxInt();
 965              		.loc 1 777 0
 966 0054 084B     		ldr	r3, .L57+24
 967 0056 0222     		movs	r2, #2
 968 0058 1A60     		str	r2, [r3]
 778:.\Generated_Source\PSoC5/Dispenser.c **** 
 779:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* (Dispenser_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC5/Dispenser.c **** 
 781:.\Generated_Source\PSoC5/Dispenser.c ****     }
 969              		.loc 1 781 0
 970 005a 0837     		adds	r7, r7, #8
 971              		.cfi_def_cfa_offset 8
 972 005c BD46     		mov	sp, r7
 973              		.cfi_def_cfa_register 13
 974              		@ sp needed
 975 005e 80BD     		pop	{r7, pc}
 976              	.L58:
 977              		.align	2
 978              	.L57:
 979 0060 92640040 		.word	1073767570
 980 0064 80E100E0 		.word	-536813184
 981 0068 00000000 		.word	Dispenser_rxBufferRead
 982 006c 00000000 		.word	Dispenser_rxBufferWrite
 983 0070 00000000 		.word	Dispenser_rxBufferLoopDetect
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 32


 984 0074 00000000 		.word	Dispenser_rxBufferOverflow
 985 0078 00E100E0 		.word	-536813312
 986              		.cfi_endproc
 987              	.LFE12:
 988              		.size	Dispenser_ClearRxBuffer, .-Dispenser_ClearRxBuffer
 989              		.section	.text.Dispenser_SetRxAddressMode,"ax",%progbits
 990              		.align	2
 991              		.global	Dispenser_SetRxAddressMode
 992              		.thumb
 993              		.thumb_func
 994              		.type	Dispenser_SetRxAddressMode, %function
 995              	Dispenser_SetRxAddressMode:
 996              	.LFB13:
 782:.\Generated_Source\PSoC5/Dispenser.c **** 
 783:.\Generated_Source\PSoC5/Dispenser.c **** 
 784:.\Generated_Source\PSoC5/Dispenser.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC5/Dispenser.c ****     * Function Name: Dispenser_SetRxAddressMode
 786:.\Generated_Source\PSoC5/Dispenser.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC5/Dispenser.c ****     *
 788:.\Generated_Source\PSoC5/Dispenser.c ****     * Summary:
 789:.\Generated_Source\PSoC5/Dispenser.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC5/Dispenser.c ****     *  UART.
 791:.\Generated_Source\PSoC5/Dispenser.c ****     *
 792:.\Generated_Source\PSoC5/Dispenser.c ****     * Parameters:
 793:.\Generated_Source\PSoC5/Dispenser.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC5/Dispenser.c ****     *                                               detection
 796:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC5/Dispenser.c ****     *                                               address detection
 798:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC5/Dispenser.c ****     *                                               detection
 800:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC5/Dispenser.c ****     *                                               address detection
 802:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC5/Dispenser.c ****     *
 804:.\Generated_Source\PSoC5/Dispenser.c ****     * Return:
 805:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
 806:.\Generated_Source\PSoC5/Dispenser.c ****     *
 807:.\Generated_Source\PSoC5/Dispenser.c ****     * Global Variables:
 808:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC5/Dispenser.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC5/Dispenser.c ****     *
 812:.\Generated_Source\PSoC5/Dispenser.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC5/Dispenser.c ****     void Dispenser_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC5/Dispenser.c ****                                                         
 815:.\Generated_Source\PSoC5/Dispenser.c ****     {
 997              		.loc 1 815 0
 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 8
 1000              		@ frame_needed = 1, uses_anonymous_args = 0
 1001              		@ link register save eliminated.
 1002 0000 80B4     		push	{r7}
 1003              		.cfi_def_cfa_offset 4
 1004              		.cfi_offset 7, -4
 1005 0002 83B0     		sub	sp, sp, #12
 1006              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 33


 1007 0004 00AF     		add	r7, sp, #0
 1008              		.cfi_def_cfa_register 7
 1009 0006 0346     		mov	r3, r0
 1010 0008 FB71     		strb	r3, [r7, #7]
 816:.\Generated_Source\PSoC5/Dispenser.c ****         #if(Dispenser_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC5/Dispenser.c ****             #if(Dispenser_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC5/Dispenser.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC5/Dispenser.c ****                 {
 820:.\Generated_Source\PSoC5/Dispenser.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC5/Dispenser.c ****                 }
 822:.\Generated_Source\PSoC5/Dispenser.c ****             #else /* Dispenser_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC5/Dispenser.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC5/Dispenser.c ****                 tmpCtrl = Dispenser_CONTROL_REG & (uint8)~Dispenser_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC5/Dispenser.c ****                 tmpCtrl |= (uint8)(addressMode << Dispenser_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC5/Dispenser.c ****                 Dispenser_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC5/Dispenser.c **** 
 828:.\Generated_Source\PSoC5/Dispenser.c ****                 #if(Dispenser_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC5/Dispenser.c ****                    (Dispenser_RXBUFFERSIZE > Dispenser_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC5/Dispenser.c ****                     Dispenser_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC5/Dispenser.c ****                     Dispenser_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC5/Dispenser.c ****                 #endif /* End Dispenser_RXBUFFERSIZE > Dispenser_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC5/Dispenser.c ****             #endif /* End Dispenser_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC5/Dispenser.c ****         #else /* Dispenser_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC5/Dispenser.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC5/Dispenser.c ****             {
 837:.\Generated_Source\PSoC5/Dispenser.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC5/Dispenser.c ****             }
 839:.\Generated_Source\PSoC5/Dispenser.c ****         #endif /* End Dispenser_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC5/Dispenser.c ****     }
 1011              		.loc 1 840 0
 1012 000a 0C37     		adds	r7, r7, #12
 1013              		.cfi_def_cfa_offset 4
 1014 000c BD46     		mov	sp, r7
 1015              		.cfi_def_cfa_register 13
 1016              		@ sp needed
 1017 000e 5DF8047B 		ldr	r7, [sp], #4
 1018              		.cfi_restore 7
 1019              		.cfi_def_cfa_offset 0
 1020 0012 7047     		bx	lr
 1021              		.cfi_endproc
 1022              	.LFE13:
 1023              		.size	Dispenser_SetRxAddressMode, .-Dispenser_SetRxAddressMode
 1024              		.section	.text.Dispenser_SetRxAddress1,"ax",%progbits
 1025              		.align	2
 1026              		.global	Dispenser_SetRxAddress1
 1027              		.thumb
 1028              		.thumb_func
 1029              		.type	Dispenser_SetRxAddress1, %function
 1030              	Dispenser_SetRxAddress1:
 1031              	.LFB14:
 841:.\Generated_Source\PSoC5/Dispenser.c **** 
 842:.\Generated_Source\PSoC5/Dispenser.c **** 
 843:.\Generated_Source\PSoC5/Dispenser.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC5/Dispenser.c ****     * Function Name: Dispenser_SetRxAddress1
 845:.\Generated_Source\PSoC5/Dispenser.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC5/Dispenser.c ****     *
 847:.\Generated_Source\PSoC5/Dispenser.c ****     * Summary:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 34


 848:.\Generated_Source\PSoC5/Dispenser.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC5/Dispenser.c ****     *
 850:.\Generated_Source\PSoC5/Dispenser.c ****     * Parameters:
 851:.\Generated_Source\PSoC5/Dispenser.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC5/Dispenser.c ****     *
 853:.\Generated_Source\PSoC5/Dispenser.c ****     * Return:
 854:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
 855:.\Generated_Source\PSoC5/Dispenser.c ****     *
 856:.\Generated_Source\PSoC5/Dispenser.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC5/Dispenser.c ****     void Dispenser_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC5/Dispenser.c ****     {
 1032              		.loc 1 858 0
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 8
 1035              		@ frame_needed = 1, uses_anonymous_args = 0
 1036              		@ link register save eliminated.
 1037 0000 80B4     		push	{r7}
 1038              		.cfi_def_cfa_offset 4
 1039              		.cfi_offset 7, -4
 1040 0002 83B0     		sub	sp, sp, #12
 1041              		.cfi_def_cfa_offset 16
 1042 0004 00AF     		add	r7, sp, #0
 1043              		.cfi_def_cfa_register 7
 1044 0006 0346     		mov	r3, r0
 1045 0008 FB71     		strb	r3, [r7, #7]
 859:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_RXADDRESS1_REG = address;
 1046              		.loc 1 859 0
 1047 000a 044A     		ldr	r2, .L61
 1048 000c FB79     		ldrb	r3, [r7, #7]
 1049 000e 1370     		strb	r3, [r2]
 860:.\Generated_Source\PSoC5/Dispenser.c ****     }
 1050              		.loc 1 860 0
 1051 0010 0C37     		adds	r7, r7, #12
 1052              		.cfi_def_cfa_offset 4
 1053 0012 BD46     		mov	sp, r7
 1054              		.cfi_def_cfa_register 13
 1055              		@ sp needed
 1056 0014 5DF8047B 		ldr	r7, [sp], #4
 1057              		.cfi_restore 7
 1058              		.cfi_def_cfa_offset 0
 1059 0018 7047     		bx	lr
 1060              	.L62:
 1061 001a 00BF     		.align	2
 1062              	.L61:
 1063 001c 22640040 		.word	1073767458
 1064              		.cfi_endproc
 1065              	.LFE14:
 1066              		.size	Dispenser_SetRxAddress1, .-Dispenser_SetRxAddress1
 1067              		.section	.text.Dispenser_SetRxAddress2,"ax",%progbits
 1068              		.align	2
 1069              		.global	Dispenser_SetRxAddress2
 1070              		.thumb
 1071              		.thumb_func
 1072              		.type	Dispenser_SetRxAddress2, %function
 1073              	Dispenser_SetRxAddress2:
 1074              	.LFB15:
 861:.\Generated_Source\PSoC5/Dispenser.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 35


 862:.\Generated_Source\PSoC5/Dispenser.c **** 
 863:.\Generated_Source\PSoC5/Dispenser.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC5/Dispenser.c ****     * Function Name: Dispenser_SetRxAddress2
 865:.\Generated_Source\PSoC5/Dispenser.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC5/Dispenser.c ****     *
 867:.\Generated_Source\PSoC5/Dispenser.c ****     * Summary:
 868:.\Generated_Source\PSoC5/Dispenser.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC5/Dispenser.c ****     *
 870:.\Generated_Source\PSoC5/Dispenser.c ****     * Parameters:
 871:.\Generated_Source\PSoC5/Dispenser.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC5/Dispenser.c ****     *
 873:.\Generated_Source\PSoC5/Dispenser.c ****     * Return:
 874:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
 875:.\Generated_Source\PSoC5/Dispenser.c ****     *
 876:.\Generated_Source\PSoC5/Dispenser.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC5/Dispenser.c ****     void Dispenser_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC5/Dispenser.c ****     {
 1075              		.loc 1 878 0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 8
 1078              		@ frame_needed = 1, uses_anonymous_args = 0
 1079              		@ link register save eliminated.
 1080 0000 80B4     		push	{r7}
 1081              		.cfi_def_cfa_offset 4
 1082              		.cfi_offset 7, -4
 1083 0002 83B0     		sub	sp, sp, #12
 1084              		.cfi_def_cfa_offset 16
 1085 0004 00AF     		add	r7, sp, #0
 1086              		.cfi_def_cfa_register 7
 1087 0006 0346     		mov	r3, r0
 1088 0008 FB71     		strb	r3, [r7, #7]
 879:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_RXADDRESS2_REG = address;
 1089              		.loc 1 879 0
 1090 000a 044A     		ldr	r2, .L64
 1091 000c FB79     		ldrb	r3, [r7, #7]
 1092 000e 1370     		strb	r3, [r2]
 880:.\Generated_Source\PSoC5/Dispenser.c ****     }
 1093              		.loc 1 880 0
 1094 0010 0C37     		adds	r7, r7, #12
 1095              		.cfi_def_cfa_offset 4
 1096 0012 BD46     		mov	sp, r7
 1097              		.cfi_def_cfa_register 13
 1098              		@ sp needed
 1099 0014 5DF8047B 		ldr	r7, [sp], #4
 1100              		.cfi_restore 7
 1101              		.cfi_def_cfa_offset 0
 1102 0018 7047     		bx	lr
 1103              	.L65:
 1104 001a 00BF     		.align	2
 1105              	.L64:
 1106 001c 32640040 		.word	1073767474
 1107              		.cfi_endproc
 1108              	.LFE15:
 1109              		.size	Dispenser_SetRxAddress2, .-Dispenser_SetRxAddress2
 1110              		.section	.text.Dispenser_SetTxInterruptMode,"ax",%progbits
 1111              		.align	2
 1112              		.global	Dispenser_SetTxInterruptMode
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 36


 1113              		.thumb
 1114              		.thumb_func
 1115              		.type	Dispenser_SetTxInterruptMode, %function
 1116              	Dispenser_SetTxInterruptMode:
 1117              	.LFB16:
 881:.\Generated_Source\PSoC5/Dispenser.c **** 
 882:.\Generated_Source\PSoC5/Dispenser.c **** #endif  /* Dispenser_RX_ENABLED || Dispenser_HD_ENABLED*/
 883:.\Generated_Source\PSoC5/Dispenser.c **** 
 884:.\Generated_Source\PSoC5/Dispenser.c **** 
 885:.\Generated_Source\PSoC5/Dispenser.c **** #if( (Dispenser_TX_ENABLED) || (Dispenser_HD_ENABLED) )
 886:.\Generated_Source\PSoC5/Dispenser.c ****     /*******************************************************************************
 887:.\Generated_Source\PSoC5/Dispenser.c ****     * Function Name: Dispenser_SetTxInterruptMode
 888:.\Generated_Source\PSoC5/Dispenser.c ****     ********************************************************************************
 889:.\Generated_Source\PSoC5/Dispenser.c ****     *
 890:.\Generated_Source\PSoC5/Dispenser.c ****     * Summary:
 891:.\Generated_Source\PSoC5/Dispenser.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:.\Generated_Source\PSoC5/Dispenser.c ****     *  interrupt.
 893:.\Generated_Source\PSoC5/Dispenser.c ****     *
 894:.\Generated_Source\PSoC5/Dispenser.c ****     * Parameters:
 895:.\Generated_Source\PSoC5/Dispenser.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:.\Generated_Source\PSoC5/Dispenser.c ****     *   Dispenser_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:.\Generated_Source\PSoC5/Dispenser.c ****     *   Dispenser_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:.\Generated_Source\PSoC5/Dispenser.c ****     *   Dispenser_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:.\Generated_Source\PSoC5/Dispenser.c ****     *   Dispenser_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:.\Generated_Source\PSoC5/Dispenser.c ****     *
 901:.\Generated_Source\PSoC5/Dispenser.c ****     * Return:
 902:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
 903:.\Generated_Source\PSoC5/Dispenser.c ****     *
 904:.\Generated_Source\PSoC5/Dispenser.c ****     * Theory:
 905:.\Generated_Source\PSoC5/Dispenser.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:.\Generated_Source\PSoC5/Dispenser.c ****     *
 907:.\Generated_Source\PSoC5/Dispenser.c ****     *******************************************************************************/
 908:.\Generated_Source\PSoC5/Dispenser.c ****     void Dispenser_SetTxInterruptMode(uint8 intSrc) 
 909:.\Generated_Source\PSoC5/Dispenser.c ****     {
 1118              		.loc 1 909 0
 1119              		.cfi_startproc
 1120              		@ args = 0, pretend = 0, frame = 8
 1121              		@ frame_needed = 1, uses_anonymous_args = 0
 1122              		@ link register save eliminated.
 1123 0000 80B4     		push	{r7}
 1124              		.cfi_def_cfa_offset 4
 1125              		.cfi_offset 7, -4
 1126 0002 83B0     		sub	sp, sp, #12
 1127              		.cfi_def_cfa_offset 16
 1128 0004 00AF     		add	r7, sp, #0
 1129              		.cfi_def_cfa_register 7
 1130 0006 0346     		mov	r3, r0
 1131 0008 FB71     		strb	r3, [r7, #7]
 910:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_TXSTATUS_MASK_REG = intSrc;
 1132              		.loc 1 910 0
 1133 000a 044A     		ldr	r2, .L67
 1134 000c FB79     		ldrb	r3, [r7, #7]
 1135 000e 1370     		strb	r3, [r2]
 911:.\Generated_Source\PSoC5/Dispenser.c ****     }
 1136              		.loc 1 911 0
 1137 0010 0C37     		adds	r7, r7, #12
 1138              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 37


 1139 0012 BD46     		mov	sp, r7
 1140              		.cfi_def_cfa_register 13
 1141              		@ sp needed
 1142 0014 5DF8047B 		ldr	r7, [sp], #4
 1143              		.cfi_restore 7
 1144              		.cfi_def_cfa_offset 0
 1145 0018 7047     		bx	lr
 1146              	.L68:
 1147 001a 00BF     		.align	2
 1148              	.L67:
 1149 001c 81640040 		.word	1073767553
 1150              		.cfi_endproc
 1151              	.LFE16:
 1152              		.size	Dispenser_SetTxInterruptMode, .-Dispenser_SetTxInterruptMode
 1153              		.section	.text.Dispenser_WriteTxData,"ax",%progbits
 1154              		.align	2
 1155              		.global	Dispenser_WriteTxData
 1156              		.thumb
 1157              		.thumb_func
 1158              		.type	Dispenser_WriteTxData, %function
 1159              	Dispenser_WriteTxData:
 1160              	.LFB17:
 912:.\Generated_Source\PSoC5/Dispenser.c **** 
 913:.\Generated_Source\PSoC5/Dispenser.c **** 
 914:.\Generated_Source\PSoC5/Dispenser.c ****     /*******************************************************************************
 915:.\Generated_Source\PSoC5/Dispenser.c ****     * Function Name: Dispenser_WriteTxData
 916:.\Generated_Source\PSoC5/Dispenser.c ****     ********************************************************************************
 917:.\Generated_Source\PSoC5/Dispenser.c ****     *
 918:.\Generated_Source\PSoC5/Dispenser.c ****     * Summary:
 919:.\Generated_Source\PSoC5/Dispenser.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:.\Generated_Source\PSoC5/Dispenser.c ****     *  available without checking the TX status register. You must check status
 921:.\Generated_Source\PSoC5/Dispenser.c ****     *  separately.
 922:.\Generated_Source\PSoC5/Dispenser.c ****     *
 923:.\Generated_Source\PSoC5/Dispenser.c ****     * Parameters:
 924:.\Generated_Source\PSoC5/Dispenser.c ****     *  txDataByte: data byte
 925:.\Generated_Source\PSoC5/Dispenser.c ****     *
 926:.\Generated_Source\PSoC5/Dispenser.c ****     * Return:
 927:.\Generated_Source\PSoC5/Dispenser.c ****     * None.
 928:.\Generated_Source\PSoC5/Dispenser.c ****     *
 929:.\Generated_Source\PSoC5/Dispenser.c ****     * Global Variables:
 930:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_txBuffer - RAM buffer pointer for save data for transmission
 931:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_txBufferWrite - cyclic index for write to txBuffer,
 932:.\Generated_Source\PSoC5/Dispenser.c ****     *    incremented after each byte saved to buffer.
 933:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_txBufferRead - cyclic index for read from txBuffer,
 934:.\Generated_Source\PSoC5/Dispenser.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_initVar - checked to identify that the component has been
 936:.\Generated_Source\PSoC5/Dispenser.c ****     *    initialized.
 937:.\Generated_Source\PSoC5/Dispenser.c ****     *
 938:.\Generated_Source\PSoC5/Dispenser.c ****     * Reentrant:
 939:.\Generated_Source\PSoC5/Dispenser.c ****     *  No.
 940:.\Generated_Source\PSoC5/Dispenser.c ****     *
 941:.\Generated_Source\PSoC5/Dispenser.c ****     *******************************************************************************/
 942:.\Generated_Source\PSoC5/Dispenser.c ****     void Dispenser_WriteTxData(uint8 txDataByte) 
 943:.\Generated_Source\PSoC5/Dispenser.c ****     {
 1161              		.loc 1 943 0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 38


 1164              		@ frame_needed = 1, uses_anonymous_args = 0
 1165              		@ link register save eliminated.
 1166 0000 80B4     		push	{r7}
 1167              		.cfi_def_cfa_offset 4
 1168              		.cfi_offset 7, -4
 1169 0002 83B0     		sub	sp, sp, #12
 1170              		.cfi_def_cfa_offset 16
 1171 0004 00AF     		add	r7, sp, #0
 1172              		.cfi_def_cfa_register 7
 1173 0006 0346     		mov	r3, r0
 1174 0008 FB71     		strb	r3, [r7, #7]
 944:.\Generated_Source\PSoC5/Dispenser.c ****         /* If not Initialized then skip this function*/
 945:.\Generated_Source\PSoC5/Dispenser.c ****         if(Dispenser_initVar != 0u)
 1175              		.loc 1 945 0
 1176 000a 064B     		ldr	r3, .L71
 1177 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1178 000e 002B     		cmp	r3, #0
 1179 0010 02D0     		beq	.L69
 946:.\Generated_Source\PSoC5/Dispenser.c ****         {
 947:.\Generated_Source\PSoC5/Dispenser.c ****         #if (Dispenser_TX_INTERRUPT_ENABLED)
 948:.\Generated_Source\PSoC5/Dispenser.c **** 
 949:.\Generated_Source\PSoC5/Dispenser.c ****             /* Protect variables that could change on interrupt. */
 950:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_DisableTxInt();
 951:.\Generated_Source\PSoC5/Dispenser.c **** 
 952:.\Generated_Source\PSoC5/Dispenser.c ****             if( (Dispenser_txBufferRead == Dispenser_txBufferWrite) &&
 953:.\Generated_Source\PSoC5/Dispenser.c ****                 ((Dispenser_TXSTATUS_REG & Dispenser_TX_STS_FIFO_FULL) == 0u) )
 954:.\Generated_Source\PSoC5/Dispenser.c ****             {
 955:.\Generated_Source\PSoC5/Dispenser.c ****                 /* Add directly to the FIFO. */
 956:.\Generated_Source\PSoC5/Dispenser.c ****                 Dispenser_TXDATA_REG = txDataByte;
 957:.\Generated_Source\PSoC5/Dispenser.c ****             }
 958:.\Generated_Source\PSoC5/Dispenser.c ****             else
 959:.\Generated_Source\PSoC5/Dispenser.c ****             {
 960:.\Generated_Source\PSoC5/Dispenser.c ****                 if(Dispenser_txBufferWrite >= Dispenser_TX_BUFFER_SIZE)
 961:.\Generated_Source\PSoC5/Dispenser.c ****                 {
 962:.\Generated_Source\PSoC5/Dispenser.c ****                     Dispenser_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC5/Dispenser.c ****                 }
 964:.\Generated_Source\PSoC5/Dispenser.c **** 
 965:.\Generated_Source\PSoC5/Dispenser.c ****                 Dispenser_txBuffer[Dispenser_txBufferWrite] = txDataByte;
 966:.\Generated_Source\PSoC5/Dispenser.c **** 
 967:.\Generated_Source\PSoC5/Dispenser.c ****                 /* Add to the software buffer. */
 968:.\Generated_Source\PSoC5/Dispenser.c ****                 Dispenser_txBufferWrite++;
 969:.\Generated_Source\PSoC5/Dispenser.c ****             }
 970:.\Generated_Source\PSoC5/Dispenser.c **** 
 971:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_EnableTxInt();
 972:.\Generated_Source\PSoC5/Dispenser.c **** 
 973:.\Generated_Source\PSoC5/Dispenser.c ****         #else
 974:.\Generated_Source\PSoC5/Dispenser.c **** 
 975:.\Generated_Source\PSoC5/Dispenser.c ****             /* Add directly to the FIFO. */
 976:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_TXDATA_REG = txDataByte;
 1180              		.loc 1 976 0
 1181 0012 054A     		ldr	r2, .L71+4
 1182 0014 FB79     		ldrb	r3, [r7, #7]
 1183 0016 1370     		strb	r3, [r2]
 1184              	.L69:
 977:.\Generated_Source\PSoC5/Dispenser.c **** 
 978:.\Generated_Source\PSoC5/Dispenser.c ****         #endif /*(Dispenser_TX_INTERRUPT_ENABLED) */
 979:.\Generated_Source\PSoC5/Dispenser.c ****         }
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 39


 980:.\Generated_Source\PSoC5/Dispenser.c ****     }
 1185              		.loc 1 980 0
 1186 0018 0C37     		adds	r7, r7, #12
 1187              		.cfi_def_cfa_offset 4
 1188 001a BD46     		mov	sp, r7
 1189              		.cfi_def_cfa_register 13
 1190              		@ sp needed
 1191 001c 5DF8047B 		ldr	r7, [sp], #4
 1192              		.cfi_restore 7
 1193              		.cfi_def_cfa_offset 0
 1194 0020 7047     		bx	lr
 1195              	.L72:
 1196 0022 00BF     		.align	2
 1197              	.L71:
 1198 0024 00000000 		.word	Dispenser_initVar
 1199 0028 41640040 		.word	1073767489
 1200              		.cfi_endproc
 1201              	.LFE17:
 1202              		.size	Dispenser_WriteTxData, .-Dispenser_WriteTxData
 1203              		.section	.text.Dispenser_ReadTxStatus,"ax",%progbits
 1204              		.align	2
 1205              		.global	Dispenser_ReadTxStatus
 1206              		.thumb
 1207              		.thumb_func
 1208              		.type	Dispenser_ReadTxStatus, %function
 1209              	Dispenser_ReadTxStatus:
 1210              	.LFB18:
 981:.\Generated_Source\PSoC5/Dispenser.c **** 
 982:.\Generated_Source\PSoC5/Dispenser.c **** 
 983:.\Generated_Source\PSoC5/Dispenser.c ****     /*******************************************************************************
 984:.\Generated_Source\PSoC5/Dispenser.c ****     * Function Name: Dispenser_ReadTxStatus
 985:.\Generated_Source\PSoC5/Dispenser.c ****     ********************************************************************************
 986:.\Generated_Source\PSoC5/Dispenser.c ****     *
 987:.\Generated_Source\PSoC5/Dispenser.c ****     * Summary:
 988:.\Generated_Source\PSoC5/Dispenser.c ****     *  Reads the status register for the TX portion of the UART.
 989:.\Generated_Source\PSoC5/Dispenser.c ****     *
 990:.\Generated_Source\PSoC5/Dispenser.c ****     * Parameters:
 991:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
 992:.\Generated_Source\PSoC5/Dispenser.c ****     *
 993:.\Generated_Source\PSoC5/Dispenser.c ****     * Return:
 994:.\Generated_Source\PSoC5/Dispenser.c ****     *  Contents of the status register
 995:.\Generated_Source\PSoC5/Dispenser.c ****     *
 996:.\Generated_Source\PSoC5/Dispenser.c ****     * Theory:
 997:.\Generated_Source\PSoC5/Dispenser.c ****     *  This function reads the TX status register, which is cleared on read.
 998:.\Generated_Source\PSoC5/Dispenser.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:.\Generated_Source\PSoC5/Dispenser.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:.\Generated_Source\PSoC5/Dispenser.c ****     *  and must be handled accordingly.
1001:.\Generated_Source\PSoC5/Dispenser.c ****     *
1002:.\Generated_Source\PSoC5/Dispenser.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC5/Dispenser.c ****     uint8 Dispenser_ReadTxStatus(void) 
1004:.\Generated_Source\PSoC5/Dispenser.c ****     {
 1211              		.loc 1 1004 0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 0
 1214              		@ frame_needed = 1, uses_anonymous_args = 0
 1215              		@ link register save eliminated.
 1216 0000 80B4     		push	{r7}
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 40


 1217              		.cfi_def_cfa_offset 4
 1218              		.cfi_offset 7, -4
 1219 0002 00AF     		add	r7, sp, #0
 1220              		.cfi_def_cfa_register 7
1005:.\Generated_Source\PSoC5/Dispenser.c ****         return(Dispenser_TXSTATUS_REG);
 1221              		.loc 1 1005 0
 1222 0004 034B     		ldr	r3, .L75
 1223 0006 1B78     		ldrb	r3, [r3]
 1224 0008 DBB2     		uxtb	r3, r3
1006:.\Generated_Source\PSoC5/Dispenser.c ****     }
 1225              		.loc 1 1006 0
 1226 000a 1846     		mov	r0, r3
 1227 000c BD46     		mov	sp, r7
 1228              		.cfi_def_cfa_register 13
 1229              		@ sp needed
 1230 000e 5DF8047B 		ldr	r7, [sp], #4
 1231              		.cfi_restore 7
 1232              		.cfi_def_cfa_offset 0
 1233 0012 7047     		bx	lr
 1234              	.L76:
 1235              		.align	2
 1236              	.L75:
 1237 0014 61640040 		.word	1073767521
 1238              		.cfi_endproc
 1239              	.LFE18:
 1240              		.size	Dispenser_ReadTxStatus, .-Dispenser_ReadTxStatus
 1241              		.section	.text.Dispenser_PutChar,"ax",%progbits
 1242              		.align	2
 1243              		.global	Dispenser_PutChar
 1244              		.thumb
 1245              		.thumb_func
 1246              		.type	Dispenser_PutChar, %function
 1247              	Dispenser_PutChar:
 1248              	.LFB19:
1007:.\Generated_Source\PSoC5/Dispenser.c **** 
1008:.\Generated_Source\PSoC5/Dispenser.c **** 
1009:.\Generated_Source\PSoC5/Dispenser.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC5/Dispenser.c ****     * Function Name: Dispenser_PutChar
1011:.\Generated_Source\PSoC5/Dispenser.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC5/Dispenser.c ****     *
1013:.\Generated_Source\PSoC5/Dispenser.c ****     * Summary:
1014:.\Generated_Source\PSoC5/Dispenser.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:.\Generated_Source\PSoC5/Dispenser.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:.\Generated_Source\PSoC5/Dispenser.c ****     *  hold the data.
1017:.\Generated_Source\PSoC5/Dispenser.c ****     *
1018:.\Generated_Source\PSoC5/Dispenser.c ****     * Parameters:
1019:.\Generated_Source\PSoC5/Dispenser.c ****     *  txDataByte: Byte containing the data to transmit
1020:.\Generated_Source\PSoC5/Dispenser.c ****     *
1021:.\Generated_Source\PSoC5/Dispenser.c ****     * Return:
1022:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
1023:.\Generated_Source\PSoC5/Dispenser.c ****     *
1024:.\Generated_Source\PSoC5/Dispenser.c ****     * Global Variables:
1025:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_txBuffer - RAM buffer pointer for save data for transmission
1026:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_txBufferWrite - cyclic index for write to txBuffer,
1027:.\Generated_Source\PSoC5/Dispenser.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:.\Generated_Source\PSoC5/Dispenser.c ****     *     saved to buffer.
1029:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_txBufferRead - cyclic index for read from txBuffer,
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 41


1030:.\Generated_Source\PSoC5/Dispenser.c ****     *     checked to identify free space in txBuffer.
1031:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_initVar - checked to identify that the component has been
1032:.\Generated_Source\PSoC5/Dispenser.c ****     *     initialized.
1033:.\Generated_Source\PSoC5/Dispenser.c ****     *
1034:.\Generated_Source\PSoC5/Dispenser.c ****     * Reentrant:
1035:.\Generated_Source\PSoC5/Dispenser.c ****     *  No.
1036:.\Generated_Source\PSoC5/Dispenser.c ****     *
1037:.\Generated_Source\PSoC5/Dispenser.c ****     * Theory:
1038:.\Generated_Source\PSoC5/Dispenser.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:.\Generated_Source\PSoC5/Dispenser.c ****     *
1040:.\Generated_Source\PSoC5/Dispenser.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC5/Dispenser.c ****     void Dispenser_PutChar(uint8 txDataByte) 
1042:.\Generated_Source\PSoC5/Dispenser.c ****     {
 1249              		.loc 1 1042 0
 1250              		.cfi_startproc
 1251              		@ args = 0, pretend = 0, frame = 8
 1252              		@ frame_needed = 1, uses_anonymous_args = 0
 1253              		@ link register save eliminated.
 1254 0000 80B4     		push	{r7}
 1255              		.cfi_def_cfa_offset 4
 1256              		.cfi_offset 7, -4
 1257 0002 83B0     		sub	sp, sp, #12
 1258              		.cfi_def_cfa_offset 16
 1259 0004 00AF     		add	r7, sp, #0
 1260              		.cfi_def_cfa_register 7
 1261 0006 0346     		mov	r3, r0
 1262 0008 FB71     		strb	r3, [r7, #7]
1043:.\Generated_Source\PSoC5/Dispenser.c ****     #if (Dispenser_TX_INTERRUPT_ENABLED)
1044:.\Generated_Source\PSoC5/Dispenser.c ****         /* The temporary output pointer is used since it takes two instructions
1045:.\Generated_Source\PSoC5/Dispenser.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:.\Generated_Source\PSoC5/Dispenser.c ****         *  pointer and getting an interrupt in between instructions.
1047:.\Generated_Source\PSoC5/Dispenser.c ****         */
1048:.\Generated_Source\PSoC5/Dispenser.c ****         uint8 locTxBufferWrite;
1049:.\Generated_Source\PSoC5/Dispenser.c ****         uint8 locTxBufferRead;
1050:.\Generated_Source\PSoC5/Dispenser.c **** 
1051:.\Generated_Source\PSoC5/Dispenser.c ****         do
1052:.\Generated_Source\PSoC5/Dispenser.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:.\Generated_Source\PSoC5/Dispenser.c **** 
1054:.\Generated_Source\PSoC5/Dispenser.c ****         #if ((Dispenser_TX_BUFFER_SIZE > Dispenser_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:.\Generated_Source\PSoC5/Dispenser.c ****             /* Disable TX interrupt to protect variables from modification */
1056:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_DisableTxInt();
1057:.\Generated_Source\PSoC5/Dispenser.c ****         #endif /* (Dispenser_TX_BUFFER_SIZE > Dispenser_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:.\Generated_Source\PSoC5/Dispenser.c **** 
1059:.\Generated_Source\PSoC5/Dispenser.c ****             locTxBufferWrite = Dispenser_txBufferWrite;
1060:.\Generated_Source\PSoC5/Dispenser.c ****             locTxBufferRead  = Dispenser_txBufferRead;
1061:.\Generated_Source\PSoC5/Dispenser.c **** 
1062:.\Generated_Source\PSoC5/Dispenser.c ****         #if ((Dispenser_TX_BUFFER_SIZE > Dispenser_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:.\Generated_Source\PSoC5/Dispenser.c ****             /* Enable interrupt to continue transmission */
1064:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_EnableTxInt();
1065:.\Generated_Source\PSoC5/Dispenser.c ****         #endif /* (Dispenser_TX_BUFFER_SIZE > Dispenser_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:.\Generated_Source\PSoC5/Dispenser.c ****         }
1067:.\Generated_Source\PSoC5/Dispenser.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:.\Generated_Source\PSoC5/Dispenser.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:.\Generated_Source\PSoC5/Dispenser.c ****                                 (uint8)(Dispenser_TX_BUFFER_SIZE - 1u)) );
1070:.\Generated_Source\PSoC5/Dispenser.c **** 
1071:.\Generated_Source\PSoC5/Dispenser.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:.\Generated_Source\PSoC5/Dispenser.c ****             ((Dispenser_TXSTATUS_REG & Dispenser_TX_STS_FIFO_FULL) == 0u) )
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 42


1073:.\Generated_Source\PSoC5/Dispenser.c ****         {
1074:.\Generated_Source\PSoC5/Dispenser.c ****             /* Add directly to the FIFO */
1075:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_TXDATA_REG = txDataByte;
1076:.\Generated_Source\PSoC5/Dispenser.c ****         }
1077:.\Generated_Source\PSoC5/Dispenser.c ****         else
1078:.\Generated_Source\PSoC5/Dispenser.c ****         {
1079:.\Generated_Source\PSoC5/Dispenser.c ****             if(locTxBufferWrite >= Dispenser_TX_BUFFER_SIZE)
1080:.\Generated_Source\PSoC5/Dispenser.c ****             {
1081:.\Generated_Source\PSoC5/Dispenser.c ****                 locTxBufferWrite = 0u;
1082:.\Generated_Source\PSoC5/Dispenser.c ****             }
1083:.\Generated_Source\PSoC5/Dispenser.c ****             /* Add to the software buffer. */
1084:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_txBuffer[locTxBufferWrite] = txDataByte;
1085:.\Generated_Source\PSoC5/Dispenser.c ****             locTxBufferWrite++;
1086:.\Generated_Source\PSoC5/Dispenser.c **** 
1087:.\Generated_Source\PSoC5/Dispenser.c ****             /* Finally, update the real output pointer */
1088:.\Generated_Source\PSoC5/Dispenser.c ****         #if ((Dispenser_TX_BUFFER_SIZE > Dispenser_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_DisableTxInt();
1090:.\Generated_Source\PSoC5/Dispenser.c ****         #endif /* (Dispenser_TX_BUFFER_SIZE > Dispenser_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:.\Generated_Source\PSoC5/Dispenser.c **** 
1092:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_txBufferWrite = locTxBufferWrite;
1093:.\Generated_Source\PSoC5/Dispenser.c **** 
1094:.\Generated_Source\PSoC5/Dispenser.c ****         #if ((Dispenser_TX_BUFFER_SIZE > Dispenser_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_EnableTxInt();
1096:.\Generated_Source\PSoC5/Dispenser.c ****         #endif /* (Dispenser_TX_BUFFER_SIZE > Dispenser_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:.\Generated_Source\PSoC5/Dispenser.c **** 
1098:.\Generated_Source\PSoC5/Dispenser.c ****             if(0u != (Dispenser_TXSTATUS_REG & Dispenser_TX_STS_FIFO_EMPTY))
1099:.\Generated_Source\PSoC5/Dispenser.c ****             {
1100:.\Generated_Source\PSoC5/Dispenser.c ****                 /* Trigger TX interrupt to send software buffer */
1101:.\Generated_Source\PSoC5/Dispenser.c ****                 Dispenser_SetPendingTxInt();
1102:.\Generated_Source\PSoC5/Dispenser.c ****             }
1103:.\Generated_Source\PSoC5/Dispenser.c ****         }
1104:.\Generated_Source\PSoC5/Dispenser.c **** 
1105:.\Generated_Source\PSoC5/Dispenser.c ****     #else
1106:.\Generated_Source\PSoC5/Dispenser.c **** 
1107:.\Generated_Source\PSoC5/Dispenser.c ****         while((Dispenser_TXSTATUS_REG & Dispenser_TX_STS_FIFO_FULL) != 0u)
 1263              		.loc 1 1107 0
 1264 000a 00BF     		nop
 1265              	.L78:
 1266              		.loc 1 1107 0 is_stmt 0 discriminator 1
 1267 000c 074B     		ldr	r3, .L79
 1268 000e 1B78     		ldrb	r3, [r3]
 1269 0010 DBB2     		uxtb	r3, r3
 1270 0012 03F00403 		and	r3, r3, #4
 1271 0016 002B     		cmp	r3, #0
 1272 0018 F8D1     		bne	.L78
1108:.\Generated_Source\PSoC5/Dispenser.c ****         {
1109:.\Generated_Source\PSoC5/Dispenser.c ****             /* Wait for room in the FIFO */
1110:.\Generated_Source\PSoC5/Dispenser.c ****         }
1111:.\Generated_Source\PSoC5/Dispenser.c **** 
1112:.\Generated_Source\PSoC5/Dispenser.c ****         /* Add directly to the FIFO */
1113:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_TXDATA_REG = txDataByte;
 1273              		.loc 1 1113 0 is_stmt 1
 1274 001a 054A     		ldr	r2, .L79+4
 1275 001c FB79     		ldrb	r3, [r7, #7]
 1276 001e 1370     		strb	r3, [r2]
1114:.\Generated_Source\PSoC5/Dispenser.c **** 
1115:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* Dispenser_TX_INTERRUPT_ENABLED */
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 43


1116:.\Generated_Source\PSoC5/Dispenser.c ****     }
 1277              		.loc 1 1116 0
 1278 0020 0C37     		adds	r7, r7, #12
 1279              		.cfi_def_cfa_offset 4
 1280 0022 BD46     		mov	sp, r7
 1281              		.cfi_def_cfa_register 13
 1282              		@ sp needed
 1283 0024 5DF8047B 		ldr	r7, [sp], #4
 1284              		.cfi_restore 7
 1285              		.cfi_def_cfa_offset 0
 1286 0028 7047     		bx	lr
 1287              	.L80:
 1288 002a 00BF     		.align	2
 1289              	.L79:
 1290 002c 61640040 		.word	1073767521
 1291 0030 41640040 		.word	1073767489
 1292              		.cfi_endproc
 1293              	.LFE19:
 1294              		.size	Dispenser_PutChar, .-Dispenser_PutChar
 1295              		.section	.text.Dispenser_PutString,"ax",%progbits
 1296              		.align	2
 1297              		.global	Dispenser_PutString
 1298              		.thumb
 1299              		.thumb_func
 1300              		.type	Dispenser_PutString, %function
 1301              	Dispenser_PutString:
 1302              	.LFB20:
1117:.\Generated_Source\PSoC5/Dispenser.c **** 
1118:.\Generated_Source\PSoC5/Dispenser.c **** 
1119:.\Generated_Source\PSoC5/Dispenser.c ****     /*******************************************************************************
1120:.\Generated_Source\PSoC5/Dispenser.c ****     * Function Name: Dispenser_PutString
1121:.\Generated_Source\PSoC5/Dispenser.c ****     ********************************************************************************
1122:.\Generated_Source\PSoC5/Dispenser.c ****     *
1123:.\Generated_Source\PSoC5/Dispenser.c ****     * Summary:
1124:.\Generated_Source\PSoC5/Dispenser.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:.\Generated_Source\PSoC5/Dispenser.c ****     *
1126:.\Generated_Source\PSoC5/Dispenser.c ****     * Parameters:
1127:.\Generated_Source\PSoC5/Dispenser.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:.\Generated_Source\PSoC5/Dispenser.c ****     *
1129:.\Generated_Source\PSoC5/Dispenser.c ****     * Return:
1130:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
1131:.\Generated_Source\PSoC5/Dispenser.c ****     *
1132:.\Generated_Source\PSoC5/Dispenser.c ****     * Global Variables:
1133:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_initVar - checked to identify that the component has been
1134:.\Generated_Source\PSoC5/Dispenser.c ****     *     initialized.
1135:.\Generated_Source\PSoC5/Dispenser.c ****     *
1136:.\Generated_Source\PSoC5/Dispenser.c ****     * Reentrant:
1137:.\Generated_Source\PSoC5/Dispenser.c ****     *  No.
1138:.\Generated_Source\PSoC5/Dispenser.c ****     *
1139:.\Generated_Source\PSoC5/Dispenser.c ****     * Theory:
1140:.\Generated_Source\PSoC5/Dispenser.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:.\Generated_Source\PSoC5/Dispenser.c ****     *  function blocks until the last character of the string is loaded into the
1142:.\Generated_Source\PSoC5/Dispenser.c ****     *  TX buffer.
1143:.\Generated_Source\PSoC5/Dispenser.c ****     *
1144:.\Generated_Source\PSoC5/Dispenser.c ****     *******************************************************************************/
1145:.\Generated_Source\PSoC5/Dispenser.c ****     void Dispenser_PutString(const char8 string[]) 
1146:.\Generated_Source\PSoC5/Dispenser.c ****     {
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 44


 1303              		.loc 1 1146 0
 1304              		.cfi_startproc
 1305              		@ args = 0, pretend = 0, frame = 16
 1306              		@ frame_needed = 1, uses_anonymous_args = 0
 1307 0000 80B5     		push	{r7, lr}
 1308              		.cfi_def_cfa_offset 8
 1309              		.cfi_offset 7, -8
 1310              		.cfi_offset 14, -4
 1311 0002 84B0     		sub	sp, sp, #16
 1312              		.cfi_def_cfa_offset 24
 1313 0004 00AF     		add	r7, sp, #0
 1314              		.cfi_def_cfa_register 7
 1315 0006 7860     		str	r0, [r7, #4]
1147:.\Generated_Source\PSoC5/Dispenser.c ****         uint16 bufIndex = 0u;
 1316              		.loc 1 1147 0
 1317 0008 0023     		movs	r3, #0
 1318 000a FB81     		strh	r3, [r7, #14]	@ movhi
1148:.\Generated_Source\PSoC5/Dispenser.c **** 
1149:.\Generated_Source\PSoC5/Dispenser.c ****         /* If not Initialized then skip this function */
1150:.\Generated_Source\PSoC5/Dispenser.c ****         if(Dispenser_initVar != 0u)
 1319              		.loc 1 1150 0
 1320 000c 0B4B     		ldr	r3, .L85
 1321 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1322 0010 002B     		cmp	r3, #0
 1323 0012 10D0     		beq	.L81
1151:.\Generated_Source\PSoC5/Dispenser.c ****         {
1152:.\Generated_Source\PSoC5/Dispenser.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:.\Generated_Source\PSoC5/Dispenser.c ****             while(string[bufIndex] != (char8) 0)
 1324              		.loc 1 1153 0
 1325 0014 09E0     		b	.L83
 1326              	.L84:
1154:.\Generated_Source\PSoC5/Dispenser.c ****             {
1155:.\Generated_Source\PSoC5/Dispenser.c ****                 Dispenser_PutChar((uint8)string[bufIndex]);
 1327              		.loc 1 1155 0
 1328 0016 FB89     		ldrh	r3, [r7, #14]
 1329 0018 7A68     		ldr	r2, [r7, #4]
 1330 001a 1344     		add	r3, r3, r2
 1331 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1332 001e 1846     		mov	r0, r3
 1333 0020 FFF7FEFF 		bl	Dispenser_PutChar
1156:.\Generated_Source\PSoC5/Dispenser.c ****                 bufIndex++;
 1334              		.loc 1 1156 0
 1335 0024 FB89     		ldrh	r3, [r7, #14]
 1336 0026 0133     		adds	r3, r3, #1
 1337 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 1338              	.L83:
1153:.\Generated_Source\PSoC5/Dispenser.c ****             {
 1339              		.loc 1 1153 0
 1340 002a FB89     		ldrh	r3, [r7, #14]
 1341 002c 7A68     		ldr	r2, [r7, #4]
 1342 002e 1344     		add	r3, r3, r2
 1343 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1344 0032 002B     		cmp	r3, #0
 1345 0034 EFD1     		bne	.L84
 1346              	.L81:
1157:.\Generated_Source\PSoC5/Dispenser.c ****             }
1158:.\Generated_Source\PSoC5/Dispenser.c ****         }
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 45


1159:.\Generated_Source\PSoC5/Dispenser.c ****     }
 1347              		.loc 1 1159 0
 1348 0036 1037     		adds	r7, r7, #16
 1349              		.cfi_def_cfa_offset 8
 1350 0038 BD46     		mov	sp, r7
 1351              		.cfi_def_cfa_register 13
 1352              		@ sp needed
 1353 003a 80BD     		pop	{r7, pc}
 1354              	.L86:
 1355              		.align	2
 1356              	.L85:
 1357 003c 00000000 		.word	Dispenser_initVar
 1358              		.cfi_endproc
 1359              	.LFE20:
 1360              		.size	Dispenser_PutString, .-Dispenser_PutString
 1361              		.section	.text.Dispenser_PutArray,"ax",%progbits
 1362              		.align	2
 1363              		.global	Dispenser_PutArray
 1364              		.thumb
 1365              		.thumb_func
 1366              		.type	Dispenser_PutArray, %function
 1367              	Dispenser_PutArray:
 1368              	.LFB21:
1160:.\Generated_Source\PSoC5/Dispenser.c **** 
1161:.\Generated_Source\PSoC5/Dispenser.c **** 
1162:.\Generated_Source\PSoC5/Dispenser.c ****     /*******************************************************************************
1163:.\Generated_Source\PSoC5/Dispenser.c ****     * Function Name: Dispenser_PutArray
1164:.\Generated_Source\PSoC5/Dispenser.c ****     ********************************************************************************
1165:.\Generated_Source\PSoC5/Dispenser.c ****     *
1166:.\Generated_Source\PSoC5/Dispenser.c ****     * Summary:
1167:.\Generated_Source\PSoC5/Dispenser.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:.\Generated_Source\PSoC5/Dispenser.c ****     *  transmission.
1169:.\Generated_Source\PSoC5/Dispenser.c ****     *
1170:.\Generated_Source\PSoC5/Dispenser.c ****     * Parameters:
1171:.\Generated_Source\PSoC5/Dispenser.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:.\Generated_Source\PSoC5/Dispenser.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:.\Generated_Source\PSoC5/Dispenser.c ****     *             Size parameter.
1174:.\Generated_Source\PSoC5/Dispenser.c ****     *
1175:.\Generated_Source\PSoC5/Dispenser.c ****     * Return:
1176:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
1177:.\Generated_Source\PSoC5/Dispenser.c ****     *
1178:.\Generated_Source\PSoC5/Dispenser.c ****     * Global Variables:
1179:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_initVar - checked to identify that the component has been
1180:.\Generated_Source\PSoC5/Dispenser.c ****     *     initialized.
1181:.\Generated_Source\PSoC5/Dispenser.c ****     *
1182:.\Generated_Source\PSoC5/Dispenser.c ****     * Reentrant:
1183:.\Generated_Source\PSoC5/Dispenser.c ****     *  No.
1184:.\Generated_Source\PSoC5/Dispenser.c ****     *
1185:.\Generated_Source\PSoC5/Dispenser.c ****     * Theory:
1186:.\Generated_Source\PSoC5/Dispenser.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:.\Generated_Source\PSoC5/Dispenser.c ****     *  function blocks until the last character of the string is loaded into the
1188:.\Generated_Source\PSoC5/Dispenser.c ****     *  TX buffer.
1189:.\Generated_Source\PSoC5/Dispenser.c ****     *
1190:.\Generated_Source\PSoC5/Dispenser.c ****     *******************************************************************************/
1191:.\Generated_Source\PSoC5/Dispenser.c ****     void Dispenser_PutArray(const uint8 string[], uint8 byteCount)
1192:.\Generated_Source\PSoC5/Dispenser.c ****                                                                     
1193:.\Generated_Source\PSoC5/Dispenser.c ****     {
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 46


 1369              		.loc 1 1193 0
 1370              		.cfi_startproc
 1371              		@ args = 0, pretend = 0, frame = 16
 1372              		@ frame_needed = 1, uses_anonymous_args = 0
 1373 0000 80B5     		push	{r7, lr}
 1374              		.cfi_def_cfa_offset 8
 1375              		.cfi_offset 7, -8
 1376              		.cfi_offset 14, -4
 1377 0002 84B0     		sub	sp, sp, #16
 1378              		.cfi_def_cfa_offset 24
 1379 0004 00AF     		add	r7, sp, #0
 1380              		.cfi_def_cfa_register 7
 1381 0006 7860     		str	r0, [r7, #4]
 1382 0008 0B46     		mov	r3, r1
 1383 000a FB70     		strb	r3, [r7, #3]
1194:.\Generated_Source\PSoC5/Dispenser.c ****         uint8 bufIndex = 0u;
 1384              		.loc 1 1194 0
 1385 000c 0023     		movs	r3, #0
 1386 000e FB73     		strb	r3, [r7, #15]
1195:.\Generated_Source\PSoC5/Dispenser.c **** 
1196:.\Generated_Source\PSoC5/Dispenser.c ****         /* If not Initialized then skip this function */
1197:.\Generated_Source\PSoC5/Dispenser.c ****         if(Dispenser_initVar != 0u)
 1387              		.loc 1 1197 0
 1388 0010 0A4B     		ldr	r3, .L91
 1389 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1390 0014 002B     		cmp	r3, #0
 1391 0016 0ED0     		beq	.L87
1198:.\Generated_Source\PSoC5/Dispenser.c ****         {
1199:.\Generated_Source\PSoC5/Dispenser.c ****             while(bufIndex < byteCount)
 1392              		.loc 1 1199 0
 1393 0018 09E0     		b	.L89
 1394              	.L90:
1200:.\Generated_Source\PSoC5/Dispenser.c ****             {
1201:.\Generated_Source\PSoC5/Dispenser.c ****                 Dispenser_PutChar(string[bufIndex]);
 1395              		.loc 1 1201 0
 1396 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1397 001c 7A68     		ldr	r2, [r7, #4]
 1398 001e 1344     		add	r3, r3, r2
 1399 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1400 0022 1846     		mov	r0, r3
 1401 0024 FFF7FEFF 		bl	Dispenser_PutChar
1202:.\Generated_Source\PSoC5/Dispenser.c ****                 bufIndex++;
 1402              		.loc 1 1202 0
 1403 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1404 002a 0133     		adds	r3, r3, #1
 1405 002c FB73     		strb	r3, [r7, #15]
 1406              	.L89:
1199:.\Generated_Source\PSoC5/Dispenser.c ****             {
 1407              		.loc 1 1199 0
 1408 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1409 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1410 0032 9A42     		cmp	r2, r3
 1411 0034 F1D3     		bcc	.L90
 1412              	.L87:
1203:.\Generated_Source\PSoC5/Dispenser.c ****             }
1204:.\Generated_Source\PSoC5/Dispenser.c ****         }
1205:.\Generated_Source\PSoC5/Dispenser.c ****     }
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 47


 1413              		.loc 1 1205 0
 1414 0036 1037     		adds	r7, r7, #16
 1415              		.cfi_def_cfa_offset 8
 1416 0038 BD46     		mov	sp, r7
 1417              		.cfi_def_cfa_register 13
 1418              		@ sp needed
 1419 003a 80BD     		pop	{r7, pc}
 1420              	.L92:
 1421              		.align	2
 1422              	.L91:
 1423 003c 00000000 		.word	Dispenser_initVar
 1424              		.cfi_endproc
 1425              	.LFE21:
 1426              		.size	Dispenser_PutArray, .-Dispenser_PutArray
 1427              		.section	.text.Dispenser_PutCRLF,"ax",%progbits
 1428              		.align	2
 1429              		.global	Dispenser_PutCRLF
 1430              		.thumb
 1431              		.thumb_func
 1432              		.type	Dispenser_PutCRLF, %function
 1433              	Dispenser_PutCRLF:
 1434              	.LFB22:
1206:.\Generated_Source\PSoC5/Dispenser.c **** 
1207:.\Generated_Source\PSoC5/Dispenser.c **** 
1208:.\Generated_Source\PSoC5/Dispenser.c ****     /*******************************************************************************
1209:.\Generated_Source\PSoC5/Dispenser.c ****     * Function Name: Dispenser_PutCRLF
1210:.\Generated_Source\PSoC5/Dispenser.c ****     ********************************************************************************
1211:.\Generated_Source\PSoC5/Dispenser.c ****     *
1212:.\Generated_Source\PSoC5/Dispenser.c ****     * Summary:
1213:.\Generated_Source\PSoC5/Dispenser.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:.\Generated_Source\PSoC5/Dispenser.c ****     *  (0x0A) to the transmit buffer.
1215:.\Generated_Source\PSoC5/Dispenser.c ****     *
1216:.\Generated_Source\PSoC5/Dispenser.c ****     * Parameters:
1217:.\Generated_Source\PSoC5/Dispenser.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:.\Generated_Source\PSoC5/Dispenser.c ****     *
1219:.\Generated_Source\PSoC5/Dispenser.c ****     * Return:
1220:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
1221:.\Generated_Source\PSoC5/Dispenser.c ****     *
1222:.\Generated_Source\PSoC5/Dispenser.c ****     * Global Variables:
1223:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_initVar - checked to identify that the component has been
1224:.\Generated_Source\PSoC5/Dispenser.c ****     *     initialized.
1225:.\Generated_Source\PSoC5/Dispenser.c ****     *
1226:.\Generated_Source\PSoC5/Dispenser.c ****     * Reentrant:
1227:.\Generated_Source\PSoC5/Dispenser.c ****     *  No.
1228:.\Generated_Source\PSoC5/Dispenser.c ****     *
1229:.\Generated_Source\PSoC5/Dispenser.c ****     *******************************************************************************/
1230:.\Generated_Source\PSoC5/Dispenser.c ****     void Dispenser_PutCRLF(uint8 txDataByte) 
1231:.\Generated_Source\PSoC5/Dispenser.c ****     {
 1435              		.loc 1 1231 0
 1436              		.cfi_startproc
 1437              		@ args = 0, pretend = 0, frame = 8
 1438              		@ frame_needed = 1, uses_anonymous_args = 0
 1439 0000 80B5     		push	{r7, lr}
 1440              		.cfi_def_cfa_offset 8
 1441              		.cfi_offset 7, -8
 1442              		.cfi_offset 14, -4
 1443 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 48


 1444              		.cfi_def_cfa_offset 16
 1445 0004 00AF     		add	r7, sp, #0
 1446              		.cfi_def_cfa_register 7
 1447 0006 0346     		mov	r3, r0
 1448 0008 FB71     		strb	r3, [r7, #7]
1232:.\Generated_Source\PSoC5/Dispenser.c ****         /* If not Initialized then skip this function */
1233:.\Generated_Source\PSoC5/Dispenser.c ****         if(Dispenser_initVar != 0u)
 1449              		.loc 1 1233 0
 1450 000a 084B     		ldr	r3, .L95
 1451 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1452 000e 002B     		cmp	r3, #0
 1453 0010 09D0     		beq	.L93
1234:.\Generated_Source\PSoC5/Dispenser.c ****         {
1235:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_PutChar(txDataByte);
 1454              		.loc 1 1235 0
 1455 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1456 0014 1846     		mov	r0, r3
 1457 0016 FFF7FEFF 		bl	Dispenser_PutChar
1236:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_PutChar(0x0Du);
 1458              		.loc 1 1236 0
 1459 001a 0D20     		movs	r0, #13
 1460 001c FFF7FEFF 		bl	Dispenser_PutChar
1237:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_PutChar(0x0Au);
 1461              		.loc 1 1237 0
 1462 0020 0A20     		movs	r0, #10
 1463 0022 FFF7FEFF 		bl	Dispenser_PutChar
 1464              	.L93:
1238:.\Generated_Source\PSoC5/Dispenser.c ****         }
1239:.\Generated_Source\PSoC5/Dispenser.c ****     }
 1465              		.loc 1 1239 0
 1466 0026 0837     		adds	r7, r7, #8
 1467              		.cfi_def_cfa_offset 8
 1468 0028 BD46     		mov	sp, r7
 1469              		.cfi_def_cfa_register 13
 1470              		@ sp needed
 1471 002a 80BD     		pop	{r7, pc}
 1472              	.L96:
 1473              		.align	2
 1474              	.L95:
 1475 002c 00000000 		.word	Dispenser_initVar
 1476              		.cfi_endproc
 1477              	.LFE22:
 1478              		.size	Dispenser_PutCRLF, .-Dispenser_PutCRLF
 1479              		.section	.text.Dispenser_GetTxBufferSize,"ax",%progbits
 1480              		.align	2
 1481              		.global	Dispenser_GetTxBufferSize
 1482              		.thumb
 1483              		.thumb_func
 1484              		.type	Dispenser_GetTxBufferSize, %function
 1485              	Dispenser_GetTxBufferSize:
 1486              	.LFB23:
1240:.\Generated_Source\PSoC5/Dispenser.c **** 
1241:.\Generated_Source\PSoC5/Dispenser.c **** 
1242:.\Generated_Source\PSoC5/Dispenser.c ****     /*******************************************************************************
1243:.\Generated_Source\PSoC5/Dispenser.c ****     * Function Name: Dispenser_GetTxBufferSize
1244:.\Generated_Source\PSoC5/Dispenser.c ****     ********************************************************************************
1245:.\Generated_Source\PSoC5/Dispenser.c ****     *
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 49


1246:.\Generated_Source\PSoC5/Dispenser.c ****     * Summary:
1247:.\Generated_Source\PSoC5/Dispenser.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:.\Generated_Source\PSoC5/Dispenser.c ****     *  transmitted.
1249:.\Generated_Source\PSoC5/Dispenser.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:.\Generated_Source\PSoC5/Dispenser.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:.\Generated_Source\PSoC5/Dispenser.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:.\Generated_Source\PSoC5/Dispenser.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:.\Generated_Source\PSoC5/Dispenser.c ****     *    TX FIFO do not count.
1254:.\Generated_Source\PSoC5/Dispenser.c ****     *
1255:.\Generated_Source\PSoC5/Dispenser.c ****     * Parameters:
1256:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
1257:.\Generated_Source\PSoC5/Dispenser.c ****     *
1258:.\Generated_Source\PSoC5/Dispenser.c ****     * Return:
1259:.\Generated_Source\PSoC5/Dispenser.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:.\Generated_Source\PSoC5/Dispenser.c ****     *  Buffer Size parameter.
1261:.\Generated_Source\PSoC5/Dispenser.c ****     *
1262:.\Generated_Source\PSoC5/Dispenser.c ****     * Global Variables:
1263:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_txBufferWrite - used to calculate left space.
1264:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_txBufferRead - used to calculate left space.
1265:.\Generated_Source\PSoC5/Dispenser.c ****     *
1266:.\Generated_Source\PSoC5/Dispenser.c ****     * Reentrant:
1267:.\Generated_Source\PSoC5/Dispenser.c ****     *  No.
1268:.\Generated_Source\PSoC5/Dispenser.c ****     *
1269:.\Generated_Source\PSoC5/Dispenser.c ****     * Theory:
1270:.\Generated_Source\PSoC5/Dispenser.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:.\Generated_Source\PSoC5/Dispenser.c ****     *
1272:.\Generated_Source\PSoC5/Dispenser.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC5/Dispenser.c ****     uint8 Dispenser_GetTxBufferSize(void)
1274:.\Generated_Source\PSoC5/Dispenser.c ****                                                             
1275:.\Generated_Source\PSoC5/Dispenser.c ****     {
 1487              		.loc 1 1275 0
 1488              		.cfi_startproc
 1489              		@ args = 0, pretend = 0, frame = 8
 1490              		@ frame_needed = 1, uses_anonymous_args = 0
 1491              		@ link register save eliminated.
 1492 0000 80B4     		push	{r7}
 1493              		.cfi_def_cfa_offset 4
 1494              		.cfi_offset 7, -4
 1495 0002 83B0     		sub	sp, sp, #12
 1496              		.cfi_def_cfa_offset 16
 1497 0004 00AF     		add	r7, sp, #0
 1498              		.cfi_def_cfa_register 7
1276:.\Generated_Source\PSoC5/Dispenser.c ****         uint8 size;
1277:.\Generated_Source\PSoC5/Dispenser.c **** 
1278:.\Generated_Source\PSoC5/Dispenser.c ****     #if (Dispenser_TX_INTERRUPT_ENABLED)
1279:.\Generated_Source\PSoC5/Dispenser.c **** 
1280:.\Generated_Source\PSoC5/Dispenser.c ****         /* Protect variables that could change on interrupt. */
1281:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_DisableTxInt();
1282:.\Generated_Source\PSoC5/Dispenser.c **** 
1283:.\Generated_Source\PSoC5/Dispenser.c ****         if(Dispenser_txBufferRead == Dispenser_txBufferWrite)
1284:.\Generated_Source\PSoC5/Dispenser.c ****         {
1285:.\Generated_Source\PSoC5/Dispenser.c ****             size = 0u;
1286:.\Generated_Source\PSoC5/Dispenser.c ****         }
1287:.\Generated_Source\PSoC5/Dispenser.c ****         else if(Dispenser_txBufferRead < Dispenser_txBufferWrite)
1288:.\Generated_Source\PSoC5/Dispenser.c ****         {
1289:.\Generated_Source\PSoC5/Dispenser.c ****             size = (Dispenser_txBufferWrite - Dispenser_txBufferRead);
1290:.\Generated_Source\PSoC5/Dispenser.c ****         }
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 50


1291:.\Generated_Source\PSoC5/Dispenser.c ****         else
1292:.\Generated_Source\PSoC5/Dispenser.c ****         {
1293:.\Generated_Source\PSoC5/Dispenser.c ****             size = (Dispenser_TX_BUFFER_SIZE - Dispenser_txBufferRead) +
1294:.\Generated_Source\PSoC5/Dispenser.c ****                     Dispenser_txBufferWrite;
1295:.\Generated_Source\PSoC5/Dispenser.c ****         }
1296:.\Generated_Source\PSoC5/Dispenser.c **** 
1297:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_EnableTxInt();
1298:.\Generated_Source\PSoC5/Dispenser.c **** 
1299:.\Generated_Source\PSoC5/Dispenser.c ****     #else
1300:.\Generated_Source\PSoC5/Dispenser.c **** 
1301:.\Generated_Source\PSoC5/Dispenser.c ****         size = Dispenser_TXSTATUS_REG;
 1499              		.loc 1 1301 0
 1500 0006 0E4B     		ldr	r3, .L102
 1501 0008 1B78     		ldrb	r3, [r3]
 1502 000a FB71     		strb	r3, [r7, #7]
1302:.\Generated_Source\PSoC5/Dispenser.c **** 
1303:.\Generated_Source\PSoC5/Dispenser.c ****         /* Is the fifo is full. */
1304:.\Generated_Source\PSoC5/Dispenser.c ****         if((size & Dispenser_TX_STS_FIFO_FULL) != 0u)
 1503              		.loc 1 1304 0
 1504 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1505 000e 03F00403 		and	r3, r3, #4
 1506 0012 002B     		cmp	r3, #0
 1507 0014 02D0     		beq	.L98
1305:.\Generated_Source\PSoC5/Dispenser.c ****         {
1306:.\Generated_Source\PSoC5/Dispenser.c ****             size = Dispenser_FIFO_LENGTH;
 1508              		.loc 1 1306 0
 1509 0016 0423     		movs	r3, #4
 1510 0018 FB71     		strb	r3, [r7, #7]
 1511 001a 09E0     		b	.L99
 1512              	.L98:
1307:.\Generated_Source\PSoC5/Dispenser.c ****         }
1308:.\Generated_Source\PSoC5/Dispenser.c ****         else if((size & Dispenser_TX_STS_FIFO_EMPTY) != 0u)
 1513              		.loc 1 1308 0
 1514 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1515 001e 03F00203 		and	r3, r3, #2
 1516 0022 002B     		cmp	r3, #0
 1517 0024 02D0     		beq	.L100
1309:.\Generated_Source\PSoC5/Dispenser.c ****         {
1310:.\Generated_Source\PSoC5/Dispenser.c ****             size = 0u;
 1518              		.loc 1 1310 0
 1519 0026 0023     		movs	r3, #0
 1520 0028 FB71     		strb	r3, [r7, #7]
 1521 002a 01E0     		b	.L99
 1522              	.L100:
1311:.\Generated_Source\PSoC5/Dispenser.c ****         }
1312:.\Generated_Source\PSoC5/Dispenser.c ****         else
1313:.\Generated_Source\PSoC5/Dispenser.c ****         {
1314:.\Generated_Source\PSoC5/Dispenser.c ****             /* We only know there is data in the fifo. */
1315:.\Generated_Source\PSoC5/Dispenser.c ****             size = 1u;
 1523              		.loc 1 1315 0
 1524 002c 0123     		movs	r3, #1
 1525 002e FB71     		strb	r3, [r7, #7]
 1526              	.L99:
1316:.\Generated_Source\PSoC5/Dispenser.c ****         }
1317:.\Generated_Source\PSoC5/Dispenser.c **** 
1318:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* (Dispenser_TX_INTERRUPT_ENABLED) */
1319:.\Generated_Source\PSoC5/Dispenser.c **** 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 51


1320:.\Generated_Source\PSoC5/Dispenser.c ****     return(size);
 1527              		.loc 1 1320 0
 1528 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1321:.\Generated_Source\PSoC5/Dispenser.c ****     }
 1529              		.loc 1 1321 0
 1530 0032 1846     		mov	r0, r3
 1531 0034 0C37     		adds	r7, r7, #12
 1532              		.cfi_def_cfa_offset 4
 1533 0036 BD46     		mov	sp, r7
 1534              		.cfi_def_cfa_register 13
 1535              		@ sp needed
 1536 0038 5DF8047B 		ldr	r7, [sp], #4
 1537              		.cfi_restore 7
 1538              		.cfi_def_cfa_offset 0
 1539 003c 7047     		bx	lr
 1540              	.L103:
 1541 003e 00BF     		.align	2
 1542              	.L102:
 1543 0040 61640040 		.word	1073767521
 1544              		.cfi_endproc
 1545              	.LFE23:
 1546              		.size	Dispenser_GetTxBufferSize, .-Dispenser_GetTxBufferSize
 1547              		.section	.text.Dispenser_ClearTxBuffer,"ax",%progbits
 1548              		.align	2
 1549              		.global	Dispenser_ClearTxBuffer
 1550              		.thumb
 1551              		.thumb_func
 1552              		.type	Dispenser_ClearTxBuffer, %function
 1553              	Dispenser_ClearTxBuffer:
 1554              	.LFB24:
1322:.\Generated_Source\PSoC5/Dispenser.c **** 
1323:.\Generated_Source\PSoC5/Dispenser.c **** 
1324:.\Generated_Source\PSoC5/Dispenser.c ****     /*******************************************************************************
1325:.\Generated_Source\PSoC5/Dispenser.c ****     * Function Name: Dispenser_ClearTxBuffer
1326:.\Generated_Source\PSoC5/Dispenser.c ****     ********************************************************************************
1327:.\Generated_Source\PSoC5/Dispenser.c ****     *
1328:.\Generated_Source\PSoC5/Dispenser.c ****     * Summary:
1329:.\Generated_Source\PSoC5/Dispenser.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:.\Generated_Source\PSoC5/Dispenser.c ****     *
1331:.\Generated_Source\PSoC5/Dispenser.c ****     * Parameters:
1332:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
1333:.\Generated_Source\PSoC5/Dispenser.c ****     *
1334:.\Generated_Source\PSoC5/Dispenser.c ****     * Return:
1335:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
1336:.\Generated_Source\PSoC5/Dispenser.c ****     *
1337:.\Generated_Source\PSoC5/Dispenser.c ****     * Global Variables:
1338:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_txBufferWrite - cleared to zero.
1339:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_txBufferRead - cleared to zero.
1340:.\Generated_Source\PSoC5/Dispenser.c ****     *
1341:.\Generated_Source\PSoC5/Dispenser.c ****     * Reentrant:
1342:.\Generated_Source\PSoC5/Dispenser.c ****     *  No.
1343:.\Generated_Source\PSoC5/Dispenser.c ****     *
1344:.\Generated_Source\PSoC5/Dispenser.c ****     * Theory:
1345:.\Generated_Source\PSoC5/Dispenser.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:.\Generated_Source\PSoC5/Dispenser.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:.\Generated_Source\PSoC5/Dispenser.c ****     *  remained in the RAM.
1348:.\Generated_Source\PSoC5/Dispenser.c ****     *
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 52


1349:.\Generated_Source\PSoC5/Dispenser.c ****     * Side Effects:
1350:.\Generated_Source\PSoC5/Dispenser.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:.\Generated_Source\PSoC5/Dispenser.c ****     *  transmitting finishes transmitting.
1352:.\Generated_Source\PSoC5/Dispenser.c ****     *
1353:.\Generated_Source\PSoC5/Dispenser.c ****     *******************************************************************************/
1354:.\Generated_Source\PSoC5/Dispenser.c ****     void Dispenser_ClearTxBuffer(void) 
1355:.\Generated_Source\PSoC5/Dispenser.c ****     {
 1555              		.loc 1 1355 0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 8
 1558              		@ frame_needed = 1, uses_anonymous_args = 0
 1559 0000 80B5     		push	{r7, lr}
 1560              		.cfi_def_cfa_offset 8
 1561              		.cfi_offset 7, -8
 1562              		.cfi_offset 14, -4
 1563 0002 82B0     		sub	sp, sp, #8
 1564              		.cfi_def_cfa_offset 16
 1565 0004 00AF     		add	r7, sp, #0
 1566              		.cfi_def_cfa_register 7
1356:.\Generated_Source\PSoC5/Dispenser.c ****         uint8 enableInterrupts;
1357:.\Generated_Source\PSoC5/Dispenser.c **** 
1358:.\Generated_Source\PSoC5/Dispenser.c ****         enableInterrupts = CyEnterCriticalSection();
 1567              		.loc 1 1358 0
 1568 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1569 000a 0346     		mov	r3, r0
 1570 000c FB71     		strb	r3, [r7, #7]
1359:.\Generated_Source\PSoC5/Dispenser.c ****         /* Clear the HW FIFO */
1360:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_TXDATA_AUX_CTL_REG |= (uint8)  Dispenser_TX_FIFO_CLR;
 1571              		.loc 1 1360 0
 1572 000e 0B4A     		ldr	r2, .L105
 1573 0010 0A4B     		ldr	r3, .L105
 1574 0012 1B78     		ldrb	r3, [r3]
 1575 0014 DBB2     		uxtb	r3, r3
 1576 0016 43F00103 		orr	r3, r3, #1
 1577 001a DBB2     		uxtb	r3, r3
 1578 001c 1370     		strb	r3, [r2]
1361:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_TXDATA_AUX_CTL_REG &= (uint8) ~Dispenser_TX_FIFO_CLR;
 1579              		.loc 1 1361 0
 1580 001e 074A     		ldr	r2, .L105
 1581 0020 064B     		ldr	r3, .L105
 1582 0022 1B78     		ldrb	r3, [r3]
 1583 0024 DBB2     		uxtb	r3, r3
 1584 0026 23F00103 		bic	r3, r3, #1
 1585 002a DBB2     		uxtb	r3, r3
 1586 002c 1370     		strb	r3, [r2]
1362:.\Generated_Source\PSoC5/Dispenser.c ****         CyExitCriticalSection(enableInterrupts);
 1587              		.loc 1 1362 0
 1588 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1589 0030 1846     		mov	r0, r3
 1590 0032 FFF7FEFF 		bl	CyExitCriticalSection
1363:.\Generated_Source\PSoC5/Dispenser.c **** 
1364:.\Generated_Source\PSoC5/Dispenser.c ****     #if (Dispenser_TX_INTERRUPT_ENABLED)
1365:.\Generated_Source\PSoC5/Dispenser.c **** 
1366:.\Generated_Source\PSoC5/Dispenser.c ****         /* Protect variables that could change on interrupt. */
1367:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_DisableTxInt();
1368:.\Generated_Source\PSoC5/Dispenser.c **** 
1369:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_txBufferRead = 0u;
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 53


1370:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_txBufferWrite = 0u;
1371:.\Generated_Source\PSoC5/Dispenser.c **** 
1372:.\Generated_Source\PSoC5/Dispenser.c ****         /* Enable Tx interrupt. */
1373:.\Generated_Source\PSoC5/Dispenser.c ****         Dispenser_EnableTxInt();
1374:.\Generated_Source\PSoC5/Dispenser.c **** 
1375:.\Generated_Source\PSoC5/Dispenser.c ****     #endif /* (Dispenser_TX_INTERRUPT_ENABLED) */
1376:.\Generated_Source\PSoC5/Dispenser.c ****     }
 1591              		.loc 1 1376 0
 1592 0036 0837     		adds	r7, r7, #8
 1593              		.cfi_def_cfa_offset 8
 1594 0038 BD46     		mov	sp, r7
 1595              		.cfi_def_cfa_register 13
 1596              		@ sp needed
 1597 003a 80BD     		pop	{r7, pc}
 1598              	.L106:
 1599              		.align	2
 1600              	.L105:
 1601 003c 91640040 		.word	1073767569
 1602              		.cfi_endproc
 1603              	.LFE24:
 1604              		.size	Dispenser_ClearTxBuffer, .-Dispenser_ClearTxBuffer
 1605              		.section	.text.Dispenser_SendBreak,"ax",%progbits
 1606              		.align	2
 1607              		.global	Dispenser_SendBreak
 1608              		.thumb
 1609              		.thumb_func
 1610              		.type	Dispenser_SendBreak, %function
 1611              	Dispenser_SendBreak:
 1612              	.LFB25:
1377:.\Generated_Source\PSoC5/Dispenser.c **** 
1378:.\Generated_Source\PSoC5/Dispenser.c **** 
1379:.\Generated_Source\PSoC5/Dispenser.c ****     /*******************************************************************************
1380:.\Generated_Source\PSoC5/Dispenser.c ****     * Function Name: Dispenser_SendBreak
1381:.\Generated_Source\PSoC5/Dispenser.c ****     ********************************************************************************
1382:.\Generated_Source\PSoC5/Dispenser.c ****     *
1383:.\Generated_Source\PSoC5/Dispenser.c ****     * Summary:
1384:.\Generated_Source\PSoC5/Dispenser.c ****     *  Transmits a break signal on the bus.
1385:.\Generated_Source\PSoC5/Dispenser.c ****     *
1386:.\Generated_Source\PSoC5/Dispenser.c ****     * Parameters:
1387:.\Generated_Source\PSoC5/Dispenser.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:.\Generated_Source\PSoC5/Dispenser.c ****     *   Dispenser_SEND_BREAK - Initialize registers for break, send the Break
1389:.\Generated_Source\PSoC5/Dispenser.c ****     *       signal and return immediately.
1390:.\Generated_Source\PSoC5/Dispenser.c ****     *   Dispenser_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:.\Generated_Source\PSoC5/Dispenser.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:.\Generated_Source\PSoC5/Dispenser.c ****     *   Dispenser_REINIT - Reinitialize registers to normal transmission mode
1393:.\Generated_Source\PSoC5/Dispenser.c ****     *       then return.
1394:.\Generated_Source\PSoC5/Dispenser.c ****     *   Dispenser_SEND_WAIT_REINIT - Performs both options: 
1395:.\Generated_Source\PSoC5/Dispenser.c ****     *      Dispenser_SEND_BREAK and Dispenser_WAIT_FOR_COMPLETE_REINIT.
1396:.\Generated_Source\PSoC5/Dispenser.c ****     *      This option is recommended for most cases.
1397:.\Generated_Source\PSoC5/Dispenser.c ****     *
1398:.\Generated_Source\PSoC5/Dispenser.c ****     * Return:
1399:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
1400:.\Generated_Source\PSoC5/Dispenser.c ****     *
1401:.\Generated_Source\PSoC5/Dispenser.c ****     * Global Variables:
1402:.\Generated_Source\PSoC5/Dispenser.c ****     *  Dispenser_initVar - checked to identify that the component has been
1403:.\Generated_Source\PSoC5/Dispenser.c ****     *     initialized.
1404:.\Generated_Source\PSoC5/Dispenser.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 54


1405:.\Generated_Source\PSoC5/Dispenser.c ****     *
1406:.\Generated_Source\PSoC5/Dispenser.c ****     * Reentrant:
1407:.\Generated_Source\PSoC5/Dispenser.c ****     *  No.
1408:.\Generated_Source\PSoC5/Dispenser.c ****     *
1409:.\Generated_Source\PSoC5/Dispenser.c ****     * Theory:
1410:.\Generated_Source\PSoC5/Dispenser.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:.\Generated_Source\PSoC5/Dispenser.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:.\Generated_Source\PSoC5/Dispenser.c ****     *  operation.
1413:.\Generated_Source\PSoC5/Dispenser.c ****     *  There are 3 variants for this API usage:
1414:.\Generated_Source\PSoC5/Dispenser.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:.\Generated_Source\PSoC5/Dispenser.c ****     *     configuration returning. Function will block CPU until transmission
1416:.\Generated_Source\PSoC5/Dispenser.c ****     *     complete.
1417:.\Generated_Source\PSoC5/Dispenser.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:.\Generated_Source\PSoC5/Dispenser.c ****     *     operation
1419:.\Generated_Source\PSoC5/Dispenser.c ****     *     Example for this case:
1420:.\Generated_Source\PSoC5/Dispenser.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:.\Generated_Source\PSoC5/Dispenser.c ****     *         Add your code here to use CPU time
1422:.\Generated_Source\PSoC5/Dispenser.c ****     *     SendBreak(1);     - complete Break operation
1423:.\Generated_Source\PSoC5/Dispenser.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:.\Generated_Source\PSoC5/Dispenser.c ****     *     complete break operation.
1425:.\Generated_Source\PSoC5/Dispenser.c ****     *     Example for this case:
1426:.\Generated_Source\PSoC5/Dispenser.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:.\Generated_Source\PSoC5/Dispenser.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:.\Generated_Source\PSoC5/Dispenser.c ****     *         Add your code here to use CPU time
1429:.\Generated_Source\PSoC5/Dispenser.c ****     *     When interrupt appear with Dispenser_TX_STS_COMPLETE status:
1430:.\Generated_Source\PSoC5/Dispenser.c ****     *     SendBreak(2);     - complete Break operation
1431:.\Generated_Source\PSoC5/Dispenser.c ****     *
1432:.\Generated_Source\PSoC5/Dispenser.c ****     * Side Effects:
1433:.\Generated_Source\PSoC5/Dispenser.c ****     *  The Dispenser_SendBreak() function initializes registers to send a
1434:.\Generated_Source\PSoC5/Dispenser.c ****     *  break signal.
1435:.\Generated_Source\PSoC5/Dispenser.c ****     *  Break signal length depends on the break signal bits configuration.
1436:.\Generated_Source\PSoC5/Dispenser.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:.\Generated_Source\PSoC5/Dispenser.c ****     *  communication can continue.
1438:.\Generated_Source\PSoC5/Dispenser.c ****     *
1439:.\Generated_Source\PSoC5/Dispenser.c ****     *******************************************************************************/
1440:.\Generated_Source\PSoC5/Dispenser.c ****     void Dispenser_SendBreak(uint8 retMode) 
1441:.\Generated_Source\PSoC5/Dispenser.c ****     {
 1613              		.loc 1 1441 0
 1614              		.cfi_startproc
 1615              		@ args = 0, pretend = 0, frame = 16
 1616              		@ frame_needed = 1, uses_anonymous_args = 0
 1617 0000 80B5     		push	{r7, lr}
 1618              		.cfi_def_cfa_offset 8
 1619              		.cfi_offset 7, -8
 1620              		.cfi_offset 14, -4
 1621 0002 84B0     		sub	sp, sp, #16
 1622              		.cfi_def_cfa_offset 24
 1623 0004 00AF     		add	r7, sp, #0
 1624              		.cfi_def_cfa_register 7
 1625 0006 0346     		mov	r3, r0
 1626 0008 FB71     		strb	r3, [r7, #7]
1442:.\Generated_Source\PSoC5/Dispenser.c **** 
1443:.\Generated_Source\PSoC5/Dispenser.c ****         /* If not Initialized then skip this function*/
1444:.\Generated_Source\PSoC5/Dispenser.c ****         if(Dispenser_initVar != 0u)
 1627              		.loc 1 1444 0
 1628 000a 274B     		ldr	r3, .L115
 1629 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 55


 1630 000e 002B     		cmp	r3, #0
 1631 0010 47D0     		beq	.L107
 1632              	.LBB2:
1445:.\Generated_Source\PSoC5/Dispenser.c ****         {
1446:.\Generated_Source\PSoC5/Dispenser.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:.\Generated_Source\PSoC5/Dispenser.c ****             /* When that is done then reset the counter value back */
1448:.\Generated_Source\PSoC5/Dispenser.c ****             uint8 tmpStat;
1449:.\Generated_Source\PSoC5/Dispenser.c **** 
1450:.\Generated_Source\PSoC5/Dispenser.c ****         #if(Dispenser_HD_ENABLED) /* Half Duplex mode*/
1451:.\Generated_Source\PSoC5/Dispenser.c **** 
1452:.\Generated_Source\PSoC5/Dispenser.c ****             if( (retMode == Dispenser_SEND_BREAK) ||
1453:.\Generated_Source\PSoC5/Dispenser.c ****                 (retMode == Dispenser_SEND_WAIT_REINIT ) )
1454:.\Generated_Source\PSoC5/Dispenser.c ****             {
1455:.\Generated_Source\PSoC5/Dispenser.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:.\Generated_Source\PSoC5/Dispenser.c ****                 Dispenser_WriteControlRegister(Dispenser_ReadControlRegister() |
1457:.\Generated_Source\PSoC5/Dispenser.c ****                                                       Dispenser_CTRL_HD_SEND_BREAK);
1458:.\Generated_Source\PSoC5/Dispenser.c ****                 /* Send zeros */
1459:.\Generated_Source\PSoC5/Dispenser.c ****                 Dispenser_TXDATA_REG = 0u;
1460:.\Generated_Source\PSoC5/Dispenser.c **** 
1461:.\Generated_Source\PSoC5/Dispenser.c ****                 do /* Wait until transmit starts */
1462:.\Generated_Source\PSoC5/Dispenser.c ****                 {
1463:.\Generated_Source\PSoC5/Dispenser.c ****                     tmpStat = Dispenser_TXSTATUS_REG;
1464:.\Generated_Source\PSoC5/Dispenser.c ****                 }
1465:.\Generated_Source\PSoC5/Dispenser.c ****                 while((tmpStat & Dispenser_TX_STS_FIFO_EMPTY) != 0u);
1466:.\Generated_Source\PSoC5/Dispenser.c ****             }
1467:.\Generated_Source\PSoC5/Dispenser.c **** 
1468:.\Generated_Source\PSoC5/Dispenser.c ****             if( (retMode == Dispenser_WAIT_FOR_COMPLETE_REINIT) ||
1469:.\Generated_Source\PSoC5/Dispenser.c ****                 (retMode == Dispenser_SEND_WAIT_REINIT) )
1470:.\Generated_Source\PSoC5/Dispenser.c ****             {
1471:.\Generated_Source\PSoC5/Dispenser.c ****                 do /* Wait until transmit complete */
1472:.\Generated_Source\PSoC5/Dispenser.c ****                 {
1473:.\Generated_Source\PSoC5/Dispenser.c ****                     tmpStat = Dispenser_TXSTATUS_REG;
1474:.\Generated_Source\PSoC5/Dispenser.c ****                 }
1475:.\Generated_Source\PSoC5/Dispenser.c ****                 while(((uint8)~tmpStat & Dispenser_TX_STS_COMPLETE) != 0u);
1476:.\Generated_Source\PSoC5/Dispenser.c ****             }
1477:.\Generated_Source\PSoC5/Dispenser.c **** 
1478:.\Generated_Source\PSoC5/Dispenser.c ****             if( (retMode == Dispenser_WAIT_FOR_COMPLETE_REINIT) ||
1479:.\Generated_Source\PSoC5/Dispenser.c ****                 (retMode == Dispenser_REINIT) ||
1480:.\Generated_Source\PSoC5/Dispenser.c ****                 (retMode == Dispenser_SEND_WAIT_REINIT) )
1481:.\Generated_Source\PSoC5/Dispenser.c ****             {
1482:.\Generated_Source\PSoC5/Dispenser.c ****                 Dispenser_WriteControlRegister(Dispenser_ReadControlRegister() &
1483:.\Generated_Source\PSoC5/Dispenser.c ****                                               (uint8)~Dispenser_CTRL_HD_SEND_BREAK);
1484:.\Generated_Source\PSoC5/Dispenser.c ****             }
1485:.\Generated_Source\PSoC5/Dispenser.c **** 
1486:.\Generated_Source\PSoC5/Dispenser.c ****         #else /* Dispenser_HD_ENABLED Full Duplex mode */
1487:.\Generated_Source\PSoC5/Dispenser.c **** 
1488:.\Generated_Source\PSoC5/Dispenser.c ****             static uint8 txPeriod;
1489:.\Generated_Source\PSoC5/Dispenser.c **** 
1490:.\Generated_Source\PSoC5/Dispenser.c ****             if( (retMode == Dispenser_SEND_BREAK) ||
 1633              		.loc 1 1490 0
 1634 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1635 0014 002B     		cmp	r3, #0
 1636 0016 02D0     		beq	.L109
 1637              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1638 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1639 001a 032B     		cmp	r3, #3
 1640 001c 1BD1     		bne	.L110
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 56


 1641              	.L109:
1491:.\Generated_Source\PSoC5/Dispenser.c ****                 (retMode == Dispenser_SEND_WAIT_REINIT) )
1492:.\Generated_Source\PSoC5/Dispenser.c ****             {
1493:.\Generated_Source\PSoC5/Dispenser.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:.\Generated_Source\PSoC5/Dispenser.c ****                 #if( (Dispenser_PARITY_TYPE != Dispenser__B_UART__NONE_REVB) || \
1495:.\Generated_Source\PSoC5/Dispenser.c ****                                     (Dispenser_PARITY_TYPE_SW != 0u) )
1496:.\Generated_Source\PSoC5/Dispenser.c ****                     Dispenser_WriteControlRegister(Dispenser_ReadControlRegister() |
 1642              		.loc 1 1496 0 is_stmt 1
 1643 001e FFF7FEFF 		bl	Dispenser_ReadControlRegister
 1644 0022 0346     		mov	r3, r0
 1645 0024 43F00203 		orr	r3, r3, #2
 1646 0028 DBB2     		uxtb	r3, r3
 1647 002a 1846     		mov	r0, r3
 1648 002c FFF7FEFF 		bl	Dispenser_WriteControlRegister
1497:.\Generated_Source\PSoC5/Dispenser.c ****                                                           Dispenser_CTRL_HD_SEND_BREAK);
1498:.\Generated_Source\PSoC5/Dispenser.c ****                 #endif /* End Dispenser_PARITY_TYPE != Dispenser__B_UART__NONE_REVB  */
1499:.\Generated_Source\PSoC5/Dispenser.c **** 
1500:.\Generated_Source\PSoC5/Dispenser.c ****                 #if(Dispenser_TXCLKGEN_DP)
1501:.\Generated_Source\PSoC5/Dispenser.c ****                     txPeriod = Dispenser_TXBITCLKTX_COMPLETE_REG;
 1649              		.loc 1 1501 0
 1650 0030 1E4B     		ldr	r3, .L115+4
 1651 0032 1B78     		ldrb	r3, [r3]
 1652 0034 DAB2     		uxtb	r2, r3
 1653 0036 1E4B     		ldr	r3, .L115+8
 1654 0038 1A70     		strb	r2, [r3]
1502:.\Generated_Source\PSoC5/Dispenser.c ****                     Dispenser_TXBITCLKTX_COMPLETE_REG = Dispenser_TXBITCTR_BREAKBITS;
 1655              		.loc 1 1502 0
 1656 003a 1C4B     		ldr	r3, .L115+4
 1657 003c 6722     		movs	r2, #103
 1658 003e 1A70     		strb	r2, [r3]
1503:.\Generated_Source\PSoC5/Dispenser.c ****                 #else
1504:.\Generated_Source\PSoC5/Dispenser.c ****                     txPeriod = Dispenser_TXBITCTR_PERIOD_REG;
1505:.\Generated_Source\PSoC5/Dispenser.c ****                     Dispenser_TXBITCTR_PERIOD_REG = Dispenser_TXBITCTR_BREAKBITS8X;
1506:.\Generated_Source\PSoC5/Dispenser.c ****                 #endif /* End Dispenser_TXCLKGEN_DP */
1507:.\Generated_Source\PSoC5/Dispenser.c **** 
1508:.\Generated_Source\PSoC5/Dispenser.c ****                 /* Send zeros */
1509:.\Generated_Source\PSoC5/Dispenser.c ****                 Dispenser_TXDATA_REG = 0u;
 1659              		.loc 1 1509 0
 1660 0040 1C4B     		ldr	r3, .L115+12
 1661 0042 0022     		movs	r2, #0
 1662 0044 1A70     		strb	r2, [r3]
 1663              	.L111:
1510:.\Generated_Source\PSoC5/Dispenser.c **** 
1511:.\Generated_Source\PSoC5/Dispenser.c ****                 do /* Wait until transmit starts */
1512:.\Generated_Source\PSoC5/Dispenser.c ****                 {
1513:.\Generated_Source\PSoC5/Dispenser.c ****                     tmpStat = Dispenser_TXSTATUS_REG;
 1664              		.loc 1 1513 0 discriminator 1
 1665 0046 1C4B     		ldr	r3, .L115+16
 1666 0048 1B78     		ldrb	r3, [r3]
 1667 004a FB73     		strb	r3, [r7, #15]
1514:.\Generated_Source\PSoC5/Dispenser.c ****                 }
1515:.\Generated_Source\PSoC5/Dispenser.c ****                 while((tmpStat & Dispenser_TX_STS_FIFO_EMPTY) != 0u);
 1668              		.loc 1 1515 0 discriminator 1
 1669 004c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1670 004e 03F00203 		and	r3, r3, #2
 1671 0052 002B     		cmp	r3, #0
 1672 0054 F7D1     		bne	.L111
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 57


 1673              	.L110:
1516:.\Generated_Source\PSoC5/Dispenser.c ****             }
1517:.\Generated_Source\PSoC5/Dispenser.c **** 
1518:.\Generated_Source\PSoC5/Dispenser.c ****             if( (retMode == Dispenser_WAIT_FOR_COMPLETE_REINIT) ||
 1674              		.loc 1 1518 0
 1675 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1676 0058 012B     		cmp	r3, #1
 1677 005a 02D0     		beq	.L112
 1678              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1679 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1680 005e 032B     		cmp	r3, #3
 1681 0060 09D1     		bne	.L113
 1682              	.L112:
1519:.\Generated_Source\PSoC5/Dispenser.c ****                 (retMode == Dispenser_SEND_WAIT_REINIT) )
1520:.\Generated_Source\PSoC5/Dispenser.c ****             {
1521:.\Generated_Source\PSoC5/Dispenser.c ****                 do /* Wait until transmit complete */
1522:.\Generated_Source\PSoC5/Dispenser.c ****                 {
1523:.\Generated_Source\PSoC5/Dispenser.c ****                     tmpStat = Dispenser_TXSTATUS_REG;
 1683              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1684 0062 154B     		ldr	r3, .L115+16
 1685 0064 1B78     		ldrb	r3, [r3]
 1686 0066 FB73     		strb	r3, [r7, #15]
1524:.\Generated_Source\PSoC5/Dispenser.c ****                 }
1525:.\Generated_Source\PSoC5/Dispenser.c ****                 while(((uint8)~tmpStat & Dispenser_TX_STS_COMPLETE) != 0u);
 1687              		.loc 1 1525 0 discriminator 1
 1688 0068 FB7B     		ldrb	r3, [r7, #15]
 1689 006a DB43     		mvns	r3, r3
 1690 006c DBB2     		uxtb	r3, r3
 1691 006e 03F00103 		and	r3, r3, #1
 1692 0072 002B     		cmp	r3, #0
 1693 0074 F5D1     		bne	.L112
 1694              	.L113:
1526:.\Generated_Source\PSoC5/Dispenser.c ****             }
1527:.\Generated_Source\PSoC5/Dispenser.c **** 
1528:.\Generated_Source\PSoC5/Dispenser.c ****             if( (retMode == Dispenser_WAIT_FOR_COMPLETE_REINIT) ||
 1695              		.loc 1 1528 0
 1696 0076 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1697 0078 012B     		cmp	r3, #1
 1698 007a 05D0     		beq	.L114
 1699              		.loc 1 1528 0 is_stmt 0 discriminator 1
 1700 007c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1701 007e 022B     		cmp	r3, #2
 1702 0080 02D0     		beq	.L114
1529:.\Generated_Source\PSoC5/Dispenser.c ****                 (retMode == Dispenser_REINIT) ||
 1703              		.loc 1 1529 0 is_stmt 1
 1704 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1705 0084 032B     		cmp	r3, #3
 1706 0086 0CD1     		bne	.L107
 1707              	.L114:
1530:.\Generated_Source\PSoC5/Dispenser.c ****                 (retMode == Dispenser_SEND_WAIT_REINIT) )
1531:.\Generated_Source\PSoC5/Dispenser.c ****             {
1532:.\Generated_Source\PSoC5/Dispenser.c **** 
1533:.\Generated_Source\PSoC5/Dispenser.c ****             #if(Dispenser_TXCLKGEN_DP)
1534:.\Generated_Source\PSoC5/Dispenser.c ****                 Dispenser_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1708              		.loc 1 1534 0
 1709 0088 084B     		ldr	r3, .L115+4
 1710 008a 094A     		ldr	r2, .L115+8
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 58


 1711 008c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1712 008e 1A70     		strb	r2, [r3]
1535:.\Generated_Source\PSoC5/Dispenser.c ****             #else
1536:.\Generated_Source\PSoC5/Dispenser.c ****                 Dispenser_TXBITCTR_PERIOD_REG = txPeriod;
1537:.\Generated_Source\PSoC5/Dispenser.c ****             #endif /* End Dispenser_TXCLKGEN_DP */
1538:.\Generated_Source\PSoC5/Dispenser.c **** 
1539:.\Generated_Source\PSoC5/Dispenser.c ****             #if( (Dispenser_PARITY_TYPE != Dispenser__B_UART__NONE_REVB) || \
1540:.\Generated_Source\PSoC5/Dispenser.c ****                  (Dispenser_PARITY_TYPE_SW != 0u) )
1541:.\Generated_Source\PSoC5/Dispenser.c ****                 Dispenser_WriteControlRegister(Dispenser_ReadControlRegister() &
 1713              		.loc 1 1541 0
 1714 0090 FFF7FEFF 		bl	Dispenser_ReadControlRegister
 1715 0094 0346     		mov	r3, r0
 1716 0096 23F00203 		bic	r3, r3, #2
 1717 009a DBB2     		uxtb	r3, r3
 1718 009c 1846     		mov	r0, r3
 1719 009e FFF7FEFF 		bl	Dispenser_WriteControlRegister
 1720              	.L107:
 1721              	.LBE2:
1542:.\Generated_Source\PSoC5/Dispenser.c ****                                                       (uint8) ~Dispenser_CTRL_HD_SEND_BREAK);
1543:.\Generated_Source\PSoC5/Dispenser.c ****             #endif /* End Dispenser_PARITY_TYPE != NONE */
1544:.\Generated_Source\PSoC5/Dispenser.c ****             }
1545:.\Generated_Source\PSoC5/Dispenser.c ****         #endif    /* End Dispenser_HD_ENABLED */
1546:.\Generated_Source\PSoC5/Dispenser.c ****         }
1547:.\Generated_Source\PSoC5/Dispenser.c ****     }
 1722              		.loc 1 1547 0
 1723 00a2 1037     		adds	r7, r7, #16
 1724              		.cfi_def_cfa_offset 8
 1725 00a4 BD46     		mov	sp, r7
 1726              		.cfi_def_cfa_register 13
 1727              		@ sp needed
 1728 00a6 80BD     		pop	{r7, pc}
 1729              	.L116:
 1730              		.align	2
 1731              	.L115:
 1732 00a8 00000000 		.word	Dispenser_initVar
 1733 00ac 30640040 		.word	1073767472
 1734 00b0 08000000 		.word	txPeriod.4985
 1735 00b4 41640040 		.word	1073767489
 1736 00b8 61640040 		.word	1073767521
 1737              		.cfi_endproc
 1738              	.LFE25:
 1739              		.size	Dispenser_SendBreak, .-Dispenser_SendBreak
 1740              		.section	.text.Dispenser_SetTxAddressMode,"ax",%progbits
 1741              		.align	2
 1742              		.global	Dispenser_SetTxAddressMode
 1743              		.thumb
 1744              		.thumb_func
 1745              		.type	Dispenser_SetTxAddressMode, %function
 1746              	Dispenser_SetTxAddressMode:
 1747              	.LFB26:
1548:.\Generated_Source\PSoC5/Dispenser.c **** 
1549:.\Generated_Source\PSoC5/Dispenser.c **** 
1550:.\Generated_Source\PSoC5/Dispenser.c ****     /*******************************************************************************
1551:.\Generated_Source\PSoC5/Dispenser.c ****     * Function Name: Dispenser_SetTxAddressMode
1552:.\Generated_Source\PSoC5/Dispenser.c ****     ********************************************************************************
1553:.\Generated_Source\PSoC5/Dispenser.c ****     *
1554:.\Generated_Source\PSoC5/Dispenser.c ****     * Summary:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 59


1555:.\Generated_Source\PSoC5/Dispenser.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:.\Generated_Source\PSoC5/Dispenser.c ****     *
1557:.\Generated_Source\PSoC5/Dispenser.c ****     * Parameters:
1558:.\Generated_Source\PSoC5/Dispenser.c ****     *  addressMode: 
1559:.\Generated_Source\PSoC5/Dispenser.c ****     *       Dispenser_SET_SPACE - Configure the transmitter to send the next
1560:.\Generated_Source\PSoC5/Dispenser.c ****     *                                    byte as a data.
1561:.\Generated_Source\PSoC5/Dispenser.c ****     *       Dispenser_SET_MARK  - Configure the transmitter to send the next
1562:.\Generated_Source\PSoC5/Dispenser.c ****     *                                    byte as an address.
1563:.\Generated_Source\PSoC5/Dispenser.c ****     *
1564:.\Generated_Source\PSoC5/Dispenser.c ****     * Return:
1565:.\Generated_Source\PSoC5/Dispenser.c ****     *  None.
1566:.\Generated_Source\PSoC5/Dispenser.c ****     *
1567:.\Generated_Source\PSoC5/Dispenser.c ****     * Side Effects:
1568:.\Generated_Source\PSoC5/Dispenser.c ****     *  This function sets and clears Dispenser_CTRL_MARK bit in the Control
1569:.\Generated_Source\PSoC5/Dispenser.c ****     *  register.
1570:.\Generated_Source\PSoC5/Dispenser.c ****     *
1571:.\Generated_Source\PSoC5/Dispenser.c ****     *******************************************************************************/
1572:.\Generated_Source\PSoC5/Dispenser.c ****     void Dispenser_SetTxAddressMode(uint8 addressMode) 
1573:.\Generated_Source\PSoC5/Dispenser.c ****     {
 1748              		.loc 1 1573 0
 1749              		.cfi_startproc
 1750              		@ args = 0, pretend = 0, frame = 8
 1751              		@ frame_needed = 1, uses_anonymous_args = 0
 1752              		@ link register save eliminated.
 1753 0000 80B4     		push	{r7}
 1754              		.cfi_def_cfa_offset 4
 1755              		.cfi_offset 7, -4
 1756 0002 83B0     		sub	sp, sp, #12
 1757              		.cfi_def_cfa_offset 16
 1758 0004 00AF     		add	r7, sp, #0
 1759              		.cfi_def_cfa_register 7
 1760 0006 0346     		mov	r3, r0
 1761 0008 FB71     		strb	r3, [r7, #7]
1574:.\Generated_Source\PSoC5/Dispenser.c ****         /* Mark/Space sending enable */
1575:.\Generated_Source\PSoC5/Dispenser.c ****         if(addressMode != 0u)
1576:.\Generated_Source\PSoC5/Dispenser.c ****         {
1577:.\Generated_Source\PSoC5/Dispenser.c ****         #if( Dispenser_CONTROL_REG_REMOVED == 0u )
1578:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_WriteControlRegister(Dispenser_ReadControlRegister() |
1579:.\Generated_Source\PSoC5/Dispenser.c ****                                                   Dispenser_CTRL_MARK);
1580:.\Generated_Source\PSoC5/Dispenser.c ****         #endif /* End Dispenser_CONTROL_REG_REMOVED == 0u */
1581:.\Generated_Source\PSoC5/Dispenser.c ****         }
1582:.\Generated_Source\PSoC5/Dispenser.c ****         else
1583:.\Generated_Source\PSoC5/Dispenser.c ****         {
1584:.\Generated_Source\PSoC5/Dispenser.c ****         #if( Dispenser_CONTROL_REG_REMOVED == 0u )
1585:.\Generated_Source\PSoC5/Dispenser.c ****             Dispenser_WriteControlRegister(Dispenser_ReadControlRegister() &
1586:.\Generated_Source\PSoC5/Dispenser.c ****                                                   (uint8) ~Dispenser_CTRL_MARK);
1587:.\Generated_Source\PSoC5/Dispenser.c ****         #endif /* End Dispenser_CONTROL_REG_REMOVED == 0u */
1588:.\Generated_Source\PSoC5/Dispenser.c ****         }
1589:.\Generated_Source\PSoC5/Dispenser.c ****     }
 1762              		.loc 1 1589 0
 1763 000a 0C37     		adds	r7, r7, #12
 1764              		.cfi_def_cfa_offset 4
 1765 000c BD46     		mov	sp, r7
 1766              		.cfi_def_cfa_register 13
 1767              		@ sp needed
 1768 000e 5DF8047B 		ldr	r7, [sp], #4
 1769              		.cfi_restore 7
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 60


 1770              		.cfi_def_cfa_offset 0
 1771 0012 7047     		bx	lr
 1772              		.cfi_endproc
 1773              	.LFE26:
 1774              		.size	Dispenser_SetTxAddressMode, .-Dispenser_SetTxAddressMode
 1775              		.bss
 1776              	txPeriod.4985:
 1777 0008 00       		.space	1
 1778 0009 00       		.text
 1779              	.Letext0:
 1780              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1781              		.section	.debug_info,"",%progbits
 1782              	.Ldebug_info0:
 1783 0000 EC050000 		.4byte	0x5ec
 1784 0004 0400     		.2byte	0x4
 1785 0006 00000000 		.4byte	.Ldebug_abbrev0
 1786 000a 04       		.byte	0x4
 1787 000b 01       		.uleb128 0x1
 1788 000c B1020000 		.4byte	.LASF72
 1789 0010 01       		.byte	0x1
 1790 0011 AE000000 		.4byte	.LASF73
 1791 0015 3E010000 		.4byte	.LASF74
 1792 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1793 001d 00000000 		.4byte	0
 1794 0021 00000000 		.4byte	.Ldebug_line0
 1795 0025 02       		.uleb128 0x2
 1796 0026 01       		.byte	0x1
 1797 0027 06       		.byte	0x6
 1798 0028 79000000 		.4byte	.LASF0
 1799 002c 02       		.uleb128 0x2
 1800 002d 01       		.byte	0x1
 1801 002e 08       		.byte	0x8
 1802 002f D5030000 		.4byte	.LASF1
 1803 0033 02       		.uleb128 0x2
 1804 0034 02       		.byte	0x2
 1805 0035 05       		.byte	0x5
 1806 0036 E3030000 		.4byte	.LASF2
 1807 003a 02       		.uleb128 0x2
 1808 003b 02       		.byte	0x2
 1809 003c 07       		.byte	0x7
 1810 003d EC010000 		.4byte	.LASF3
 1811 0041 02       		.uleb128 0x2
 1812 0042 04       		.byte	0x4
 1813 0043 05       		.byte	0x5
 1814 0044 A5000000 		.4byte	.LASF4
 1815 0048 02       		.uleb128 0x2
 1816 0049 04       		.byte	0x4
 1817 004a 07       		.byte	0x7
 1818 004b AB010000 		.4byte	.LASF5
 1819 004f 02       		.uleb128 0x2
 1820 0050 08       		.byte	0x8
 1821 0051 05       		.byte	0x5
 1822 0052 6B000000 		.4byte	.LASF6
 1823 0056 02       		.uleb128 0x2
 1824 0057 08       		.byte	0x8
 1825 0058 07       		.byte	0x7
 1826 0059 40000000 		.4byte	.LASF7
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 61


 1827 005d 03       		.uleb128 0x3
 1828 005e 04       		.byte	0x4
 1829 005f 05       		.byte	0x5
 1830 0060 696E7400 		.ascii	"int\000"
 1831 0064 02       		.uleb128 0x2
 1832 0065 04       		.byte	0x4
 1833 0066 07       		.byte	0x7
 1834 0067 31010000 		.4byte	.LASF8
 1835 006b 04       		.uleb128 0x4
 1836 006c D3000000 		.4byte	.LASF9
 1837 0070 02       		.byte	0x2
 1838 0071 3801     		.2byte	0x138
 1839 0073 2C000000 		.4byte	0x2c
 1840 0077 04       		.uleb128 0x4
 1841 0078 00000000 		.4byte	.LASF10
 1842 007c 02       		.byte	0x2
 1843 007d 3901     		.2byte	0x139
 1844 007f 3A000000 		.4byte	0x3a
 1845 0083 04       		.uleb128 0x4
 1846 0084 07010000 		.4byte	.LASF11
 1847 0088 02       		.byte	0x2
 1848 0089 3A01     		.2byte	0x13a
 1849 008b 48000000 		.4byte	0x48
 1850 008f 02       		.uleb128 0x2
 1851 0090 04       		.byte	0x4
 1852 0091 04       		.byte	0x4
 1853 0092 84030000 		.4byte	.LASF12
 1854 0096 02       		.uleb128 0x2
 1855 0097 08       		.byte	0x8
 1856 0098 04       		.byte	0x4
 1857 0099 D9000000 		.4byte	.LASF13
 1858 009d 04       		.uleb128 0x4
 1859 009e 4B040000 		.4byte	.LASF14
 1860 00a2 02       		.byte	0x2
 1861 00a3 4901     		.2byte	0x149
 1862 00a5 A9000000 		.4byte	0xa9
 1863 00a9 02       		.uleb128 0x2
 1864 00aa 01       		.byte	0x1
 1865 00ab 08       		.byte	0x8
 1866 00ac 34040000 		.4byte	.LASF15
 1867 00b0 04       		.uleb128 0x4
 1868 00b1 A0030000 		.4byte	.LASF16
 1869 00b5 02       		.byte	0x2
 1870 00b6 E201     		.2byte	0x1e2
 1871 00b8 BC000000 		.4byte	0xbc
 1872 00bc 05       		.uleb128 0x5
 1873 00bd 6B000000 		.4byte	0x6b
 1874 00c1 05       		.uleb128 0x5
 1875 00c2 77000000 		.4byte	0x77
 1876 00c6 04       		.uleb128 0x4
 1877 00c7 59020000 		.4byte	.LASF17
 1878 00cb 02       		.byte	0x2
 1879 00cc E401     		.2byte	0x1e4
 1880 00ce D2000000 		.4byte	0xd2
 1881 00d2 05       		.uleb128 0x5
 1882 00d3 83000000 		.4byte	0x83
 1883 00d7 02       		.uleb128 0x2
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 62


 1884 00d8 04       		.byte	0x4
 1885 00d9 07       		.byte	0x7
 1886 00da 67020000 		.4byte	.LASF18
 1887 00de 06       		.uleb128 0x6
 1888 00df 8A020000 		.4byte	.LASF19
 1889 00e3 01       		.byte	0x1
 1890 00e4 4C       		.byte	0x4c
 1891 00e5 00000000 		.4byte	.LFB0
 1892 00e9 20000000 		.4byte	.LFE0-.LFB0
 1893 00ed 01       		.uleb128 0x1
 1894 00ee 9C       		.byte	0x9c
 1895 00ef 06       		.uleb128 0x6
 1896 00f0 21020000 		.4byte	.LASF20
 1897 00f4 01       		.byte	0x1
 1898 00f5 6A       		.byte	0x6a
 1899 00f6 00000000 		.4byte	.LFB1
 1900 00fa 58000000 		.4byte	.LFE1-.LFB1
 1901 00fe 01       		.uleb128 0x1
 1902 00ff 9C       		.byte	0x9c
 1903 0100 07       		.uleb128 0x7
 1904 0101 14050000 		.4byte	.LASF21
 1905 0105 01       		.byte	0x1
 1906 0106 B7       		.byte	0xb7
 1907 0107 00000000 		.4byte	.LFB2
 1908 010b 64000000 		.4byte	.LFE2-.LFB2
 1909 010f 01       		.uleb128 0x1
 1910 0110 9C       		.byte	0x9c
 1911 0111 24010000 		.4byte	0x124
 1912 0115 08       		.uleb128 0x8
 1913 0116 BB040000 		.4byte	.LASF23
 1914 011a 01       		.byte	0x1
 1915 011b B9       		.byte	0xb9
 1916 011c 6B000000 		.4byte	0x6b
 1917 0120 02       		.uleb128 0x2
 1918 0121 91       		.byte	0x91
 1919 0122 77       		.sleb128 -9
 1920 0123 00       		.byte	0
 1921 0124 07       		.uleb128 0x7
 1922 0125 12000000 		.4byte	.LASF22
 1923 0129 01       		.byte	0x1
 1924 012a F0       		.byte	0xf0
 1925 012b 00000000 		.4byte	.LFB3
 1926 012f 64000000 		.4byte	.LFE3-.LFB3
 1927 0133 01       		.uleb128 0x1
 1928 0134 9C       		.byte	0x9c
 1929 0135 48010000 		.4byte	0x148
 1930 0139 08       		.uleb128 0x8
 1931 013a BB040000 		.4byte	.LASF23
 1932 013e 01       		.byte	0x1
 1933 013f F2       		.byte	0xf2
 1934 0140 6B000000 		.4byte	0x6b
 1935 0144 02       		.uleb128 0x2
 1936 0145 91       		.byte	0x91
 1937 0146 77       		.sleb128 -9
 1938 0147 00       		.byte	0
 1939 0148 09       		.uleb128 0x9
 1940 0149 2D050000 		.4byte	.LASF49
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 63


 1941 014d 01       		.byte	0x1
 1942 014e 2701     		.2byte	0x127
 1943 0150 6B000000 		.4byte	0x6b
 1944 0154 00000000 		.4byte	.LFB4
 1945 0158 10000000 		.4byte	.LFE4-.LFB4
 1946 015c 01       		.uleb128 0x1
 1947 015d 9C       		.byte	0x9c
 1948 015e 0A       		.uleb128 0xa
 1949 015f 48030000 		.4byte	.LASF24
 1950 0163 01       		.byte	0x1
 1951 0164 3F01     		.2byte	0x13f
 1952 0166 00000000 		.4byte	.LFB5
 1953 016a 14000000 		.4byte	.LFE5-.LFB5
 1954 016e 01       		.uleb128 0x1
 1955 016f 9C       		.byte	0x9c
 1956 0170 84010000 		.4byte	0x184
 1957 0174 0B       		.uleb128 0xb
 1958 0175 21010000 		.4byte	.LASF26
 1959 0179 01       		.byte	0x1
 1960 017a 3F01     		.2byte	0x13f
 1961 017c 6B000000 		.4byte	0x6b
 1962 0180 02       		.uleb128 0x2
 1963 0181 91       		.byte	0x91
 1964 0182 77       		.sleb128 -9
 1965 0183 00       		.byte	0
 1966 0184 0A       		.uleb128 0xa
 1967 0185 67030000 		.4byte	.LASF25
 1968 0189 01       		.byte	0x1
 1969 018a 6701     		.2byte	0x167
 1970 018c 00000000 		.4byte	.LFB6
 1971 0190 20000000 		.4byte	.LFE6-.LFB6
 1972 0194 01       		.uleb128 0x1
 1973 0195 9C       		.byte	0x9c
 1974 0196 AA010000 		.4byte	0x1aa
 1975 019a 0B       		.uleb128 0xb
 1976 019b 08020000 		.4byte	.LASF27
 1977 019f 01       		.byte	0x1
 1978 01a0 6701     		.2byte	0x167
 1979 01a2 6B000000 		.4byte	0x6b
 1980 01a6 02       		.uleb128 0x2
 1981 01a7 91       		.byte	0x91
 1982 01a8 77       		.sleb128 -9
 1983 01a9 00       		.byte	0
 1984 01aa 0C       		.uleb128 0xc
 1985 01ab 7C050000 		.4byte	.LASF31
 1986 01af 01       		.byte	0x1
 1987 01b0 8801     		.2byte	0x188
 1988 01b2 6B000000 		.4byte	0x6b
 1989 01b6 00000000 		.4byte	.LFB7
 1990 01ba 94000000 		.4byte	.LFE7-.LFB7
 1991 01be 01       		.uleb128 0x1
 1992 01bf 9C       		.byte	0x9c
 1993 01c0 F2010000 		.4byte	0x1f2
 1994 01c4 0D       		.uleb128 0xd
 1995 01c5 F7030000 		.4byte	.LASF28
 1996 01c9 01       		.byte	0x1
 1997 01ca 8A01     		.2byte	0x18a
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 64


 1998 01cc 6B000000 		.4byte	0x6b
 1999 01d0 02       		.uleb128 0x2
 2000 01d1 91       		.byte	0x91
 2001 01d2 77       		.sleb128 -9
 2002 01d3 0D       		.uleb128 0xd
 2003 01d4 97040000 		.4byte	.LASF29
 2004 01d8 01       		.byte	0x1
 2005 01d9 8E01     		.2byte	0x18e
 2006 01db 77000000 		.4byte	0x77
 2007 01df 02       		.uleb128 0x2
 2008 01e0 91       		.byte	0x91
 2009 01e1 74       		.sleb128 -12
 2010 01e2 0D       		.uleb128 0xd
 2011 01e3 48020000 		.4byte	.LASF30
 2012 01e7 01       		.byte	0x1
 2013 01e8 8F01     		.2byte	0x18f
 2014 01ea 77000000 		.4byte	0x77
 2015 01ee 02       		.uleb128 0x2
 2016 01ef 91       		.byte	0x91
 2017 01f0 72       		.sleb128 -14
 2018 01f1 00       		.byte	0
 2019 01f2 0C       		.uleb128 0xc
 2020 01f3 9A020000 		.4byte	.LASF32
 2021 01f7 01       		.byte	0x1
 2022 01f8 E501     		.2byte	0x1e5
 2023 01fa 6B000000 		.4byte	0x6b
 2024 01fe 00000000 		.4byte	.LFB8
 2025 0202 40000000 		.4byte	.LFE8-.LFB8
 2026 0206 01       		.uleb128 0x1
 2027 0207 9C       		.byte	0x9c
 2028 0208 1C020000 		.4byte	0x21c
 2029 020c 0D       		.uleb128 0xd
 2030 020d CC040000 		.4byte	.LASF33
 2031 0211 01       		.byte	0x1
 2032 0212 E701     		.2byte	0x1e7
 2033 0214 6B000000 		.4byte	0x6b
 2034 0218 02       		.uleb128 0x2
 2035 0219 91       		.byte	0x91
 2036 021a 77       		.sleb128 -9
 2037 021b 00       		.byte	0
 2038 021c 0C       		.uleb128 0xc
 2039 021d D5010000 		.4byte	.LASF34
 2040 0221 01       		.byte	0x1
 2041 0222 1402     		.2byte	0x214
 2042 0224 6B000000 		.4byte	0x6b
 2043 0228 00000000 		.4byte	.LFB9
 2044 022c B8000000 		.4byte	.LFE9-.LFB9
 2045 0230 01       		.uleb128 0x1
 2046 0231 9C       		.byte	0x9c
 2047 0232 73020000 		.4byte	0x273
 2048 0236 0D       		.uleb128 0xd
 2049 0237 F7030000 		.4byte	.LASF28
 2050 023b 01       		.byte	0x1
 2051 023c 1602     		.2byte	0x216
 2052 023e 6B000000 		.4byte	0x6b
 2053 0242 02       		.uleb128 0x2
 2054 0243 91       		.byte	0x91
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 65


 2055 0244 77       		.sleb128 -9
 2056 0245 0D       		.uleb128 0xd
 2057 0246 3F030000 		.4byte	.LASF35
 2058 024a 01       		.byte	0x1
 2059 024b 1702     		.2byte	0x217
 2060 024d 6B000000 		.4byte	0x6b
 2061 0251 02       		.uleb128 0x2
 2062 0252 91       		.byte	0x91
 2063 0253 71       		.sleb128 -15
 2064 0254 0D       		.uleb128 0xd
 2065 0255 97040000 		.4byte	.LASF29
 2066 0259 01       		.byte	0x1
 2067 025a 1A02     		.2byte	0x21a
 2068 025c 77000000 		.4byte	0x77
 2069 0260 02       		.uleb128 0x2
 2070 0261 91       		.byte	0x91
 2071 0262 74       		.sleb128 -12
 2072 0263 0D       		.uleb128 0xd
 2073 0264 48020000 		.4byte	.LASF30
 2074 0268 01       		.byte	0x1
 2075 0269 1B02     		.2byte	0x21b
 2076 026b 77000000 		.4byte	0x77
 2077 026f 02       		.uleb128 0x2
 2078 0270 91       		.byte	0x91
 2079 0271 72       		.sleb128 -14
 2080 0272 00       		.byte	0
 2081 0273 0E       		.uleb128 0xe
 2082 0274 F0040000 		.4byte	.LASF36
 2083 0278 01       		.byte	0x1
 2084 0279 7A02     		.2byte	0x27a
 2085 027b 77000000 		.4byte	0x77
 2086 027f 00000000 		.4byte	.LFB10
 2087 0283 44000000 		.4byte	.LFE10-.LFB10
 2088 0287 01       		.uleb128 0x1
 2089 0288 9C       		.byte	0x9c
 2090 0289 9D020000 		.4byte	0x29d
 2091 028d 0D       		.uleb128 0xd
 2092 028e 9C010000 		.4byte	.LASF37
 2093 0292 01       		.byte	0x1
 2094 0293 7E02     		.2byte	0x27e
 2095 0295 77000000 		.4byte	0x77
 2096 0299 02       		.uleb128 0x2
 2097 029a 91       		.byte	0x91
 2098 029b 6E       		.sleb128 -18
 2099 029c 00       		.byte	0
 2100 029d 0C       		.uleb128 0xc
 2101 029e 70020000 		.4byte	.LASF38
 2102 02a2 01       		.byte	0x1
 2103 02a3 AB02     		.2byte	0x2ab
 2104 02a5 77000000 		.4byte	0x77
 2105 02a9 00000000 		.4byte	.LFB11
 2106 02ad 94000000 		.4byte	.LFE11-.LFB11
 2107 02b1 01       		.uleb128 0x1
 2108 02b2 9C       		.byte	0x9c
 2109 02b3 C7020000 		.4byte	0x2c7
 2110 02b7 0D       		.uleb128 0xd
 2111 02b8 E7010000 		.4byte	.LASF39
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 66


 2112 02bc 01       		.byte	0x1
 2113 02bd AE02     		.2byte	0x2ae
 2114 02bf 77000000 		.4byte	0x77
 2115 02c3 02       		.uleb128 0x2
 2116 02c4 91       		.byte	0x91
 2117 02c5 76       		.sleb128 -10
 2118 02c6 00       		.byte	0
 2119 02c7 0F       		.uleb128 0xf
 2120 02c8 21000000 		.4byte	.LASF40
 2121 02cc 01       		.byte	0x1
 2122 02cd F502     		.2byte	0x2f5
 2123 02cf 00000000 		.4byte	.LFB12
 2124 02d3 7C000000 		.4byte	.LFE12-.LFB12
 2125 02d7 01       		.uleb128 0x1
 2126 02d8 9C       		.byte	0x9c
 2127 02d9 ED020000 		.4byte	0x2ed
 2128 02dd 0D       		.uleb128 0xd
 2129 02de BB040000 		.4byte	.LASF23
 2130 02e2 01       		.byte	0x1
 2131 02e3 F702     		.2byte	0x2f7
 2132 02e5 6B000000 		.4byte	0x6b
 2133 02e9 02       		.uleb128 0x2
 2134 02ea 91       		.byte	0x91
 2135 02eb 77       		.sleb128 -9
 2136 02ec 00       		.byte	0
 2137 02ed 0A       		.uleb128 0xa
 2138 02ee EC000000 		.4byte	.LASF41
 2139 02f2 01       		.byte	0x1
 2140 02f3 2D03     		.2byte	0x32d
 2141 02f5 00000000 		.4byte	.LFB13
 2142 02f9 14000000 		.4byte	.LFE13-.LFB13
 2143 02fd 01       		.uleb128 0x1
 2144 02fe 9C       		.byte	0x9c
 2145 02ff 13030000 		.4byte	0x313
 2146 0303 0B       		.uleb128 0xb
 2147 0304 E0000000 		.4byte	.LASF42
 2148 0308 01       		.byte	0x1
 2149 0309 2D03     		.2byte	0x32d
 2150 030b 6B000000 		.4byte	0x6b
 2151 030f 02       		.uleb128 0x2
 2152 0310 91       		.byte	0x91
 2153 0311 77       		.sleb128 -9
 2154 0312 00       		.byte	0
 2155 0313 0A       		.uleb128 0xa
 2156 0314 A5030000 		.4byte	.LASF43
 2157 0318 01       		.byte	0x1
 2158 0319 5903     		.2byte	0x359
 2159 031b 00000000 		.4byte	.LFB14
 2160 031f 20000000 		.4byte	.LFE14-.LFB14
 2161 0323 01       		.uleb128 0x1
 2162 0324 9C       		.byte	0x9c
 2163 0325 39030000 		.4byte	0x339
 2164 0329 0B       		.uleb128 0xb
 2165 032a 25050000 		.4byte	.LASF44
 2166 032e 01       		.byte	0x1
 2167 032f 5903     		.2byte	0x359
 2168 0331 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 67


 2169 0335 02       		.uleb128 0x2
 2170 0336 91       		.byte	0x91
 2171 0337 77       		.sleb128 -9
 2172 0338 00       		.byte	0
 2173 0339 0A       		.uleb128 0xa
 2174 033a BD030000 		.4byte	.LASF45
 2175 033e 01       		.byte	0x1
 2176 033f 6D03     		.2byte	0x36d
 2177 0341 00000000 		.4byte	.LFB15
 2178 0345 20000000 		.4byte	.LFE15-.LFB15
 2179 0349 01       		.uleb128 0x1
 2180 034a 9C       		.byte	0x9c
 2181 034b 5F030000 		.4byte	0x35f
 2182 034f 0B       		.uleb128 0xb
 2183 0350 25050000 		.4byte	.LASF44
 2184 0354 01       		.byte	0x1
 2185 0355 6D03     		.2byte	0x36d
 2186 0357 6B000000 		.4byte	0x6b
 2187 035b 02       		.uleb128 0x2
 2188 035c 91       		.byte	0x91
 2189 035d 77       		.sleb128 -9
 2190 035e 00       		.byte	0
 2191 035f 0A       		.uleb128 0xa
 2192 0360 D3040000 		.4byte	.LASF46
 2193 0364 01       		.byte	0x1
 2194 0365 8C03     		.2byte	0x38c
 2195 0367 00000000 		.4byte	.LFB16
 2196 036b 20000000 		.4byte	.LFE16-.LFB16
 2197 036f 01       		.uleb128 0x1
 2198 0370 9C       		.byte	0x9c
 2199 0371 85030000 		.4byte	0x385
 2200 0375 0B       		.uleb128 0xb
 2201 0376 08020000 		.4byte	.LASF27
 2202 037a 01       		.byte	0x1
 2203 037b 8C03     		.2byte	0x38c
 2204 037d 6B000000 		.4byte	0x6b
 2205 0381 02       		.uleb128 0x2
 2206 0382 91       		.byte	0x91
 2207 0383 77       		.sleb128 -9
 2208 0384 00       		.byte	0
 2209 0385 0A       		.uleb128 0xa
 2210 0386 8A030000 		.4byte	.LASF47
 2211 038a 01       		.byte	0x1
 2212 038b AE03     		.2byte	0x3ae
 2213 038d 00000000 		.4byte	.LFB17
 2214 0391 2C000000 		.4byte	.LFE17-.LFB17
 2215 0395 01       		.uleb128 0x1
 2216 0396 9C       		.byte	0x9c
 2217 0397 AB030000 		.4byte	0x3ab
 2218 039b 0B       		.uleb128 0xb
 2219 039c 07000000 		.4byte	.LASF48
 2220 03a0 01       		.byte	0x1
 2221 03a1 AE03     		.2byte	0x3ae
 2222 03a3 6B000000 		.4byte	0x6b
 2223 03a7 02       		.uleb128 0x2
 2224 03a8 91       		.byte	0x91
 2225 03a9 77       		.sleb128 -9
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 68


 2226 03aa 00       		.byte	0
 2227 03ab 09       		.uleb128 0x9
 2228 03ac 65050000 		.4byte	.LASF50
 2229 03b0 01       		.byte	0x1
 2230 03b1 EB03     		.2byte	0x3eb
 2231 03b3 6B000000 		.4byte	0x6b
 2232 03b7 00000000 		.4byte	.LFB18
 2233 03bb 18000000 		.4byte	.LFE18-.LFB18
 2234 03bf 01       		.uleb128 0x1
 2235 03c0 9C       		.byte	0x9c
 2236 03c1 0A       		.uleb128 0xa
 2237 03c2 39040000 		.4byte	.LASF51
 2238 03c6 01       		.byte	0x1
 2239 03c7 1104     		.2byte	0x411
 2240 03c9 00000000 		.4byte	.LFB19
 2241 03cd 34000000 		.4byte	.LFE19-.LFB19
 2242 03d1 01       		.uleb128 0x1
 2243 03d2 9C       		.byte	0x9c
 2244 03d3 E7030000 		.4byte	0x3e7
 2245 03d7 0B       		.uleb128 0xb
 2246 03d8 07000000 		.4byte	.LASF48
 2247 03dc 01       		.byte	0x1
 2248 03dd 1104     		.2byte	0x411
 2249 03df 6B000000 		.4byte	0x6b
 2250 03e3 02       		.uleb128 0x2
 2251 03e4 91       		.byte	0x91
 2252 03e5 77       		.sleb128 -9
 2253 03e6 00       		.byte	0
 2254 03e7 0F       		.uleb128 0xf
 2255 03e8 57000000 		.4byte	.LASF52
 2256 03ec 01       		.byte	0x1
 2257 03ed 7904     		.2byte	0x479
 2258 03ef 00000000 		.4byte	.LFB20
 2259 03f3 40000000 		.4byte	.LFE20-.LFB20
 2260 03f7 01       		.uleb128 0x1
 2261 03f8 9C       		.byte	0x9c
 2262 03f9 1C040000 		.4byte	0x41c
 2263 03fd 0B       		.uleb128 0xb
 2264 03fe 39000000 		.4byte	.LASF53
 2265 0402 01       		.byte	0x1
 2266 0403 7904     		.2byte	0x479
 2267 0405 1C040000 		.4byte	0x41c
 2268 0409 02       		.uleb128 0x2
 2269 040a 91       		.byte	0x91
 2270 040b 6C       		.sleb128 -20
 2271 040c 0D       		.uleb128 0xd
 2272 040d FF010000 		.4byte	.LASF54
 2273 0411 01       		.byte	0x1
 2274 0412 7B04     		.2byte	0x47b
 2275 0414 77000000 		.4byte	0x77
 2276 0418 02       		.uleb128 0x2
 2277 0419 91       		.byte	0x91
 2278 041a 76       		.sleb128 -10
 2279 041b 00       		.byte	0
 2280 041c 10       		.uleb128 0x10
 2281 041d 04       		.byte	0x4
 2282 041e 22040000 		.4byte	0x422
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 69


 2283 0422 11       		.uleb128 0x11
 2284 0423 9D000000 		.4byte	0x9d
 2285 0427 0F       		.uleb128 0xf
 2286 0428 0E010000 		.4byte	.LASF55
 2287 042c 01       		.byte	0x1
 2288 042d A704     		.2byte	0x4a7
 2289 042f 00000000 		.4byte	.LFB21
 2290 0433 40000000 		.4byte	.LFE21-.LFB21
 2291 0437 01       		.uleb128 0x1
 2292 0438 9C       		.byte	0x9c
 2293 0439 6B040000 		.4byte	0x46b
 2294 043d 0B       		.uleb128 0xb
 2295 043e 39000000 		.4byte	.LASF53
 2296 0442 01       		.byte	0x1
 2297 0443 A704     		.2byte	0x4a7
 2298 0445 6B040000 		.4byte	0x46b
 2299 0449 02       		.uleb128 0x2
 2300 044a 91       		.byte	0x91
 2301 044b 6C       		.sleb128 -20
 2302 044c 0B       		.uleb128 0xb
 2303 044d ED030000 		.4byte	.LASF56
 2304 0451 01       		.byte	0x1
 2305 0452 A704     		.2byte	0x4a7
 2306 0454 6B000000 		.4byte	0x6b
 2307 0458 02       		.uleb128 0x2
 2308 0459 91       		.byte	0x91
 2309 045a 6B       		.sleb128 -21
 2310 045b 0D       		.uleb128 0xd
 2311 045c FF010000 		.4byte	.LASF54
 2312 0460 01       		.byte	0x1
 2313 0461 AA04     		.2byte	0x4aa
 2314 0463 6B000000 		.4byte	0x6b
 2315 0467 02       		.uleb128 0x2
 2316 0468 91       		.byte	0x91
 2317 0469 77       		.sleb128 -9
 2318 046a 00       		.byte	0
 2319 046b 10       		.uleb128 0x10
 2320 046c 04       		.byte	0x4
 2321 046d 71040000 		.4byte	0x471
 2322 0471 11       		.uleb128 0x11
 2323 0472 6B000000 		.4byte	0x6b
 2324 0476 0F       		.uleb128 0xf
 2325 0477 02050000 		.4byte	.LASF57
 2326 047b 01       		.byte	0x1
 2327 047c CE04     		.2byte	0x4ce
 2328 047e 00000000 		.4byte	.LFB22
 2329 0482 30000000 		.4byte	.LFE22-.LFB22
 2330 0486 01       		.uleb128 0x1
 2331 0487 9C       		.byte	0x9c
 2332 0488 9C040000 		.4byte	0x49c
 2333 048c 0B       		.uleb128 0xb
 2334 048d 07000000 		.4byte	.LASF48
 2335 0491 01       		.byte	0x1
 2336 0492 CE04     		.2byte	0x4ce
 2337 0494 6B000000 		.4byte	0x6b
 2338 0498 02       		.uleb128 0x2
 2339 0499 91       		.byte	0x91
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 70


 2340 049a 77       		.sleb128 -9
 2341 049b 00       		.byte	0
 2342 049c 0C       		.uleb128 0xc
 2343 049d 4B050000 		.4byte	.LASF58
 2344 04a1 01       		.byte	0x1
 2345 04a2 F904     		.2byte	0x4f9
 2346 04a4 6B000000 		.4byte	0x6b
 2347 04a8 00000000 		.4byte	.LFB23
 2348 04ac 44000000 		.4byte	.LFE23-.LFB23
 2349 04b0 01       		.uleb128 0x1
 2350 04b1 9C       		.byte	0x9c
 2351 04b2 C6040000 		.4byte	0x4c6
 2352 04b6 0D       		.uleb128 0xd
 2353 04b7 E7010000 		.4byte	.LASF39
 2354 04bb 01       		.byte	0x1
 2355 04bc FC04     		.2byte	0x4fc
 2356 04be 6B000000 		.4byte	0x6b
 2357 04c2 02       		.uleb128 0x2
 2358 04c3 91       		.byte	0x91
 2359 04c4 77       		.sleb128 -9
 2360 04c5 00       		.byte	0
 2361 04c6 0F       		.uleb128 0xf
 2362 04c7 30020000 		.4byte	.LASF59
 2363 04cb 01       		.byte	0x1
 2364 04cc 4A05     		.2byte	0x54a
 2365 04ce 00000000 		.4byte	.LFB24
 2366 04d2 40000000 		.4byte	.LFE24-.LFB24
 2367 04d6 01       		.uleb128 0x1
 2368 04d7 9C       		.byte	0x9c
 2369 04d8 EC040000 		.4byte	0x4ec
 2370 04dc 0D       		.uleb128 0xd
 2371 04dd BB040000 		.4byte	.LASF23
 2372 04e1 01       		.byte	0x1
 2373 04e2 4C05     		.2byte	0x54c
 2374 04e4 6B000000 		.4byte	0x6b
 2375 04e8 02       		.uleb128 0x2
 2376 04e9 91       		.byte	0x91
 2377 04ea 77       		.sleb128 -9
 2378 04eb 00       		.byte	0
 2379 04ec 0F       		.uleb128 0xf
 2380 04ed A7040000 		.4byte	.LASF60
 2381 04f1 01       		.byte	0x1
 2382 04f2 A005     		.2byte	0x5a0
 2383 04f4 00000000 		.4byte	.LFB25
 2384 04f8 BC000000 		.4byte	.LFE25-.LFB25
 2385 04fc 01       		.uleb128 0x1
 2386 04fd 9C       		.byte	0x9c
 2387 04fe 3D050000 		.4byte	0x53d
 2388 0502 0B       		.uleb128 0xb
 2389 0503 29010000 		.4byte	.LASF61
 2390 0507 01       		.byte	0x1
 2391 0508 A005     		.2byte	0x5a0
 2392 050a 6B000000 		.4byte	0x6b
 2393 050e 02       		.uleb128 0x2
 2394 050f 91       		.byte	0x91
 2395 0510 6F       		.sleb128 -17
 2396 0511 12       		.uleb128 0x12
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 71


 2397 0512 12000000 		.4byte	.LBB2
 2398 0516 90000000 		.4byte	.LBE2-.LBB2
 2399 051a 0D       		.uleb128 0xd
 2400 051b 5F020000 		.4byte	.LASF62
 2401 051f 01       		.byte	0x1
 2402 0520 A805     		.2byte	0x5a8
 2403 0522 6B000000 		.4byte	0x6b
 2404 0526 02       		.uleb128 0x2
 2405 0527 91       		.byte	0x91
 2406 0528 77       		.sleb128 -9
 2407 0529 0D       		.uleb128 0xd
 2408 052a 85000000 		.4byte	.LASF63
 2409 052e 01       		.byte	0x1
 2410 052f D005     		.2byte	0x5d0
 2411 0531 6B000000 		.4byte	0x6b
 2412 0535 05       		.uleb128 0x5
 2413 0536 03       		.byte	0x3
 2414 0537 08000000 		.4byte	txPeriod.4985
 2415 053b 00       		.byte	0
 2416 053c 00       		.byte	0
 2417 053d 0A       		.uleb128 0xa
 2418 053e 19040000 		.4byte	.LASF64
 2419 0542 01       		.byte	0x1
 2420 0543 2406     		.2byte	0x624
 2421 0545 00000000 		.4byte	.LFB26
 2422 0549 14000000 		.4byte	.LFE26-.LFB26
 2423 054d 01       		.uleb128 0x1
 2424 054e 9C       		.byte	0x9c
 2425 054f 63050000 		.4byte	0x563
 2426 0553 0B       		.uleb128 0xb
 2427 0554 E0000000 		.4byte	.LASF42
 2428 0558 01       		.byte	0x1
 2429 0559 2406     		.2byte	0x624
 2430 055b 6B000000 		.4byte	0x6b
 2431 055f 02       		.uleb128 0x2
 2432 0560 91       		.byte	0x91
 2433 0561 77       		.sleb128 -9
 2434 0562 00       		.byte	0
 2435 0563 13       		.uleb128 0x13
 2436 0564 0F020000 		.4byte	.LASF65
 2437 0568 01       		.byte	0x1
 2438 0569 1B       		.byte	0x1b
 2439 056a 6B000000 		.4byte	0x6b
 2440 056e 05       		.uleb128 0x5
 2441 056f 03       		.byte	0x3
 2442 0570 00000000 		.4byte	Dispenser_initVar
 2443 0574 13       		.uleb128 0x13
 2444 0575 64040000 		.4byte	.LASF66
 2445 0579 01       		.byte	0x1
 2446 057a 24       		.byte	0x24
 2447 057b 6B000000 		.4byte	0x6b
 2448 057f 05       		.uleb128 0x5
 2449 0580 03       		.byte	0x3
 2450 0581 00000000 		.4byte	Dispenser_errorStatus
 2451 0585 14       		.uleb128 0x14
 2452 0586 6B000000 		.4byte	0x6b
 2453 058a 95050000 		.4byte	0x595
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 72


 2454 058e 15       		.uleb128 0x15
 2455 058f D7000000 		.4byte	0xd7
 2456 0593 FF       		.byte	0xff
 2457 0594 00       		.byte	0
 2458 0595 13       		.uleb128 0x13
 2459 0596 51040000 		.4byte	.LASF67
 2460 059a 01       		.byte	0x1
 2461 059b 25       		.byte	0x25
 2462 059c A6050000 		.4byte	0x5a6
 2463 05a0 05       		.uleb128 0x5
 2464 05a1 03       		.byte	0x3
 2465 05a2 00000000 		.4byte	Dispenser_rxBuffer
 2466 05a6 05       		.uleb128 0x5
 2467 05a7 85050000 		.4byte	0x585
 2468 05ab 13       		.uleb128 0x13
 2469 05ac 8E000000 		.4byte	.LASF68
 2470 05b0 01       		.byte	0x1
 2471 05b1 26       		.byte	0x26
 2472 05b2 C1000000 		.4byte	0xc1
 2473 05b6 05       		.uleb128 0x5
 2474 05b7 03       		.byte	0x3
 2475 05b8 00000000 		.4byte	Dispenser_rxBufferRead
 2476 05bc 13       		.uleb128 0x13
 2477 05bd BD010000 		.4byte	.LASF69
 2478 05c1 01       		.byte	0x1
 2479 05c2 27       		.byte	0x27
 2480 05c3 C1000000 		.4byte	0xc1
 2481 05c7 05       		.uleb128 0x5
 2482 05c8 03       		.byte	0x3
 2483 05c9 00000000 		.4byte	Dispenser_rxBufferWrite
 2484 05cd 13       		.uleb128 0x13
 2485 05ce 7A040000 		.4byte	.LASF70
 2486 05d2 01       		.byte	0x1
 2487 05d3 28       		.byte	0x28
 2488 05d4 BC000000 		.4byte	0xbc
 2489 05d8 05       		.uleb128 0x5
 2490 05d9 03       		.byte	0x3
 2491 05da 00000000 		.4byte	Dispenser_rxBufferLoopDetect
 2492 05de 13       		.uleb128 0x13
 2493 05df FE030000 		.4byte	.LASF71
 2494 05e3 01       		.byte	0x1
 2495 05e4 29       		.byte	0x29
 2496 05e5 BC000000 		.4byte	0xbc
 2497 05e9 05       		.uleb128 0x5
 2498 05ea 03       		.byte	0x3
 2499 05eb 00000000 		.4byte	Dispenser_rxBufferOverflow
 2500 05ef 00       		.byte	0
 2501              		.section	.debug_abbrev,"",%progbits
 2502              	.Ldebug_abbrev0:
 2503 0000 01       		.uleb128 0x1
 2504 0001 11       		.uleb128 0x11
 2505 0002 01       		.byte	0x1
 2506 0003 25       		.uleb128 0x25
 2507 0004 0E       		.uleb128 0xe
 2508 0005 13       		.uleb128 0x13
 2509 0006 0B       		.uleb128 0xb
 2510 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 73


 2511 0008 0E       		.uleb128 0xe
 2512 0009 1B       		.uleb128 0x1b
 2513 000a 0E       		.uleb128 0xe
 2514 000b 55       		.uleb128 0x55
 2515 000c 17       		.uleb128 0x17
 2516 000d 11       		.uleb128 0x11
 2517 000e 01       		.uleb128 0x1
 2518 000f 10       		.uleb128 0x10
 2519 0010 17       		.uleb128 0x17
 2520 0011 00       		.byte	0
 2521 0012 00       		.byte	0
 2522 0013 02       		.uleb128 0x2
 2523 0014 24       		.uleb128 0x24
 2524 0015 00       		.byte	0
 2525 0016 0B       		.uleb128 0xb
 2526 0017 0B       		.uleb128 0xb
 2527 0018 3E       		.uleb128 0x3e
 2528 0019 0B       		.uleb128 0xb
 2529 001a 03       		.uleb128 0x3
 2530 001b 0E       		.uleb128 0xe
 2531 001c 00       		.byte	0
 2532 001d 00       		.byte	0
 2533 001e 03       		.uleb128 0x3
 2534 001f 24       		.uleb128 0x24
 2535 0020 00       		.byte	0
 2536 0021 0B       		.uleb128 0xb
 2537 0022 0B       		.uleb128 0xb
 2538 0023 3E       		.uleb128 0x3e
 2539 0024 0B       		.uleb128 0xb
 2540 0025 03       		.uleb128 0x3
 2541 0026 08       		.uleb128 0x8
 2542 0027 00       		.byte	0
 2543 0028 00       		.byte	0
 2544 0029 04       		.uleb128 0x4
 2545 002a 16       		.uleb128 0x16
 2546 002b 00       		.byte	0
 2547 002c 03       		.uleb128 0x3
 2548 002d 0E       		.uleb128 0xe
 2549 002e 3A       		.uleb128 0x3a
 2550 002f 0B       		.uleb128 0xb
 2551 0030 3B       		.uleb128 0x3b
 2552 0031 05       		.uleb128 0x5
 2553 0032 49       		.uleb128 0x49
 2554 0033 13       		.uleb128 0x13
 2555 0034 00       		.byte	0
 2556 0035 00       		.byte	0
 2557 0036 05       		.uleb128 0x5
 2558 0037 35       		.uleb128 0x35
 2559 0038 00       		.byte	0
 2560 0039 49       		.uleb128 0x49
 2561 003a 13       		.uleb128 0x13
 2562 003b 00       		.byte	0
 2563 003c 00       		.byte	0
 2564 003d 06       		.uleb128 0x6
 2565 003e 2E       		.uleb128 0x2e
 2566 003f 00       		.byte	0
 2567 0040 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 74


 2568 0041 19       		.uleb128 0x19
 2569 0042 03       		.uleb128 0x3
 2570 0043 0E       		.uleb128 0xe
 2571 0044 3A       		.uleb128 0x3a
 2572 0045 0B       		.uleb128 0xb
 2573 0046 3B       		.uleb128 0x3b
 2574 0047 0B       		.uleb128 0xb
 2575 0048 27       		.uleb128 0x27
 2576 0049 19       		.uleb128 0x19
 2577 004a 11       		.uleb128 0x11
 2578 004b 01       		.uleb128 0x1
 2579 004c 12       		.uleb128 0x12
 2580 004d 06       		.uleb128 0x6
 2581 004e 40       		.uleb128 0x40
 2582 004f 18       		.uleb128 0x18
 2583 0050 9642     		.uleb128 0x2116
 2584 0052 19       		.uleb128 0x19
 2585 0053 00       		.byte	0
 2586 0054 00       		.byte	0
 2587 0055 07       		.uleb128 0x7
 2588 0056 2E       		.uleb128 0x2e
 2589 0057 01       		.byte	0x1
 2590 0058 3F       		.uleb128 0x3f
 2591 0059 19       		.uleb128 0x19
 2592 005a 03       		.uleb128 0x3
 2593 005b 0E       		.uleb128 0xe
 2594 005c 3A       		.uleb128 0x3a
 2595 005d 0B       		.uleb128 0xb
 2596 005e 3B       		.uleb128 0x3b
 2597 005f 0B       		.uleb128 0xb
 2598 0060 27       		.uleb128 0x27
 2599 0061 19       		.uleb128 0x19
 2600 0062 11       		.uleb128 0x11
 2601 0063 01       		.uleb128 0x1
 2602 0064 12       		.uleb128 0x12
 2603 0065 06       		.uleb128 0x6
 2604 0066 40       		.uleb128 0x40
 2605 0067 18       		.uleb128 0x18
 2606 0068 9642     		.uleb128 0x2116
 2607 006a 19       		.uleb128 0x19
 2608 006b 01       		.uleb128 0x1
 2609 006c 13       		.uleb128 0x13
 2610 006d 00       		.byte	0
 2611 006e 00       		.byte	0
 2612 006f 08       		.uleb128 0x8
 2613 0070 34       		.uleb128 0x34
 2614 0071 00       		.byte	0
 2615 0072 03       		.uleb128 0x3
 2616 0073 0E       		.uleb128 0xe
 2617 0074 3A       		.uleb128 0x3a
 2618 0075 0B       		.uleb128 0xb
 2619 0076 3B       		.uleb128 0x3b
 2620 0077 0B       		.uleb128 0xb
 2621 0078 49       		.uleb128 0x49
 2622 0079 13       		.uleb128 0x13
 2623 007a 02       		.uleb128 0x2
 2624 007b 18       		.uleb128 0x18
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 75


 2625 007c 00       		.byte	0
 2626 007d 00       		.byte	0
 2627 007e 09       		.uleb128 0x9
 2628 007f 2E       		.uleb128 0x2e
 2629 0080 00       		.byte	0
 2630 0081 3F       		.uleb128 0x3f
 2631 0082 19       		.uleb128 0x19
 2632 0083 03       		.uleb128 0x3
 2633 0084 0E       		.uleb128 0xe
 2634 0085 3A       		.uleb128 0x3a
 2635 0086 0B       		.uleb128 0xb
 2636 0087 3B       		.uleb128 0x3b
 2637 0088 05       		.uleb128 0x5
 2638 0089 27       		.uleb128 0x27
 2639 008a 19       		.uleb128 0x19
 2640 008b 49       		.uleb128 0x49
 2641 008c 13       		.uleb128 0x13
 2642 008d 11       		.uleb128 0x11
 2643 008e 01       		.uleb128 0x1
 2644 008f 12       		.uleb128 0x12
 2645 0090 06       		.uleb128 0x6
 2646 0091 40       		.uleb128 0x40
 2647 0092 18       		.uleb128 0x18
 2648 0093 9742     		.uleb128 0x2117
 2649 0095 19       		.uleb128 0x19
 2650 0096 00       		.byte	0
 2651 0097 00       		.byte	0
 2652 0098 0A       		.uleb128 0xa
 2653 0099 2E       		.uleb128 0x2e
 2654 009a 01       		.byte	0x1
 2655 009b 3F       		.uleb128 0x3f
 2656 009c 19       		.uleb128 0x19
 2657 009d 03       		.uleb128 0x3
 2658 009e 0E       		.uleb128 0xe
 2659 009f 3A       		.uleb128 0x3a
 2660 00a0 0B       		.uleb128 0xb
 2661 00a1 3B       		.uleb128 0x3b
 2662 00a2 05       		.uleb128 0x5
 2663 00a3 27       		.uleb128 0x27
 2664 00a4 19       		.uleb128 0x19
 2665 00a5 11       		.uleb128 0x11
 2666 00a6 01       		.uleb128 0x1
 2667 00a7 12       		.uleb128 0x12
 2668 00a8 06       		.uleb128 0x6
 2669 00a9 40       		.uleb128 0x40
 2670 00aa 18       		.uleb128 0x18
 2671 00ab 9742     		.uleb128 0x2117
 2672 00ad 19       		.uleb128 0x19
 2673 00ae 01       		.uleb128 0x1
 2674 00af 13       		.uleb128 0x13
 2675 00b0 00       		.byte	0
 2676 00b1 00       		.byte	0
 2677 00b2 0B       		.uleb128 0xb
 2678 00b3 05       		.uleb128 0x5
 2679 00b4 00       		.byte	0
 2680 00b5 03       		.uleb128 0x3
 2681 00b6 0E       		.uleb128 0xe
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 76


 2682 00b7 3A       		.uleb128 0x3a
 2683 00b8 0B       		.uleb128 0xb
 2684 00b9 3B       		.uleb128 0x3b
 2685 00ba 05       		.uleb128 0x5
 2686 00bb 49       		.uleb128 0x49
 2687 00bc 13       		.uleb128 0x13
 2688 00bd 02       		.uleb128 0x2
 2689 00be 18       		.uleb128 0x18
 2690 00bf 00       		.byte	0
 2691 00c0 00       		.byte	0
 2692 00c1 0C       		.uleb128 0xc
 2693 00c2 2E       		.uleb128 0x2e
 2694 00c3 01       		.byte	0x1
 2695 00c4 3F       		.uleb128 0x3f
 2696 00c5 19       		.uleb128 0x19
 2697 00c6 03       		.uleb128 0x3
 2698 00c7 0E       		.uleb128 0xe
 2699 00c8 3A       		.uleb128 0x3a
 2700 00c9 0B       		.uleb128 0xb
 2701 00ca 3B       		.uleb128 0x3b
 2702 00cb 05       		.uleb128 0x5
 2703 00cc 27       		.uleb128 0x27
 2704 00cd 19       		.uleb128 0x19
 2705 00ce 49       		.uleb128 0x49
 2706 00cf 13       		.uleb128 0x13
 2707 00d0 11       		.uleb128 0x11
 2708 00d1 01       		.uleb128 0x1
 2709 00d2 12       		.uleb128 0x12
 2710 00d3 06       		.uleb128 0x6
 2711 00d4 40       		.uleb128 0x40
 2712 00d5 18       		.uleb128 0x18
 2713 00d6 9742     		.uleb128 0x2117
 2714 00d8 19       		.uleb128 0x19
 2715 00d9 01       		.uleb128 0x1
 2716 00da 13       		.uleb128 0x13
 2717 00db 00       		.byte	0
 2718 00dc 00       		.byte	0
 2719 00dd 0D       		.uleb128 0xd
 2720 00de 34       		.uleb128 0x34
 2721 00df 00       		.byte	0
 2722 00e0 03       		.uleb128 0x3
 2723 00e1 0E       		.uleb128 0xe
 2724 00e2 3A       		.uleb128 0x3a
 2725 00e3 0B       		.uleb128 0xb
 2726 00e4 3B       		.uleb128 0x3b
 2727 00e5 05       		.uleb128 0x5
 2728 00e6 49       		.uleb128 0x49
 2729 00e7 13       		.uleb128 0x13
 2730 00e8 02       		.uleb128 0x2
 2731 00e9 18       		.uleb128 0x18
 2732 00ea 00       		.byte	0
 2733 00eb 00       		.byte	0
 2734 00ec 0E       		.uleb128 0xe
 2735 00ed 2E       		.uleb128 0x2e
 2736 00ee 01       		.byte	0x1
 2737 00ef 3F       		.uleb128 0x3f
 2738 00f0 19       		.uleb128 0x19
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 77


 2739 00f1 03       		.uleb128 0x3
 2740 00f2 0E       		.uleb128 0xe
 2741 00f3 3A       		.uleb128 0x3a
 2742 00f4 0B       		.uleb128 0xb
 2743 00f5 3B       		.uleb128 0x3b
 2744 00f6 05       		.uleb128 0x5
 2745 00f7 27       		.uleb128 0x27
 2746 00f8 19       		.uleb128 0x19
 2747 00f9 49       		.uleb128 0x49
 2748 00fa 13       		.uleb128 0x13
 2749 00fb 11       		.uleb128 0x11
 2750 00fc 01       		.uleb128 0x1
 2751 00fd 12       		.uleb128 0x12
 2752 00fe 06       		.uleb128 0x6
 2753 00ff 40       		.uleb128 0x40
 2754 0100 18       		.uleb128 0x18
 2755 0101 9642     		.uleb128 0x2116
 2756 0103 19       		.uleb128 0x19
 2757 0104 01       		.uleb128 0x1
 2758 0105 13       		.uleb128 0x13
 2759 0106 00       		.byte	0
 2760 0107 00       		.byte	0
 2761 0108 0F       		.uleb128 0xf
 2762 0109 2E       		.uleb128 0x2e
 2763 010a 01       		.byte	0x1
 2764 010b 3F       		.uleb128 0x3f
 2765 010c 19       		.uleb128 0x19
 2766 010d 03       		.uleb128 0x3
 2767 010e 0E       		.uleb128 0xe
 2768 010f 3A       		.uleb128 0x3a
 2769 0110 0B       		.uleb128 0xb
 2770 0111 3B       		.uleb128 0x3b
 2771 0112 05       		.uleb128 0x5
 2772 0113 27       		.uleb128 0x27
 2773 0114 19       		.uleb128 0x19
 2774 0115 11       		.uleb128 0x11
 2775 0116 01       		.uleb128 0x1
 2776 0117 12       		.uleb128 0x12
 2777 0118 06       		.uleb128 0x6
 2778 0119 40       		.uleb128 0x40
 2779 011a 18       		.uleb128 0x18
 2780 011b 9642     		.uleb128 0x2116
 2781 011d 19       		.uleb128 0x19
 2782 011e 01       		.uleb128 0x1
 2783 011f 13       		.uleb128 0x13
 2784 0120 00       		.byte	0
 2785 0121 00       		.byte	0
 2786 0122 10       		.uleb128 0x10
 2787 0123 0F       		.uleb128 0xf
 2788 0124 00       		.byte	0
 2789 0125 0B       		.uleb128 0xb
 2790 0126 0B       		.uleb128 0xb
 2791 0127 49       		.uleb128 0x49
 2792 0128 13       		.uleb128 0x13
 2793 0129 00       		.byte	0
 2794 012a 00       		.byte	0
 2795 012b 11       		.uleb128 0x11
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 78


 2796 012c 26       		.uleb128 0x26
 2797 012d 00       		.byte	0
 2798 012e 49       		.uleb128 0x49
 2799 012f 13       		.uleb128 0x13
 2800 0130 00       		.byte	0
 2801 0131 00       		.byte	0
 2802 0132 12       		.uleb128 0x12
 2803 0133 0B       		.uleb128 0xb
 2804 0134 01       		.byte	0x1
 2805 0135 11       		.uleb128 0x11
 2806 0136 01       		.uleb128 0x1
 2807 0137 12       		.uleb128 0x12
 2808 0138 06       		.uleb128 0x6
 2809 0139 00       		.byte	0
 2810 013a 00       		.byte	0
 2811 013b 13       		.uleb128 0x13
 2812 013c 34       		.uleb128 0x34
 2813 013d 00       		.byte	0
 2814 013e 03       		.uleb128 0x3
 2815 013f 0E       		.uleb128 0xe
 2816 0140 3A       		.uleb128 0x3a
 2817 0141 0B       		.uleb128 0xb
 2818 0142 3B       		.uleb128 0x3b
 2819 0143 0B       		.uleb128 0xb
 2820 0144 49       		.uleb128 0x49
 2821 0145 13       		.uleb128 0x13
 2822 0146 3F       		.uleb128 0x3f
 2823 0147 19       		.uleb128 0x19
 2824 0148 02       		.uleb128 0x2
 2825 0149 18       		.uleb128 0x18
 2826 014a 00       		.byte	0
 2827 014b 00       		.byte	0
 2828 014c 14       		.uleb128 0x14
 2829 014d 01       		.uleb128 0x1
 2830 014e 01       		.byte	0x1
 2831 014f 49       		.uleb128 0x49
 2832 0150 13       		.uleb128 0x13
 2833 0151 01       		.uleb128 0x1
 2834 0152 13       		.uleb128 0x13
 2835 0153 00       		.byte	0
 2836 0154 00       		.byte	0
 2837 0155 15       		.uleb128 0x15
 2838 0156 21       		.uleb128 0x21
 2839 0157 00       		.byte	0
 2840 0158 49       		.uleb128 0x49
 2841 0159 13       		.uleb128 0x13
 2842 015a 2F       		.uleb128 0x2f
 2843 015b 0B       		.uleb128 0xb
 2844 015c 00       		.byte	0
 2845 015d 00       		.byte	0
 2846 015e 00       		.byte	0
 2847              		.section	.debug_aranges,"",%progbits
 2848 0000 EC000000 		.4byte	0xec
 2849 0004 0200     		.2byte	0x2
 2850 0006 00000000 		.4byte	.Ldebug_info0
 2851 000a 04       		.byte	0x4
 2852 000b 00       		.byte	0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 79


 2853 000c 0000     		.2byte	0
 2854 000e 0000     		.2byte	0
 2855 0010 00000000 		.4byte	.LFB0
 2856 0014 20000000 		.4byte	.LFE0-.LFB0
 2857 0018 00000000 		.4byte	.LFB1
 2858 001c 58000000 		.4byte	.LFE1-.LFB1
 2859 0020 00000000 		.4byte	.LFB2
 2860 0024 64000000 		.4byte	.LFE2-.LFB2
 2861 0028 00000000 		.4byte	.LFB3
 2862 002c 64000000 		.4byte	.LFE3-.LFB3
 2863 0030 00000000 		.4byte	.LFB4
 2864 0034 10000000 		.4byte	.LFE4-.LFB4
 2865 0038 00000000 		.4byte	.LFB5
 2866 003c 14000000 		.4byte	.LFE5-.LFB5
 2867 0040 00000000 		.4byte	.LFB6
 2868 0044 20000000 		.4byte	.LFE6-.LFB6
 2869 0048 00000000 		.4byte	.LFB7
 2870 004c 94000000 		.4byte	.LFE7-.LFB7
 2871 0050 00000000 		.4byte	.LFB8
 2872 0054 40000000 		.4byte	.LFE8-.LFB8
 2873 0058 00000000 		.4byte	.LFB9
 2874 005c B8000000 		.4byte	.LFE9-.LFB9
 2875 0060 00000000 		.4byte	.LFB10
 2876 0064 44000000 		.4byte	.LFE10-.LFB10
 2877 0068 00000000 		.4byte	.LFB11
 2878 006c 94000000 		.4byte	.LFE11-.LFB11
 2879 0070 00000000 		.4byte	.LFB12
 2880 0074 7C000000 		.4byte	.LFE12-.LFB12
 2881 0078 00000000 		.4byte	.LFB13
 2882 007c 14000000 		.4byte	.LFE13-.LFB13
 2883 0080 00000000 		.4byte	.LFB14
 2884 0084 20000000 		.4byte	.LFE14-.LFB14
 2885 0088 00000000 		.4byte	.LFB15
 2886 008c 20000000 		.4byte	.LFE15-.LFB15
 2887 0090 00000000 		.4byte	.LFB16
 2888 0094 20000000 		.4byte	.LFE16-.LFB16
 2889 0098 00000000 		.4byte	.LFB17
 2890 009c 2C000000 		.4byte	.LFE17-.LFB17
 2891 00a0 00000000 		.4byte	.LFB18
 2892 00a4 18000000 		.4byte	.LFE18-.LFB18
 2893 00a8 00000000 		.4byte	.LFB19
 2894 00ac 34000000 		.4byte	.LFE19-.LFB19
 2895 00b0 00000000 		.4byte	.LFB20
 2896 00b4 40000000 		.4byte	.LFE20-.LFB20
 2897 00b8 00000000 		.4byte	.LFB21
 2898 00bc 40000000 		.4byte	.LFE21-.LFB21
 2899 00c0 00000000 		.4byte	.LFB22
 2900 00c4 30000000 		.4byte	.LFE22-.LFB22
 2901 00c8 00000000 		.4byte	.LFB23
 2902 00cc 44000000 		.4byte	.LFE23-.LFB23
 2903 00d0 00000000 		.4byte	.LFB24
 2904 00d4 40000000 		.4byte	.LFE24-.LFB24
 2905 00d8 00000000 		.4byte	.LFB25
 2906 00dc BC000000 		.4byte	.LFE25-.LFB25
 2907 00e0 00000000 		.4byte	.LFB26
 2908 00e4 14000000 		.4byte	.LFE26-.LFB26
 2909 00e8 00000000 		.4byte	0
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 80


 2910 00ec 00000000 		.4byte	0
 2911              		.section	.debug_ranges,"",%progbits
 2912              	.Ldebug_ranges0:
 2913 0000 00000000 		.4byte	.LFB0
 2914 0004 20000000 		.4byte	.LFE0
 2915 0008 00000000 		.4byte	.LFB1
 2916 000c 58000000 		.4byte	.LFE1
 2917 0010 00000000 		.4byte	.LFB2
 2918 0014 64000000 		.4byte	.LFE2
 2919 0018 00000000 		.4byte	.LFB3
 2920 001c 64000000 		.4byte	.LFE3
 2921 0020 00000000 		.4byte	.LFB4
 2922 0024 10000000 		.4byte	.LFE4
 2923 0028 00000000 		.4byte	.LFB5
 2924 002c 14000000 		.4byte	.LFE5
 2925 0030 00000000 		.4byte	.LFB6
 2926 0034 20000000 		.4byte	.LFE6
 2927 0038 00000000 		.4byte	.LFB7
 2928 003c 94000000 		.4byte	.LFE7
 2929 0040 00000000 		.4byte	.LFB8
 2930 0044 40000000 		.4byte	.LFE8
 2931 0048 00000000 		.4byte	.LFB9
 2932 004c B8000000 		.4byte	.LFE9
 2933 0050 00000000 		.4byte	.LFB10
 2934 0054 44000000 		.4byte	.LFE10
 2935 0058 00000000 		.4byte	.LFB11
 2936 005c 94000000 		.4byte	.LFE11
 2937 0060 00000000 		.4byte	.LFB12
 2938 0064 7C000000 		.4byte	.LFE12
 2939 0068 00000000 		.4byte	.LFB13
 2940 006c 14000000 		.4byte	.LFE13
 2941 0070 00000000 		.4byte	.LFB14
 2942 0074 20000000 		.4byte	.LFE14
 2943 0078 00000000 		.4byte	.LFB15
 2944 007c 20000000 		.4byte	.LFE15
 2945 0080 00000000 		.4byte	.LFB16
 2946 0084 20000000 		.4byte	.LFE16
 2947 0088 00000000 		.4byte	.LFB17
 2948 008c 2C000000 		.4byte	.LFE17
 2949 0090 00000000 		.4byte	.LFB18
 2950 0094 18000000 		.4byte	.LFE18
 2951 0098 00000000 		.4byte	.LFB19
 2952 009c 34000000 		.4byte	.LFE19
 2953 00a0 00000000 		.4byte	.LFB20
 2954 00a4 40000000 		.4byte	.LFE20
 2955 00a8 00000000 		.4byte	.LFB21
 2956 00ac 40000000 		.4byte	.LFE21
 2957 00b0 00000000 		.4byte	.LFB22
 2958 00b4 30000000 		.4byte	.LFE22
 2959 00b8 00000000 		.4byte	.LFB23
 2960 00bc 44000000 		.4byte	.LFE23
 2961 00c0 00000000 		.4byte	.LFB24
 2962 00c4 40000000 		.4byte	.LFE24
 2963 00c8 00000000 		.4byte	.LFB25
 2964 00cc BC000000 		.4byte	.LFE25
 2965 00d0 00000000 		.4byte	.LFB26
 2966 00d4 14000000 		.4byte	.LFE26
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 81


 2967 00d8 00000000 		.4byte	0
 2968 00dc 00000000 		.4byte	0
 2969              		.section	.debug_line,"",%progbits
 2970              	.Ldebug_line0:
 2971 0000 0B030000 		.section	.debug_str,"MS",%progbits,1
 2971      02004800 
 2971      00000201 
 2971      FB0E0D00 
 2971      01010101 
 2972              	.LASF10:
 2973 0000 75696E74 		.ascii	"uint16\000"
 2973      313600
 2974              	.LASF48:
 2975 0007 74784461 		.ascii	"txDataByte\000"
 2975      74614279 
 2975      746500
 2976              	.LASF22:
 2977 0012 44697370 		.ascii	"Dispenser_Stop\000"
 2977      656E7365 
 2977      725F5374 
 2977      6F7000
 2978              	.LASF40:
 2979 0021 44697370 		.ascii	"Dispenser_ClearRxBuffer\000"
 2979      656E7365 
 2979      725F436C 
 2979      65617252 
 2979      78427566 
 2980              	.LASF53:
 2981 0039 73747269 		.ascii	"string\000"
 2981      6E6700
 2982              	.LASF7:
 2983 0040 6C6F6E67 		.ascii	"long long unsigned int\000"
 2983      206C6F6E 
 2983      6720756E 
 2983      7369676E 
 2983      65642069 
 2984              	.LASF52:
 2985 0057 44697370 		.ascii	"Dispenser_PutString\000"
 2985      656E7365 
 2985      725F5075 
 2985      74537472 
 2985      696E6700 
 2986              	.LASF6:
 2987 006b 6C6F6E67 		.ascii	"long long int\000"
 2987      206C6F6E 
 2987      6720696E 
 2987      7400
 2988              	.LASF0:
 2989 0079 7369676E 		.ascii	"signed char\000"
 2989      65642063 
 2989      68617200 
 2990              	.LASF63:
 2991 0085 74785065 		.ascii	"txPeriod\000"
 2991      72696F64 
 2991      00
 2992              	.LASF68:
 2993 008e 44697370 		.ascii	"Dispenser_rxBufferRead\000"
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 82


 2993      656E7365 
 2993      725F7278 
 2993      42756666 
 2993      65725265 
 2994              	.LASF4:
 2995 00a5 6C6F6E67 		.ascii	"long int\000"
 2995      20696E74 
 2995      00
 2996              	.LASF73:
 2997 00ae 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Dispenser.c\000"
 2997      6E657261 
 2997      7465645F 
 2997      536F7572 
 2997      63655C50 
 2998              	.LASF9:
 2999 00d3 75696E74 		.ascii	"uint8\000"
 2999      3800
 3000              	.LASF13:
 3001 00d9 646F7562 		.ascii	"double\000"
 3001      6C6500
 3002              	.LASF42:
 3003 00e0 61646472 		.ascii	"addressMode\000"
 3003      6573734D 
 3003      6F646500 
 3004              	.LASF41:
 3005 00ec 44697370 		.ascii	"Dispenser_SetRxAddressMode\000"
 3005      656E7365 
 3005      725F5365 
 3005      74527841 
 3005      64647265 
 3006              	.LASF11:
 3007 0107 75696E74 		.ascii	"uint32\000"
 3007      333200
 3008              	.LASF55:
 3009 010e 44697370 		.ascii	"Dispenser_PutArray\000"
 3009      656E7365 
 3009      725F5075 
 3009      74417272 
 3009      617900
 3010              	.LASF26:
 3011 0121 636F6E74 		.ascii	"control\000"
 3011      726F6C00 
 3012              	.LASF61:
 3013 0129 7265744D 		.ascii	"retMode\000"
 3013      6F646500 
 3014              	.LASF8:
 3015 0131 756E7369 		.ascii	"unsigned int\000"
 3015      676E6564 
 3015      20696E74 
 3015      00
 3016              	.LASF74:
 3017 013e 433A5C55 		.ascii	"C:\\Users\\Lenovo\\Documents\\GitHub\\CorEx-MUX-Ker"
 3017      73657273 
 3017      5C4C656E 
 3017      6F766F5C 
 3017      446F6375 
 3018 016c 6E656C2D 		.ascii	"nel-Enhanced\\Workspace01\\CorEx-Mux-Kernel.cydsn\000"
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 83


 3018      456E6861 
 3018      6E636564 
 3018      5C576F72 
 3018      6B737061 
 3019              	.LASF37:
 3020 019c 6C6F6345 		.ascii	"locErrorStatus\000"
 3020      72726F72 
 3020      53746174 
 3020      757300
 3021              	.LASF5:
 3022 01ab 6C6F6E67 		.ascii	"long unsigned int\000"
 3022      20756E73 
 3022      69676E65 
 3022      6420696E 
 3022      7400
 3023              	.LASF69:
 3024 01bd 44697370 		.ascii	"Dispenser_rxBufferWrite\000"
 3024      656E7365 
 3024      725F7278 
 3024      42756666 
 3024      65725772 
 3025              	.LASF34:
 3026 01d5 44697370 		.ascii	"Dispenser_GetChar\000"
 3026      656E7365 
 3026      725F4765 
 3026      74436861 
 3026      7200
 3027              	.LASF39:
 3028 01e7 73697A65 		.ascii	"size\000"
 3028      00
 3029              	.LASF3:
 3030 01ec 73686F72 		.ascii	"short unsigned int\000"
 3030      7420756E 
 3030      7369676E 
 3030      65642069 
 3030      6E7400
 3031              	.LASF54:
 3032 01ff 62756649 		.ascii	"bufIndex\000"
 3032      6E646578 
 3032      00
 3033              	.LASF27:
 3034 0208 696E7453 		.ascii	"intSrc\000"
 3034      726300
 3035              	.LASF65:
 3036 020f 44697370 		.ascii	"Dispenser_initVar\000"
 3036      656E7365 
 3036      725F696E 
 3036      69745661 
 3036      7200
 3037              	.LASF20:
 3038 0221 44697370 		.ascii	"Dispenser_Init\000"
 3038      656E7365 
 3038      725F496E 
 3038      697400
 3039              	.LASF59:
 3040 0230 44697370 		.ascii	"Dispenser_ClearTxBuffer\000"
 3040      656E7365 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 84


 3040      725F436C 
 3040      65617254 
 3040      78427566 
 3041              	.LASF30:
 3042 0248 6C6F6352 		.ascii	"locRxBufferWrite\000"
 3042      78427566 
 3042      66657257 
 3042      72697465 
 3042      00
 3043              	.LASF17:
 3044 0259 72656733 		.ascii	"reg32\000"
 3044      3200
 3045              	.LASF62:
 3046 025f 746D7053 		.ascii	"tmpStat\000"
 3046      74617400 
 3047              	.LASF18:
 3048 0267 73697A65 		.ascii	"sizetype\000"
 3048      74797065 
 3048      00
 3049              	.LASF38:
 3050 0270 44697370 		.ascii	"Dispenser_GetRxBufferSize\000"
 3050      656E7365 
 3050      725F4765 
 3050      74527842 
 3050      75666665 
 3051              	.LASF19:
 3052 028a 44697370 		.ascii	"Dispenser_Start\000"
 3052      656E7365 
 3052      725F5374 
 3052      61727400 
 3053              	.LASF32:
 3054 029a 44697370 		.ascii	"Dispenser_ReadRxStatus\000"
 3054      656E7365 
 3054      725F5265 
 3054      61645278 
 3054      53746174 
 3055              	.LASF72:
 3056 02b1 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3056      4320342E 
 3056      392E3320 
 3056      32303135 
 3056      30333033 
 3057 02e4 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3057      20726576 
 3057      6973696F 
 3057      6E203232 
 3057      31323230 
 3058 0317 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3058      66756E63 
 3058      74696F6E 
 3058      2D736563 
 3058      74696F6E 
 3059              	.LASF35:
 3060 033f 72785374 		.ascii	"rxStatus\000"
 3060      61747573 
 3060      00
 3061              	.LASF24:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 85


 3062 0348 44697370 		.ascii	"Dispenser_WriteControlRegister\000"
 3062      656E7365 
 3062      725F5772 
 3062      69746543 
 3062      6F6E7472 
 3063              	.LASF25:
 3064 0367 44697370 		.ascii	"Dispenser_SetRxInterruptMode\000"
 3064      656E7365 
 3064      725F5365 
 3064      74527849 
 3064      6E746572 
 3065              	.LASF12:
 3066 0384 666C6F61 		.ascii	"float\000"
 3066      7400
 3067              	.LASF47:
 3068 038a 44697370 		.ascii	"Dispenser_WriteTxData\000"
 3068      656E7365 
 3068      725F5772 
 3068      69746554 
 3068      78446174 
 3069              	.LASF16:
 3070 03a0 72656738 		.ascii	"reg8\000"
 3070      00
 3071              	.LASF43:
 3072 03a5 44697370 		.ascii	"Dispenser_SetRxAddress1\000"
 3072      656E7365 
 3072      725F5365 
 3072      74527841 
 3072      64647265 
 3073              	.LASF45:
 3074 03bd 44697370 		.ascii	"Dispenser_SetRxAddress2\000"
 3074      656E7365 
 3074      725F5365 
 3074      74527841 
 3074      64647265 
 3075              	.LASF1:
 3076 03d5 756E7369 		.ascii	"unsigned char\000"
 3076      676E6564 
 3076      20636861 
 3076      7200
 3077              	.LASF2:
 3078 03e3 73686F72 		.ascii	"short int\000"
 3078      7420696E 
 3078      7400
 3079              	.LASF56:
 3080 03ed 62797465 		.ascii	"byteCount\000"
 3080      436F756E 
 3080      7400
 3081              	.LASF28:
 3082 03f7 72784461 		.ascii	"rxData\000"
 3082      746100
 3083              	.LASF71:
 3084 03fe 44697370 		.ascii	"Dispenser_rxBufferOverflow\000"
 3084      656E7365 
 3084      725F7278 
 3084      42756666 
 3084      65724F76 
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 86


 3085              	.LASF64:
 3086 0419 44697370 		.ascii	"Dispenser_SetTxAddressMode\000"
 3086      656E7365 
 3086      725F5365 
 3086      74547841 
 3086      64647265 
 3087              	.LASF15:
 3088 0434 63686172 		.ascii	"char\000"
 3088      00
 3089              	.LASF51:
 3090 0439 44697370 		.ascii	"Dispenser_PutChar\000"
 3090      656E7365 
 3090      725F5075 
 3090      74436861 
 3090      7200
 3091              	.LASF14:
 3092 044b 63686172 		.ascii	"char8\000"
 3092      3800
 3093              	.LASF67:
 3094 0451 44697370 		.ascii	"Dispenser_rxBuffer\000"
 3094      656E7365 
 3094      725F7278 
 3094      42756666 
 3094      657200
 3095              	.LASF66:
 3096 0464 44697370 		.ascii	"Dispenser_errorStatus\000"
 3096      656E7365 
 3096      725F6572 
 3096      726F7253 
 3096      74617475 
 3097              	.LASF70:
 3098 047a 44697370 		.ascii	"Dispenser_rxBufferLoopDetect\000"
 3098      656E7365 
 3098      725F7278 
 3098      42756666 
 3098      65724C6F 
 3099              	.LASF29:
 3100 0497 6C6F6352 		.ascii	"locRxBufferRead\000"
 3100      78427566 
 3100      66657252 
 3100      65616400 
 3101              	.LASF60:
 3102 04a7 44697370 		.ascii	"Dispenser_SendBreak\000"
 3102      656E7365 
 3102      725F5365 
 3102      6E644272 
 3102      65616B00 
 3103              	.LASF23:
 3104 04bb 656E6162 		.ascii	"enableInterrupts\000"
 3104      6C65496E 
 3104      74657272 
 3104      75707473 
 3104      00
 3105              	.LASF33:
 3106 04cc 73746174 		.ascii	"status\000"
 3106      757300
 3107              	.LASF46:
ARM GAS  C:\Users\Lenovo\AppData\Local\Temp\cc2zC6Fh.s 			page 87


 3108 04d3 44697370 		.ascii	"Dispenser_SetTxInterruptMode\000"
 3108      656E7365 
 3108      725F5365 
 3108      74547849 
 3108      6E746572 
 3109              	.LASF36:
 3110 04f0 44697370 		.ascii	"Dispenser_GetByte\000"
 3110      656E7365 
 3110      725F4765 
 3110      74427974 
 3110      6500
 3111              	.LASF57:
 3112 0502 44697370 		.ascii	"Dispenser_PutCRLF\000"
 3112      656E7365 
 3112      725F5075 
 3112      7443524C 
 3112      4600
 3113              	.LASF21:
 3114 0514 44697370 		.ascii	"Dispenser_Enable\000"
 3114      656E7365 
 3114      725F456E 
 3114      61626C65 
 3114      00
 3115              	.LASF44:
 3116 0525 61646472 		.ascii	"address\000"
 3116      65737300 
 3117              	.LASF49:
 3118 052d 44697370 		.ascii	"Dispenser_ReadControlRegister\000"
 3118      656E7365 
 3118      725F5265 
 3118      6164436F 
 3118      6E74726F 
 3119              	.LASF58:
 3120 054b 44697370 		.ascii	"Dispenser_GetTxBufferSize\000"
 3120      656E7365 
 3120      725F4765 
 3120      74547842 
 3120      75666665 
 3121              	.LASF50:
 3122 0565 44697370 		.ascii	"Dispenser_ReadTxStatus\000"
 3122      656E7365 
 3122      725F5265 
 3122      61645478 
 3122      53746174 
 3123              	.LASF31:
 3124 057c 44697370 		.ascii	"Dispenser_ReadRxData\000"
 3124      656E7365 
 3124      725F5265 
 3124      61645278 
 3124      44617461 
 3125              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
